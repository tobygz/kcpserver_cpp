// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto

#ifndef PROTOBUF_server_2eproto__INCLUDED
#define PROTOBUF_server_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "login.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_server_2eproto();
void protobuf_AssignDesc_server_2eproto();
void protobuf_ShutdownFile_server_2eproto();

class G2gAllRoomFrameData;

// ===================================================================

class G2gAllRoomFrameData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.G2gAllRoomFrameData) */ {
 public:
  G2gAllRoomFrameData();
  virtual ~G2gAllRoomFrameData();

  G2gAllRoomFrameData(const G2gAllRoomFrameData& from);

  inline G2gAllRoomFrameData& operator=(const G2gAllRoomFrameData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const G2gAllRoomFrameData& default_instance();

  void Swap(G2gAllRoomFrameData* other);

  // implements Message ----------------------------------------------

  inline G2gAllRoomFrameData* New() const { return New(NULL); }

  G2gAllRoomFrameData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const G2gAllRoomFrameData& from);
  void MergeFrom(const G2gAllRoomFrameData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(G2gAllRoomFrameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 FrameTime = 1;
  void clear_frametime();
  static const int kFrameTimeFieldNumber = 1;
  ::google::protobuf::uint32 frametime() const;
  void set_frametime(::google::protobuf::uint32 value);

  // repeated .pb.S2CServerFrameUpdate_2001 Datalist = 2;
  int datalist_size() const;
  void clear_datalist();
  static const int kDatalistFieldNumber = 2;
  const ::pb::S2CServerFrameUpdate_2001& datalist(int index) const;
  ::pb::S2CServerFrameUpdate_2001* mutable_datalist(int index);
  ::pb::S2CServerFrameUpdate_2001* add_datalist();
  ::google::protobuf::RepeatedPtrField< ::pb::S2CServerFrameUpdate_2001 >*
      mutable_datalist();
  const ::google::protobuf::RepeatedPtrField< ::pb::S2CServerFrameUpdate_2001 >&
      datalist() const;

  // @@protoc_insertion_point(class_scope:pb.G2gAllRoomFrameData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::pb::S2CServerFrameUpdate_2001 > datalist_;
  ::google::protobuf::uint32 frametime_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static G2gAllRoomFrameData* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// G2gAllRoomFrameData

// optional uint32 FrameTime = 1;
inline void G2gAllRoomFrameData::clear_frametime() {
  frametime_ = 0u;
}
inline ::google::protobuf::uint32 G2gAllRoomFrameData::frametime() const {
  // @@protoc_insertion_point(field_get:pb.G2gAllRoomFrameData.FrameTime)
  return frametime_;
}
inline void G2gAllRoomFrameData::set_frametime(::google::protobuf::uint32 value) {
  
  frametime_ = value;
  // @@protoc_insertion_point(field_set:pb.G2gAllRoomFrameData.FrameTime)
}

// repeated .pb.S2CServerFrameUpdate_2001 Datalist = 2;
inline int G2gAllRoomFrameData::datalist_size() const {
  return datalist_.size();
}
inline void G2gAllRoomFrameData::clear_datalist() {
  datalist_.Clear();
}
inline const ::pb::S2CServerFrameUpdate_2001& G2gAllRoomFrameData::datalist(int index) const {
  // @@protoc_insertion_point(field_get:pb.G2gAllRoomFrameData.Datalist)
  return datalist_.Get(index);
}
inline ::pb::S2CServerFrameUpdate_2001* G2gAllRoomFrameData::mutable_datalist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.G2gAllRoomFrameData.Datalist)
  return datalist_.Mutable(index);
}
inline ::pb::S2CServerFrameUpdate_2001* G2gAllRoomFrameData::add_datalist() {
  // @@protoc_insertion_point(field_add:pb.G2gAllRoomFrameData.Datalist)
  return datalist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::S2CServerFrameUpdate_2001 >*
G2gAllRoomFrameData::mutable_datalist() {
  // @@protoc_insertion_point(field_mutable_list:pb.G2gAllRoomFrameData.Datalist)
  return &datalist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::S2CServerFrameUpdate_2001 >&
G2gAllRoomFrameData::datalist() const {
  // @@protoc_insertion_point(field_list:pb.G2gAllRoomFrameData.Datalist)
  return datalist_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_2eproto__INCLUDED
