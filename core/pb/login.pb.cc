// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* S2CCommonRet_1000_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CCommonRet_1000_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SPing_1001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SPing_1001_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CPing_1001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CPing_1001_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_RegLogin_98_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_RegLogin_98_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2C_RegLogin_98_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2C_RegLogin_98_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_RegAcc_99_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_RegAcc_99_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_CreateRole_117_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_CreateRole_117_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_LoginData_116_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_LoginData_116_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2C_LoginData_116_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2C_LoginData_116_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_UpdateGuideSteps_118_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_UpdateGuideSteps_118_reflection_ = NULL;
const ::google::protobuf::Descriptor* PRoomInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PRoomInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_GetRoomList_100_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_GetRoomList_100_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2C_GetRoomList_100_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2C_GetRoomList_100_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SEnterRoom_101_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SEnterRoom_101_reflection_ = NULL;
const ::google::protobuf::Descriptor* PRoomUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PRoomUser_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CEnterRoomRet_101_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CEnterRoomRet_101_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SCreateRoom_102_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SCreateRoom_102_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SExitRoom_103_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SExitRoom_103_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CExitRoom_103_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CExitRoom_103_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SUserReady_104_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SUserReady_104_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CUserReady_104_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CUserReady_104_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SMasterStart_105_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SMasterStart_105_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CMasterStart_105_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CMasterStart_105_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SLoadFinish_106_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SLoadFinish_106_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CLoadFinish_106_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CLoadFinish_106_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CRealstart_107_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CRealstart_107_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CEnterRoomRet_108_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CEnterRoomRet_108_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SSwitchCamp_109_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SSwitchCamp_109_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CSwitchCamp_109_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CSwitchCamp_109_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SSwitchWatcher_110_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SSwitchWatcher_110_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CSwitchWatcher_110_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CSwitchWatcher_110_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CLeaveGame_111_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CLeaveGame_111_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SChooseBadge_113_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SChooseBadge_113_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CChooseBadge_113_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CChooseBadge_113_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SBroadRoomcastString_114_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SBroadRoomcastString_114_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CBroadRoomcastString_114_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CBroadRoomcastString_114_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SForceEnterRoom_115_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SForceEnterRoom_115_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SAddRobotToRoom_119_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SAddRobotToRoom_119_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CAddRobotToRoom_119_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CAddRobotToRoom_119_reflection_ = NULL;
const ::google::protobuf::Descriptor* PTeammateInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PTeammateInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SInvitePlayer_120_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SInvitePlayer_120_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CInvitePlayer_120_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CInvitePlayer_120_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CReceiveInvite_121_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CReceiveInvite_121_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SAgreeInvite_122_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SAgreeInvite_122_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CAgreeInvite_122_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CAgreeInvite_122_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CJoinTeam_123_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CJoinTeam_123_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SCancelInvite_124_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SCancelInvite_124_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CCancelInvite_124_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CCancelInvite_124_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SKickPlayer_125_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SKickPlayer_125_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CKickPlayer_125_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CKickPlayer_125_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SLeaveTeam_126_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SLeaveTeam_126_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CLeaveTeam_126_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CLeaveTeam_126_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CCancelInvite_127_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CCancelInvite_127_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CPlayerBatState_128_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CPlayerBatState_128_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetTeamAvaList_129_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetTeamAvaList_129_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetTeamAvaList_129_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetTeamAvaList_129_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SToTopTeam_131_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SToTopTeam_131_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CToTopTeam_131_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CToTopTeam_131_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SHandoverLeader_132_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SHandoverLeader_132_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CHandoverLeader_132_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CHandoverLeader_132_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SApplyPlayer_133_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SApplyPlayer_133_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CApplyPlayer_133_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CApplyPlayer_133_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CReceiveApply_134_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CReceiveApply_134_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SAgreeApply_135_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SAgreeApply_135_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CAgreeApply_135_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CAgreeApply_135_reflection_ = NULL;
const ::google::protobuf::Descriptor* MallBagItemData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MallBagItemData_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetChestNum_140_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetChestNum_140_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetChestNum_140_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetChestNum_140_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SOpenChest_141_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SOpenChest_141_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChestReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChestReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2COpenChest_141_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2COpenChest_141_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SBuyChest_142_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SBuyChest_142_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_BuyItemList_150_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_BuyItemList_150_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_ReqBagItemList_151_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_ReqBagItemList_151_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2C_ReqBagItemList_151_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2C_ReqBagItemList_151_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_UseItem_153_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_UseItem_153_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_RefreshStore_154_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_RefreshStore_154_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2C_RefreshStore_154_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2C_RefreshStore_154_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_ReqLastStoreItem_155_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_ReqLastStoreItem_155_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2C_ReqLastStoreItem_155_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2C_ReqLastStoreItem_155_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_ReqUnLockCharList_156_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_ReqUnLockCharList_156_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2C_UnlockCharList_156_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2C_UnlockCharList_156_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_ReqAlreadyBuyList_157_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_ReqAlreadyBuyList_157_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2C_AlreadyBuyList_157_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2C_AlreadyBuyList_157_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2C_AddItem_158_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2C_AddItem_158_reflection_ = NULL;
const ::google::protobuf::Descriptor* SuitData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SuitData_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_UpdateSuitName_160_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_UpdateSuitName_160_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_UpdateSex_161_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_UpdateSex_161_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_UpdateSuit_162_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_UpdateSuit_162_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_GetAllSuits_163_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_GetAllSuits_163_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2C_GetAllSuits_163_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2C_GetAllSuits_163_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_SelSuit_164_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_SelSuit_164_reflection_ = NULL;
const ::google::protobuf::Descriptor* MountClass_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MountClass_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_GetAllUnlockMount_170_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_GetAllUnlockMount_170_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2C_GetAllUnlockMount_170_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2C_GetAllUnlockMount_170_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_UpdateMount_171_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_UpdateMount_171_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2C_UpdateMount_171_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2C_UpdateMount_171_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2C_MountAddOneSkin_173_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2C_MountAddOneSkin_173_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_GetAllRune_180_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_GetAllRune_180_reflection_ = NULL;
const ::google::protobuf::Descriptor* Rune_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Rune_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2C_GetAllRune_180_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2C_GetAllRune_180_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_BuyRune_181_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_BuyRune_181_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_DecomposeRune_182_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_DecomposeRune_182_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_BatchDecomposeRune_183_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_BatchDecomposeRune_183_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_BatchDecomposeRuneByItemId_184_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_BatchDecomposeRuneByItemId_184_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_GetAllWeapon_190_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_GetAllWeapon_190_reflection_ = NULL;
const ::google::protobuf::Descriptor* Weapon_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Weapon_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2C_GetAllWeapon_190_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2C_GetAllWeapon_190_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_ActivateWeapon_191_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_ActivateWeapon_191_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2C_ActivateWeapon_191_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2C_ActivateWeapon_191_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_SellWeapon_192_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_SellWeapon_192_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2S_UpdateRune_193_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2S_UpdateRune_193_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SFrameCommand_2000_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SFrameCommand_2000_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CServerFrameUpdate_2001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CServerFrameUpdate_2001_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetRepairFrameData_2002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetRepairFrameData_2002_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetRepairFrameData_2002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetRepairFrameData_2002_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetSyncCacheFrames_2003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetSyncCacheFrames_2003_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetSyncCacheFrames_2003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetSyncCacheFrames_2003_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SUDPReg_2004_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SUDPReg_2004_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SVerifyFrameSync_2005_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SVerifyFrameSync_2005_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CVerifyFrameSyncFail_2005_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CVerifyFrameSyncFail_2005_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SStartMatch_210_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SStartMatch_210_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CStartMatch_210_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CStartMatch_210_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CMatchSucc_217_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CMatchSucc_217_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SReadyMatch_218_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SReadyMatch_218_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CReadyMatch_218_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CReadyMatch_218_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CReadyMatch_219_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CReadyMatch_219_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SCancelMatch_211_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SCancelMatch_211_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CCancelMatch_211_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CCancelMatch_211_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CMatchSucc_212_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CMatchSucc_212_reflection_ = NULL;
const ::google::protobuf::Descriptor* StageBattleEnd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StageBattleEnd_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SMatchOver_213_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SMatchOver_213_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CMatchOver_213_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CMatchOver_213_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SLeaveBatUI_214_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SLeaveBatUI_214_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SRoomKick_215_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SRoomKick_215_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msgbody216_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msgbody216_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2STheBattleResult_216_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2STheBattleResult_216_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CTheBattleResult_216_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CTheBattleResult_216_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SBatRecordLst_220_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SBatRecordLst_220_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CBatRecordLst_220_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CBatRecordLst_220_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SBatRecord_221_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SBatRecord_221_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CBatRecord_221_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CBatRecord_221_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SSingleBattleResult_222_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SSingleBattleResult_222_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetMatchUserNum_223_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetMatchUserNum_223_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetMatchUserNum_223_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetMatchUserNum_223_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SBroadcast_250_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SBroadcast_250_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CBroadcast_250_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CBroadcast_250_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CBroadcastProp_251_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CBroadcastProp_251_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SChatContent_252_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SChatContent_252_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CChatContent_252_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CChatContent_252_reflection_ = NULL;
const ::google::protobuf::Descriptor* MailGift_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailGift_reflection_ = NULL;
const ::google::protobuf::Descriptor* Mail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Mail_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetMailList_253_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetMailList_253_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetMailList_253_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetMailList_253_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SReadMail_254_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SReadMail_254_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SReceiveGift_255_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SReceiveGift_255_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CSendMail_256_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CSendMail_256_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SDeleteMail_257_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SDeleteMail_257_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CBroadcastLevel_258_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CBroadcastLevel_258_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CImportantNotice_259_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CImportantNotice_259_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetShopParams_260_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetShopParams_260_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetShopParams_260_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetShopParams_260_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SSearchUser_280_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SSearchUser_280_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserProfile_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserProfile_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CSearchUser_280_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CSearchUser_280_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SFriendRequest_281_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SFriendRequest_281_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CFriendRequest_281_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CFriendRequest_281_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetFriendRequests_282_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetFriendRequests_282_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetFriendRequests_282_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetFriendRequests_282_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SDealFriendRequest_283_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SDealFriendRequest_283_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CAddNewFriend_284_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CAddNewFriend_284_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SRemoveFriend_285_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SRemoveFriend_285_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetFriendList_286_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetFriendList_286_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetFriendList_286_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetFriendList_286_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetFriendAvaList_287_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetFriendAvaList_287_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetFriendAvaList_287_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetFriendAvaList_287_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SAddBlackUser_288_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SAddBlackUser_288_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SRemoveBlackUser_289_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SRemoveBlackUser_289_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetBlackList_290_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetBlackList_290_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetBlackList_290_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetBlackList_290_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CFriendOnlineStatus_291_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CFriendOnlineStatus_291_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetRecentUserList_292_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetRecentUserList_292_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetRecentUserList_292_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetRecentUserList_292_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SUploadCoordinates_293_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SUploadCoordinates_293_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetUserNearby_294_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetUserNearby_294_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetUserNearby_294_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetUserNearby_294_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SRankScore_300_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SRankScore_300_reflection_ = NULL;
const ::google::protobuf::Descriptor* RankScore_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RankScore_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CRankScore_300_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CRankScore_300_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetShortMsg_311_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetShortMsg_311_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetShortMsg_311_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetShortMsg_311_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SUpdateShortMsg_312_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SUpdateShortMsg_312_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetOneResumeMsg_313_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetOneResumeMsg_313_reflection_ = NULL;
const ::google::protobuf::Descriptor* CharResultRecord_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CharResultRecord_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetOneResumeMsg_313_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetOneResumeMsg_313_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SChangeName_314_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SChangeName_314_reflection_ = NULL;
const ::google::protobuf::Descriptor* SeasonInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SeasonInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CStageSeasonStart_320_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CStageSeasonStart_320_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CStageSeasonOver_321_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CStageSeasonOver_321_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CStageSeasonEnd_322_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CStageSeasonEnd_322_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetSeasonInfo_323_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetSeasonInfo_323_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetSeasonInfo_323_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetSeasonInfo_323_reflection_ = NULL;
const ::google::protobuf::Descriptor* OneContestInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OneContestInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* OneContestSimpleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OneContestSimpleInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SCreateContest_400_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SCreateContest_400_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CBroadContest_400_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CBroadContest_400_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetContestList_401_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetContestList_401_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetContestList_401_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetContestList_401_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SSignContest_402_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SSignContest_402_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CSignContest_402_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CSignContest_402_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CSignContestToOther_413_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CSignContestToOther_413_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SCloseContestTeams_403_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SCloseContestTeams_403_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CCloseContestTeams_403_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CCloseContestTeams_403_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SStartContest_404_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SStartContest_404_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CStartContest_404_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CStartContest_404_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetContesInfo_405_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetContesInfo_405_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetContesInfo_405_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetContesInfo_405_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SManagerContest_406_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SManagerContest_406_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CManagerContest_406_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CManagerContest_406_reflection_ = NULL;
const ::google::protobuf::Descriptor* OnePlayerInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OnePlayerInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TeamsInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TeamsInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TeamsSimpleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TeamsSimpleInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetContestTeams_407_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetContestTeams_407_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetContestTeams_407_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetContestTeams_407_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SEditorContesMembers_408_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SEditorContesMembers_408_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CEditorContesMembers_408_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CEditorContesMembers_408_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SQuitContest_409_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SQuitContest_409_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CQuitContest_409_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CQuitContest_409_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SOpenContestTeam_410_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SOpenContestTeam_410_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2COpenContestTeam_410_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2COpenContestTeam_410_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CContestStop_412_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CContestStop_412_reflection_ = NULL;
const ::google::protobuf::Descriptor* AteamVsBteam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AteamVsBteam_reflection_ = NULL;
const ::google::protobuf::Descriptor* OutVsFight_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OutVsFight_reflection_ = NULL;
const ::google::protobuf::Descriptor* TeamScoreInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TeamScoreInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoopFightInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoopFightInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SFightData_415_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SFightData_415_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CFightData_415_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CFightData_415_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetContestInfo_414_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetContestInfo_414_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetContestInfo_414_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetContestInfo_414_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SSetEditorContest_417_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SSetEditorContest_417_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetContestFightBoInfo_418_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetContestFightBoInfo_418_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetContestFightResult_416_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetContestFightResult_416_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SContestRankInfo_420_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SContestRankInfo_420_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CContestRankInfo_420_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CContestRankInfo_420_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SContestWaitSec_421_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SContestWaitSec_421_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CContestWaitSec_421_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CContestWaitSec_421_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SContestDissmis_422_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SContestDissmis_422_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CContestDissmis_422_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CContestDissmis_422_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SWatchContestBat_423_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SWatchContestBat_423_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CContestReward_424_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CContestReward_424_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CFreshenFightData_425_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CFreshenFightData_425_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGiveup_426_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGiveup_426_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGiveup_426_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGiveup_426_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SSetSetPassword_427_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SSetSetPassword_427_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetSignInActivaty_500_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetSignInActivaty_500_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetSignInActivaty_500_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetSignInActivaty_500_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SSignInActivaty_501_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SSignInActivaty_501_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SRemedialSignInAct_502_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SRemedialSignInAct_502_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CRemedialSignInAct_502_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CRemedialSignInAct_502_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CShowRedPoint_503_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CShowRedPoint_503_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetActDegree_520_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetActDegree_520_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActDegreeItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActDegreeItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActDegreeAward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActDegreeAward_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetActDegree_520_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetActDegree_520_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CSyncActDegreeSched_521_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CSyncActDegreeSched_521_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SRecvActDegreeAward_522_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SRecvActDegreeAward_522_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CRecvActDegreeAward_522_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CRecvActDegreeAward_522_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetCommonAct_540_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetCommonAct_540_reflection_ = NULL;
const ::google::protobuf::Descriptor* CommonAct_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommonAct_reflection_ = NULL;
const ::google::protobuf::Descriptor* CommonSubAct_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommonSubAct_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CGetCommonAct_540_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CGetCommonAct_540_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CSyncCommonActSched_541_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CSyncCommonActSched_541_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SRecvCommonActAward_542_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SRecvCommonActAward_542_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CRecvCommonActAward_542_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CRecvCommonActAward_542_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SAchievementList_600_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SAchievementList_600_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CAchievementList_600_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CAchievementList_600_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SAchievementProgress_601_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SAchievementProgress_601_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CAchievementProgress_601_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CAchievementProgress_601_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2CPushAchievement_602_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2CPushAchievement_602_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SGetAchievementAward_603_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SGetAchievementAward_603_reflection_ = NULL;
const ::google::protobuf::Descriptor* C2SReportBatData_604_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  C2SReportBatData_604_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_login_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_login_2eproto() {
  protobuf_AddDesc_login_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "login.proto");
  GOOGLE_CHECK(file != NULL);
  S2CCommonRet_1000_descriptor_ = file->message_type(0);
  static const int S2CCommonRet_1000_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CCommonRet_1000, ptid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CCommonRet_1000, ret_),
  };
  S2CCommonRet_1000_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CCommonRet_1000_descriptor_,
      S2CCommonRet_1000::default_instance_,
      S2CCommonRet_1000_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CCommonRet_1000),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CCommonRet_1000, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CCommonRet_1000, _is_default_instance_));
  C2SPing_1001_descriptor_ = file->message_type(1);
  static const int C2SPing_1001_offsets_[1] = {
  };
  C2SPing_1001_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SPing_1001_descriptor_,
      C2SPing_1001::default_instance_,
      C2SPing_1001_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SPing_1001),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SPing_1001, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SPing_1001, _is_default_instance_));
  S2CPing_1001_descriptor_ = file->message_type(2);
  static const int S2CPing_1001_offsets_[1] = {
  };
  S2CPing_1001_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CPing_1001_descriptor_,
      S2CPing_1001::default_instance_,
      S2CPing_1001_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CPing_1001),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CPing_1001, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CPing_1001, _is_default_instance_));
  C2S_RegLogin_98_descriptor_ = file->message_type(3);
  static const int C2S_RegLogin_98_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_RegLogin_98, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_RegLogin_98, ltparam_),
  };
  C2S_RegLogin_98_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_RegLogin_98_descriptor_,
      C2S_RegLogin_98::default_instance_,
      C2S_RegLogin_98_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_RegLogin_98),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_RegLogin_98, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_RegLogin_98, _is_default_instance_));
  S2C_RegLogin_98_descriptor_ = file->message_type(4);
  static const int S2C_RegLogin_98_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_RegLogin_98, acc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_RegLogin_98, pwd_),
  };
  S2C_RegLogin_98_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2C_RegLogin_98_descriptor_,
      S2C_RegLogin_98::default_instance_,
      S2C_RegLogin_98_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2C_RegLogin_98),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_RegLogin_98, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_RegLogin_98, _is_default_instance_));
  C2S_RegAcc_99_descriptor_ = file->message_type(5);
  static const int C2S_RegAcc_99_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_RegAcc_99, acc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_RegAcc_99, pwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_RegAcc_99, tel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_RegAcc_99, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_RegAcc_99, ltparam_),
  };
  C2S_RegAcc_99_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_RegAcc_99_descriptor_,
      C2S_RegAcc_99::default_instance_,
      C2S_RegAcc_99_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_RegAcc_99),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_RegAcc_99, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_RegAcc_99, _is_default_instance_));
  C2S_CreateRole_117_descriptor_ = file->message_type(6);
  static const int C2S_CreateRole_117_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_CreateRole_117, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_CreateRole_117, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_CreateRole_117, ltparam_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_CreateRole_117, version_),
  };
  C2S_CreateRole_117_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_CreateRole_117_descriptor_,
      C2S_CreateRole_117::default_instance_,
      C2S_CreateRole_117_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_CreateRole_117),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_CreateRole_117, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_CreateRole_117, _is_default_instance_));
  C2S_LoginData_116_descriptor_ = file->message_type(7);
  static const int C2S_LoginData_116_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_LoginData_116, acc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_LoginData_116, pwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_LoginData_116, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_LoginData_116, ltparam_),
  };
  C2S_LoginData_116_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_LoginData_116_descriptor_,
      C2S_LoginData_116::default_instance_,
      C2S_LoginData_116_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_LoginData_116),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_LoginData_116, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_LoginData_116, _is_default_instance_));
  S2C_LoginData_116_descriptor_ = file->message_type(8);
  static const int S2C_LoginData_116_offsets_[24] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, roomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, mountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, hidescore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, starwin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, starfail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, selfintroduce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, stagestart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, starstageprofail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, runeshard_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, contestid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, weaponitemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, guidesteps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, diamond_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, isexpmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, usemountskinid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, matchreadyid_),
  };
  S2C_LoginData_116_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2C_LoginData_116_descriptor_,
      S2C_LoginData_116::default_instance_,
      S2C_LoginData_116_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2C_LoginData_116),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_LoginData_116, _is_default_instance_));
  C2S_UpdateGuideSteps_118_descriptor_ = file->message_type(9);
  static const int C2S_UpdateGuideSteps_118_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateGuideSteps_118, guidesteps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateGuideSteps_118, isskip_),
  };
  C2S_UpdateGuideSteps_118_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_UpdateGuideSteps_118_descriptor_,
      C2S_UpdateGuideSteps_118::default_instance_,
      C2S_UpdateGuideSteps_118_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_UpdateGuideSteps_118),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateGuideSteps_118, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateGuideSteps_118, _is_default_instance_));
  PRoomInfo_descriptor_ = file->message_type(10);
  static const int PRoomInfo_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomInfo, roomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomInfo, roomname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomInfo, roommaxpnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomInfo, roompnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomInfo, createrid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomInfo, isstarted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomInfo, badge1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomInfo, badge2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomInfo, sceneid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomInfo, cfgstring_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomInfo, randomseed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomInfo, roomtype_),
  };
  PRoomInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PRoomInfo_descriptor_,
      PRoomInfo::default_instance_,
      PRoomInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PRoomInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomInfo, _is_default_instance_));
  C2S_GetRoomList_100_descriptor_ = file->message_type(11);
  static const int C2S_GetRoomList_100_offsets_[1] = {
  };
  C2S_GetRoomList_100_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_GetRoomList_100_descriptor_,
      C2S_GetRoomList_100::default_instance_,
      C2S_GetRoomList_100_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_GetRoomList_100),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_GetRoomList_100, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_GetRoomList_100, _is_default_instance_));
  S2C_GetRoomList_100_descriptor_ = file->message_type(12);
  static const int S2C_GetRoomList_100_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetRoomList_100, roomlist_),
  };
  S2C_GetRoomList_100_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2C_GetRoomList_100_descriptor_,
      S2C_GetRoomList_100::default_instance_,
      S2C_GetRoomList_100_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2C_GetRoomList_100),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetRoomList_100, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetRoomList_100, _is_default_instance_));
  C2SEnterRoom_101_descriptor_ = file->message_type(13);
  static const int C2SEnterRoom_101_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SEnterRoom_101, roomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SEnterRoom_101, relogin_),
  };
  C2SEnterRoom_101_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SEnterRoom_101_descriptor_,
      C2SEnterRoom_101::default_instance_,
      C2SEnterRoom_101_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SEnterRoom_101),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SEnterRoom_101, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SEnterRoom_101, _is_default_instance_));
  PRoomUser_descriptor_ = file->message_type(14);
  static const int PRoomUser_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, isready_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, camp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, mountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, iswatcher_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, dressdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, stagestar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, weaponitemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, runelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, batcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, mvpcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, mountbatcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, mountwincount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, avgshowpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, stagewinnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, mvplaststage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, mountskinid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, isrobot_),
  };
  PRoomUser_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PRoomUser_descriptor_,
      PRoomUser::default_instance_,
      PRoomUser_offsets_,
      -1,
      -1,
      -1,
      sizeof(PRoomUser),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomUser, _is_default_instance_));
  S2CEnterRoomRet_101_descriptor_ = file->message_type(15);
  static const int S2CEnterRoomRet_101_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEnterRoomRet_101, roominfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEnterRoomRet_101, userlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEnterRoomRet_101, offlineuserlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEnterRoomRet_101, giveuplist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEnterRoomRet_101, udpip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEnterRoomRet_101, udpport_),
  };
  S2CEnterRoomRet_101_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CEnterRoomRet_101_descriptor_,
      S2CEnterRoomRet_101::default_instance_,
      S2CEnterRoomRet_101_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CEnterRoomRet_101),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEnterRoomRet_101, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEnterRoomRet_101, _is_default_instance_));
  C2SCreateRoom_102_descriptor_ = file->message_type(16);
  static const int C2SCreateRoom_102_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCreateRoom_102, roomname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCreateRoom_102, sceneid_),
  };
  C2SCreateRoom_102_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SCreateRoom_102_descriptor_,
      C2SCreateRoom_102::default_instance_,
      C2SCreateRoom_102_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SCreateRoom_102),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCreateRoom_102, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCreateRoom_102, _is_default_instance_));
  C2SExitRoom_103_descriptor_ = file->message_type(17);
  static const int C2SExitRoom_103_offsets_[1] = {
  };
  C2SExitRoom_103_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SExitRoom_103_descriptor_,
      C2SExitRoom_103::default_instance_,
      C2SExitRoom_103_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SExitRoom_103),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SExitRoom_103, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SExitRoom_103, _is_default_instance_));
  S2CExitRoom_103_descriptor_ = file->message_type(18);
  static const int S2CExitRoom_103_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CExitRoom_103, rid_),
  };
  S2CExitRoom_103_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CExitRoom_103_descriptor_,
      S2CExitRoom_103::default_instance_,
      S2CExitRoom_103_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CExitRoom_103),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CExitRoom_103, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CExitRoom_103, _is_default_instance_));
  C2SUserReady_104_descriptor_ = file->message_type(19);
  static const int C2SUserReady_104_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SUserReady_104, doready_),
  };
  C2SUserReady_104_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SUserReady_104_descriptor_,
      C2SUserReady_104::default_instance_,
      C2SUserReady_104_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SUserReady_104),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SUserReady_104, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SUserReady_104, _is_default_instance_));
  S2CUserReady_104_descriptor_ = file->message_type(20);
  static const int S2CUserReady_104_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CUserReady_104, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CUserReady_104, isready_),
  };
  S2CUserReady_104_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CUserReady_104_descriptor_,
      S2CUserReady_104::default_instance_,
      S2CUserReady_104_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CUserReady_104),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CUserReady_104, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CUserReady_104, _is_default_instance_));
  C2SMasterStart_105_descriptor_ = file->message_type(21);
  static const int C2SMasterStart_105_offsets_[1] = {
  };
  C2SMasterStart_105_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SMasterStart_105_descriptor_,
      C2SMasterStart_105::default_instance_,
      C2SMasterStart_105_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SMasterStart_105),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SMasterStart_105, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SMasterStart_105, _is_default_instance_));
  S2CMasterStart_105_descriptor_ = file->message_type(22);
  static const int S2CMasterStart_105_offsets_[1] = {
  };
  S2CMasterStart_105_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CMasterStart_105_descriptor_,
      S2CMasterStart_105::default_instance_,
      S2CMasterStart_105_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CMasterStart_105),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMasterStart_105, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMasterStart_105, _is_default_instance_));
  C2SLoadFinish_106_descriptor_ = file->message_type(23);
  static const int C2SLoadFinish_106_offsets_[1] = {
  };
  C2SLoadFinish_106_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SLoadFinish_106_descriptor_,
      C2SLoadFinish_106::default_instance_,
      C2SLoadFinish_106_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SLoadFinish_106),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SLoadFinish_106, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SLoadFinish_106, _is_default_instance_));
  S2CLoadFinish_106_descriptor_ = file->message_type(24);
  static const int S2CLoadFinish_106_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CLoadFinish_106, rid_),
  };
  S2CLoadFinish_106_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CLoadFinish_106_descriptor_,
      S2CLoadFinish_106::default_instance_,
      S2CLoadFinish_106_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CLoadFinish_106),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CLoadFinish_106, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CLoadFinish_106, _is_default_instance_));
  S2CRealstart_107_descriptor_ = file->message_type(25);
  static const int S2CRealstart_107_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRealstart_107, roomsn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRealstart_107, svrframedelta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRealstart_107, enableudp_),
  };
  S2CRealstart_107_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CRealstart_107_descriptor_,
      S2CRealstart_107::default_instance_,
      S2CRealstart_107_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CRealstart_107),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRealstart_107, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRealstart_107, _is_default_instance_));
  S2CEnterRoomRet_108_descriptor_ = file->message_type(26);
  static const int S2CEnterRoomRet_108_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEnterRoomRet_108, userinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEnterRoomRet_108, isappend_),
  };
  S2CEnterRoomRet_108_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CEnterRoomRet_108_descriptor_,
      S2CEnterRoomRet_108::default_instance_,
      S2CEnterRoomRet_108_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CEnterRoomRet_108),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEnterRoomRet_108, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEnterRoomRet_108, _is_default_instance_));
  C2SSwitchCamp_109_descriptor_ = file->message_type(27);
  static const int C2SSwitchCamp_109_offsets_[1] = {
  };
  C2SSwitchCamp_109_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SSwitchCamp_109_descriptor_,
      C2SSwitchCamp_109::default_instance_,
      C2SSwitchCamp_109_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SSwitchCamp_109),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSwitchCamp_109, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSwitchCamp_109, _is_default_instance_));
  S2CSwitchCamp_109_descriptor_ = file->message_type(28);
  static const int S2CSwitchCamp_109_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSwitchCamp_109, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSwitchCamp_109, camp_),
  };
  S2CSwitchCamp_109_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CSwitchCamp_109_descriptor_,
      S2CSwitchCamp_109::default_instance_,
      S2CSwitchCamp_109_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CSwitchCamp_109),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSwitchCamp_109, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSwitchCamp_109, _is_default_instance_));
  C2SSwitchWatcher_110_descriptor_ = file->message_type(29);
  static const int C2SSwitchWatcher_110_offsets_[1] = {
  };
  C2SSwitchWatcher_110_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SSwitchWatcher_110_descriptor_,
      C2SSwitchWatcher_110::default_instance_,
      C2SSwitchWatcher_110_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SSwitchWatcher_110),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSwitchWatcher_110, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSwitchWatcher_110, _is_default_instance_));
  S2CSwitchWatcher_110_descriptor_ = file->message_type(30);
  static const int S2CSwitchWatcher_110_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSwitchWatcher_110, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSwitchWatcher_110, iswatcher_),
  };
  S2CSwitchWatcher_110_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CSwitchWatcher_110_descriptor_,
      S2CSwitchWatcher_110::default_instance_,
      S2CSwitchWatcher_110_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CSwitchWatcher_110),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSwitchWatcher_110, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSwitchWatcher_110, _is_default_instance_));
  S2CLeaveGame_111_descriptor_ = file->message_type(31);
  static const int S2CLeaveGame_111_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CLeaveGame_111, rid_),
  };
  S2CLeaveGame_111_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CLeaveGame_111_descriptor_,
      S2CLeaveGame_111::default_instance_,
      S2CLeaveGame_111_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CLeaveGame_111),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CLeaveGame_111, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CLeaveGame_111, _is_default_instance_));
  C2SChooseBadge_113_descriptor_ = file->message_type(32);
  static const int C2SChooseBadge_113_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SChooseBadge_113, badge1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SChooseBadge_113, badge2_),
  };
  C2SChooseBadge_113_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SChooseBadge_113_descriptor_,
      C2SChooseBadge_113::default_instance_,
      C2SChooseBadge_113_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SChooseBadge_113),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SChooseBadge_113, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SChooseBadge_113, _is_default_instance_));
  S2CChooseBadge_113_descriptor_ = file->message_type(33);
  static const int S2CChooseBadge_113_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CChooseBadge_113, badge1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CChooseBadge_113, badge2_),
  };
  S2CChooseBadge_113_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CChooseBadge_113_descriptor_,
      S2CChooseBadge_113::default_instance_,
      S2CChooseBadge_113_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CChooseBadge_113),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CChooseBadge_113, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CChooseBadge_113, _is_default_instance_));
  C2SBroadRoomcastString_114_descriptor_ = file->message_type(34);
  static const int C2SBroadRoomcastString_114_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBroadRoomcastString_114, val_),
  };
  C2SBroadRoomcastString_114_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SBroadRoomcastString_114_descriptor_,
      C2SBroadRoomcastString_114::default_instance_,
      C2SBroadRoomcastString_114_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SBroadRoomcastString_114),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBroadRoomcastString_114, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBroadRoomcastString_114, _is_default_instance_));
  S2CBroadRoomcastString_114_descriptor_ = file->message_type(35);
  static const int S2CBroadRoomcastString_114_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBroadRoomcastString_114, val_),
  };
  S2CBroadRoomcastString_114_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CBroadRoomcastString_114_descriptor_,
      S2CBroadRoomcastString_114::default_instance_,
      S2CBroadRoomcastString_114_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CBroadRoomcastString_114),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBroadRoomcastString_114, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBroadRoomcastString_114, _is_default_instance_));
  C2SForceEnterRoom_115_descriptor_ = file->message_type(36);
  static const int C2SForceEnterRoom_115_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SForceEnterRoom_115, roomid_),
  };
  C2SForceEnterRoom_115_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SForceEnterRoom_115_descriptor_,
      C2SForceEnterRoom_115::default_instance_,
      C2SForceEnterRoom_115_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SForceEnterRoom_115),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SForceEnterRoom_115, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SForceEnterRoom_115, _is_default_instance_));
  C2SAddRobotToRoom_119_descriptor_ = file->message_type(37);
  static const int C2SAddRobotToRoom_119_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAddRobotToRoom_119, campid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAddRobotToRoom_119, robotid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAddRobotToRoom_119, oper_),
  };
  C2SAddRobotToRoom_119_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SAddRobotToRoom_119_descriptor_,
      C2SAddRobotToRoom_119::default_instance_,
      C2SAddRobotToRoom_119_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SAddRobotToRoom_119),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAddRobotToRoom_119, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAddRobotToRoom_119, _is_default_instance_));
  S2CAddRobotToRoom_119_descriptor_ = file->message_type(38);
  static const int S2CAddRobotToRoom_119_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAddRobotToRoom_119, robotidscamp0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAddRobotToRoom_119, robotidscamp1_),
  };
  S2CAddRobotToRoom_119_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CAddRobotToRoom_119_descriptor_,
      S2CAddRobotToRoom_119::default_instance_,
      S2CAddRobotToRoom_119_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CAddRobotToRoom_119),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAddRobotToRoom_119, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAddRobotToRoom_119, _is_default_instance_));
  PTeammateInfo_descriptor_ = file->message_type(39);
  static const int PTeammateInfo_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTeammateInfo, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTeammateInfo, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTeammateInfo, leftsec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTeammateInfo, batstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTeammateInfo, mount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTeammateInfo, teammatecount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTeammateInfo, istop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTeammateInfo, teamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTeammateInfo, incontest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTeammateInfo, lv_),
  };
  PTeammateInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PTeammateInfo_descriptor_,
      PTeammateInfo::default_instance_,
      PTeammateInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PTeammateInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTeammateInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PTeammateInfo, _is_default_instance_));
  C2SInvitePlayer_120_descriptor_ = file->message_type(40);
  static const int C2SInvitePlayer_120_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SInvitePlayer_120, name_),
  };
  C2SInvitePlayer_120_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SInvitePlayer_120_descriptor_,
      C2SInvitePlayer_120::default_instance_,
      C2SInvitePlayer_120_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SInvitePlayer_120),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SInvitePlayer_120, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SInvitePlayer_120, _is_default_instance_));
  S2CInvitePlayer_120_descriptor_ = file->message_type(41);
  static const int S2CInvitePlayer_120_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CInvitePlayer_120, info_),
  };
  S2CInvitePlayer_120_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CInvitePlayer_120_descriptor_,
      S2CInvitePlayer_120::default_instance_,
      S2CInvitePlayer_120_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CInvitePlayer_120),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CInvitePlayer_120, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CInvitePlayer_120, _is_default_instance_));
  S2CReceiveInvite_121_descriptor_ = file->message_type(42);
  static const int S2CReceiveInvite_121_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReceiveInvite_121, teamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReceiveInvite_121, fromname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReceiveInvite_121, expiresin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReceiveInvite_121, mount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReceiveInvite_121, lv_),
  };
  S2CReceiveInvite_121_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CReceiveInvite_121_descriptor_,
      S2CReceiveInvite_121::default_instance_,
      S2CReceiveInvite_121_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CReceiveInvite_121),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReceiveInvite_121, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReceiveInvite_121, _is_default_instance_));
  C2SAgreeInvite_122_descriptor_ = file->message_type(43);
  static const int C2SAgreeInvite_122_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAgreeInvite_122, teamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAgreeInvite_122, op_),
  };
  C2SAgreeInvite_122_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SAgreeInvite_122_descriptor_,
      C2SAgreeInvite_122::default_instance_,
      C2SAgreeInvite_122_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SAgreeInvite_122),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAgreeInvite_122, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAgreeInvite_122, _is_default_instance_));
  S2CAgreeInvite_122_descriptor_ = file->message_type(44);
  static const int S2CAgreeInvite_122_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAgreeInvite_122, teamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAgreeInvite_122, info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAgreeInvite_122, op_),
  };
  S2CAgreeInvite_122_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CAgreeInvite_122_descriptor_,
      S2CAgreeInvite_122::default_instance_,
      S2CAgreeInvite_122_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CAgreeInvite_122),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAgreeInvite_122, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAgreeInvite_122, _is_default_instance_));
  S2CJoinTeam_123_descriptor_ = file->message_type(45);
  static const int S2CJoinTeam_123_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CJoinTeam_123, teamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CJoinTeam_123, captainrid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CJoinTeam_123, istop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CJoinTeam_123, teammatelist_),
  };
  S2CJoinTeam_123_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CJoinTeam_123_descriptor_,
      S2CJoinTeam_123::default_instance_,
      S2CJoinTeam_123_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CJoinTeam_123),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CJoinTeam_123, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CJoinTeam_123, _is_default_instance_));
  C2SCancelInvite_124_descriptor_ = file->message_type(46);
  static const int C2SCancelInvite_124_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCancelInvite_124, rid_),
  };
  C2SCancelInvite_124_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SCancelInvite_124_descriptor_,
      C2SCancelInvite_124::default_instance_,
      C2SCancelInvite_124_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SCancelInvite_124),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCancelInvite_124, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCancelInvite_124, _is_default_instance_));
  S2CCancelInvite_124_descriptor_ = file->message_type(47);
  static const int S2CCancelInvite_124_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CCancelInvite_124, rid_),
  };
  S2CCancelInvite_124_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CCancelInvite_124_descriptor_,
      S2CCancelInvite_124::default_instance_,
      S2CCancelInvite_124_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CCancelInvite_124),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CCancelInvite_124, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CCancelInvite_124, _is_default_instance_));
  C2SKickPlayer_125_descriptor_ = file->message_type(48);
  static const int C2SKickPlayer_125_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SKickPlayer_125, rid_),
  };
  C2SKickPlayer_125_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SKickPlayer_125_descriptor_,
      C2SKickPlayer_125::default_instance_,
      C2SKickPlayer_125_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SKickPlayer_125),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SKickPlayer_125, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SKickPlayer_125, _is_default_instance_));
  S2CKickPlayer_125_descriptor_ = file->message_type(49);
  static const int S2CKickPlayer_125_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CKickPlayer_125, rid_),
  };
  S2CKickPlayer_125_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CKickPlayer_125_descriptor_,
      S2CKickPlayer_125::default_instance_,
      S2CKickPlayer_125_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CKickPlayer_125),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CKickPlayer_125, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CKickPlayer_125, _is_default_instance_));
  C2SLeaveTeam_126_descriptor_ = file->message_type(50);
  static const int C2SLeaveTeam_126_offsets_[1] = {
  };
  C2SLeaveTeam_126_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SLeaveTeam_126_descriptor_,
      C2SLeaveTeam_126::default_instance_,
      C2SLeaveTeam_126_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SLeaveTeam_126),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SLeaveTeam_126, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SLeaveTeam_126, _is_default_instance_));
  S2CLeaveTeam_126_descriptor_ = file->message_type(51);
  static const int S2CLeaveTeam_126_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CLeaveTeam_126, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CLeaveTeam_126, captainrid_),
  };
  S2CLeaveTeam_126_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CLeaveTeam_126_descriptor_,
      S2CLeaveTeam_126::default_instance_,
      S2CLeaveTeam_126_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CLeaveTeam_126),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CLeaveTeam_126, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CLeaveTeam_126, _is_default_instance_));
  S2CCancelInvite_127_descriptor_ = file->message_type(52);
  static const int S2CCancelInvite_127_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CCancelInvite_127, teamid_),
  };
  S2CCancelInvite_127_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CCancelInvite_127_descriptor_,
      S2CCancelInvite_127::default_instance_,
      S2CCancelInvite_127_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CCancelInvite_127),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CCancelInvite_127, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CCancelInvite_127, _is_default_instance_));
  S2CPlayerBatState_128_descriptor_ = file->message_type(53);
  static const int S2CPlayerBatState_128_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CPlayerBatState_128, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CPlayerBatState_128, state_),
  };
  S2CPlayerBatState_128_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CPlayerBatState_128_descriptor_,
      S2CPlayerBatState_128::default_instance_,
      S2CPlayerBatState_128_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CPlayerBatState_128),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CPlayerBatState_128, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CPlayerBatState_128, _is_default_instance_));
  C2SGetTeamAvaList_129_descriptor_ = file->message_type(54);
  static const int C2SGetTeamAvaList_129_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetTeamAvaList_129, searchpattern_),
  };
  C2SGetTeamAvaList_129_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetTeamAvaList_129_descriptor_,
      C2SGetTeamAvaList_129::default_instance_,
      C2SGetTeamAvaList_129_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetTeamAvaList_129),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetTeamAvaList_129, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetTeamAvaList_129, _is_default_instance_));
  S2CGetTeamAvaList_129_descriptor_ = file->message_type(55);
  static const int S2CGetTeamAvaList_129_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetTeamAvaList_129, teammatelist_),
  };
  S2CGetTeamAvaList_129_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetTeamAvaList_129_descriptor_,
      S2CGetTeamAvaList_129::default_instance_,
      S2CGetTeamAvaList_129_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetTeamAvaList_129),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetTeamAvaList_129, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetTeamAvaList_129, _is_default_instance_));
  C2SToTopTeam_131_descriptor_ = file->message_type(56);
  static const int C2SToTopTeam_131_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SToTopTeam_131, istop_),
  };
  C2SToTopTeam_131_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SToTopTeam_131_descriptor_,
      C2SToTopTeam_131::default_instance_,
      C2SToTopTeam_131_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SToTopTeam_131),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SToTopTeam_131, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SToTopTeam_131, _is_default_instance_));
  S2CToTopTeam_131_descriptor_ = file->message_type(57);
  static const int S2CToTopTeam_131_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CToTopTeam_131, istop_),
  };
  S2CToTopTeam_131_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CToTopTeam_131_descriptor_,
      S2CToTopTeam_131::default_instance_,
      S2CToTopTeam_131_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CToTopTeam_131),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CToTopTeam_131, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CToTopTeam_131, _is_default_instance_));
  C2SHandoverLeader_132_descriptor_ = file->message_type(58);
  static const int C2SHandoverLeader_132_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SHandoverLeader_132, rid_),
  };
  C2SHandoverLeader_132_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SHandoverLeader_132_descriptor_,
      C2SHandoverLeader_132::default_instance_,
      C2SHandoverLeader_132_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SHandoverLeader_132),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SHandoverLeader_132, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SHandoverLeader_132, _is_default_instance_));
  S2CHandoverLeader_132_descriptor_ = file->message_type(59);
  static const int S2CHandoverLeader_132_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CHandoverLeader_132, rid_),
  };
  S2CHandoverLeader_132_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CHandoverLeader_132_descriptor_,
      S2CHandoverLeader_132::default_instance_,
      S2CHandoverLeader_132_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CHandoverLeader_132),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CHandoverLeader_132, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CHandoverLeader_132, _is_default_instance_));
  C2SApplyPlayer_133_descriptor_ = file->message_type(60);
  static const int C2SApplyPlayer_133_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SApplyPlayer_133, name_),
  };
  C2SApplyPlayer_133_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SApplyPlayer_133_descriptor_,
      C2SApplyPlayer_133::default_instance_,
      C2SApplyPlayer_133_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SApplyPlayer_133),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SApplyPlayer_133, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SApplyPlayer_133, _is_default_instance_));
  S2CApplyPlayer_133_descriptor_ = file->message_type(61);
  static const int S2CApplyPlayer_133_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CApplyPlayer_133, teamid_),
  };
  S2CApplyPlayer_133_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CApplyPlayer_133_descriptor_,
      S2CApplyPlayer_133::default_instance_,
      S2CApplyPlayer_133_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CApplyPlayer_133),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CApplyPlayer_133, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CApplyPlayer_133, _is_default_instance_));
  S2CReceiveApply_134_descriptor_ = file->message_type(62);
  static const int S2CReceiveApply_134_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReceiveApply_134, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReceiveApply_134, fromname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReceiveApply_134, expiresin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReceiveApply_134, mount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReceiveApply_134, lv_),
  };
  S2CReceiveApply_134_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CReceiveApply_134_descriptor_,
      S2CReceiveApply_134::default_instance_,
      S2CReceiveApply_134_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CReceiveApply_134),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReceiveApply_134, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReceiveApply_134, _is_default_instance_));
  C2SAgreeApply_135_descriptor_ = file->message_type(63);
  static const int C2SAgreeApply_135_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAgreeApply_135, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAgreeApply_135, op_),
  };
  C2SAgreeApply_135_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SAgreeApply_135_descriptor_,
      C2SAgreeApply_135::default_instance_,
      C2SAgreeApply_135_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SAgreeApply_135),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAgreeApply_135, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAgreeApply_135, _is_default_instance_));
  S2CAgreeApply_135_descriptor_ = file->message_type(64);
  static const int S2CAgreeApply_135_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAgreeApply_135, teamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAgreeApply_135, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAgreeApply_135, info_),
  };
  S2CAgreeApply_135_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CAgreeApply_135_descriptor_,
      S2CAgreeApply_135::default_instance_,
      S2CAgreeApply_135_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CAgreeApply_135),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAgreeApply_135, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAgreeApply_135, _is_default_instance_));
  MallBagItemData_descriptor_ = file->message_type(65);
  static const int MallBagItemData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MallBagItemData, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MallBagItemData, itemnum_),
  };
  MallBagItemData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MallBagItemData_descriptor_,
      MallBagItemData::default_instance_,
      MallBagItemData_offsets_,
      -1,
      -1,
      -1,
      sizeof(MallBagItemData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MallBagItemData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MallBagItemData, _is_default_instance_));
  C2SGetChestNum_140_descriptor_ = file->message_type(66);
  static const int C2SGetChestNum_140_offsets_[1] = {
  };
  C2SGetChestNum_140_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetChestNum_140_descriptor_,
      C2SGetChestNum_140::default_instance_,
      C2SGetChestNum_140_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetChestNum_140),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetChestNum_140, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetChestNum_140, _is_default_instance_));
  S2CGetChestNum_140_descriptor_ = file->message_type(67);
  static const int S2CGetChestNum_140_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetChestNum_140, chestnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetChestNum_140, weaponfull_),
  };
  S2CGetChestNum_140_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetChestNum_140_descriptor_,
      S2CGetChestNum_140::default_instance_,
      S2CGetChestNum_140_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetChestNum_140),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetChestNum_140, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetChestNum_140, _is_default_instance_));
  C2SOpenChest_141_descriptor_ = file->message_type(68);
  static const int C2SOpenChest_141_offsets_[1] = {
  };
  C2SOpenChest_141_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SOpenChest_141_descriptor_,
      C2SOpenChest_141::default_instance_,
      C2SOpenChest_141_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SOpenChest_141),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SOpenChest_141, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SOpenChest_141, _is_default_instance_));
  ChestReward_descriptor_ = file->message_type(69);
  static const int ChestReward_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChestReward, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChestReward, itemnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChestReward, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChestReward, weaponid_),
  };
  ChestReward_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChestReward_descriptor_,
      ChestReward::default_instance_,
      ChestReward_offsets_,
      -1,
      -1,
      -1,
      sizeof(ChestReward),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChestReward, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChestReward, _is_default_instance_));
  S2COpenChest_141_descriptor_ = file->message_type(70);
  static const int S2COpenChest_141_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2COpenChest_141, rewardlist_),
  };
  S2COpenChest_141_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2COpenChest_141_descriptor_,
      S2COpenChest_141::default_instance_,
      S2COpenChest_141_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2COpenChest_141),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2COpenChest_141, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2COpenChest_141, _is_default_instance_));
  C2SBuyChest_142_descriptor_ = file->message_type(71);
  static const int C2SBuyChest_142_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBuyChest_142, num_),
  };
  C2SBuyChest_142_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SBuyChest_142_descriptor_,
      C2SBuyChest_142::default_instance_,
      C2SBuyChest_142_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SBuyChest_142),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBuyChest_142, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBuyChest_142, _is_default_instance_));
  C2S_BuyItemList_150_descriptor_ = file->message_type(72);
  static const int C2S_BuyItemList_150_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_BuyItemList_150, itemlist_),
  };
  C2S_BuyItemList_150_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_BuyItemList_150_descriptor_,
      C2S_BuyItemList_150::default_instance_,
      C2S_BuyItemList_150_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_BuyItemList_150),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_BuyItemList_150, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_BuyItemList_150, _is_default_instance_));
  C2S_ReqBagItemList_151_descriptor_ = file->message_type(73);
  static const int C2S_ReqBagItemList_151_offsets_[1] = {
  };
  C2S_ReqBagItemList_151_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_ReqBagItemList_151_descriptor_,
      C2S_ReqBagItemList_151::default_instance_,
      C2S_ReqBagItemList_151_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_ReqBagItemList_151),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_ReqBagItemList_151, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_ReqBagItemList_151, _is_default_instance_));
  S2C_ReqBagItemList_151_descriptor_ = file->message_type(74);
  static const int S2C_ReqBagItemList_151_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_ReqBagItemList_151, itemlist_),
  };
  S2C_ReqBagItemList_151_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2C_ReqBagItemList_151_descriptor_,
      S2C_ReqBagItemList_151::default_instance_,
      S2C_ReqBagItemList_151_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2C_ReqBagItemList_151),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_ReqBagItemList_151, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_ReqBagItemList_151, _is_default_instance_));
  C2S_UseItem_153_descriptor_ = file->message_type(75);
  static const int C2S_UseItem_153_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UseItem_153, itemids_),
  };
  C2S_UseItem_153_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_UseItem_153_descriptor_,
      C2S_UseItem_153::default_instance_,
      C2S_UseItem_153_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_UseItem_153),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UseItem_153, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UseItem_153, _is_default_instance_));
  C2S_RefreshStore_154_descriptor_ = file->message_type(76);
  static const int C2S_RefreshStore_154_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_RefreshStore_154, storeitemids_),
  };
  C2S_RefreshStore_154_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_RefreshStore_154_descriptor_,
      C2S_RefreshStore_154::default_instance_,
      C2S_RefreshStore_154_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_RefreshStore_154),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_RefreshStore_154, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_RefreshStore_154, _is_default_instance_));
  S2C_RefreshStore_154_descriptor_ = file->message_type(77);
  static const int S2C_RefreshStore_154_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_RefreshStore_154, nextrefreshsec_),
  };
  S2C_RefreshStore_154_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2C_RefreshStore_154_descriptor_,
      S2C_RefreshStore_154::default_instance_,
      S2C_RefreshStore_154_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2C_RefreshStore_154),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_RefreshStore_154, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_RefreshStore_154, _is_default_instance_));
  C2S_ReqLastStoreItem_155_descriptor_ = file->message_type(78);
  static const int C2S_ReqLastStoreItem_155_offsets_[1] = {
  };
  C2S_ReqLastStoreItem_155_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_ReqLastStoreItem_155_descriptor_,
      C2S_ReqLastStoreItem_155::default_instance_,
      C2S_ReqLastStoreItem_155_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_ReqLastStoreItem_155),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_ReqLastStoreItem_155, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_ReqLastStoreItem_155, _is_default_instance_));
  S2C_ReqLastStoreItem_155_descriptor_ = file->message_type(79);
  static const int S2C_ReqLastStoreItem_155_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_ReqLastStoreItem_155, nextrefreshsec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_ReqLastStoreItem_155, storeitemids_),
  };
  S2C_ReqLastStoreItem_155_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2C_ReqLastStoreItem_155_descriptor_,
      S2C_ReqLastStoreItem_155::default_instance_,
      S2C_ReqLastStoreItem_155_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2C_ReqLastStoreItem_155),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_ReqLastStoreItem_155, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_ReqLastStoreItem_155, _is_default_instance_));
  C2S_ReqUnLockCharList_156_descriptor_ = file->message_type(80);
  static const int C2S_ReqUnLockCharList_156_offsets_[1] = {
  };
  C2S_ReqUnLockCharList_156_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_ReqUnLockCharList_156_descriptor_,
      C2S_ReqUnLockCharList_156::default_instance_,
      C2S_ReqUnLockCharList_156_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_ReqUnLockCharList_156),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_ReqUnLockCharList_156, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_ReqUnLockCharList_156, _is_default_instance_));
  S2C_UnlockCharList_156_descriptor_ = file->message_type(81);
  static const int S2C_UnlockCharList_156_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_UnlockCharList_156, mountids_),
  };
  S2C_UnlockCharList_156_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2C_UnlockCharList_156_descriptor_,
      S2C_UnlockCharList_156::default_instance_,
      S2C_UnlockCharList_156_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2C_UnlockCharList_156),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_UnlockCharList_156, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_UnlockCharList_156, _is_default_instance_));
  C2S_ReqAlreadyBuyList_157_descriptor_ = file->message_type(82);
  static const int C2S_ReqAlreadyBuyList_157_offsets_[1] = {
  };
  C2S_ReqAlreadyBuyList_157_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_ReqAlreadyBuyList_157_descriptor_,
      C2S_ReqAlreadyBuyList_157::default_instance_,
      C2S_ReqAlreadyBuyList_157_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_ReqAlreadyBuyList_157),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_ReqAlreadyBuyList_157, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_ReqAlreadyBuyList_157, _is_default_instance_));
  S2C_AlreadyBuyList_157_descriptor_ = file->message_type(83);
  static const int S2C_AlreadyBuyList_157_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_AlreadyBuyList_157, itemlist_),
  };
  S2C_AlreadyBuyList_157_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2C_AlreadyBuyList_157_descriptor_,
      S2C_AlreadyBuyList_157::default_instance_,
      S2C_AlreadyBuyList_157_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2C_AlreadyBuyList_157),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_AlreadyBuyList_157, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_AlreadyBuyList_157, _is_default_instance_));
  S2C_AddItem_158_descriptor_ = file->message_type(84);
  static const int S2C_AddItem_158_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_AddItem_158, itemlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_AddItem_158, ptid_),
  };
  S2C_AddItem_158_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2C_AddItem_158_descriptor_,
      S2C_AddItem_158::default_instance_,
      S2C_AddItem_158_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2C_AddItem_158),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_AddItem_158, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_AddItem_158, _is_default_instance_));
  SuitData_descriptor_ = file->message_type(85);
  static const int SuitData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuitData, idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuitData, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuitData, data_),
  };
  SuitData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SuitData_descriptor_,
      SuitData::default_instance_,
      SuitData_offsets_,
      -1,
      -1,
      -1,
      sizeof(SuitData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuitData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SuitData, _is_default_instance_));
  C2S_UpdateSuitName_160_descriptor_ = file->message_type(86);
  static const int C2S_UpdateSuitName_160_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateSuitName_160, idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateSuitName_160, name_),
  };
  C2S_UpdateSuitName_160_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_UpdateSuitName_160_descriptor_,
      C2S_UpdateSuitName_160::default_instance_,
      C2S_UpdateSuitName_160_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_UpdateSuitName_160),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateSuitName_160, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateSuitName_160, _is_default_instance_));
  C2S_UpdateSex_161_descriptor_ = file->message_type(87);
  static const int C2S_UpdateSex_161_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateSex_161, sex_),
  };
  C2S_UpdateSex_161_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_UpdateSex_161_descriptor_,
      C2S_UpdateSex_161::default_instance_,
      C2S_UpdateSex_161_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_UpdateSex_161),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateSex_161, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateSex_161, _is_default_instance_));
  C2S_UpdateSuit_162_descriptor_ = file->message_type(88);
  static const int C2S_UpdateSuit_162_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateSuit_162, idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateSuit_162, itemids_),
  };
  C2S_UpdateSuit_162_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_UpdateSuit_162_descriptor_,
      C2S_UpdateSuit_162::default_instance_,
      C2S_UpdateSuit_162_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_UpdateSuit_162),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateSuit_162, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateSuit_162, _is_default_instance_));
  C2S_GetAllSuits_163_descriptor_ = file->message_type(89);
  static const int C2S_GetAllSuits_163_offsets_[1] = {
  };
  C2S_GetAllSuits_163_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_GetAllSuits_163_descriptor_,
      C2S_GetAllSuits_163::default_instance_,
      C2S_GetAllSuits_163_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_GetAllSuits_163),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_GetAllSuits_163, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_GetAllSuits_163, _is_default_instance_));
  S2C_GetAllSuits_163_descriptor_ = file->message_type(90);
  static const int S2C_GetAllSuits_163_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetAllSuits_163, selidx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetAllSuits_163, selidxf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetAllSuits_163, suit_),
  };
  S2C_GetAllSuits_163_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2C_GetAllSuits_163_descriptor_,
      S2C_GetAllSuits_163::default_instance_,
      S2C_GetAllSuits_163_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2C_GetAllSuits_163),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetAllSuits_163, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetAllSuits_163, _is_default_instance_));
  C2S_SelSuit_164_descriptor_ = file->message_type(91);
  static const int C2S_SelSuit_164_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_SelSuit_164, selidx_),
  };
  C2S_SelSuit_164_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_SelSuit_164_descriptor_,
      C2S_SelSuit_164::default_instance_,
      C2S_SelSuit_164_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_SelSuit_164),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_SelSuit_164, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_SelSuit_164, _is_default_instance_));
  MountClass_descriptor_ = file->message_type(92);
  static const int MountClass_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MountClass, mountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MountClass, mountuseskin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MountClass, thismountskins_),
  };
  MountClass_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MountClass_descriptor_,
      MountClass::default_instance_,
      MountClass_offsets_,
      -1,
      -1,
      -1,
      sizeof(MountClass),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MountClass, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MountClass, _is_default_instance_));
  C2S_GetAllUnlockMount_170_descriptor_ = file->message_type(93);
  static const int C2S_GetAllUnlockMount_170_offsets_[1] = {
  };
  C2S_GetAllUnlockMount_170_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_GetAllUnlockMount_170_descriptor_,
      C2S_GetAllUnlockMount_170::default_instance_,
      C2S_GetAllUnlockMount_170_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_GetAllUnlockMount_170),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_GetAllUnlockMount_170, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_GetAllUnlockMount_170, _is_default_instance_));
  S2C_GetAllUnlockMount_170_descriptor_ = file->message_type(94);
  static const int S2C_GetAllUnlockMount_170_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetAllUnlockMount_170, mountdata_),
  };
  S2C_GetAllUnlockMount_170_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2C_GetAllUnlockMount_170_descriptor_,
      S2C_GetAllUnlockMount_170::default_instance_,
      S2C_GetAllUnlockMount_170_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2C_GetAllUnlockMount_170),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetAllUnlockMount_170, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetAllUnlockMount_170, _is_default_instance_));
  C2S_UpdateMount_171_descriptor_ = file->message_type(95);
  static const int C2S_UpdateMount_171_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateMount_171, mountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateMount_171, useskinid_),
  };
  C2S_UpdateMount_171_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_UpdateMount_171_descriptor_,
      C2S_UpdateMount_171::default_instance_,
      C2S_UpdateMount_171_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_UpdateMount_171),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateMount_171, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateMount_171, _is_default_instance_));
  S2C_UpdateMount_171_descriptor_ = file->message_type(96);
  static const int S2C_UpdateMount_171_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_UpdateMount_171, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_UpdateMount_171, mountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_UpdateMount_171, useskinid_),
  };
  S2C_UpdateMount_171_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2C_UpdateMount_171_descriptor_,
      S2C_UpdateMount_171::default_instance_,
      S2C_UpdateMount_171_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2C_UpdateMount_171),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_UpdateMount_171, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_UpdateMount_171, _is_default_instance_));
  S2C_MountAddOneSkin_173_descriptor_ = file->message_type(97);
  static const int S2C_MountAddOneSkin_173_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_MountAddOneSkin_173, addoneskinid_),
  };
  S2C_MountAddOneSkin_173_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2C_MountAddOneSkin_173_descriptor_,
      S2C_MountAddOneSkin_173::default_instance_,
      S2C_MountAddOneSkin_173_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2C_MountAddOneSkin_173),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_MountAddOneSkin_173, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_MountAddOneSkin_173, _is_default_instance_));
  C2S_GetAllRune_180_descriptor_ = file->message_type(98);
  static const int C2S_GetAllRune_180_offsets_[1] = {
  };
  C2S_GetAllRune_180_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_GetAllRune_180_descriptor_,
      C2S_GetAllRune_180::default_instance_,
      C2S_GetAllRune_180_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_GetAllRune_180),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_GetAllRune_180, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_GetAllRune_180, _is_default_instance_));
  Rune_descriptor_ = file->message_type(99);
  static const int Rune_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rune, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rune, count_),
  };
  Rune_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Rune_descriptor_,
      Rune::default_instance_,
      Rune_offsets_,
      -1,
      -1,
      -1,
      sizeof(Rune),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rune, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rune, _is_default_instance_));
  S2C_GetAllRune_180_descriptor_ = file->message_type(100);
  static const int S2C_GetAllRune_180_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetAllRune_180, runelist_),
  };
  S2C_GetAllRune_180_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2C_GetAllRune_180_descriptor_,
      S2C_GetAllRune_180::default_instance_,
      S2C_GetAllRune_180_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2C_GetAllRune_180),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetAllRune_180, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetAllRune_180, _is_default_instance_));
  C2S_BuyRune_181_descriptor_ = file->message_type(101);
  static const int C2S_BuyRune_181_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_BuyRune_181, runeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_BuyRune_181, count_),
  };
  C2S_BuyRune_181_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_BuyRune_181_descriptor_,
      C2S_BuyRune_181::default_instance_,
      C2S_BuyRune_181_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_BuyRune_181),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_BuyRune_181, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_BuyRune_181, _is_default_instance_));
  C2S_DecomposeRune_182_descriptor_ = file->message_type(102);
  static const int C2S_DecomposeRune_182_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_DecomposeRune_182, runeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_DecomposeRune_182, count_),
  };
  C2S_DecomposeRune_182_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_DecomposeRune_182_descriptor_,
      C2S_DecomposeRune_182::default_instance_,
      C2S_DecomposeRune_182_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_DecomposeRune_182),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_DecomposeRune_182, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_DecomposeRune_182, _is_default_instance_));
  C2S_BatchDecomposeRune_183_descriptor_ = file->message_type(103);
  static const int C2S_BatchDecomposeRune_183_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_BatchDecomposeRune_183, qualitylist_),
  };
  C2S_BatchDecomposeRune_183_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_BatchDecomposeRune_183_descriptor_,
      C2S_BatchDecomposeRune_183::default_instance_,
      C2S_BatchDecomposeRune_183_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_BatchDecomposeRune_183),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_BatchDecomposeRune_183, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_BatchDecomposeRune_183, _is_default_instance_));
  C2S_BatchDecomposeRuneByItemId_184_descriptor_ = file->message_type(104);
  static const int C2S_BatchDecomposeRuneByItemId_184_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_BatchDecomposeRuneByItemId_184, itemidlist_),
  };
  C2S_BatchDecomposeRuneByItemId_184_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_BatchDecomposeRuneByItemId_184_descriptor_,
      C2S_BatchDecomposeRuneByItemId_184::default_instance_,
      C2S_BatchDecomposeRuneByItemId_184_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_BatchDecomposeRuneByItemId_184),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_BatchDecomposeRuneByItemId_184, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_BatchDecomposeRuneByItemId_184, _is_default_instance_));
  C2S_GetAllWeapon_190_descriptor_ = file->message_type(105);
  static const int C2S_GetAllWeapon_190_offsets_[1] = {
  };
  C2S_GetAllWeapon_190_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_GetAllWeapon_190_descriptor_,
      C2S_GetAllWeapon_190::default_instance_,
      C2S_GetAllWeapon_190_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_GetAllWeapon_190),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_GetAllWeapon_190, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_GetAllWeapon_190, _is_default_instance_));
  Weapon_descriptor_ = file->message_type(106);
  static const int Weapon_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Weapon, weaponid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Weapon, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Weapon, weigh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Weapon, runelist_),
  };
  Weapon_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Weapon_descriptor_,
      Weapon::default_instance_,
      Weapon_offsets_,
      -1,
      -1,
      -1,
      sizeof(Weapon),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Weapon, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Weapon, _is_default_instance_));
  S2C_GetAllWeapon_190_descriptor_ = file->message_type(107);
  static const int S2C_GetAllWeapon_190_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetAllWeapon_190, weaponlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetAllWeapon_190, wearweaponid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetAllWeapon_190, capacity_),
  };
  S2C_GetAllWeapon_190_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2C_GetAllWeapon_190_descriptor_,
      S2C_GetAllWeapon_190::default_instance_,
      S2C_GetAllWeapon_190_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2C_GetAllWeapon_190),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetAllWeapon_190, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_GetAllWeapon_190, _is_default_instance_));
  C2S_ActivateWeapon_191_descriptor_ = file->message_type(108);
  static const int C2S_ActivateWeapon_191_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_ActivateWeapon_191, weaponid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_ActivateWeapon_191, op_),
  };
  C2S_ActivateWeapon_191_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_ActivateWeapon_191_descriptor_,
      C2S_ActivateWeapon_191::default_instance_,
      C2S_ActivateWeapon_191_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_ActivateWeapon_191),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_ActivateWeapon_191, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_ActivateWeapon_191, _is_default_instance_));
  S2C_ActivateWeapon_191_descriptor_ = file->message_type(109);
  static const int S2C_ActivateWeapon_191_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_ActivateWeapon_191, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_ActivateWeapon_191, weaponitemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_ActivateWeapon_191, runelist_),
  };
  S2C_ActivateWeapon_191_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2C_ActivateWeapon_191_descriptor_,
      S2C_ActivateWeapon_191::default_instance_,
      S2C_ActivateWeapon_191_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2C_ActivateWeapon_191),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_ActivateWeapon_191, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_ActivateWeapon_191, _is_default_instance_));
  C2S_SellWeapon_192_descriptor_ = file->message_type(110);
  static const int C2S_SellWeapon_192_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_SellWeapon_192, weaponid_),
  };
  C2S_SellWeapon_192_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_SellWeapon_192_descriptor_,
      C2S_SellWeapon_192::default_instance_,
      C2S_SellWeapon_192_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_SellWeapon_192),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_SellWeapon_192, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_SellWeapon_192, _is_default_instance_));
  C2S_UpdateRune_193_descriptor_ = file->message_type(111);
  static const int C2S_UpdateRune_193_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateRune_193, weaponid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateRune_193, runelist_),
  };
  C2S_UpdateRune_193_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2S_UpdateRune_193_descriptor_,
      C2S_UpdateRune_193::default_instance_,
      C2S_UpdateRune_193_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2S_UpdateRune_193),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateRune_193, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_UpdateRune_193, _is_default_instance_));
  C2SFrameCommand_2000_descriptor_ = file->message_type(112);
  static const int C2SFrameCommand_2000_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFrameCommand_2000, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFrameCommand_2000, frameidx_),
  };
  C2SFrameCommand_2000_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SFrameCommand_2000_descriptor_,
      C2SFrameCommand_2000::default_instance_,
      C2SFrameCommand_2000_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SFrameCommand_2000),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFrameCommand_2000, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFrameCommand_2000, _is_default_instance_));
  S2CServerFrameUpdate_2001_descriptor_ = file->message_type(113);
  static const int S2CServerFrameUpdate_2001_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CServerFrameUpdate_2001, frameid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CServerFrameUpdate_2001, cmdlist_),
  };
  S2CServerFrameUpdate_2001_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CServerFrameUpdate_2001_descriptor_,
      S2CServerFrameUpdate_2001::default_instance_,
      S2CServerFrameUpdate_2001_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CServerFrameUpdate_2001),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CServerFrameUpdate_2001, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CServerFrameUpdate_2001, _is_default_instance_));
  C2SGetRepairFrameData_2002_descriptor_ = file->message_type(114);
  static const int C2SGetRepairFrameData_2002_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetRepairFrameData_2002, frameids_),
  };
  C2SGetRepairFrameData_2002_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetRepairFrameData_2002_descriptor_,
      C2SGetRepairFrameData_2002::default_instance_,
      C2SGetRepairFrameData_2002_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetRepairFrameData_2002),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetRepairFrameData_2002, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetRepairFrameData_2002, _is_default_instance_));
  S2CGetRepairFrameData_2002_descriptor_ = file->message_type(115);
  static const int S2CGetRepairFrameData_2002_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetRepairFrameData_2002, framedatalist_),
  };
  S2CGetRepairFrameData_2002_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetRepairFrameData_2002_descriptor_,
      S2CGetRepairFrameData_2002::default_instance_,
      S2CGetRepairFrameData_2002_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetRepairFrameData_2002),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetRepairFrameData_2002, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetRepairFrameData_2002, _is_default_instance_));
  C2SGetSyncCacheFrames_2003_descriptor_ = file->message_type(116);
  static const int C2SGetSyncCacheFrames_2003_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetSyncCacheFrames_2003, beginframeid_),
  };
  C2SGetSyncCacheFrames_2003_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetSyncCacheFrames_2003_descriptor_,
      C2SGetSyncCacheFrames_2003::default_instance_,
      C2SGetSyncCacheFrames_2003_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetSyncCacheFrames_2003),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetSyncCacheFrames_2003, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetSyncCacheFrames_2003, _is_default_instance_));
  S2CGetSyncCacheFrames_2003_descriptor_ = file->message_type(117);
  static const int S2CGetSyncCacheFrames_2003_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetSyncCacheFrames_2003, framedatalist_),
  };
  S2CGetSyncCacheFrames_2003_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetSyncCacheFrames_2003_descriptor_,
      S2CGetSyncCacheFrames_2003::default_instance_,
      S2CGetSyncCacheFrames_2003_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetSyncCacheFrames_2003),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetSyncCacheFrames_2003, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetSyncCacheFrames_2003, _is_default_instance_));
  C2SUDPReg_2004_descriptor_ = file->message_type(118);
  static const int C2SUDPReg_2004_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SUDPReg_2004, rid_),
  };
  C2SUDPReg_2004_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SUDPReg_2004_descriptor_,
      C2SUDPReg_2004::default_instance_,
      C2SUDPReg_2004_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SUDPReg_2004),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SUDPReg_2004, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SUDPReg_2004, _is_default_instance_));
  C2SVerifyFrameSync_2005_descriptor_ = file->message_type(119);
  static const int C2SVerifyFrameSync_2005_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVerifyFrameSync_2005, frameid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVerifyFrameSync_2005, verifydata_),
  };
  C2SVerifyFrameSync_2005_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SVerifyFrameSync_2005_descriptor_,
      C2SVerifyFrameSync_2005::default_instance_,
      C2SVerifyFrameSync_2005_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SVerifyFrameSync_2005),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVerifyFrameSync_2005, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SVerifyFrameSync_2005, _is_default_instance_));
  S2CVerifyFrameSyncFail_2005_descriptor_ = file->message_type(120);
  static const int S2CVerifyFrameSyncFail_2005_offsets_[1] = {
  };
  S2CVerifyFrameSyncFail_2005_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CVerifyFrameSyncFail_2005_descriptor_,
      S2CVerifyFrameSyncFail_2005::default_instance_,
      S2CVerifyFrameSyncFail_2005_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CVerifyFrameSyncFail_2005),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CVerifyFrameSyncFail_2005, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CVerifyFrameSyncFail_2005, _is_default_instance_));
  C2SStartMatch_210_descriptor_ = file->message_type(121);
  static const int C2SStartMatch_210_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SStartMatch_210, matchmode_),
  };
  C2SStartMatch_210_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SStartMatch_210_descriptor_,
      C2SStartMatch_210::default_instance_,
      C2SStartMatch_210_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SStartMatch_210),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SStartMatch_210, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SStartMatch_210, _is_default_instance_));
  S2CStartMatch_210_descriptor_ = file->message_type(122);
  static const int S2CStartMatch_210_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStartMatch_210, matchmode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStartMatch_210, matchtime_),
  };
  S2CStartMatch_210_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CStartMatch_210_descriptor_,
      S2CStartMatch_210::default_instance_,
      S2CStartMatch_210_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CStartMatch_210),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStartMatch_210, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStartMatch_210, _is_default_instance_));
  S2CMatchSucc_217_descriptor_ = file->message_type(123);
  static const int S2CMatchSucc_217_offsets_[1] = {
  };
  S2CMatchSucc_217_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CMatchSucc_217_descriptor_,
      S2CMatchSucc_217::default_instance_,
      S2CMatchSucc_217_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CMatchSucc_217),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMatchSucc_217, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMatchSucc_217, _is_default_instance_));
  C2SReadyMatch_218_descriptor_ = file->message_type(124);
  static const int C2SReadyMatch_218_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SReadyMatch_218, op_),
  };
  C2SReadyMatch_218_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SReadyMatch_218_descriptor_,
      C2SReadyMatch_218::default_instance_,
      C2SReadyMatch_218_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SReadyMatch_218),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SReadyMatch_218, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SReadyMatch_218, _is_default_instance_));
  S2CReadyMatch_218_descriptor_ = file->message_type(125);
  static const int S2CReadyMatch_218_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReadyMatch_218, rids_),
  };
  S2CReadyMatch_218_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CReadyMatch_218_descriptor_,
      S2CReadyMatch_218::default_instance_,
      S2CReadyMatch_218_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CReadyMatch_218),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReadyMatch_218, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReadyMatch_218, _is_default_instance_));
  S2CReadyMatch_219_descriptor_ = file->message_type(126);
  static const int S2CReadyMatch_219_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReadyMatch_219, tp_),
  };
  S2CReadyMatch_219_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CReadyMatch_219_descriptor_,
      S2CReadyMatch_219::default_instance_,
      S2CReadyMatch_219_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CReadyMatch_219),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReadyMatch_219, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CReadyMatch_219, _is_default_instance_));
  C2SCancelMatch_211_descriptor_ = file->message_type(127);
  static const int C2SCancelMatch_211_offsets_[1] = {
  };
  C2SCancelMatch_211_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SCancelMatch_211_descriptor_,
      C2SCancelMatch_211::default_instance_,
      C2SCancelMatch_211_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SCancelMatch_211),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCancelMatch_211, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCancelMatch_211, _is_default_instance_));
  S2CCancelMatch_211_descriptor_ = file->message_type(128);
  static const int S2CCancelMatch_211_offsets_[1] = {
  };
  S2CCancelMatch_211_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CCancelMatch_211_descriptor_,
      S2CCancelMatch_211::default_instance_,
      S2CCancelMatch_211_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CCancelMatch_211),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CCancelMatch_211, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CCancelMatch_211, _is_default_instance_));
  S2CMatchSucc_212_descriptor_ = file->message_type(129);
  static const int S2CMatchSucc_212_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMatchSucc_212, waitsec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMatchSucc_212, userlist_),
  };
  S2CMatchSucc_212_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CMatchSucc_212_descriptor_,
      S2CMatchSucc_212::default_instance_,
      S2CMatchSucc_212_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CMatchSucc_212),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMatchSucc_212, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMatchSucc_212, _is_default_instance_));
  StageBattleEnd_descriptor_ = file->message_type(130);
  static const int StageBattleEnd_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StageBattleEnd, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StageBattleEnd, stagestar_),
  };
  StageBattleEnd_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StageBattleEnd_descriptor_,
      StageBattleEnd::default_instance_,
      StageBattleEnd_offsets_,
      -1,
      -1,
      -1,
      sizeof(StageBattleEnd),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StageBattleEnd, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StageBattleEnd, _is_default_instance_));
  C2SMatchOver_213_descriptor_ = file->message_type(131);
  static const int C2SMatchOver_213_offsets_[1] = {
  };
  C2SMatchOver_213_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SMatchOver_213_descriptor_,
      C2SMatchOver_213::default_instance_,
      C2SMatchOver_213_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SMatchOver_213),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SMatchOver_213, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SMatchOver_213, _is_default_instance_));
  S2CMatchOver_213_descriptor_ = file->message_type(132);
  static const int S2CMatchOver_213_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMatchOver_213, overframeid_),
  };
  S2CMatchOver_213_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CMatchOver_213_descriptor_,
      S2CMatchOver_213::default_instance_,
      S2CMatchOver_213_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CMatchOver_213),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMatchOver_213, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CMatchOver_213, _is_default_instance_));
  C2SLeaveBatUI_214_descriptor_ = file->message_type(133);
  static const int C2SLeaveBatUI_214_offsets_[1] = {
  };
  C2SLeaveBatUI_214_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SLeaveBatUI_214_descriptor_,
      C2SLeaveBatUI_214::default_instance_,
      C2SLeaveBatUI_214_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SLeaveBatUI_214),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SLeaveBatUI_214, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SLeaveBatUI_214, _is_default_instance_));
  C2SRoomKick_215_descriptor_ = file->message_type(134);
  static const int C2SRoomKick_215_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRoomKick_215, rid_),
  };
  C2SRoomKick_215_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SRoomKick_215_descriptor_,
      C2SRoomKick_215::default_instance_,
      C2SRoomKick_215_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SRoomKick_215),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRoomKick_215, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRoomKick_215, _is_default_instance_));
  Msgbody216_descriptor_ = file->message_type(135);
  static const int Msgbody216_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msgbody216, rewardstr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msgbody216, matchmode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msgbody216, stagedatas_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msgbody216, win_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msgbody216, leftjudgement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msgbody216, rightjudgement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msgbody216, batdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msgbody216, leftscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msgbody216, rightscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msgbody216, battleseconds_),
  };
  Msgbody216_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Msgbody216_descriptor_,
      Msgbody216::default_instance_,
      Msgbody216_offsets_,
      -1,
      -1,
      -1,
      sizeof(Msgbody216),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msgbody216, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msgbody216, _is_default_instance_));
  C2STheBattleResult_216_descriptor_ = file->message_type(136);
  static const int C2STheBattleResult_216_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2STheBattleResult_216, win_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2STheBattleResult_216, batdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2STheBattleResult_216, leftjudgement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2STheBattleResult_216, rightjudgement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2STheBattleResult_216, leftscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2STheBattleResult_216, rightscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2STheBattleResult_216, battleseconds_),
  };
  C2STheBattleResult_216_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2STheBattleResult_216_descriptor_,
      C2STheBattleResult_216::default_instance_,
      C2STheBattleResult_216_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2STheBattleResult_216),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2STheBattleResult_216, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2STheBattleResult_216, _is_default_instance_));
  S2CTheBattleResult_216_descriptor_ = file->message_type(137);
  static const int S2CTheBattleResult_216_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CTheBattleResult_216, body_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CTheBattleResult_216, isexpmax_),
  };
  S2CTheBattleResult_216_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CTheBattleResult_216_descriptor_,
      S2CTheBattleResult_216::default_instance_,
      S2CTheBattleResult_216_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CTheBattleResult_216),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CTheBattleResult_216, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CTheBattleResult_216, _is_default_instance_));
  C2SBatRecordLst_220_descriptor_ = file->message_type(138);
  static const int C2SBatRecordLst_220_offsets_[1] = {
  };
  C2SBatRecordLst_220_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SBatRecordLst_220_descriptor_,
      C2SBatRecordLst_220::default_instance_,
      C2SBatRecordLst_220_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SBatRecordLst_220),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBatRecordLst_220, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBatRecordLst_220, _is_default_instance_));
  S2CBatRecordLst_220_descriptor_ = file->message_type(139);
  static const int S2CBatRecordLst_220_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBatRecordLst_220, batrecidlst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBatRecordLst_220, batrecidticklst_),
  };
  S2CBatRecordLst_220_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CBatRecordLst_220_descriptor_,
      S2CBatRecordLst_220::default_instance_,
      S2CBatRecordLst_220_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CBatRecordLst_220),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBatRecordLst_220, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBatRecordLst_220, _is_default_instance_));
  C2SBatRecord_221_descriptor_ = file->message_type(140);
  static const int C2SBatRecord_221_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBatRecord_221, batrecordid_),
  };
  C2SBatRecord_221_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SBatRecord_221_descriptor_,
      C2SBatRecord_221::default_instance_,
      C2SBatRecord_221_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SBatRecord_221),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBatRecord_221, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBatRecord_221, _is_default_instance_));
  S2CBatRecord_221_descriptor_ = file->message_type(141);
  static const int S2CBatRecord_221_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBatRecord_221, batrecordid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBatRecord_221, tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBatRecord_221, randomseed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBatRecord_221, userlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBatRecord_221, framedatalist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBatRecord_221, badge1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBatRecord_221, badge2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBatRecord_221, sceneid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBatRecord_221, cfgstring_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBatRecord_221, body_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBatRecord_221, giveuprids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBatRecord_221, svrframedelta_),
  };
  S2CBatRecord_221_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CBatRecord_221_descriptor_,
      S2CBatRecord_221::default_instance_,
      S2CBatRecord_221_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CBatRecord_221),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBatRecord_221, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBatRecord_221, _is_default_instance_));
  C2SSingleBattleResult_222_descriptor_ = file->message_type(142);
  static const int C2SSingleBattleResult_222_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSingleBattleResult_222, ltparam_),
  };
  C2SSingleBattleResult_222_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SSingleBattleResult_222_descriptor_,
      C2SSingleBattleResult_222::default_instance_,
      C2SSingleBattleResult_222_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SSingleBattleResult_222),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSingleBattleResult_222, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSingleBattleResult_222, _is_default_instance_));
  C2SGetMatchUserNum_223_descriptor_ = file->message_type(143);
  static const int C2SGetMatchUserNum_223_offsets_[1] = {
  };
  C2SGetMatchUserNum_223_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetMatchUserNum_223_descriptor_,
      C2SGetMatchUserNum_223::default_instance_,
      C2SGetMatchUserNum_223_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetMatchUserNum_223),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetMatchUserNum_223, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetMatchUserNum_223, _is_default_instance_));
  S2CGetMatchUserNum_223_descriptor_ = file->message_type(144);
  static const int S2CGetMatchUserNum_223_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetMatchUserNum_223, num_),
  };
  S2CGetMatchUserNum_223_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetMatchUserNum_223_descriptor_,
      S2CGetMatchUserNum_223::default_instance_,
      S2CGetMatchUserNum_223_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetMatchUserNum_223),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetMatchUserNum_223, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetMatchUserNum_223, _is_default_instance_));
  C2SBroadcast_250_descriptor_ = file->message_type(145);
  static const int C2SBroadcast_250_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBroadcast_250, content_),
  };
  C2SBroadcast_250_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SBroadcast_250_descriptor_,
      C2SBroadcast_250::default_instance_,
      C2SBroadcast_250_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SBroadcast_250),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBroadcast_250, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SBroadcast_250, _is_default_instance_));
  S2CBroadcast_250_descriptor_ = file->message_type(146);
  static const int S2CBroadcast_250_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBroadcast_250, content_),
  };
  S2CBroadcast_250_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CBroadcast_250_descriptor_,
      S2CBroadcast_250::default_instance_,
      S2CBroadcast_250_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CBroadcast_250),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBroadcast_250, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBroadcast_250, _is_default_instance_));
  S2CBroadcastProp_251_descriptor_ = file->message_type(147);
  static const int S2CBroadcastProp_251_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBroadcastProp_251, idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBroadcastProp_251, val_),
  };
  S2CBroadcastProp_251_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CBroadcastProp_251_descriptor_,
      S2CBroadcastProp_251::default_instance_,
      S2CBroadcastProp_251_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CBroadcastProp_251),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBroadcastProp_251, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBroadcastProp_251, _is_default_instance_));
  C2SChatContent_252_descriptor_ = file->message_type(148);
  static const int C2SChatContent_252_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SChatContent_252, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SChatContent_252, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SChatContent_252, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SChatContent_252, param_),
  };
  C2SChatContent_252_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SChatContent_252_descriptor_,
      C2SChatContent_252::default_instance_,
      C2SChatContent_252_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SChatContent_252),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SChatContent_252, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SChatContent_252, _is_default_instance_));
  S2CChatContent_252_descriptor_ = file->message_type(149);
  static const int S2CChatContent_252_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CChatContent_252, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CChatContent_252, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CChatContent_252, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CChatContent_252, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CChatContent_252, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CChatContent_252, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CChatContent_252, star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CChatContent_252, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CChatContent_252, mountid_),
  };
  S2CChatContent_252_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CChatContent_252_descriptor_,
      S2CChatContent_252::default_instance_,
      S2CChatContent_252_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CChatContent_252),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CChatContent_252, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CChatContent_252, _is_default_instance_));
  MailGift_descriptor_ = file->message_type(150);
  static const int MailGift_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailGift, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailGift, count_),
  };
  MailGift_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MailGift_descriptor_,
      MailGift::default_instance_,
      MailGift_offsets_,
      -1,
      -1,
      -1,
      sizeof(MailGift),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailGift, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailGift, _is_default_instance_));
  Mail_descriptor_ = file->message_type(151);
  static const int Mail_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, sendtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, giftlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, isread_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, isreceived_),
  };
  Mail_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Mail_descriptor_,
      Mail::default_instance_,
      Mail_offsets_,
      -1,
      -1,
      -1,
      sizeof(Mail),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mail, _is_default_instance_));
  C2SGetMailList_253_descriptor_ = file->message_type(152);
  static const int C2SGetMailList_253_offsets_[1] = {
  };
  C2SGetMailList_253_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetMailList_253_descriptor_,
      C2SGetMailList_253::default_instance_,
      C2SGetMailList_253_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetMailList_253),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetMailList_253, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetMailList_253, _is_default_instance_));
  S2CGetMailList_253_descriptor_ = file->message_type(153);
  static const int S2CGetMailList_253_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetMailList_253, maillist_),
  };
  S2CGetMailList_253_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetMailList_253_descriptor_,
      S2CGetMailList_253::default_instance_,
      S2CGetMailList_253_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetMailList_253),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetMailList_253, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetMailList_253, _is_default_instance_));
  C2SReadMail_254_descriptor_ = file->message_type(154);
  static const int C2SReadMail_254_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SReadMail_254, id_),
  };
  C2SReadMail_254_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SReadMail_254_descriptor_,
      C2SReadMail_254::default_instance_,
      C2SReadMail_254_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SReadMail_254),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SReadMail_254, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SReadMail_254, _is_default_instance_));
  C2SReceiveGift_255_descriptor_ = file->message_type(155);
  static const int C2SReceiveGift_255_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SReceiveGift_255, id_),
  };
  C2SReceiveGift_255_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SReceiveGift_255_descriptor_,
      C2SReceiveGift_255::default_instance_,
      C2SReceiveGift_255_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SReceiveGift_255),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SReceiveGift_255, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SReceiveGift_255, _is_default_instance_));
  S2CSendMail_256_descriptor_ = file->message_type(156);
  static const int S2CSendMail_256_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSendMail_256, mailinfo_),
  };
  S2CSendMail_256_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CSendMail_256_descriptor_,
      S2CSendMail_256::default_instance_,
      S2CSendMail_256_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CSendMail_256),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSendMail_256, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSendMail_256, _is_default_instance_));
  C2SDeleteMail_257_descriptor_ = file->message_type(157);
  static const int C2SDeleteMail_257_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SDeleteMail_257, id_),
  };
  C2SDeleteMail_257_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SDeleteMail_257_descriptor_,
      C2SDeleteMail_257::default_instance_,
      C2SDeleteMail_257_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SDeleteMail_257),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SDeleteMail_257, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SDeleteMail_257, _is_default_instance_));
  S2CBroadcastLevel_258_descriptor_ = file->message_type(158);
  static const int S2CBroadcastLevel_258_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBroadcastLevel_258, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBroadcastLevel_258, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBroadcastLevel_258, rewardstr_),
  };
  S2CBroadcastLevel_258_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CBroadcastLevel_258_descriptor_,
      S2CBroadcastLevel_258::default_instance_,
      S2CBroadcastLevel_258_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CBroadcastLevel_258),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBroadcastLevel_258, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBroadcastLevel_258, _is_default_instance_));
  S2CImportantNotice_259_descriptor_ = file->message_type(159);
  static const int S2CImportantNotice_259_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CImportantNotice_259, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CImportantNotice_259, replaytimes_),
  };
  S2CImportantNotice_259_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CImportantNotice_259_descriptor_,
      S2CImportantNotice_259::default_instance_,
      S2CImportantNotice_259_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CImportantNotice_259),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CImportantNotice_259, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CImportantNotice_259, _is_default_instance_));
  C2SGetShopParams_260_descriptor_ = file->message_type(160);
  static const int C2SGetShopParams_260_offsets_[1] = {
  };
  C2SGetShopParams_260_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetShopParams_260_descriptor_,
      C2SGetShopParams_260::default_instance_,
      C2SGetShopParams_260_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetShopParams_260),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetShopParams_260, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetShopParams_260, _is_default_instance_));
  S2CGetShopParams_260_descriptor_ = file->message_type(161);
  static const int S2CGetShopParams_260_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetShopParams_260, maxstar_),
  };
  S2CGetShopParams_260_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetShopParams_260_descriptor_,
      S2CGetShopParams_260::default_instance_,
      S2CGetShopParams_260_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetShopParams_260),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetShopParams_260, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetShopParams_260, _is_default_instance_));
  C2SSearchUser_280_descriptor_ = file->message_type(162);
  static const int C2SSearchUser_280_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSearchUser_280, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSearchUser_280, name_),
  };
  C2SSearchUser_280_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SSearchUser_280_descriptor_,
      C2SSearchUser_280::default_instance_,
      C2SSearchUser_280_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SSearchUser_280),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSearchUser_280, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSearchUser_280, _is_default_instance_));
  UserProfile_descriptor_ = file->message_type(163);
  static const int UserProfile_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserProfile, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserProfile, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserProfile, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserProfile, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserProfile, star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserProfile, intimacy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserProfile, verifymsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserProfile, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserProfile, online_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserProfile, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserProfile, distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserProfile, mountid_),
  };
  UserProfile_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserProfile_descriptor_,
      UserProfile::default_instance_,
      UserProfile_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserProfile),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserProfile, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserProfile, _is_default_instance_));
  S2CSearchUser_280_descriptor_ = file->message_type(164);
  static const int S2CSearchUser_280_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSearchUser_280, user_),
  };
  S2CSearchUser_280_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CSearchUser_280_descriptor_,
      S2CSearchUser_280::default_instance_,
      S2CSearchUser_280_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CSearchUser_280),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSearchUser_280, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSearchUser_280, _is_default_instance_));
  C2SFriendRequest_281_descriptor_ = file->message_type(165);
  static const int C2SFriendRequest_281_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFriendRequest_281, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFriendRequest_281, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFriendRequest_281, verifymsg_),
  };
  C2SFriendRequest_281_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SFriendRequest_281_descriptor_,
      C2SFriendRequest_281::default_instance_,
      C2SFriendRequest_281_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SFriendRequest_281),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFriendRequest_281, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFriendRequest_281, _is_default_instance_));
  S2CFriendRequest_281_descriptor_ = file->message_type(166);
  static const int S2CFriendRequest_281_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CFriendRequest_281, user_),
  };
  S2CFriendRequest_281_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CFriendRequest_281_descriptor_,
      S2CFriendRequest_281::default_instance_,
      S2CFriendRequest_281_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CFriendRequest_281),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CFriendRequest_281, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CFriendRequest_281, _is_default_instance_));
  C2SGetFriendRequests_282_descriptor_ = file->message_type(167);
  static const int C2SGetFriendRequests_282_offsets_[1] = {
  };
  C2SGetFriendRequests_282_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetFriendRequests_282_descriptor_,
      C2SGetFriendRequests_282::default_instance_,
      C2SGetFriendRequests_282_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetFriendRequests_282),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetFriendRequests_282, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetFriendRequests_282, _is_default_instance_));
  S2CGetFriendRequests_282_descriptor_ = file->message_type(168);
  static const int S2CGetFriendRequests_282_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetFriendRequests_282, friendrequests_),
  };
  S2CGetFriendRequests_282_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetFriendRequests_282_descriptor_,
      S2CGetFriendRequests_282::default_instance_,
      S2CGetFriendRequests_282_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetFriendRequests_282),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetFriendRequests_282, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetFriendRequests_282, _is_default_instance_));
  C2SDealFriendRequest_283_descriptor_ = file->message_type(169);
  static const int C2SDealFriendRequest_283_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SDealFriendRequest_283, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SDealFriendRequest_283, op_),
  };
  C2SDealFriendRequest_283_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SDealFriendRequest_283_descriptor_,
      C2SDealFriendRequest_283::default_instance_,
      C2SDealFriendRequest_283_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SDealFriendRequest_283),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SDealFriendRequest_283, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SDealFriendRequest_283, _is_default_instance_));
  S2CAddNewFriend_284_descriptor_ = file->message_type(170);
  static const int S2CAddNewFriend_284_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAddNewFriend_284, user_),
  };
  S2CAddNewFriend_284_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CAddNewFriend_284_descriptor_,
      S2CAddNewFriend_284::default_instance_,
      S2CAddNewFriend_284_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CAddNewFriend_284),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAddNewFriend_284, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAddNewFriend_284, _is_default_instance_));
  C2SRemoveFriend_285_descriptor_ = file->message_type(171);
  static const int C2SRemoveFriend_285_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRemoveFriend_285, userid_),
  };
  C2SRemoveFriend_285_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SRemoveFriend_285_descriptor_,
      C2SRemoveFriend_285::default_instance_,
      C2SRemoveFriend_285_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SRemoveFriend_285),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRemoveFriend_285, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRemoveFriend_285, _is_default_instance_));
  C2SGetFriendList_286_descriptor_ = file->message_type(172);
  static const int C2SGetFriendList_286_offsets_[1] = {
  };
  C2SGetFriendList_286_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetFriendList_286_descriptor_,
      C2SGetFriendList_286::default_instance_,
      C2SGetFriendList_286_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetFriendList_286),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetFriendList_286, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetFriendList_286, _is_default_instance_));
  S2CGetFriendList_286_descriptor_ = file->message_type(173);
  static const int S2CGetFriendList_286_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetFriendList_286, friendlist_),
  };
  S2CGetFriendList_286_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetFriendList_286_descriptor_,
      S2CGetFriendList_286::default_instance_,
      S2CGetFriendList_286_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetFriendList_286),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetFriendList_286, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetFriendList_286, _is_default_instance_));
  C2SGetFriendAvaList_287_descriptor_ = file->message_type(174);
  static const int C2SGetFriendAvaList_287_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetFriendAvaList_287, num_),
  };
  C2SGetFriendAvaList_287_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetFriendAvaList_287_descriptor_,
      C2SGetFriendAvaList_287::default_instance_,
      C2SGetFriendAvaList_287_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetFriendAvaList_287),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetFriendAvaList_287, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetFriendAvaList_287, _is_default_instance_));
  S2CGetFriendAvaList_287_descriptor_ = file->message_type(175);
  static const int S2CGetFriendAvaList_287_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetFriendAvaList_287, userlist_),
  };
  S2CGetFriendAvaList_287_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetFriendAvaList_287_descriptor_,
      S2CGetFriendAvaList_287::default_instance_,
      S2CGetFriendAvaList_287_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetFriendAvaList_287),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetFriendAvaList_287, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetFriendAvaList_287, _is_default_instance_));
  C2SAddBlackUser_288_descriptor_ = file->message_type(176);
  static const int C2SAddBlackUser_288_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAddBlackUser_288, userid_),
  };
  C2SAddBlackUser_288_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SAddBlackUser_288_descriptor_,
      C2SAddBlackUser_288::default_instance_,
      C2SAddBlackUser_288_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SAddBlackUser_288),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAddBlackUser_288, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAddBlackUser_288, _is_default_instance_));
  C2SRemoveBlackUser_289_descriptor_ = file->message_type(177);
  static const int C2SRemoveBlackUser_289_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRemoveBlackUser_289, userid_),
  };
  C2SRemoveBlackUser_289_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SRemoveBlackUser_289_descriptor_,
      C2SRemoveBlackUser_289::default_instance_,
      C2SRemoveBlackUser_289_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SRemoveBlackUser_289),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRemoveBlackUser_289, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRemoveBlackUser_289, _is_default_instance_));
  C2SGetBlackList_290_descriptor_ = file->message_type(178);
  static const int C2SGetBlackList_290_offsets_[1] = {
  };
  C2SGetBlackList_290_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetBlackList_290_descriptor_,
      C2SGetBlackList_290::default_instance_,
      C2SGetBlackList_290_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetBlackList_290),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetBlackList_290, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetBlackList_290, _is_default_instance_));
  S2CGetBlackList_290_descriptor_ = file->message_type(179);
  static const int S2CGetBlackList_290_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetBlackList_290, blacklist_),
  };
  S2CGetBlackList_290_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetBlackList_290_descriptor_,
      S2CGetBlackList_290::default_instance_,
      S2CGetBlackList_290_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetBlackList_290),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetBlackList_290, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetBlackList_290, _is_default_instance_));
  S2CFriendOnlineStatus_291_descriptor_ = file->message_type(180);
  static const int S2CFriendOnlineStatus_291_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CFriendOnlineStatus_291, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CFriendOnlineStatus_291, online_),
  };
  S2CFriendOnlineStatus_291_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CFriendOnlineStatus_291_descriptor_,
      S2CFriendOnlineStatus_291::default_instance_,
      S2CFriendOnlineStatus_291_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CFriendOnlineStatus_291),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CFriendOnlineStatus_291, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CFriendOnlineStatus_291, _is_default_instance_));
  C2SGetRecentUserList_292_descriptor_ = file->message_type(181);
  static const int C2SGetRecentUserList_292_offsets_[1] = {
  };
  C2SGetRecentUserList_292_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetRecentUserList_292_descriptor_,
      C2SGetRecentUserList_292::default_instance_,
      C2SGetRecentUserList_292_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetRecentUserList_292),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetRecentUserList_292, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetRecentUserList_292, _is_default_instance_));
  S2CGetRecentUserList_292_descriptor_ = file->message_type(182);
  static const int S2CGetRecentUserList_292_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetRecentUserList_292, userlist_),
  };
  S2CGetRecentUserList_292_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetRecentUserList_292_descriptor_,
      S2CGetRecentUserList_292::default_instance_,
      S2CGetRecentUserList_292_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetRecentUserList_292),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetRecentUserList_292, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetRecentUserList_292, _is_default_instance_));
  C2SUploadCoordinates_293_descriptor_ = file->message_type(183);
  static const int C2SUploadCoordinates_293_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SUploadCoordinates_293, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SUploadCoordinates_293, latitude_),
  };
  C2SUploadCoordinates_293_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SUploadCoordinates_293_descriptor_,
      C2SUploadCoordinates_293::default_instance_,
      C2SUploadCoordinates_293_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SUploadCoordinates_293),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SUploadCoordinates_293, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SUploadCoordinates_293, _is_default_instance_));
  C2SGetUserNearby_294_descriptor_ = file->message_type(184);
  static const int C2SGetUserNearby_294_offsets_[1] = {
  };
  C2SGetUserNearby_294_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetUserNearby_294_descriptor_,
      C2SGetUserNearby_294::default_instance_,
      C2SGetUserNearby_294_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetUserNearby_294),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetUserNearby_294, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetUserNearby_294, _is_default_instance_));
  S2CGetUserNearby_294_descriptor_ = file->message_type(185);
  static const int S2CGetUserNearby_294_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetUserNearby_294, userlist_),
  };
  S2CGetUserNearby_294_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetUserNearby_294_descriptor_,
      S2CGetUserNearby_294::default_instance_,
      S2CGetUserNearby_294_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetUserNearby_294),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetUserNearby_294, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetUserNearby_294, _is_default_instance_));
  C2SRankScore_300_descriptor_ = file->message_type(186);
  static const int C2SRankScore_300_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRankScore_300, matchmode_),
  };
  C2SRankScore_300_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SRankScore_300_descriptor_,
      C2SRankScore_300::default_instance_,
      C2SRankScore_300_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SRankScore_300),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRankScore_300, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRankScore_300, _is_default_instance_));
  RankScore_descriptor_ = file->message_type(187);
  static const int RankScore_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankScore, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankScore, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankScore, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankScore, socretime_),
  };
  RankScore_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RankScore_descriptor_,
      RankScore::default_instance_,
      RankScore_offsets_,
      -1,
      -1,
      -1,
      sizeof(RankScore),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankScore, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankScore, _is_default_instance_));
  S2CRankScore_300_descriptor_ = file->message_type(188);
  static const int S2CRankScore_300_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRankScore_300, ranklist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRankScore_300, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRankScore_300, matchmode_),
  };
  S2CRankScore_300_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CRankScore_300_descriptor_,
      S2CRankScore_300::default_instance_,
      S2CRankScore_300_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CRankScore_300),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRankScore_300, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRankScore_300, _is_default_instance_));
  C2SGetShortMsg_311_descriptor_ = file->message_type(189);
  static const int C2SGetShortMsg_311_offsets_[1] = {
  };
  C2SGetShortMsg_311_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetShortMsg_311_descriptor_,
      C2SGetShortMsg_311::default_instance_,
      C2SGetShortMsg_311_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetShortMsg_311),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetShortMsg_311, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetShortMsg_311, _is_default_instance_));
  S2CGetShortMsg_311_descriptor_ = file->message_type(190);
  static const int S2CGetShortMsg_311_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetShortMsg_311, msglist_),
  };
  S2CGetShortMsg_311_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetShortMsg_311_descriptor_,
      S2CGetShortMsg_311::default_instance_,
      S2CGetShortMsg_311_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetShortMsg_311),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetShortMsg_311, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetShortMsg_311, _is_default_instance_));
  C2SUpdateShortMsg_312_descriptor_ = file->message_type(191);
  static const int C2SUpdateShortMsg_312_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SUpdateShortMsg_312, msglist_),
  };
  C2SUpdateShortMsg_312_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SUpdateShortMsg_312_descriptor_,
      C2SUpdateShortMsg_312::default_instance_,
      C2SUpdateShortMsg_312_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SUpdateShortMsg_312),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SUpdateShortMsg_312, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SUpdateShortMsg_312, _is_default_instance_));
  C2SGetOneResumeMsg_313_descriptor_ = file->message_type(192);
  static const int C2SGetOneResumeMsg_313_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetOneResumeMsg_313, userid_),
  };
  C2SGetOneResumeMsg_313_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetOneResumeMsg_313_descriptor_,
      C2SGetOneResumeMsg_313::default_instance_,
      C2SGetOneResumeMsg_313_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetOneResumeMsg_313),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetOneResumeMsg_313, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetOneResumeMsg_313, _is_default_instance_));
  CharResultRecord_descriptor_ = file->message_type(193);
  static const int CharResultRecord_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharResultRecord, mountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharResultRecord, fightnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharResultRecord, winnum_),
  };
  CharResultRecord_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CharResultRecord_descriptor_,
      CharResultRecord::default_instance_,
      CharResultRecord_offsets_,
      -1,
      -1,
      -1,
      sizeof(CharResultRecord),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharResultRecord, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharResultRecord, _is_default_instance_));
  S2CGetOneResumeMsg_313_descriptor_ = file->message_type(194);
  static const int S2CGetOneResumeMsg_313_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetOneResumeMsg_313, stagestar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetOneResumeMsg_313, mountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetOneResumeMsg_313, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetOneResumeMsg_313, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetOneResumeMsg_313, teamname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetOneResumeMsg_313, selfintroduce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetOneResumeMsg_313, ridercount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetOneResumeMsg_313, battlecount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetOneResumeMsg_313, clothescount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetOneResumeMsg_313, mvpcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetOneResumeMsg_313, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetOneResumeMsg_313, batdatas_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetOneResumeMsg_313, seasoninfos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetOneResumeMsg_313, chardata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetOneResumeMsg_313, location_),
  };
  S2CGetOneResumeMsg_313_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetOneResumeMsg_313_descriptor_,
      S2CGetOneResumeMsg_313::default_instance_,
      S2CGetOneResumeMsg_313_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetOneResumeMsg_313),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetOneResumeMsg_313, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetOneResumeMsg_313, _is_default_instance_));
  C2SChangeName_314_descriptor_ = file->message_type(195);
  static const int C2SChangeName_314_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SChangeName_314, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SChangeName_314, selfintroduce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SChangeName_314, location_),
  };
  C2SChangeName_314_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SChangeName_314_descriptor_,
      C2SChangeName_314::default_instance_,
      C2SChangeName_314_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SChangeName_314),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SChangeName_314, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SChangeName_314, _is_default_instance_));
  SeasonInfo_descriptor_ = file->message_type(196);
  static const int SeasonInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeasonInfo, sid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeasonInfo, seasonname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeasonInfo, starttick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeasonInfo, endtick_),
  };
  SeasonInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SeasonInfo_descriptor_,
      SeasonInfo::default_instance_,
      SeasonInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(SeasonInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeasonInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeasonInfo, _is_default_instance_));
  S2CStageSeasonStart_320_descriptor_ = file->message_type(197);
  static const int S2CStageSeasonStart_320_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStageSeasonStart_320, info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStageSeasonStart_320, showinh_),
  };
  S2CStageSeasonStart_320_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CStageSeasonStart_320_descriptor_,
      S2CStageSeasonStart_320::default_instance_,
      S2CStageSeasonStart_320_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CStageSeasonStart_320),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStageSeasonStart_320, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStageSeasonStart_320, _is_default_instance_));
  S2CStageSeasonOver_321_descriptor_ = file->message_type(198);
  static const int S2CStageSeasonOver_321_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStageSeasonOver_321, info_),
  };
  S2CStageSeasonOver_321_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CStageSeasonOver_321_descriptor_,
      S2CStageSeasonOver_321::default_instance_,
      S2CStageSeasonOver_321_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CStageSeasonOver_321),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStageSeasonOver_321, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStageSeasonOver_321, _is_default_instance_));
  S2CStageSeasonEnd_322_descriptor_ = file->message_type(199);
  static const int S2CStageSeasonEnd_322_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStageSeasonEnd_322, rewardstr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStageSeasonEnd_322, info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStageSeasonEnd_322, maxstar_),
  };
  S2CStageSeasonEnd_322_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CStageSeasonEnd_322_descriptor_,
      S2CStageSeasonEnd_322::default_instance_,
      S2CStageSeasonEnd_322_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CStageSeasonEnd_322),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStageSeasonEnd_322, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStageSeasonEnd_322, _is_default_instance_));
  S2CGetSeasonInfo_323_descriptor_ = file->message_type(200);
  static const int S2CGetSeasonInfo_323_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetSeasonInfo_323, info_),
  };
  S2CGetSeasonInfo_323_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetSeasonInfo_323_descriptor_,
      S2CGetSeasonInfo_323::default_instance_,
      S2CGetSeasonInfo_323_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetSeasonInfo_323),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetSeasonInfo_323, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetSeasonInfo_323, _is_default_instance_));
  C2SGetSeasonInfo_323_descriptor_ = file->message_type(201);
  static const int C2SGetSeasonInfo_323_offsets_[1] = {
  };
  C2SGetSeasonInfo_323_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetSeasonInfo_323_descriptor_,
      C2SGetSeasonInfo_323::default_instance_,
      C2SGetSeasonInfo_323_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetSeasonInfo_323),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetSeasonInfo_323, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetSeasonInfo_323, _is_default_instance_));
  OneContestInfo_descriptor_ = file->message_type(202);
  static const int OneContestInfo_offsets_[25] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, contestid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, showcontest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, startfight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, contestlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, contestname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, contestdescribe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, newteamsinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, maxteamnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, setloopfirst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, setloopbotimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, setfinalbotimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, deathfightbotimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, seteveryfightwaittimefixed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, createplayername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, maybecontestfightmintues1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, maybecontestfightmintues2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, createplayeruid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, settingcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, loopcirclewaittimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, loopfightwaittimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, finalordeathcirclewaittimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, finalordeathfightwaittimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, giveuprids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, sinfo_),
  };
  OneContestInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OneContestInfo_descriptor_,
      OneContestInfo::default_instance_,
      OneContestInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(OneContestInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestInfo, _is_default_instance_));
  OneContestSimpleInfo_descriptor_ = file->message_type(203);
  static const int OneContestSimpleInfo_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, contestid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, showcontest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, contestlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, contestname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, contestdescribe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, createplayername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, createplayeruid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, setloopfirst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, signplayernum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, maybecontestfightmintues1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, maybecontestfightmintues2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, loopbotime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, finalbotimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, deathfightbotimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, seteveryfightwaittimefixed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, conteststate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, openteamnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, needpassword_),
  };
  OneContestSimpleInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OneContestSimpleInfo_descriptor_,
      OneContestSimpleInfo::default_instance_,
      OneContestSimpleInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(OneContestSimpleInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneContestSimpleInfo, _is_default_instance_));
  C2SCreateContest_400_descriptor_ = file->message_type(204);
  static const int C2SCreateContest_400_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCreateContest_400, contestlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCreateContest_400, showcontest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCreateContest_400, issecret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCreateContest_400, contestname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCreateContest_400, contestdescribe_),
  };
  C2SCreateContest_400_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SCreateContest_400_descriptor_,
      C2SCreateContest_400::default_instance_,
      C2SCreateContest_400_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SCreateContest_400),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCreateContest_400, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCreateContest_400, _is_default_instance_));
  S2CBroadContest_400_descriptor_ = file->message_type(205);
  static const int S2CBroadContest_400_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBroadContest_400, thecontestinfo_),
  };
  S2CBroadContest_400_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CBroadContest_400_descriptor_,
      S2CBroadContest_400::default_instance_,
      S2CBroadContest_400_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CBroadContest_400),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBroadContest_400, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CBroadContest_400, _is_default_instance_));
  C2SGetContestList_401_descriptor_ = file->message_type(206);
  static const int C2SGetContestList_401_offsets_[1] = {
  };
  C2SGetContestList_401_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetContestList_401_descriptor_,
      C2SGetContestList_401::default_instance_,
      C2SGetContestList_401_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetContestList_401),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetContestList_401, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetContestList_401, _is_default_instance_));
  S2CGetContestList_401_descriptor_ = file->message_type(207);
  static const int S2CGetContestList_401_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestList_401, thecontestinfolist_),
  };
  S2CGetContestList_401_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetContestList_401_descriptor_,
      S2CGetContestList_401::default_instance_,
      S2CGetContestList_401_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetContestList_401),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestList_401, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestList_401, _is_default_instance_));
  C2SSignContest_402_descriptor_ = file->message_type(208);
  static const int C2SSignContest_402_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSignContest_402, contestid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSignContest_402, passwordstr_),
  };
  C2SSignContest_402_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SSignContest_402_descriptor_,
      C2SSignContest_402::default_instance_,
      C2SSignContest_402_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SSignContest_402),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSignContest_402, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSignContest_402, _is_default_instance_));
  S2CSignContest_402_descriptor_ = file->message_type(209);
  static const int S2CSignContest_402_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSignContest_402, signcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSignContest_402, thecontestinfo_),
  };
  S2CSignContest_402_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CSignContest_402_descriptor_,
      S2CSignContest_402::default_instance_,
      S2CSignContest_402_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CSignContest_402),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSignContest_402, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSignContest_402, _is_default_instance_));
  S2CSignContestToOther_413_descriptor_ = file->message_type(210);
  static const int S2CSignContestToOther_413_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSignContestToOther_413, contestteamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSignContestToOther_413, addplayer_),
  };
  S2CSignContestToOther_413_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CSignContestToOther_413_descriptor_,
      S2CSignContestToOther_413::default_instance_,
      S2CSignContestToOther_413_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CSignContestToOther_413),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSignContestToOther_413, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSignContestToOther_413, _is_default_instance_));
  C2SCloseContestTeams_403_descriptor_ = file->message_type(211);
  static const int C2SCloseContestTeams_403_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCloseContestTeams_403, closeid_),
  };
  C2SCloseContestTeams_403_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SCloseContestTeams_403_descriptor_,
      C2SCloseContestTeams_403::default_instance_,
      C2SCloseContestTeams_403_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SCloseContestTeams_403),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCloseContestTeams_403, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SCloseContestTeams_403, _is_default_instance_));
  S2CCloseContestTeams_403_descriptor_ = file->message_type(212);
  static const int S2CCloseContestTeams_403_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CCloseContestTeams_403, closeid_),
  };
  S2CCloseContestTeams_403_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CCloseContestTeams_403_descriptor_,
      S2CCloseContestTeams_403::default_instance_,
      S2CCloseContestTeams_403_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CCloseContestTeams_403),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CCloseContestTeams_403, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CCloseContestTeams_403, _is_default_instance_));
  C2SStartContest_404_descriptor_ = file->message_type(213);
  static const int C2SStartContest_404_offsets_[1] = {
  };
  C2SStartContest_404_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SStartContest_404_descriptor_,
      C2SStartContest_404::default_instance_,
      C2SStartContest_404_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SStartContest_404),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SStartContest_404, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SStartContest_404, _is_default_instance_));
  S2CStartContest_404_descriptor_ = file->message_type(214);
  static const int S2CStartContest_404_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStartContest_404, teaminfo_),
  };
  S2CStartContest_404_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CStartContest_404_descriptor_,
      S2CStartContest_404::default_instance_,
      S2CStartContest_404_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CStartContest_404),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStartContest_404, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CStartContest_404, _is_default_instance_));
  C2SGetContesInfo_405_descriptor_ = file->message_type(215);
  static const int C2SGetContesInfo_405_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetContesInfo_405, contestid_),
  };
  C2SGetContesInfo_405_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetContesInfo_405_descriptor_,
      C2SGetContesInfo_405::default_instance_,
      C2SGetContesInfo_405_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetContesInfo_405),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetContesInfo_405, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetContesInfo_405, _is_default_instance_));
  S2CGetContesInfo_405_descriptor_ = file->message_type(216);
  static const int S2CGetContesInfo_405_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContesInfo_405, contestinfo_),
  };
  S2CGetContesInfo_405_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetContesInfo_405_descriptor_,
      S2CGetContesInfo_405::default_instance_,
      S2CGetContesInfo_405_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetContesInfo_405),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContesInfo_405, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContesInfo_405, _is_default_instance_));
  C2SManagerContest_406_descriptor_ = file->message_type(217);
  static const int C2SManagerContest_406_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SManagerContest_406, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SManagerContest_406, setloopfirst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SManagerContest_406, setloopbotimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SManagerContest_406, loopcirclewaittimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SManagerContest_406, loopfightwaittimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SManagerContest_406, setfinalbotimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SManagerContest_406, setdeathbotimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SManagerContest_406, finalordeathcirclewaittimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SManagerContest_406, finalordeathfightwaittimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SManagerContest_406, seteveryfightwaittimefixed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SManagerContest_406, settingcode_),
  };
  C2SManagerContest_406_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SManagerContest_406_descriptor_,
      C2SManagerContest_406::default_instance_,
      C2SManagerContest_406_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SManagerContest_406),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SManagerContest_406, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SManagerContest_406, _is_default_instance_));
  S2CManagerContest_406_descriptor_ = file->message_type(218);
  static const int S2CManagerContest_406_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CManagerContest_406, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CManagerContest_406, setloopfirst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CManagerContest_406, setloopbotimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CManagerContest_406, loopcirclewaittimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CManagerContest_406, loopfightwaittimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CManagerContest_406, setfinalbotimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CManagerContest_406, setdeathbotimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CManagerContest_406, finalordeathcirclewaittimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CManagerContest_406, finalordeathfightwaittimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CManagerContest_406, seteveryfightwaittimefixed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CManagerContest_406, settingcode_),
  };
  S2CManagerContest_406_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CManagerContest_406_descriptor_,
      S2CManagerContest_406::default_instance_,
      S2CManagerContest_406_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CManagerContest_406),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CManagerContest_406, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CManagerContest_406, _is_default_instance_));
  OnePlayerInfo_descriptor_ = file->message_type(219);
  static const int OnePlayerInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePlayerInfo, teamsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePlayerInfo, playeruid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePlayerInfo, playername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePlayerInfo, mountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePlayerInfo, iscaptain_),
  };
  OnePlayerInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OnePlayerInfo_descriptor_,
      OnePlayerInfo::default_instance_,
      OnePlayerInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(OnePlayerInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePlayerInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePlayerInfo, _is_default_instance_));
  TeamsInfo_descriptor_ = file->message_type(220);
  static const int TeamsInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamsInfo, contestteamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamsInfo, isopen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamsInfo, playerlist_),
  };
  TeamsInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TeamsInfo_descriptor_,
      TeamsInfo::default_instance_,
      TeamsInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(TeamsInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamsInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamsInfo, _is_default_instance_));
  TeamsSimpleInfo_descriptor_ = file->message_type(221);
  static const int TeamsSimpleInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamsSimpleInfo, teamsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamsSimpleInfo, teamname_),
  };
  TeamsSimpleInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TeamsSimpleInfo_descriptor_,
      TeamsSimpleInfo::default_instance_,
      TeamsSimpleInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(TeamsSimpleInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamsSimpleInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamsSimpleInfo, _is_default_instance_));
  C2SGetContestTeams_407_descriptor_ = file->message_type(222);
  static const int C2SGetContestTeams_407_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetContestTeams_407, contestid_),
  };
  C2SGetContestTeams_407_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetContestTeams_407_descriptor_,
      C2SGetContestTeams_407::default_instance_,
      C2SGetContestTeams_407_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetContestTeams_407),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetContestTeams_407, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetContestTeams_407, _is_default_instance_));
  S2CGetContestTeams_407_descriptor_ = file->message_type(223);
  static const int S2CGetContestTeams_407_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestTeams_407, infos_),
  };
  S2CGetContestTeams_407_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetContestTeams_407_descriptor_,
      S2CGetContestTeams_407::default_instance_,
      S2CGetContestTeams_407_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetContestTeams_407),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestTeams_407, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestTeams_407, _is_default_instance_));
  C2SEditorContesMembers_408_descriptor_ = file->message_type(224);
  static const int C2SEditorContesMembers_408_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SEditorContesMembers_408, newteamsinfo_),
  };
  C2SEditorContesMembers_408_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SEditorContesMembers_408_descriptor_,
      C2SEditorContesMembers_408::default_instance_,
      C2SEditorContesMembers_408_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SEditorContesMembers_408),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SEditorContesMembers_408, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SEditorContesMembers_408, _is_default_instance_));
  S2CEditorContesMembers_408_descriptor_ = file->message_type(225);
  static const int S2CEditorContesMembers_408_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEditorContesMembers_408, newteamsinfo_),
  };
  S2CEditorContesMembers_408_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CEditorContesMembers_408_descriptor_,
      S2CEditorContesMembers_408::default_instance_,
      S2CEditorContesMembers_408_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CEditorContesMembers_408),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEditorContesMembers_408, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CEditorContesMembers_408, _is_default_instance_));
  C2SQuitContest_409_descriptor_ = file->message_type(226);
  static const int C2SQuitContest_409_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SQuitContest_409, deleterids_),
  };
  C2SQuitContest_409_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SQuitContest_409_descriptor_,
      C2SQuitContest_409::default_instance_,
      C2SQuitContest_409_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SQuitContest_409),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SQuitContest_409, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SQuitContest_409, _is_default_instance_));
  S2CQuitContest_409_descriptor_ = file->message_type(227);
  static const int S2CQuitContest_409_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CQuitContest_409, quituids_),
  };
  S2CQuitContest_409_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CQuitContest_409_descriptor_,
      S2CQuitContest_409::default_instance_,
      S2CQuitContest_409_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CQuitContest_409),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CQuitContest_409, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CQuitContest_409, _is_default_instance_));
  C2SOpenContestTeam_410_descriptor_ = file->message_type(228);
  static const int C2SOpenContestTeam_410_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SOpenContestTeam_410, opencontestteamid_),
  };
  C2SOpenContestTeam_410_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SOpenContestTeam_410_descriptor_,
      C2SOpenContestTeam_410::default_instance_,
      C2SOpenContestTeam_410_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SOpenContestTeam_410),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SOpenContestTeam_410, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SOpenContestTeam_410, _is_default_instance_));
  S2COpenContestTeam_410_descriptor_ = file->message_type(229);
  static const int S2COpenContestTeam_410_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2COpenContestTeam_410, opencontestteamid_),
  };
  S2COpenContestTeam_410_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2COpenContestTeam_410_descriptor_,
      S2COpenContestTeam_410::default_instance_,
      S2COpenContestTeam_410_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2COpenContestTeam_410),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2COpenContestTeam_410, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2COpenContestTeam_410, _is_default_instance_));
  S2CContestStop_412_descriptor_ = file->message_type(230);
  static const int S2CContestStop_412_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CContestStop_412, clearcontestdataseconds_),
  };
  S2CContestStop_412_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CContestStop_412_descriptor_,
      S2CContestStop_412::default_instance_,
      S2CContestStop_412_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CContestStop_412),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CContestStop_412, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CContestStop_412, _is_default_instance_));
  AteamVsBteam_descriptor_ = file->message_type(231);
  static const int AteamVsBteam_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AteamVsBteam, leftteamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AteamVsBteam, rightteamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AteamVsBteam, leftteamwinnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AteamVsBteam, rightteamwinnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AteamVsBteam, winteamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AteamVsBteam, rankcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AteamVsBteam, isfighting_),
  };
  AteamVsBteam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AteamVsBteam_descriptor_,
      AteamVsBteam::default_instance_,
      AteamVsBteam_offsets_,
      -1,
      -1,
      -1,
      sizeof(AteamVsBteam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AteamVsBteam, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AteamVsBteam, _is_default_instance_));
  OutVsFight_descriptor_ = file->message_type(232);
  static const int OutVsFight_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OutVsFight, leftteamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OutVsFight, rightteamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OutVsFight, leftteamwinnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OutVsFight, rightteamwinnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OutVsFight, winteamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OutVsFight, fighttypecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OutVsFight, isfighting_),
  };
  OutVsFight_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OutVsFight_descriptor_,
      OutVsFight::default_instance_,
      OutVsFight_offsets_,
      -1,
      -1,
      -1,
      sizeof(OutVsFight),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OutVsFight, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OutVsFight, _is_default_instance_));
  TeamScoreInfo_descriptor_ = file->message_type(233);
  static const int TeamScoreInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamScoreInfo, teamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamScoreInfo, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamScoreInfo, winnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamScoreInfo, losenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamScoreInfo, battlekadscore_),
  };
  TeamScoreInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TeamScoreInfo_descriptor_,
      TeamScoreInfo::default_instance_,
      TeamScoreInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(TeamScoreInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamScoreInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamScoreInfo, _is_default_instance_));
  LoopFightInfo_descriptor_ = file->message_type(234);
  static const int LoopFightInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoopFightInfo, ateams_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoopFightInfo, bteams_),
  };
  LoopFightInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoopFightInfo_descriptor_,
      LoopFightInfo::default_instance_,
      LoopFightInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoopFightInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoopFightInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoopFightInfo, _is_default_instance_));
  C2SFightData_415_descriptor_ = file->message_type(235);
  static const int C2SFightData_415_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFightData_415, contestid_),
  };
  C2SFightData_415_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SFightData_415_descriptor_,
      C2SFightData_415::default_instance_,
      C2SFightData_415_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SFightData_415),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFightData_415, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SFightData_415, _is_default_instance_));
  S2CFightData_415_descriptor_ = file->message_type(236);
  static const int S2CFightData_415_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CFightData_415, loopfight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CFightData_415, teamscoredata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CFightData_415, rankfights_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CFightData_415, outfights_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CFightData_415, loopfightwinteamnum_),
  };
  S2CFightData_415_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CFightData_415_descriptor_,
      S2CFightData_415::default_instance_,
      S2CFightData_415_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CFightData_415),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CFightData_415, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CFightData_415, _is_default_instance_));
  C2SGetContestInfo_414_descriptor_ = file->message_type(237);
  static const int C2SGetContestInfo_414_offsets_[1] = {
  };
  C2SGetContestInfo_414_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetContestInfo_414_descriptor_,
      C2SGetContestInfo_414::default_instance_,
      C2SGetContestInfo_414_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetContestInfo_414),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetContestInfo_414, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetContestInfo_414, _is_default_instance_));
  S2CGetContestInfo_414_descriptor_ = file->message_type(238);
  static const int S2CGetContestInfo_414_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestInfo_414, contestinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestInfo_414, teaminfo_),
  };
  S2CGetContestInfo_414_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetContestInfo_414_descriptor_,
      S2CGetContestInfo_414::default_instance_,
      S2CGetContestInfo_414_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetContestInfo_414),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestInfo_414, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestInfo_414, _is_default_instance_));
  C2SSetEditorContest_417_descriptor_ = file->message_type(239);
  static const int C2SSetEditorContest_417_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSetEditorContest_417, begineditor_),
  };
  C2SSetEditorContest_417_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SSetEditorContest_417_descriptor_,
      C2SSetEditorContest_417::default_instance_,
      C2SSetEditorContest_417_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SSetEditorContest_417),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSetEditorContest_417, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSetEditorContest_417, _is_default_instance_));
  S2CGetContestFightBoInfo_418_descriptor_ = file->message_type(240);
  static const int S2CGetContestFightBoInfo_418_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestFightBoInfo_418, leftteamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestFightBoInfo_418, leftteambowin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestFightBoInfo_418, rightteamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestFightBoInfo_418, rightteambowin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestFightBoInfo_418, contestfighttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestFightBoInfo_418, contestfightnum_),
  };
  S2CGetContestFightBoInfo_418_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetContestFightBoInfo_418_descriptor_,
      S2CGetContestFightBoInfo_418::default_instance_,
      S2CGetContestFightBoInfo_418_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetContestFightBoInfo_418),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestFightBoInfo_418, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestFightBoInfo_418, _is_default_instance_));
  S2CGetContestFightResult_416_descriptor_ = file->message_type(241);
  static const int S2CGetContestFightResult_416_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestFightResult_416, isloopfight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestFightResult_416, outfightcode_),
  };
  S2CGetContestFightResult_416_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetContestFightResult_416_descriptor_,
      S2CGetContestFightResult_416::default_instance_,
      S2CGetContestFightResult_416_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetContestFightResult_416),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestFightResult_416, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetContestFightResult_416, _is_default_instance_));
  C2SContestRankInfo_420_descriptor_ = file->message_type(242);
  static const int C2SContestRankInfo_420_offsets_[1] = {
  };
  C2SContestRankInfo_420_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SContestRankInfo_420_descriptor_,
      C2SContestRankInfo_420::default_instance_,
      C2SContestRankInfo_420_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SContestRankInfo_420),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SContestRankInfo_420, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SContestRankInfo_420, _is_default_instance_));
  S2CContestRankInfo_420_descriptor_ = file->message_type(243);
  static const int S2CContestRankInfo_420_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CContestRankInfo_420, contestranks_),
  };
  S2CContestRankInfo_420_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CContestRankInfo_420_descriptor_,
      S2CContestRankInfo_420::default_instance_,
      S2CContestRankInfo_420_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CContestRankInfo_420),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CContestRankInfo_420, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CContestRankInfo_420, _is_default_instance_));
  C2SContestWaitSec_421_descriptor_ = file->message_type(244);
  static const int C2SContestWaitSec_421_offsets_[1] = {
  };
  C2SContestWaitSec_421_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SContestWaitSec_421_descriptor_,
      C2SContestWaitSec_421::default_instance_,
      C2SContestWaitSec_421_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SContestWaitSec_421),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SContestWaitSec_421, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SContestWaitSec_421, _is_default_instance_));
  S2CContestWaitSec_421_descriptor_ = file->message_type(245);
  static const int S2CContestWaitSec_421_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CContestWaitSec_421, sec_),
  };
  S2CContestWaitSec_421_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CContestWaitSec_421_descriptor_,
      S2CContestWaitSec_421::default_instance_,
      S2CContestWaitSec_421_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CContestWaitSec_421),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CContestWaitSec_421, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CContestWaitSec_421, _is_default_instance_));
  C2SContestDissmis_422_descriptor_ = file->message_type(246);
  static const int C2SContestDissmis_422_offsets_[1] = {
  };
  C2SContestDissmis_422_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SContestDissmis_422_descriptor_,
      C2SContestDissmis_422::default_instance_,
      C2SContestDissmis_422_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SContestDissmis_422),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SContestDissmis_422, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SContestDissmis_422, _is_default_instance_));
  S2CContestDissmis_422_descriptor_ = file->message_type(247);
  static const int S2CContestDissmis_422_offsets_[1] = {
  };
  S2CContestDissmis_422_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CContestDissmis_422_descriptor_,
      S2CContestDissmis_422::default_instance_,
      S2CContestDissmis_422_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CContestDissmis_422),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CContestDissmis_422, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CContestDissmis_422, _is_default_instance_));
  C2SWatchContestBat_423_descriptor_ = file->message_type(248);
  static const int C2SWatchContestBat_423_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SWatchContestBat_423, leftteamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SWatchContestBat_423, contestid_),
  };
  C2SWatchContestBat_423_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SWatchContestBat_423_descriptor_,
      C2SWatchContestBat_423::default_instance_,
      C2SWatchContestBat_423_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SWatchContestBat_423),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SWatchContestBat_423, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SWatchContestBat_423, _is_default_instance_));
  S2CContestReward_424_descriptor_ = file->message_type(249);
  static const int S2CContestReward_424_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CContestReward_424, rewardstr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CContestReward_424, ranking_),
  };
  S2CContestReward_424_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CContestReward_424_descriptor_,
      S2CContestReward_424::default_instance_,
      S2CContestReward_424_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CContestReward_424),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CContestReward_424, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CContestReward_424, _is_default_instance_));
  S2CFreshenFightData_425_descriptor_ = file->message_type(250);
  static const int S2CFreshenFightData_425_offsets_[1] = {
  };
  S2CFreshenFightData_425_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CFreshenFightData_425_descriptor_,
      S2CFreshenFightData_425::default_instance_,
      S2CFreshenFightData_425_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CFreshenFightData_425),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CFreshenFightData_425, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CFreshenFightData_425, _is_default_instance_));
  C2SGiveup_426_descriptor_ = file->message_type(251);
  static const int C2SGiveup_426_offsets_[1] = {
  };
  C2SGiveup_426_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGiveup_426_descriptor_,
      C2SGiveup_426::default_instance_,
      C2SGiveup_426_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGiveup_426),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGiveup_426, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGiveup_426, _is_default_instance_));
  S2CGiveup_426_descriptor_ = file->message_type(252);
  static const int S2CGiveup_426_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGiveup_426, rid_),
  };
  S2CGiveup_426_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGiveup_426_descriptor_,
      S2CGiveup_426::default_instance_,
      S2CGiveup_426_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGiveup_426),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGiveup_426, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGiveup_426, _is_default_instance_));
  C2SSetSetPassword_427_descriptor_ = file->message_type(253);
  static const int C2SSetSetPassword_427_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSetSetPassword_427, password_),
  };
  C2SSetSetPassword_427_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SSetSetPassword_427_descriptor_,
      C2SSetSetPassword_427::default_instance_,
      C2SSetSetPassword_427_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SSetSetPassword_427),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSetSetPassword_427, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSetSetPassword_427, _is_default_instance_));
  C2SGetSignInActivaty_500_descriptor_ = file->message_type(254);
  static const int C2SGetSignInActivaty_500_offsets_[1] = {
  };
  C2SGetSignInActivaty_500_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetSignInActivaty_500_descriptor_,
      C2SGetSignInActivaty_500::default_instance_,
      C2SGetSignInActivaty_500_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetSignInActivaty_500),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetSignInActivaty_500, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetSignInActivaty_500, _is_default_instance_));
  S2CGetSignInActivaty_500_descriptor_ = file->message_type(255);
  static const int S2CGetSignInActivaty_500_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetSignInActivaty_500, begintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetSignInActivaty_500, endtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetSignInActivaty_500, itemlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetSignInActivaty_500, signedidx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetSignInActivaty_500, remedycost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetSignInActivaty_500, remedytimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetSignInActivaty_500, signedtoday_),
  };
  S2CGetSignInActivaty_500_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetSignInActivaty_500_descriptor_,
      S2CGetSignInActivaty_500::default_instance_,
      S2CGetSignInActivaty_500_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetSignInActivaty_500),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetSignInActivaty_500, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetSignInActivaty_500, _is_default_instance_));
  C2SSignInActivaty_501_descriptor_ = file->message_type(256);
  static const int C2SSignInActivaty_501_offsets_[1] = {
  };
  C2SSignInActivaty_501_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SSignInActivaty_501_descriptor_,
      C2SSignInActivaty_501::default_instance_,
      C2SSignInActivaty_501_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SSignInActivaty_501),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSignInActivaty_501, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SSignInActivaty_501, _is_default_instance_));
  C2SRemedialSignInAct_502_descriptor_ = file->message_type(257);
  static const int C2SRemedialSignInAct_502_offsets_[1] = {
  };
  C2SRemedialSignInAct_502_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SRemedialSignInAct_502_descriptor_,
      C2SRemedialSignInAct_502::default_instance_,
      C2SRemedialSignInAct_502_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SRemedialSignInAct_502),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRemedialSignInAct_502, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRemedialSignInAct_502, _is_default_instance_));
  S2CRemedialSignInAct_502_descriptor_ = file->message_type(258);
  static const int S2CRemedialSignInAct_502_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRemedialSignInAct_502, remedycost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRemedialSignInAct_502, remedytimes_),
  };
  S2CRemedialSignInAct_502_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CRemedialSignInAct_502_descriptor_,
      S2CRemedialSignInAct_502::default_instance_,
      S2CRemedialSignInAct_502_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CRemedialSignInAct_502),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRemedialSignInAct_502, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRemedialSignInAct_502, _is_default_instance_));
  S2CShowRedPoint_503_descriptor_ = file->message_type(259);
  static const int S2CShowRedPoint_503_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CShowRedPoint_503, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CShowRedPoint_503, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CShowRedPoint_503, num_),
  };
  S2CShowRedPoint_503_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CShowRedPoint_503_descriptor_,
      S2CShowRedPoint_503::default_instance_,
      S2CShowRedPoint_503_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CShowRedPoint_503),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CShowRedPoint_503, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CShowRedPoint_503, _is_default_instance_));
  C2SGetActDegree_520_descriptor_ = file->message_type(260);
  static const int C2SGetActDegree_520_offsets_[1] = {
  };
  C2SGetActDegree_520_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetActDegree_520_descriptor_,
      C2SGetActDegree_520::default_instance_,
      C2SGetActDegree_520_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetActDegree_520),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetActDegree_520, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetActDegree_520, _is_default_instance_));
  ActDegreeItem_descriptor_ = file->message_type(261);
  static const int ActDegreeItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActDegreeItem, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActDegreeItem, achvtimes_),
  };
  ActDegreeItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActDegreeItem_descriptor_,
      ActDegreeItem::default_instance_,
      ActDegreeItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActDegreeItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActDegreeItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActDegreeItem, _is_default_instance_));
  ActDegreeAward_descriptor_ = file->message_type(262);
  static const int ActDegreeAward_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActDegreeAward, actdegree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActDegreeAward, itemlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActDegreeAward, isget_),
  };
  ActDegreeAward_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActDegreeAward_descriptor_,
      ActDegreeAward::default_instance_,
      ActDegreeAward_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActDegreeAward),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActDegreeAward, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActDegreeAward, _is_default_instance_));
  S2CGetActDegree_520_descriptor_ = file->message_type(263);
  static const int S2CGetActDegree_520_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetActDegree_520, daily_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetActDegree_520, weekly_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetActDegree_520, itemlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetActDegree_520, dailyaward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetActDegree_520, weeklyaward_),
  };
  S2CGetActDegree_520_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetActDegree_520_descriptor_,
      S2CGetActDegree_520::default_instance_,
      S2CGetActDegree_520_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetActDegree_520),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetActDegree_520, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetActDegree_520, _is_default_instance_));
  S2CSyncActDegreeSched_521_descriptor_ = file->message_type(264);
  static const int S2CSyncActDegreeSched_521_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSyncActDegreeSched_521, daily_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSyncActDegreeSched_521, weekly_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSyncActDegreeSched_521, itemlist_),
  };
  S2CSyncActDegreeSched_521_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CSyncActDegreeSched_521_descriptor_,
      S2CSyncActDegreeSched_521::default_instance_,
      S2CSyncActDegreeSched_521_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CSyncActDegreeSched_521),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSyncActDegreeSched_521, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSyncActDegreeSched_521, _is_default_instance_));
  C2SRecvActDegreeAward_522_descriptor_ = file->message_type(265);
  static const int C2SRecvActDegreeAward_522_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRecvActDegreeAward_522, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRecvActDegreeAward_522, degree_),
  };
  C2SRecvActDegreeAward_522_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SRecvActDegreeAward_522_descriptor_,
      C2SRecvActDegreeAward_522::default_instance_,
      C2SRecvActDegreeAward_522_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SRecvActDegreeAward_522),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRecvActDegreeAward_522, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRecvActDegreeAward_522, _is_default_instance_));
  S2CRecvActDegreeAward_522_descriptor_ = file->message_type(266);
  static const int S2CRecvActDegreeAward_522_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRecvActDegreeAward_522, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRecvActDegreeAward_522, degree_),
  };
  S2CRecvActDegreeAward_522_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CRecvActDegreeAward_522_descriptor_,
      S2CRecvActDegreeAward_522::default_instance_,
      S2CRecvActDegreeAward_522_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CRecvActDegreeAward_522),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRecvActDegreeAward_522, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRecvActDegreeAward_522, _is_default_instance_));
  C2SGetCommonAct_540_descriptor_ = file->message_type(267);
  static const int C2SGetCommonAct_540_offsets_[1] = {
  };
  C2SGetCommonAct_540_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetCommonAct_540_descriptor_,
      C2SGetCommonAct_540::default_instance_,
      C2SGetCommonAct_540_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetCommonAct_540),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetCommonAct_540, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetCommonAct_540, _is_default_instance_));
  CommonAct_descriptor_ = file->message_type(268);
  static const int CommonAct_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonAct, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonAct, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonAct, begintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonAct, endtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonAct, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonAct, sublist_),
  };
  CommonAct_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CommonAct_descriptor_,
      CommonAct::default_instance_,
      CommonAct_offsets_,
      -1,
      -1,
      -1,
      sizeof(CommonAct),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonAct, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonAct, _is_default_instance_));
  CommonSubAct_descriptor_ = file->message_type(269);
  static const int CommonSubAct_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonSubAct, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonSubAct, wording_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonSubAct, awardlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonSubAct, limittimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonSubAct, achvtimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonSubAct, isget_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonSubAct, condid_),
  };
  CommonSubAct_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CommonSubAct_descriptor_,
      CommonSubAct::default_instance_,
      CommonSubAct_offsets_,
      -1,
      -1,
      -1,
      sizeof(CommonSubAct),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonSubAct, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonSubAct, _is_default_instance_));
  S2CGetCommonAct_540_descriptor_ = file->message_type(270);
  static const int S2CGetCommonAct_540_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetCommonAct_540, actlist_),
  };
  S2CGetCommonAct_540_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CGetCommonAct_540_descriptor_,
      S2CGetCommonAct_540::default_instance_,
      S2CGetCommonAct_540_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CGetCommonAct_540),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetCommonAct_540, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CGetCommonAct_540, _is_default_instance_));
  S2CSyncCommonActSched_541_descriptor_ = file->message_type(271);
  static const int S2CSyncCommonActSched_541_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSyncCommonActSched_541, actid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSyncCommonActSched_541, subid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSyncCommonActSched_541, achvtimes_),
  };
  S2CSyncCommonActSched_541_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CSyncCommonActSched_541_descriptor_,
      S2CSyncCommonActSched_541::default_instance_,
      S2CSyncCommonActSched_541_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CSyncCommonActSched_541),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSyncCommonActSched_541, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CSyncCommonActSched_541, _is_default_instance_));
  C2SRecvCommonActAward_542_descriptor_ = file->message_type(272);
  static const int C2SRecvCommonActAward_542_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRecvCommonActAward_542, subid_),
  };
  C2SRecvCommonActAward_542_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SRecvCommonActAward_542_descriptor_,
      C2SRecvCommonActAward_542::default_instance_,
      C2SRecvCommonActAward_542_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SRecvCommonActAward_542),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRecvCommonActAward_542, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SRecvCommonActAward_542, _is_default_instance_));
  S2CRecvCommonActAward_542_descriptor_ = file->message_type(273);
  static const int S2CRecvCommonActAward_542_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRecvCommonActAward_542, subid_),
  };
  S2CRecvCommonActAward_542_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CRecvCommonActAward_542_descriptor_,
      S2CRecvCommonActAward_542::default_instance_,
      S2CRecvCommonActAward_542_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CRecvCommonActAward_542),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRecvCommonActAward_542, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CRecvCommonActAward_542, _is_default_instance_));
  C2SAchievementList_600_descriptor_ = file->message_type(274);
  static const int C2SAchievementList_600_offsets_[1] = {
  };
  C2SAchievementList_600_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SAchievementList_600_descriptor_,
      C2SAchievementList_600::default_instance_,
      C2SAchievementList_600_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SAchievementList_600),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAchievementList_600, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAchievementList_600, _is_default_instance_));
  S2CAchievementList_600_descriptor_ = file->message_type(275);
  static const int S2CAchievementList_600_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAchievementList_600, achvlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAchievementList_600, achvexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAchievementList_600, achvawardidx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAchievementList_600, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAchievementList_600, achvtime_),
  };
  S2CAchievementList_600_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CAchievementList_600_descriptor_,
      S2CAchievementList_600::default_instance_,
      S2CAchievementList_600_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CAchievementList_600),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAchievementList_600, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAchievementList_600, _is_default_instance_));
  C2SAchievementProgress_601_descriptor_ = file->message_type(276);
  static const int C2SAchievementProgress_601_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAchievementProgress_601, condid_),
  };
  C2SAchievementProgress_601_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SAchievementProgress_601_descriptor_,
      C2SAchievementProgress_601::default_instance_,
      C2SAchievementProgress_601_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SAchievementProgress_601),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAchievementProgress_601, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SAchievementProgress_601, _is_default_instance_));
  S2CAchievementProgress_601_descriptor_ = file->message_type(277);
  static const int S2CAchievementProgress_601_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAchievementProgress_601, achvtimes_),
  };
  S2CAchievementProgress_601_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CAchievementProgress_601_descriptor_,
      S2CAchievementProgress_601::default_instance_,
      S2CAchievementProgress_601_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CAchievementProgress_601),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAchievementProgress_601, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CAchievementProgress_601, _is_default_instance_));
  S2CPushAchievement_602_descriptor_ = file->message_type(278);
  static const int S2CPushAchievement_602_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CPushAchievement_602, achvlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CPushAchievement_602, achvexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CPushAchievement_602, achvid_),
  };
  S2CPushAchievement_602_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S2CPushAchievement_602_descriptor_,
      S2CPushAchievement_602::default_instance_,
      S2CPushAchievement_602_offsets_,
      -1,
      -1,
      -1,
      sizeof(S2CPushAchievement_602),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CPushAchievement_602, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2CPushAchievement_602, _is_default_instance_));
  C2SGetAchievementAward_603_descriptor_ = file->message_type(279);
  static const int C2SGetAchievementAward_603_offsets_[1] = {
  };
  C2SGetAchievementAward_603_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SGetAchievementAward_603_descriptor_,
      C2SGetAchievementAward_603::default_instance_,
      C2SGetAchievementAward_603_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SGetAchievementAward_603),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetAchievementAward_603, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SGetAchievementAward_603, _is_default_instance_));
  C2SReportBatData_604_descriptor_ = file->message_type(280);
  static const int C2SReportBatData_604_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SReportBatData_604, condid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SReportBatData_604, value_),
  };
  C2SReportBatData_604_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      C2SReportBatData_604_descriptor_,
      C2SReportBatData_604::default_instance_,
      C2SReportBatData_604_offsets_,
      -1,
      -1,
      -1,
      sizeof(C2SReportBatData_604),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SReportBatData_604, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2SReportBatData_604, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_login_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CCommonRet_1000_descriptor_, &S2CCommonRet_1000::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SPing_1001_descriptor_, &C2SPing_1001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CPing_1001_descriptor_, &S2CPing_1001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_RegLogin_98_descriptor_, &C2S_RegLogin_98::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2C_RegLogin_98_descriptor_, &S2C_RegLogin_98::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_RegAcc_99_descriptor_, &C2S_RegAcc_99::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_CreateRole_117_descriptor_, &C2S_CreateRole_117::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_LoginData_116_descriptor_, &C2S_LoginData_116::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2C_LoginData_116_descriptor_, &S2C_LoginData_116::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_UpdateGuideSteps_118_descriptor_, &C2S_UpdateGuideSteps_118::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PRoomInfo_descriptor_, &PRoomInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_GetRoomList_100_descriptor_, &C2S_GetRoomList_100::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2C_GetRoomList_100_descriptor_, &S2C_GetRoomList_100::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SEnterRoom_101_descriptor_, &C2SEnterRoom_101::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PRoomUser_descriptor_, &PRoomUser::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CEnterRoomRet_101_descriptor_, &S2CEnterRoomRet_101::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SCreateRoom_102_descriptor_, &C2SCreateRoom_102::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SExitRoom_103_descriptor_, &C2SExitRoom_103::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CExitRoom_103_descriptor_, &S2CExitRoom_103::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SUserReady_104_descriptor_, &C2SUserReady_104::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CUserReady_104_descriptor_, &S2CUserReady_104::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SMasterStart_105_descriptor_, &C2SMasterStart_105::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CMasterStart_105_descriptor_, &S2CMasterStart_105::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SLoadFinish_106_descriptor_, &C2SLoadFinish_106::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CLoadFinish_106_descriptor_, &S2CLoadFinish_106::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CRealstart_107_descriptor_, &S2CRealstart_107::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CEnterRoomRet_108_descriptor_, &S2CEnterRoomRet_108::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SSwitchCamp_109_descriptor_, &C2SSwitchCamp_109::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CSwitchCamp_109_descriptor_, &S2CSwitchCamp_109::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SSwitchWatcher_110_descriptor_, &C2SSwitchWatcher_110::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CSwitchWatcher_110_descriptor_, &S2CSwitchWatcher_110::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CLeaveGame_111_descriptor_, &S2CLeaveGame_111::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SChooseBadge_113_descriptor_, &C2SChooseBadge_113::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CChooseBadge_113_descriptor_, &S2CChooseBadge_113::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SBroadRoomcastString_114_descriptor_, &C2SBroadRoomcastString_114::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CBroadRoomcastString_114_descriptor_, &S2CBroadRoomcastString_114::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SForceEnterRoom_115_descriptor_, &C2SForceEnterRoom_115::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SAddRobotToRoom_119_descriptor_, &C2SAddRobotToRoom_119::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CAddRobotToRoom_119_descriptor_, &S2CAddRobotToRoom_119::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PTeammateInfo_descriptor_, &PTeammateInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SInvitePlayer_120_descriptor_, &C2SInvitePlayer_120::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CInvitePlayer_120_descriptor_, &S2CInvitePlayer_120::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CReceiveInvite_121_descriptor_, &S2CReceiveInvite_121::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SAgreeInvite_122_descriptor_, &C2SAgreeInvite_122::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CAgreeInvite_122_descriptor_, &S2CAgreeInvite_122::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CJoinTeam_123_descriptor_, &S2CJoinTeam_123::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SCancelInvite_124_descriptor_, &C2SCancelInvite_124::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CCancelInvite_124_descriptor_, &S2CCancelInvite_124::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SKickPlayer_125_descriptor_, &C2SKickPlayer_125::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CKickPlayer_125_descriptor_, &S2CKickPlayer_125::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SLeaveTeam_126_descriptor_, &C2SLeaveTeam_126::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CLeaveTeam_126_descriptor_, &S2CLeaveTeam_126::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CCancelInvite_127_descriptor_, &S2CCancelInvite_127::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CPlayerBatState_128_descriptor_, &S2CPlayerBatState_128::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetTeamAvaList_129_descriptor_, &C2SGetTeamAvaList_129::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetTeamAvaList_129_descriptor_, &S2CGetTeamAvaList_129::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SToTopTeam_131_descriptor_, &C2SToTopTeam_131::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CToTopTeam_131_descriptor_, &S2CToTopTeam_131::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SHandoverLeader_132_descriptor_, &C2SHandoverLeader_132::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CHandoverLeader_132_descriptor_, &S2CHandoverLeader_132::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SApplyPlayer_133_descriptor_, &C2SApplyPlayer_133::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CApplyPlayer_133_descriptor_, &S2CApplyPlayer_133::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CReceiveApply_134_descriptor_, &S2CReceiveApply_134::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SAgreeApply_135_descriptor_, &C2SAgreeApply_135::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CAgreeApply_135_descriptor_, &S2CAgreeApply_135::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MallBagItemData_descriptor_, &MallBagItemData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetChestNum_140_descriptor_, &C2SGetChestNum_140::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetChestNum_140_descriptor_, &S2CGetChestNum_140::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SOpenChest_141_descriptor_, &C2SOpenChest_141::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChestReward_descriptor_, &ChestReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2COpenChest_141_descriptor_, &S2COpenChest_141::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SBuyChest_142_descriptor_, &C2SBuyChest_142::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_BuyItemList_150_descriptor_, &C2S_BuyItemList_150::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_ReqBagItemList_151_descriptor_, &C2S_ReqBagItemList_151::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2C_ReqBagItemList_151_descriptor_, &S2C_ReqBagItemList_151::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_UseItem_153_descriptor_, &C2S_UseItem_153::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_RefreshStore_154_descriptor_, &C2S_RefreshStore_154::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2C_RefreshStore_154_descriptor_, &S2C_RefreshStore_154::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_ReqLastStoreItem_155_descriptor_, &C2S_ReqLastStoreItem_155::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2C_ReqLastStoreItem_155_descriptor_, &S2C_ReqLastStoreItem_155::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_ReqUnLockCharList_156_descriptor_, &C2S_ReqUnLockCharList_156::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2C_UnlockCharList_156_descriptor_, &S2C_UnlockCharList_156::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_ReqAlreadyBuyList_157_descriptor_, &C2S_ReqAlreadyBuyList_157::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2C_AlreadyBuyList_157_descriptor_, &S2C_AlreadyBuyList_157::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2C_AddItem_158_descriptor_, &S2C_AddItem_158::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SuitData_descriptor_, &SuitData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_UpdateSuitName_160_descriptor_, &C2S_UpdateSuitName_160::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_UpdateSex_161_descriptor_, &C2S_UpdateSex_161::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_UpdateSuit_162_descriptor_, &C2S_UpdateSuit_162::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_GetAllSuits_163_descriptor_, &C2S_GetAllSuits_163::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2C_GetAllSuits_163_descriptor_, &S2C_GetAllSuits_163::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_SelSuit_164_descriptor_, &C2S_SelSuit_164::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MountClass_descriptor_, &MountClass::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_GetAllUnlockMount_170_descriptor_, &C2S_GetAllUnlockMount_170::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2C_GetAllUnlockMount_170_descriptor_, &S2C_GetAllUnlockMount_170::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_UpdateMount_171_descriptor_, &C2S_UpdateMount_171::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2C_UpdateMount_171_descriptor_, &S2C_UpdateMount_171::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2C_MountAddOneSkin_173_descriptor_, &S2C_MountAddOneSkin_173::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_GetAllRune_180_descriptor_, &C2S_GetAllRune_180::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Rune_descriptor_, &Rune::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2C_GetAllRune_180_descriptor_, &S2C_GetAllRune_180::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_BuyRune_181_descriptor_, &C2S_BuyRune_181::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_DecomposeRune_182_descriptor_, &C2S_DecomposeRune_182::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_BatchDecomposeRune_183_descriptor_, &C2S_BatchDecomposeRune_183::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_BatchDecomposeRuneByItemId_184_descriptor_, &C2S_BatchDecomposeRuneByItemId_184::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_GetAllWeapon_190_descriptor_, &C2S_GetAllWeapon_190::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Weapon_descriptor_, &Weapon::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2C_GetAllWeapon_190_descriptor_, &S2C_GetAllWeapon_190::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_ActivateWeapon_191_descriptor_, &C2S_ActivateWeapon_191::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2C_ActivateWeapon_191_descriptor_, &S2C_ActivateWeapon_191::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_SellWeapon_192_descriptor_, &C2S_SellWeapon_192::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2S_UpdateRune_193_descriptor_, &C2S_UpdateRune_193::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SFrameCommand_2000_descriptor_, &C2SFrameCommand_2000::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CServerFrameUpdate_2001_descriptor_, &S2CServerFrameUpdate_2001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetRepairFrameData_2002_descriptor_, &C2SGetRepairFrameData_2002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetRepairFrameData_2002_descriptor_, &S2CGetRepairFrameData_2002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetSyncCacheFrames_2003_descriptor_, &C2SGetSyncCacheFrames_2003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetSyncCacheFrames_2003_descriptor_, &S2CGetSyncCacheFrames_2003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SUDPReg_2004_descriptor_, &C2SUDPReg_2004::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SVerifyFrameSync_2005_descriptor_, &C2SVerifyFrameSync_2005::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CVerifyFrameSyncFail_2005_descriptor_, &S2CVerifyFrameSyncFail_2005::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SStartMatch_210_descriptor_, &C2SStartMatch_210::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CStartMatch_210_descriptor_, &S2CStartMatch_210::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CMatchSucc_217_descriptor_, &S2CMatchSucc_217::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SReadyMatch_218_descriptor_, &C2SReadyMatch_218::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CReadyMatch_218_descriptor_, &S2CReadyMatch_218::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CReadyMatch_219_descriptor_, &S2CReadyMatch_219::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SCancelMatch_211_descriptor_, &C2SCancelMatch_211::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CCancelMatch_211_descriptor_, &S2CCancelMatch_211::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CMatchSucc_212_descriptor_, &S2CMatchSucc_212::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StageBattleEnd_descriptor_, &StageBattleEnd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SMatchOver_213_descriptor_, &C2SMatchOver_213::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CMatchOver_213_descriptor_, &S2CMatchOver_213::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SLeaveBatUI_214_descriptor_, &C2SLeaveBatUI_214::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SRoomKick_215_descriptor_, &C2SRoomKick_215::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Msgbody216_descriptor_, &Msgbody216::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2STheBattleResult_216_descriptor_, &C2STheBattleResult_216::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CTheBattleResult_216_descriptor_, &S2CTheBattleResult_216::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SBatRecordLst_220_descriptor_, &C2SBatRecordLst_220::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CBatRecordLst_220_descriptor_, &S2CBatRecordLst_220::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SBatRecord_221_descriptor_, &C2SBatRecord_221::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CBatRecord_221_descriptor_, &S2CBatRecord_221::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SSingleBattleResult_222_descriptor_, &C2SSingleBattleResult_222::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetMatchUserNum_223_descriptor_, &C2SGetMatchUserNum_223::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetMatchUserNum_223_descriptor_, &S2CGetMatchUserNum_223::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SBroadcast_250_descriptor_, &C2SBroadcast_250::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CBroadcast_250_descriptor_, &S2CBroadcast_250::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CBroadcastProp_251_descriptor_, &S2CBroadcastProp_251::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SChatContent_252_descriptor_, &C2SChatContent_252::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CChatContent_252_descriptor_, &S2CChatContent_252::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MailGift_descriptor_, &MailGift::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Mail_descriptor_, &Mail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetMailList_253_descriptor_, &C2SGetMailList_253::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetMailList_253_descriptor_, &S2CGetMailList_253::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SReadMail_254_descriptor_, &C2SReadMail_254::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SReceiveGift_255_descriptor_, &C2SReceiveGift_255::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CSendMail_256_descriptor_, &S2CSendMail_256::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SDeleteMail_257_descriptor_, &C2SDeleteMail_257::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CBroadcastLevel_258_descriptor_, &S2CBroadcastLevel_258::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CImportantNotice_259_descriptor_, &S2CImportantNotice_259::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetShopParams_260_descriptor_, &C2SGetShopParams_260::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetShopParams_260_descriptor_, &S2CGetShopParams_260::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SSearchUser_280_descriptor_, &C2SSearchUser_280::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserProfile_descriptor_, &UserProfile::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CSearchUser_280_descriptor_, &S2CSearchUser_280::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SFriendRequest_281_descriptor_, &C2SFriendRequest_281::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CFriendRequest_281_descriptor_, &S2CFriendRequest_281::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetFriendRequests_282_descriptor_, &C2SGetFriendRequests_282::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetFriendRequests_282_descriptor_, &S2CGetFriendRequests_282::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SDealFriendRequest_283_descriptor_, &C2SDealFriendRequest_283::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CAddNewFriend_284_descriptor_, &S2CAddNewFriend_284::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SRemoveFriend_285_descriptor_, &C2SRemoveFriend_285::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetFriendList_286_descriptor_, &C2SGetFriendList_286::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetFriendList_286_descriptor_, &S2CGetFriendList_286::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetFriendAvaList_287_descriptor_, &C2SGetFriendAvaList_287::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetFriendAvaList_287_descriptor_, &S2CGetFriendAvaList_287::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SAddBlackUser_288_descriptor_, &C2SAddBlackUser_288::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SRemoveBlackUser_289_descriptor_, &C2SRemoveBlackUser_289::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetBlackList_290_descriptor_, &C2SGetBlackList_290::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetBlackList_290_descriptor_, &S2CGetBlackList_290::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CFriendOnlineStatus_291_descriptor_, &S2CFriendOnlineStatus_291::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetRecentUserList_292_descriptor_, &C2SGetRecentUserList_292::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetRecentUserList_292_descriptor_, &S2CGetRecentUserList_292::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SUploadCoordinates_293_descriptor_, &C2SUploadCoordinates_293::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetUserNearby_294_descriptor_, &C2SGetUserNearby_294::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetUserNearby_294_descriptor_, &S2CGetUserNearby_294::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SRankScore_300_descriptor_, &C2SRankScore_300::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RankScore_descriptor_, &RankScore::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CRankScore_300_descriptor_, &S2CRankScore_300::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetShortMsg_311_descriptor_, &C2SGetShortMsg_311::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetShortMsg_311_descriptor_, &S2CGetShortMsg_311::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SUpdateShortMsg_312_descriptor_, &C2SUpdateShortMsg_312::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetOneResumeMsg_313_descriptor_, &C2SGetOneResumeMsg_313::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CharResultRecord_descriptor_, &CharResultRecord::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetOneResumeMsg_313_descriptor_, &S2CGetOneResumeMsg_313::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SChangeName_314_descriptor_, &C2SChangeName_314::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SeasonInfo_descriptor_, &SeasonInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CStageSeasonStart_320_descriptor_, &S2CStageSeasonStart_320::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CStageSeasonOver_321_descriptor_, &S2CStageSeasonOver_321::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CStageSeasonEnd_322_descriptor_, &S2CStageSeasonEnd_322::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetSeasonInfo_323_descriptor_, &S2CGetSeasonInfo_323::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetSeasonInfo_323_descriptor_, &C2SGetSeasonInfo_323::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OneContestInfo_descriptor_, &OneContestInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OneContestSimpleInfo_descriptor_, &OneContestSimpleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SCreateContest_400_descriptor_, &C2SCreateContest_400::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CBroadContest_400_descriptor_, &S2CBroadContest_400::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetContestList_401_descriptor_, &C2SGetContestList_401::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetContestList_401_descriptor_, &S2CGetContestList_401::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SSignContest_402_descriptor_, &C2SSignContest_402::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CSignContest_402_descriptor_, &S2CSignContest_402::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CSignContestToOther_413_descriptor_, &S2CSignContestToOther_413::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SCloseContestTeams_403_descriptor_, &C2SCloseContestTeams_403::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CCloseContestTeams_403_descriptor_, &S2CCloseContestTeams_403::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SStartContest_404_descriptor_, &C2SStartContest_404::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CStartContest_404_descriptor_, &S2CStartContest_404::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetContesInfo_405_descriptor_, &C2SGetContesInfo_405::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetContesInfo_405_descriptor_, &S2CGetContesInfo_405::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SManagerContest_406_descriptor_, &C2SManagerContest_406::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CManagerContest_406_descriptor_, &S2CManagerContest_406::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OnePlayerInfo_descriptor_, &OnePlayerInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TeamsInfo_descriptor_, &TeamsInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TeamsSimpleInfo_descriptor_, &TeamsSimpleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetContestTeams_407_descriptor_, &C2SGetContestTeams_407::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetContestTeams_407_descriptor_, &S2CGetContestTeams_407::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SEditorContesMembers_408_descriptor_, &C2SEditorContesMembers_408::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CEditorContesMembers_408_descriptor_, &S2CEditorContesMembers_408::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SQuitContest_409_descriptor_, &C2SQuitContest_409::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CQuitContest_409_descriptor_, &S2CQuitContest_409::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SOpenContestTeam_410_descriptor_, &C2SOpenContestTeam_410::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2COpenContestTeam_410_descriptor_, &S2COpenContestTeam_410::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CContestStop_412_descriptor_, &S2CContestStop_412::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AteamVsBteam_descriptor_, &AteamVsBteam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OutVsFight_descriptor_, &OutVsFight::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TeamScoreInfo_descriptor_, &TeamScoreInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoopFightInfo_descriptor_, &LoopFightInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SFightData_415_descriptor_, &C2SFightData_415::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CFightData_415_descriptor_, &S2CFightData_415::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetContestInfo_414_descriptor_, &C2SGetContestInfo_414::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetContestInfo_414_descriptor_, &S2CGetContestInfo_414::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SSetEditorContest_417_descriptor_, &C2SSetEditorContest_417::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetContestFightBoInfo_418_descriptor_, &S2CGetContestFightBoInfo_418::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetContestFightResult_416_descriptor_, &S2CGetContestFightResult_416::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SContestRankInfo_420_descriptor_, &C2SContestRankInfo_420::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CContestRankInfo_420_descriptor_, &S2CContestRankInfo_420::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SContestWaitSec_421_descriptor_, &C2SContestWaitSec_421::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CContestWaitSec_421_descriptor_, &S2CContestWaitSec_421::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SContestDissmis_422_descriptor_, &C2SContestDissmis_422::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CContestDissmis_422_descriptor_, &S2CContestDissmis_422::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SWatchContestBat_423_descriptor_, &C2SWatchContestBat_423::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CContestReward_424_descriptor_, &S2CContestReward_424::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CFreshenFightData_425_descriptor_, &S2CFreshenFightData_425::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGiveup_426_descriptor_, &C2SGiveup_426::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGiveup_426_descriptor_, &S2CGiveup_426::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SSetSetPassword_427_descriptor_, &C2SSetSetPassword_427::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetSignInActivaty_500_descriptor_, &C2SGetSignInActivaty_500::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetSignInActivaty_500_descriptor_, &S2CGetSignInActivaty_500::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SSignInActivaty_501_descriptor_, &C2SSignInActivaty_501::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SRemedialSignInAct_502_descriptor_, &C2SRemedialSignInAct_502::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CRemedialSignInAct_502_descriptor_, &S2CRemedialSignInAct_502::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CShowRedPoint_503_descriptor_, &S2CShowRedPoint_503::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetActDegree_520_descriptor_, &C2SGetActDegree_520::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActDegreeItem_descriptor_, &ActDegreeItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActDegreeAward_descriptor_, &ActDegreeAward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetActDegree_520_descriptor_, &S2CGetActDegree_520::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CSyncActDegreeSched_521_descriptor_, &S2CSyncActDegreeSched_521::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SRecvActDegreeAward_522_descriptor_, &C2SRecvActDegreeAward_522::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CRecvActDegreeAward_522_descriptor_, &S2CRecvActDegreeAward_522::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetCommonAct_540_descriptor_, &C2SGetCommonAct_540::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CommonAct_descriptor_, &CommonAct::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CommonSubAct_descriptor_, &CommonSubAct::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CGetCommonAct_540_descriptor_, &S2CGetCommonAct_540::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CSyncCommonActSched_541_descriptor_, &S2CSyncCommonActSched_541::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SRecvCommonActAward_542_descriptor_, &C2SRecvCommonActAward_542::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CRecvCommonActAward_542_descriptor_, &S2CRecvCommonActAward_542::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SAchievementList_600_descriptor_, &C2SAchievementList_600::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CAchievementList_600_descriptor_, &S2CAchievementList_600::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SAchievementProgress_601_descriptor_, &C2SAchievementProgress_601::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CAchievementProgress_601_descriptor_, &S2CAchievementProgress_601::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S2CPushAchievement_602_descriptor_, &S2CPushAchievement_602::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SGetAchievementAward_603_descriptor_, &C2SGetAchievementAward_603::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      C2SReportBatData_604_descriptor_, &C2SReportBatData_604::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_login_2eproto() {
  delete S2CCommonRet_1000::default_instance_;
  delete S2CCommonRet_1000_reflection_;
  delete C2SPing_1001::default_instance_;
  delete C2SPing_1001_reflection_;
  delete S2CPing_1001::default_instance_;
  delete S2CPing_1001_reflection_;
  delete C2S_RegLogin_98::default_instance_;
  delete C2S_RegLogin_98_reflection_;
  delete S2C_RegLogin_98::default_instance_;
  delete S2C_RegLogin_98_reflection_;
  delete C2S_RegAcc_99::default_instance_;
  delete C2S_RegAcc_99_reflection_;
  delete C2S_CreateRole_117::default_instance_;
  delete C2S_CreateRole_117_reflection_;
  delete C2S_LoginData_116::default_instance_;
  delete C2S_LoginData_116_reflection_;
  delete S2C_LoginData_116::default_instance_;
  delete S2C_LoginData_116_reflection_;
  delete C2S_UpdateGuideSteps_118::default_instance_;
  delete C2S_UpdateGuideSteps_118_reflection_;
  delete PRoomInfo::default_instance_;
  delete PRoomInfo_reflection_;
  delete C2S_GetRoomList_100::default_instance_;
  delete C2S_GetRoomList_100_reflection_;
  delete S2C_GetRoomList_100::default_instance_;
  delete S2C_GetRoomList_100_reflection_;
  delete C2SEnterRoom_101::default_instance_;
  delete C2SEnterRoom_101_reflection_;
  delete PRoomUser::default_instance_;
  delete PRoomUser_reflection_;
  delete S2CEnterRoomRet_101::default_instance_;
  delete S2CEnterRoomRet_101_reflection_;
  delete C2SCreateRoom_102::default_instance_;
  delete C2SCreateRoom_102_reflection_;
  delete C2SExitRoom_103::default_instance_;
  delete C2SExitRoom_103_reflection_;
  delete S2CExitRoom_103::default_instance_;
  delete S2CExitRoom_103_reflection_;
  delete C2SUserReady_104::default_instance_;
  delete C2SUserReady_104_reflection_;
  delete S2CUserReady_104::default_instance_;
  delete S2CUserReady_104_reflection_;
  delete C2SMasterStart_105::default_instance_;
  delete C2SMasterStart_105_reflection_;
  delete S2CMasterStart_105::default_instance_;
  delete S2CMasterStart_105_reflection_;
  delete C2SLoadFinish_106::default_instance_;
  delete C2SLoadFinish_106_reflection_;
  delete S2CLoadFinish_106::default_instance_;
  delete S2CLoadFinish_106_reflection_;
  delete S2CRealstart_107::default_instance_;
  delete S2CRealstart_107_reflection_;
  delete S2CEnterRoomRet_108::default_instance_;
  delete S2CEnterRoomRet_108_reflection_;
  delete C2SSwitchCamp_109::default_instance_;
  delete C2SSwitchCamp_109_reflection_;
  delete S2CSwitchCamp_109::default_instance_;
  delete S2CSwitchCamp_109_reflection_;
  delete C2SSwitchWatcher_110::default_instance_;
  delete C2SSwitchWatcher_110_reflection_;
  delete S2CSwitchWatcher_110::default_instance_;
  delete S2CSwitchWatcher_110_reflection_;
  delete S2CLeaveGame_111::default_instance_;
  delete S2CLeaveGame_111_reflection_;
  delete C2SChooseBadge_113::default_instance_;
  delete C2SChooseBadge_113_reflection_;
  delete S2CChooseBadge_113::default_instance_;
  delete S2CChooseBadge_113_reflection_;
  delete C2SBroadRoomcastString_114::default_instance_;
  delete C2SBroadRoomcastString_114_reflection_;
  delete S2CBroadRoomcastString_114::default_instance_;
  delete S2CBroadRoomcastString_114_reflection_;
  delete C2SForceEnterRoom_115::default_instance_;
  delete C2SForceEnterRoom_115_reflection_;
  delete C2SAddRobotToRoom_119::default_instance_;
  delete C2SAddRobotToRoom_119_reflection_;
  delete S2CAddRobotToRoom_119::default_instance_;
  delete S2CAddRobotToRoom_119_reflection_;
  delete PTeammateInfo::default_instance_;
  delete PTeammateInfo_reflection_;
  delete C2SInvitePlayer_120::default_instance_;
  delete C2SInvitePlayer_120_reflection_;
  delete S2CInvitePlayer_120::default_instance_;
  delete S2CInvitePlayer_120_reflection_;
  delete S2CReceiveInvite_121::default_instance_;
  delete S2CReceiveInvite_121_reflection_;
  delete C2SAgreeInvite_122::default_instance_;
  delete C2SAgreeInvite_122_reflection_;
  delete S2CAgreeInvite_122::default_instance_;
  delete S2CAgreeInvite_122_reflection_;
  delete S2CJoinTeam_123::default_instance_;
  delete S2CJoinTeam_123_reflection_;
  delete C2SCancelInvite_124::default_instance_;
  delete C2SCancelInvite_124_reflection_;
  delete S2CCancelInvite_124::default_instance_;
  delete S2CCancelInvite_124_reflection_;
  delete C2SKickPlayer_125::default_instance_;
  delete C2SKickPlayer_125_reflection_;
  delete S2CKickPlayer_125::default_instance_;
  delete S2CKickPlayer_125_reflection_;
  delete C2SLeaveTeam_126::default_instance_;
  delete C2SLeaveTeam_126_reflection_;
  delete S2CLeaveTeam_126::default_instance_;
  delete S2CLeaveTeam_126_reflection_;
  delete S2CCancelInvite_127::default_instance_;
  delete S2CCancelInvite_127_reflection_;
  delete S2CPlayerBatState_128::default_instance_;
  delete S2CPlayerBatState_128_reflection_;
  delete C2SGetTeamAvaList_129::default_instance_;
  delete C2SGetTeamAvaList_129_reflection_;
  delete S2CGetTeamAvaList_129::default_instance_;
  delete S2CGetTeamAvaList_129_reflection_;
  delete C2SToTopTeam_131::default_instance_;
  delete C2SToTopTeam_131_reflection_;
  delete S2CToTopTeam_131::default_instance_;
  delete S2CToTopTeam_131_reflection_;
  delete C2SHandoverLeader_132::default_instance_;
  delete C2SHandoverLeader_132_reflection_;
  delete S2CHandoverLeader_132::default_instance_;
  delete S2CHandoverLeader_132_reflection_;
  delete C2SApplyPlayer_133::default_instance_;
  delete C2SApplyPlayer_133_reflection_;
  delete S2CApplyPlayer_133::default_instance_;
  delete S2CApplyPlayer_133_reflection_;
  delete S2CReceiveApply_134::default_instance_;
  delete S2CReceiveApply_134_reflection_;
  delete C2SAgreeApply_135::default_instance_;
  delete C2SAgreeApply_135_reflection_;
  delete S2CAgreeApply_135::default_instance_;
  delete S2CAgreeApply_135_reflection_;
  delete MallBagItemData::default_instance_;
  delete MallBagItemData_reflection_;
  delete C2SGetChestNum_140::default_instance_;
  delete C2SGetChestNum_140_reflection_;
  delete S2CGetChestNum_140::default_instance_;
  delete S2CGetChestNum_140_reflection_;
  delete C2SOpenChest_141::default_instance_;
  delete C2SOpenChest_141_reflection_;
  delete ChestReward::default_instance_;
  delete ChestReward_reflection_;
  delete S2COpenChest_141::default_instance_;
  delete S2COpenChest_141_reflection_;
  delete C2SBuyChest_142::default_instance_;
  delete C2SBuyChest_142_reflection_;
  delete C2S_BuyItemList_150::default_instance_;
  delete C2S_BuyItemList_150_reflection_;
  delete C2S_ReqBagItemList_151::default_instance_;
  delete C2S_ReqBagItemList_151_reflection_;
  delete S2C_ReqBagItemList_151::default_instance_;
  delete S2C_ReqBagItemList_151_reflection_;
  delete C2S_UseItem_153::default_instance_;
  delete C2S_UseItem_153_reflection_;
  delete C2S_RefreshStore_154::default_instance_;
  delete C2S_RefreshStore_154_reflection_;
  delete S2C_RefreshStore_154::default_instance_;
  delete S2C_RefreshStore_154_reflection_;
  delete C2S_ReqLastStoreItem_155::default_instance_;
  delete C2S_ReqLastStoreItem_155_reflection_;
  delete S2C_ReqLastStoreItem_155::default_instance_;
  delete S2C_ReqLastStoreItem_155_reflection_;
  delete C2S_ReqUnLockCharList_156::default_instance_;
  delete C2S_ReqUnLockCharList_156_reflection_;
  delete S2C_UnlockCharList_156::default_instance_;
  delete S2C_UnlockCharList_156_reflection_;
  delete C2S_ReqAlreadyBuyList_157::default_instance_;
  delete C2S_ReqAlreadyBuyList_157_reflection_;
  delete S2C_AlreadyBuyList_157::default_instance_;
  delete S2C_AlreadyBuyList_157_reflection_;
  delete S2C_AddItem_158::default_instance_;
  delete S2C_AddItem_158_reflection_;
  delete SuitData::default_instance_;
  delete SuitData_reflection_;
  delete C2S_UpdateSuitName_160::default_instance_;
  delete C2S_UpdateSuitName_160_reflection_;
  delete C2S_UpdateSex_161::default_instance_;
  delete C2S_UpdateSex_161_reflection_;
  delete C2S_UpdateSuit_162::default_instance_;
  delete C2S_UpdateSuit_162_reflection_;
  delete C2S_GetAllSuits_163::default_instance_;
  delete C2S_GetAllSuits_163_reflection_;
  delete S2C_GetAllSuits_163::default_instance_;
  delete S2C_GetAllSuits_163_reflection_;
  delete C2S_SelSuit_164::default_instance_;
  delete C2S_SelSuit_164_reflection_;
  delete MountClass::default_instance_;
  delete MountClass_reflection_;
  delete C2S_GetAllUnlockMount_170::default_instance_;
  delete C2S_GetAllUnlockMount_170_reflection_;
  delete S2C_GetAllUnlockMount_170::default_instance_;
  delete S2C_GetAllUnlockMount_170_reflection_;
  delete C2S_UpdateMount_171::default_instance_;
  delete C2S_UpdateMount_171_reflection_;
  delete S2C_UpdateMount_171::default_instance_;
  delete S2C_UpdateMount_171_reflection_;
  delete S2C_MountAddOneSkin_173::default_instance_;
  delete S2C_MountAddOneSkin_173_reflection_;
  delete C2S_GetAllRune_180::default_instance_;
  delete C2S_GetAllRune_180_reflection_;
  delete Rune::default_instance_;
  delete Rune_reflection_;
  delete S2C_GetAllRune_180::default_instance_;
  delete S2C_GetAllRune_180_reflection_;
  delete C2S_BuyRune_181::default_instance_;
  delete C2S_BuyRune_181_reflection_;
  delete C2S_DecomposeRune_182::default_instance_;
  delete C2S_DecomposeRune_182_reflection_;
  delete C2S_BatchDecomposeRune_183::default_instance_;
  delete C2S_BatchDecomposeRune_183_reflection_;
  delete C2S_BatchDecomposeRuneByItemId_184::default_instance_;
  delete C2S_BatchDecomposeRuneByItemId_184_reflection_;
  delete C2S_GetAllWeapon_190::default_instance_;
  delete C2S_GetAllWeapon_190_reflection_;
  delete Weapon::default_instance_;
  delete Weapon_reflection_;
  delete S2C_GetAllWeapon_190::default_instance_;
  delete S2C_GetAllWeapon_190_reflection_;
  delete C2S_ActivateWeapon_191::default_instance_;
  delete C2S_ActivateWeapon_191_reflection_;
  delete S2C_ActivateWeapon_191::default_instance_;
  delete S2C_ActivateWeapon_191_reflection_;
  delete C2S_SellWeapon_192::default_instance_;
  delete C2S_SellWeapon_192_reflection_;
  delete C2S_UpdateRune_193::default_instance_;
  delete C2S_UpdateRune_193_reflection_;
  delete C2SFrameCommand_2000::default_instance_;
  delete C2SFrameCommand_2000_reflection_;
  delete S2CServerFrameUpdate_2001::default_instance_;
  delete S2CServerFrameUpdate_2001_reflection_;
  delete C2SGetRepairFrameData_2002::default_instance_;
  delete C2SGetRepairFrameData_2002_reflection_;
  delete S2CGetRepairFrameData_2002::default_instance_;
  delete S2CGetRepairFrameData_2002_reflection_;
  delete C2SGetSyncCacheFrames_2003::default_instance_;
  delete C2SGetSyncCacheFrames_2003_reflection_;
  delete S2CGetSyncCacheFrames_2003::default_instance_;
  delete S2CGetSyncCacheFrames_2003_reflection_;
  delete C2SUDPReg_2004::default_instance_;
  delete C2SUDPReg_2004_reflection_;
  delete C2SVerifyFrameSync_2005::default_instance_;
  delete C2SVerifyFrameSync_2005_reflection_;
  delete S2CVerifyFrameSyncFail_2005::default_instance_;
  delete S2CVerifyFrameSyncFail_2005_reflection_;
  delete C2SStartMatch_210::default_instance_;
  delete C2SStartMatch_210_reflection_;
  delete S2CStartMatch_210::default_instance_;
  delete S2CStartMatch_210_reflection_;
  delete S2CMatchSucc_217::default_instance_;
  delete S2CMatchSucc_217_reflection_;
  delete C2SReadyMatch_218::default_instance_;
  delete C2SReadyMatch_218_reflection_;
  delete S2CReadyMatch_218::default_instance_;
  delete S2CReadyMatch_218_reflection_;
  delete S2CReadyMatch_219::default_instance_;
  delete S2CReadyMatch_219_reflection_;
  delete C2SCancelMatch_211::default_instance_;
  delete C2SCancelMatch_211_reflection_;
  delete S2CCancelMatch_211::default_instance_;
  delete S2CCancelMatch_211_reflection_;
  delete S2CMatchSucc_212::default_instance_;
  delete S2CMatchSucc_212_reflection_;
  delete StageBattleEnd::default_instance_;
  delete StageBattleEnd_reflection_;
  delete C2SMatchOver_213::default_instance_;
  delete C2SMatchOver_213_reflection_;
  delete S2CMatchOver_213::default_instance_;
  delete S2CMatchOver_213_reflection_;
  delete C2SLeaveBatUI_214::default_instance_;
  delete C2SLeaveBatUI_214_reflection_;
  delete C2SRoomKick_215::default_instance_;
  delete C2SRoomKick_215_reflection_;
  delete Msgbody216::default_instance_;
  delete Msgbody216_reflection_;
  delete C2STheBattleResult_216::default_instance_;
  delete C2STheBattleResult_216_reflection_;
  delete S2CTheBattleResult_216::default_instance_;
  delete S2CTheBattleResult_216_reflection_;
  delete C2SBatRecordLst_220::default_instance_;
  delete C2SBatRecordLst_220_reflection_;
  delete S2CBatRecordLst_220::default_instance_;
  delete S2CBatRecordLst_220_reflection_;
  delete C2SBatRecord_221::default_instance_;
  delete C2SBatRecord_221_reflection_;
  delete S2CBatRecord_221::default_instance_;
  delete S2CBatRecord_221_reflection_;
  delete C2SSingleBattleResult_222::default_instance_;
  delete C2SSingleBattleResult_222_reflection_;
  delete C2SGetMatchUserNum_223::default_instance_;
  delete C2SGetMatchUserNum_223_reflection_;
  delete S2CGetMatchUserNum_223::default_instance_;
  delete S2CGetMatchUserNum_223_reflection_;
  delete C2SBroadcast_250::default_instance_;
  delete C2SBroadcast_250_reflection_;
  delete S2CBroadcast_250::default_instance_;
  delete S2CBroadcast_250_reflection_;
  delete S2CBroadcastProp_251::default_instance_;
  delete S2CBroadcastProp_251_reflection_;
  delete C2SChatContent_252::default_instance_;
  delete C2SChatContent_252_reflection_;
  delete S2CChatContent_252::default_instance_;
  delete S2CChatContent_252_reflection_;
  delete MailGift::default_instance_;
  delete MailGift_reflection_;
  delete Mail::default_instance_;
  delete Mail_reflection_;
  delete C2SGetMailList_253::default_instance_;
  delete C2SGetMailList_253_reflection_;
  delete S2CGetMailList_253::default_instance_;
  delete S2CGetMailList_253_reflection_;
  delete C2SReadMail_254::default_instance_;
  delete C2SReadMail_254_reflection_;
  delete C2SReceiveGift_255::default_instance_;
  delete C2SReceiveGift_255_reflection_;
  delete S2CSendMail_256::default_instance_;
  delete S2CSendMail_256_reflection_;
  delete C2SDeleteMail_257::default_instance_;
  delete C2SDeleteMail_257_reflection_;
  delete S2CBroadcastLevel_258::default_instance_;
  delete S2CBroadcastLevel_258_reflection_;
  delete S2CImportantNotice_259::default_instance_;
  delete S2CImportantNotice_259_reflection_;
  delete C2SGetShopParams_260::default_instance_;
  delete C2SGetShopParams_260_reflection_;
  delete S2CGetShopParams_260::default_instance_;
  delete S2CGetShopParams_260_reflection_;
  delete C2SSearchUser_280::default_instance_;
  delete C2SSearchUser_280_reflection_;
  delete UserProfile::default_instance_;
  delete UserProfile_reflection_;
  delete S2CSearchUser_280::default_instance_;
  delete S2CSearchUser_280_reflection_;
  delete C2SFriendRequest_281::default_instance_;
  delete C2SFriendRequest_281_reflection_;
  delete S2CFriendRequest_281::default_instance_;
  delete S2CFriendRequest_281_reflection_;
  delete C2SGetFriendRequests_282::default_instance_;
  delete C2SGetFriendRequests_282_reflection_;
  delete S2CGetFriendRequests_282::default_instance_;
  delete S2CGetFriendRequests_282_reflection_;
  delete C2SDealFriendRequest_283::default_instance_;
  delete C2SDealFriendRequest_283_reflection_;
  delete S2CAddNewFriend_284::default_instance_;
  delete S2CAddNewFriend_284_reflection_;
  delete C2SRemoveFriend_285::default_instance_;
  delete C2SRemoveFriend_285_reflection_;
  delete C2SGetFriendList_286::default_instance_;
  delete C2SGetFriendList_286_reflection_;
  delete S2CGetFriendList_286::default_instance_;
  delete S2CGetFriendList_286_reflection_;
  delete C2SGetFriendAvaList_287::default_instance_;
  delete C2SGetFriendAvaList_287_reflection_;
  delete S2CGetFriendAvaList_287::default_instance_;
  delete S2CGetFriendAvaList_287_reflection_;
  delete C2SAddBlackUser_288::default_instance_;
  delete C2SAddBlackUser_288_reflection_;
  delete C2SRemoveBlackUser_289::default_instance_;
  delete C2SRemoveBlackUser_289_reflection_;
  delete C2SGetBlackList_290::default_instance_;
  delete C2SGetBlackList_290_reflection_;
  delete S2CGetBlackList_290::default_instance_;
  delete S2CGetBlackList_290_reflection_;
  delete S2CFriendOnlineStatus_291::default_instance_;
  delete S2CFriendOnlineStatus_291_reflection_;
  delete C2SGetRecentUserList_292::default_instance_;
  delete C2SGetRecentUserList_292_reflection_;
  delete S2CGetRecentUserList_292::default_instance_;
  delete S2CGetRecentUserList_292_reflection_;
  delete C2SUploadCoordinates_293::default_instance_;
  delete C2SUploadCoordinates_293_reflection_;
  delete C2SGetUserNearby_294::default_instance_;
  delete C2SGetUserNearby_294_reflection_;
  delete S2CGetUserNearby_294::default_instance_;
  delete S2CGetUserNearby_294_reflection_;
  delete C2SRankScore_300::default_instance_;
  delete C2SRankScore_300_reflection_;
  delete RankScore::default_instance_;
  delete RankScore_reflection_;
  delete S2CRankScore_300::default_instance_;
  delete S2CRankScore_300_reflection_;
  delete C2SGetShortMsg_311::default_instance_;
  delete C2SGetShortMsg_311_reflection_;
  delete S2CGetShortMsg_311::default_instance_;
  delete S2CGetShortMsg_311_reflection_;
  delete C2SUpdateShortMsg_312::default_instance_;
  delete C2SUpdateShortMsg_312_reflection_;
  delete C2SGetOneResumeMsg_313::default_instance_;
  delete C2SGetOneResumeMsg_313_reflection_;
  delete CharResultRecord::default_instance_;
  delete CharResultRecord_reflection_;
  delete S2CGetOneResumeMsg_313::default_instance_;
  delete S2CGetOneResumeMsg_313_reflection_;
  delete C2SChangeName_314::default_instance_;
  delete C2SChangeName_314_reflection_;
  delete SeasonInfo::default_instance_;
  delete SeasonInfo_reflection_;
  delete S2CStageSeasonStart_320::default_instance_;
  delete S2CStageSeasonStart_320_reflection_;
  delete S2CStageSeasonOver_321::default_instance_;
  delete S2CStageSeasonOver_321_reflection_;
  delete S2CStageSeasonEnd_322::default_instance_;
  delete S2CStageSeasonEnd_322_reflection_;
  delete S2CGetSeasonInfo_323::default_instance_;
  delete S2CGetSeasonInfo_323_reflection_;
  delete C2SGetSeasonInfo_323::default_instance_;
  delete C2SGetSeasonInfo_323_reflection_;
  delete OneContestInfo::default_instance_;
  delete OneContestInfo_reflection_;
  delete OneContestSimpleInfo::default_instance_;
  delete OneContestSimpleInfo_reflection_;
  delete C2SCreateContest_400::default_instance_;
  delete C2SCreateContest_400_reflection_;
  delete S2CBroadContest_400::default_instance_;
  delete S2CBroadContest_400_reflection_;
  delete C2SGetContestList_401::default_instance_;
  delete C2SGetContestList_401_reflection_;
  delete S2CGetContestList_401::default_instance_;
  delete S2CGetContestList_401_reflection_;
  delete C2SSignContest_402::default_instance_;
  delete C2SSignContest_402_reflection_;
  delete S2CSignContest_402::default_instance_;
  delete S2CSignContest_402_reflection_;
  delete S2CSignContestToOther_413::default_instance_;
  delete S2CSignContestToOther_413_reflection_;
  delete C2SCloseContestTeams_403::default_instance_;
  delete C2SCloseContestTeams_403_reflection_;
  delete S2CCloseContestTeams_403::default_instance_;
  delete S2CCloseContestTeams_403_reflection_;
  delete C2SStartContest_404::default_instance_;
  delete C2SStartContest_404_reflection_;
  delete S2CStartContest_404::default_instance_;
  delete S2CStartContest_404_reflection_;
  delete C2SGetContesInfo_405::default_instance_;
  delete C2SGetContesInfo_405_reflection_;
  delete S2CGetContesInfo_405::default_instance_;
  delete S2CGetContesInfo_405_reflection_;
  delete C2SManagerContest_406::default_instance_;
  delete C2SManagerContest_406_reflection_;
  delete S2CManagerContest_406::default_instance_;
  delete S2CManagerContest_406_reflection_;
  delete OnePlayerInfo::default_instance_;
  delete OnePlayerInfo_reflection_;
  delete TeamsInfo::default_instance_;
  delete TeamsInfo_reflection_;
  delete TeamsSimpleInfo::default_instance_;
  delete TeamsSimpleInfo_reflection_;
  delete C2SGetContestTeams_407::default_instance_;
  delete C2SGetContestTeams_407_reflection_;
  delete S2CGetContestTeams_407::default_instance_;
  delete S2CGetContestTeams_407_reflection_;
  delete C2SEditorContesMembers_408::default_instance_;
  delete C2SEditorContesMembers_408_reflection_;
  delete S2CEditorContesMembers_408::default_instance_;
  delete S2CEditorContesMembers_408_reflection_;
  delete C2SQuitContest_409::default_instance_;
  delete C2SQuitContest_409_reflection_;
  delete S2CQuitContest_409::default_instance_;
  delete S2CQuitContest_409_reflection_;
  delete C2SOpenContestTeam_410::default_instance_;
  delete C2SOpenContestTeam_410_reflection_;
  delete S2COpenContestTeam_410::default_instance_;
  delete S2COpenContestTeam_410_reflection_;
  delete S2CContestStop_412::default_instance_;
  delete S2CContestStop_412_reflection_;
  delete AteamVsBteam::default_instance_;
  delete AteamVsBteam_reflection_;
  delete OutVsFight::default_instance_;
  delete OutVsFight_reflection_;
  delete TeamScoreInfo::default_instance_;
  delete TeamScoreInfo_reflection_;
  delete LoopFightInfo::default_instance_;
  delete LoopFightInfo_reflection_;
  delete C2SFightData_415::default_instance_;
  delete C2SFightData_415_reflection_;
  delete S2CFightData_415::default_instance_;
  delete S2CFightData_415_reflection_;
  delete C2SGetContestInfo_414::default_instance_;
  delete C2SGetContestInfo_414_reflection_;
  delete S2CGetContestInfo_414::default_instance_;
  delete S2CGetContestInfo_414_reflection_;
  delete C2SSetEditorContest_417::default_instance_;
  delete C2SSetEditorContest_417_reflection_;
  delete S2CGetContestFightBoInfo_418::default_instance_;
  delete S2CGetContestFightBoInfo_418_reflection_;
  delete S2CGetContestFightResult_416::default_instance_;
  delete S2CGetContestFightResult_416_reflection_;
  delete C2SContestRankInfo_420::default_instance_;
  delete C2SContestRankInfo_420_reflection_;
  delete S2CContestRankInfo_420::default_instance_;
  delete S2CContestRankInfo_420_reflection_;
  delete C2SContestWaitSec_421::default_instance_;
  delete C2SContestWaitSec_421_reflection_;
  delete S2CContestWaitSec_421::default_instance_;
  delete S2CContestWaitSec_421_reflection_;
  delete C2SContestDissmis_422::default_instance_;
  delete C2SContestDissmis_422_reflection_;
  delete S2CContestDissmis_422::default_instance_;
  delete S2CContestDissmis_422_reflection_;
  delete C2SWatchContestBat_423::default_instance_;
  delete C2SWatchContestBat_423_reflection_;
  delete S2CContestReward_424::default_instance_;
  delete S2CContestReward_424_reflection_;
  delete S2CFreshenFightData_425::default_instance_;
  delete S2CFreshenFightData_425_reflection_;
  delete C2SGiveup_426::default_instance_;
  delete C2SGiveup_426_reflection_;
  delete S2CGiveup_426::default_instance_;
  delete S2CGiveup_426_reflection_;
  delete C2SSetSetPassword_427::default_instance_;
  delete C2SSetSetPassword_427_reflection_;
  delete C2SGetSignInActivaty_500::default_instance_;
  delete C2SGetSignInActivaty_500_reflection_;
  delete S2CGetSignInActivaty_500::default_instance_;
  delete S2CGetSignInActivaty_500_reflection_;
  delete C2SSignInActivaty_501::default_instance_;
  delete C2SSignInActivaty_501_reflection_;
  delete C2SRemedialSignInAct_502::default_instance_;
  delete C2SRemedialSignInAct_502_reflection_;
  delete S2CRemedialSignInAct_502::default_instance_;
  delete S2CRemedialSignInAct_502_reflection_;
  delete S2CShowRedPoint_503::default_instance_;
  delete S2CShowRedPoint_503_reflection_;
  delete C2SGetActDegree_520::default_instance_;
  delete C2SGetActDegree_520_reflection_;
  delete ActDegreeItem::default_instance_;
  delete ActDegreeItem_reflection_;
  delete ActDegreeAward::default_instance_;
  delete ActDegreeAward_reflection_;
  delete S2CGetActDegree_520::default_instance_;
  delete S2CGetActDegree_520_reflection_;
  delete S2CSyncActDegreeSched_521::default_instance_;
  delete S2CSyncActDegreeSched_521_reflection_;
  delete C2SRecvActDegreeAward_522::default_instance_;
  delete C2SRecvActDegreeAward_522_reflection_;
  delete S2CRecvActDegreeAward_522::default_instance_;
  delete S2CRecvActDegreeAward_522_reflection_;
  delete C2SGetCommonAct_540::default_instance_;
  delete C2SGetCommonAct_540_reflection_;
  delete CommonAct::default_instance_;
  delete CommonAct_reflection_;
  delete CommonSubAct::default_instance_;
  delete CommonSubAct_reflection_;
  delete S2CGetCommonAct_540::default_instance_;
  delete S2CGetCommonAct_540_reflection_;
  delete S2CSyncCommonActSched_541::default_instance_;
  delete S2CSyncCommonActSched_541_reflection_;
  delete C2SRecvCommonActAward_542::default_instance_;
  delete C2SRecvCommonActAward_542_reflection_;
  delete S2CRecvCommonActAward_542::default_instance_;
  delete S2CRecvCommonActAward_542_reflection_;
  delete C2SAchievementList_600::default_instance_;
  delete C2SAchievementList_600_reflection_;
  delete S2CAchievementList_600::default_instance_;
  delete S2CAchievementList_600_reflection_;
  delete C2SAchievementProgress_601::default_instance_;
  delete C2SAchievementProgress_601_reflection_;
  delete S2CAchievementProgress_601::default_instance_;
  delete S2CAchievementProgress_601_reflection_;
  delete S2CPushAchievement_602::default_instance_;
  delete S2CPushAchievement_602_reflection_;
  delete C2SGetAchievementAward_603::default_instance_;
  delete C2SGetAchievementAward_603_reflection_;
  delete C2SReportBatData_604::default_instance_;
  delete C2SReportBatData_604_reflection_;
}

void protobuf_AddDesc_login_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_login_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013login.proto\022\002pb\".\n\021S2CCommonRet_1000\022\014"
    "\n\004Ptid\030\001 \001(\r\022\013\n\003Ret\030\002 \001(\r\"\016\n\014C2SPing_100"
    "1\"\016\n\014S2CPing_1001\"3\n\017C2S_RegLogin_98\022\017\n\007"
    "Version\030\001 \001(\t\022\017\n\007LtParam\030\002 \001(\t\"+\n\017S2C_Re"
    "gLogin_98\022\013\n\003Acc\030\001 \001(\t\022\013\n\003Pwd\030\002 \001(\t\"X\n\rC"
    "2S_RegAcc_99\022\013\n\003Acc\030\001 \001(\t\022\013\n\003Pwd\030\002 \001(\t\022\013"
    "\n\003Tel\030\003 \001(\t\022\017\n\007Version\030\004 \001(\t\022\017\n\007LtParam\030"
    "\005 \001(\t\"Q\n\022C2S_CreateRole_117\022\014\n\004Name\030\001 \001("
    "\t\022\013\n\003Sex\030\002 \001(\r\022\017\n\007LtParam\030\003 \001(\t\022\017\n\007Versi"
    "on\030\004 \001(\t\"O\n\021C2S_LoginData_116\022\013\n\003Acc\030\001 \001"
    "(\t\022\013\n\003Pwd\030\002 \001(\t\022\017\n\007Version\030\003 \001(\t\022\017\n\007LtPa"
    "ram\030\004 \001(\t\"\304\003\n\021S2C_LoginData_116\022\016\n\006Useri"
    "d\030\001 \001(\004\022\020\n\010Username\030\002 \001(\t\022\016\n\006Roomid\030\003 \001("
    "\r\022\014\n\004Gold\030\004 \001(\r\022\017\n\007Mountid\030\005 \001(\r\022\013\n\003Sex\030"
    "\006 \001(\r\022\021\n\tHideScore\030\007 \001(\r\022\014\n\004Star\030\010 \001(\r\022\017"
    "\n\007StarWin\030\t \001(\r\022\020\n\010StarFail\030\n \001(\r\022\025\n\rSel"
    "fIntroduce\030\013 \001(\t\022\022\n\nStageStart\030\014 \001(\010\022\030\n\020"
    "StarStageProFail\030\r \001(\r\022\021\n\tRuneShard\030\016 \001("
    "\r\022\021\n\tContestId\030\017 \001(\r\022\024\n\014WeaponItemId\030\020 \001"
    "(\r\022\013\n\003Exp\030\021 \001(\r\022\022\n\nGuideSteps\030\022 \001(\r\022\017\n\007D"
    "iamond\030\023 \001(\r\022\r\n\005Level\030\024 \001(\r\022\020\n\010IsExpMax\030"
    "\025 \001(\010\022\026\n\016UseMountSkinId\030\026 \001(\r\022\013\n\003Pid\030\027 \001"
    "(\r\022\024\n\014MatchReadyId\030\030 \001(\r\">\n\030C2S_UpdateGu"
    "ideSteps_118\022\022\n\nGuideSteps\030\001 \001(\r\022\016\n\006IsSk"
    "ip\030\002 \001(\010\"\344\001\n\tPRoomInfo\022\016\n\006RoomId\030\001 \001(\r\022\020"
    "\n\010RoomName\030\002 \001(\t\022\023\n\013RoomMaxPnum\030\003 \001(\r\022\020\n"
    "\010RoomPnum\030\004 \001(\r\022\021\n\tCreateRid\030\005 \001(\004\022\021\n\tIs"
    "started\030\006 \001(\010\022\016\n\006Badge1\030\007 \001(\r\022\016\n\006Badge2\030"
    "\010 \001(\r\022\017\n\007SceneId\030\t \001(\r\022\021\n\tCfgstring\030\n \001("
    "\t\022\022\n\nRandomSeed\030\013 \001(\r\022\020\n\010RoomType\030\014 \001(\r\""
    "\025\n\023C2S_GetRoomList_100\"6\n\023S2C_GetRoomLis"
    "t_100\022\037\n\010Roomlist\030\001 \003(\0132\r.pb.PRoomInfo\"3"
    "\n\020C2SEnterRoom_101\022\016\n\006Roomid\030\001 \001(\r\022\017\n\007Re"
    "login\030\002 \001(\r\"\216\003\n\tPRoomUser\022\016\n\006Userid\030\001 \001("
    "\004\022\020\n\010Username\030\002 \001(\t\022\017\n\007Isready\030\003 \001(\010\022\014\n\004"
    "Camp\030\004 \001(\r\022\017\n\007Mountid\030\005 \001(\r\022\021\n\tIsWatcher"
    "\030\006 \001(\010\022\021\n\tDressData\030\007 \003(\r\022\013\n\003Sex\030\010 \001(\r\022\021"
    "\n\tStageStar\030\t \001(\r\022\024\n\014WeaponItemId\030\n \001(\r\022"
    "\032\n\010RuneList\030\013 \003(\0132\010.pb.Rune\022\020\n\010BatCount\030"
    "\014 \001(\r\022\020\n\010MvpCount\030\r \001(\r\022\025\n\rMountBatCount"
    "\030\016 \001(\r\022\025\n\rMountWinCount\030\017 \001(\r\022\024\n\014AvgShow"
    "Point\030\020 \001(\r\022\023\n\013StageWinNum\030\021 \001(\r\022\024\n\014MvpL"
    "astStage\030\022 \001(\010\022\023\n\013MountSkinId\030\023 \001(\r\022\017\n\007I"
    "sRobot\030\024 \001(\010\"\263\001\n\023S2CEnterRoomRet_101\022\037\n\010"
    "Roominfo\030\001 \001(\0132\r.pb.PRoomInfo\022\037\n\010Userlis"
    "t\030\002 \003(\0132\r.pb.PRoomUser\022&\n\017OffLineUserlis"
    "t\030\003 \003(\0132\r.pb.PRoomUser\022\022\n\nGiveuplist\030\004 \003"
    "(\004\022\r\n\005Udpip\030\005 \001(\t\022\017\n\007Udpport\030\006 \001(\r\"6\n\021C2"
    "SCreateRoom_102\022\020\n\010Roomname\030\001 \001(\t\022\017\n\007Sce"
    "neId\030\002 \001(\r\"\021\n\017C2SExitRoom_103\"\036\n\017S2CExit"
    "Room_103\022\013\n\003Rid\030\001 \001(\004\"#\n\020C2SUserReady_10"
    "4\022\017\n\007Doready\030\001 \001(\010\"0\n\020S2CUserReady_104\022\013"
    "\n\003Rid\030\001 \001(\004\022\017\n\007Isready\030\002 \001(\010\"\024\n\022C2SMaste"
    "rStart_105\"\024\n\022S2CMasterStart_105\"\023\n\021C2SL"
    "oadFinish_106\" \n\021S2CLoadFinish_106\022\013\n\003Ri"
    "d\030\001 \001(\004\"L\n\020S2CRealstart_107\022\016\n\006RoomSn\030\001 "
    "\001(\t\022\025\n\rSvrFrameDelta\030\002 \001(\r\022\021\n\tEnableUDP\030"
    "\003 \001(\010\"H\n\023S2CEnterRoomRet_108\022\037\n\010Userinfo"
    "\030\001 \003(\0132\r.pb.PRoomUser\022\020\n\010Isappend\030\002 \001(\010\""
    "\023\n\021C2SSwitchCamp_109\".\n\021S2CSwitchCamp_10"
    "9\022\013\n\003Rid\030\001 \001(\004\022\014\n\004Camp\030\002 \001(\r\"\026\n\024C2SSwitc"
    "hWatcher_110\"6\n\024S2CSwitchWatcher_110\022\013\n\003"
    "Rid\030\001 \001(\004\022\021\n\tIsWatcher\030\002 \001(\010\"\037\n\020S2CLeave"
    "Game_111\022\013\n\003Rid\030\001 \001(\004\"4\n\022C2SChooseBadge_"
    "113\022\016\n\006Badge1\030\001 \001(\r\022\016\n\006Badge2\030\002 \001(\r\"4\n\022S"
    "2CChooseBadge_113\022\016\n\006Badge1\030\001 \001(\r\022\016\n\006Bad"
    "ge2\030\002 \001(\r\")\n\032C2SBroadRoomcastString_114\022"
    "\013\n\003Val\030\001 \001(\t\")\n\032S2CBroadRoomcastString_1"
    "14\022\013\n\003Val\030\001 \001(\t\"\'\n\025C2SForceEnterRoom_115"
    "\022\016\n\006RoomId\030\001 \001(\r\"F\n\025C2SAddRobotToRoom_11"
    "9\022\016\n\006CampId\030\001 \001(\r\022\017\n\007RobotId\030\002 \001(\r\022\014\n\004Op"
    "er\030\003 \001(\010\"E\n\025S2CAddRobotToRoom_119\022\025\n\rRob"
    "otIdsCamp0\030\001 \003(\r\022\025\n\rRobotIdsCamp1\030\002 \003(\r\""
    "\270\001\n\rPTeammateInfo\022\016\n\006Userid\030\001 \001(\004\022\020\n\010Use"
    "rname\030\002 \001(\t\022\017\n\007LeftSec\030\003 \001(\r\022\020\n\010BatState"
    "\030\004 \001(\r\022\r\n\005Mount\030\005 \001(\r\022\025\n\rTeammateCount\030\006"
    " \001(\r\022\r\n\005IsTop\030\007 \001(\010\022\016\n\006TeamId\030\010 \001(\004\022\021\n\tI"
    "nContest\030\t \001(\010\022\n\n\002Lv\030\n \001(\r\"#\n\023C2SInviteP"
    "layer_120\022\014\n\004Name\030\001 \001(\t\"6\n\023S2CInvitePlay"
    "er_120\022\037\n\004Info\030\001 \001(\0132\021.pb.PTeammateInfo\""
    "f\n\024S2CReceiveInvite_121\022\016\n\006TeamId\030\001 \001(\004\022"
    "\020\n\010FromName\030\002 \001(\t\022\021\n\tExpiresIn\030\003 \001(\r\022\r\n\005"
    "Mount\030\004 \001(\r\022\n\n\002Lv\030\005 \001(\r\"0\n\022C2SAgreeInvit"
    "e_122\022\016\n\006TeamId\030\001 \001(\004\022\n\n\002Op\030\002 \001(\r\"Q\n\022S2C"
    "AgreeInvite_122\022\016\n\006TeamId\030\001 \001(\004\022\037\n\004Info\030"
    "\002 \001(\0132\021.pb.PTeammateInfo\022\n\n\002Op\030\003 \001(\r\"m\n\017"
    "S2CJoinTeam_123\022\016\n\006TeamId\030\001 \001(\004\022\022\n\nCapta"
    "inRid\030\002 \001(\004\022\r\n\005IsTop\030\003 \001(\010\022\'\n\014TeammateLi"
    "st\030\004 \003(\0132\021.pb.PTeammateInfo\"\"\n\023C2SCancel"
    "Invite_124\022\013\n\003Rid\030\001 \001(\004\"\"\n\023S2CCancelInvi"
    "te_124\022\013\n\003Rid\030\001 \001(\004\" \n\021C2SKickPlayer_125"
    "\022\013\n\003Rid\030\001 \001(\004\" \n\021S2CKickPlayer_125\022\013\n\003Ri"
    "d\030\001 \001(\004\"\022\n\020C2SLeaveTeam_126\"3\n\020S2CLeaveT"
    "eam_126\022\013\n\003Rid\030\001 \001(\004\022\022\n\nCaptainRid\030\002 \001(\004"
    "\"%\n\023S2CCancelInvite_127\022\016\n\006TeamId\030\001 \001(\004\""
    "3\n\025S2CPlayerBatState_128\022\013\n\003Rid\030\001 \001(\004\022\r\n"
    "\005State\030\002 \001(\r\".\n\025C2SGetTeamAvaList_129\022\025\n"
    "\rSearchPattern\030\001 \001(\t\"@\n\025S2CGetTeamAvaLis"
    "t_129\022\'\n\014TeammateList\030\001 \003(\0132\021.pb.PTeamma"
    "teInfo\"!\n\020C2SToTopTeam_131\022\r\n\005IsTop\030\001 \001("
    "\010\"!\n\020S2CToTopTeam_131\022\r\n\005IsTop\030\001 \001(\010\"$\n\025"
    "C2SHandoverLeader_132\022\013\n\003Rid\030\001 \001(\004\"$\n\025S2"
    "CHandoverLeader_132\022\013\n\003Rid\030\001 \001(\004\"\"\n\022C2SA"
    "pplyPlayer_133\022\014\n\004Name\030\001 \001(\t\"$\n\022S2CApply"
    "Player_133\022\016\n\006TeamId\030\001 \001(\004\"b\n\023S2CReceive"
    "Apply_134\022\013\n\003Rid\030\001 \001(\004\022\020\n\010FromName\030\002 \001(\t"
    "\022\021\n\tExpiresIn\030\003 \001(\r\022\r\n\005Mount\030\004 \001(\r\022\n\n\002Lv"
    "\030\005 \001(\r\",\n\021C2SAgreeApply_135\022\013\n\003Rid\030\001 \001(\004"
    "\022\n\n\002Op\030\002 \001(\r\"P\n\021S2CAgreeApply_135\022\016\n\006Tea"
    "mId\030\001 \001(\004\022\n\n\002Op\030\002 \001(\r\022\037\n\004Info\030\003 \001(\0132\021.pb"
    ".PTeammateInfo\"2\n\017MallBagItemData\022\016\n\006Ite"
    "mId\030\001 \001(\r\022\017\n\007ItemNum\030\002 \001(\r\"\024\n\022C2SGetChes"
    "tNum_140\":\n\022S2CGetChestNum_140\022\020\n\010ChestN"
    "um\030\001 \001(\r\022\022\n\nWeaponFull\030\002 \001(\010\"\022\n\020C2SOpenC"
    "hest_141\"O\n\013ChestReward\022\016\n\006ItemId\030\001 \001(\r\022"
    "\017\n\007ItemNum\030\002 \001(\r\022\r\n\005Money\030\003 \001(\r\022\020\n\010Weapo"
    "nId\030\004 \001(\t\"7\n\020S2COpenChest_141\022#\n\nRewardL"
    "ist\030\001 \003(\0132\017.pb.ChestReward\"\036\n\017C2SBuyChes"
    "t_142\022\013\n\003Num\030\001 \001(\r\"<\n\023C2S_BuyItemList_15"
    "0\022%\n\010ItemList\030\001 \003(\0132\023.pb.MallBagItemData"
    "\"\030\n\026C2S_ReqBagItemList_151\"\?\n\026S2C_ReqBag"
    "ItemList_151\022%\n\010ItemList\030\001 \003(\0132\023.pb.Mall"
    "BagItemData\"\"\n\017C2S_UseItem_153\022\017\n\007ItemId"
    "s\030\001 \003(\r\",\n\024C2S_RefreshStore_154\022\024\n\014Store"
    "ItemIds\030\001 \003(\r\".\n\024S2C_RefreshStore_154\022\026\n"
    "\016NextRefreshSec\030\001 \001(\r\"\032\n\030C2S_ReqLastStor"
    "eItem_155\"H\n\030S2C_ReqLastStoreItem_155\022\026\n"
    "\016NextRefreshSec\030\001 \001(\r\022\024\n\014StoreItemIds\030\002 "
    "\003(\r\"\033\n\031C2S_ReqUnLockCharList_156\"*\n\026S2C_"
    "UnlockCharList_156\022\020\n\010Mountids\030\001 \003(\r\"\033\n\031"
    "C2S_ReqAlreadyBuyList_157\"\?\n\026S2C_Already"
    "BuyList_157\022%\n\010ItemList\030\001 \003(\0132\023.pb.MallB"
    "agItemData\"F\n\017S2C_AddItem_158\022%\n\010ItemLis"
    "t\030\001 \003(\0132\023.pb.MallBagItemData\022\014\n\004Ptid\030\002 \001"
    "(\r\"3\n\010SuitData\022\013\n\003Idx\030\001 \001(\r\022\014\n\004Name\030\002 \001("
    "\t\022\014\n\004Data\030\003 \003(\r\"3\n\026C2S_UpdateSuitName_16"
    "0\022\013\n\003Idx\030\001 \001(\r\022\014\n\004Name\030\002 \001(\t\" \n\021C2S_Upda"
    "teSex_161\022\013\n\003Sex\030\001 \001(\010\"2\n\022C2S_UpdateSuit"
    "_162\022\013\n\003Idx\030\001 \001(\r\022\017\n\007ItemIds\030\002 \003(\r\"\025\n\023C2"
    "S_GetAllSuits_163\"R\n\023S2C_GetAllSuits_163"
    "\022\016\n\006SelIdx\030\001 \001(\r\022\017\n\007SelIdxF\030\002 \001(\r\022\032\n\004Sui"
    "t\030\003 \003(\0132\014.pb.SuitData\"!\n\017C2S_SelSuit_164"
    "\022\016\n\006SelIdx\030\001 \001(\r\"K\n\nMountClass\022\017\n\007MountI"
    "d\030\001 \001(\r\022\024\n\014MountUseSkin\030\002 \001(\r\022\026\n\016ThisMou"
    "ntSkins\030\003 \003(\r\"\033\n\031C2S_GetAllUnlockMount_1"
    "70\">\n\031S2C_GetAllUnlockMount_170\022!\n\tMount"
    "Data\030\001 \003(\0132\016.pb.MountClass\"9\n\023C2S_Update"
    "Mount_171\022\017\n\007MountId\030\001 \001(\r\022\021\n\tUseSkinId\030"
    "\002 \001(\r\"F\n\023S2C_UpdateMount_171\022\013\n\003Rid\030\001 \001("
    "\004\022\017\n\007Mountid\030\002 \001(\r\022\021\n\tUseSkinId\030\003 \001(\r\"/\n"
    "\027S2C_MountAddOneSkin_173\022\024\n\014AddOneSkinId"
    "\030\001 \001(\r\"\024\n\022C2S_GetAllRune_180\"!\n\004Rune\022\n\n\002"
    "Id\030\001 \001(\r\022\r\n\005Count\030\002 \001(\r\"0\n\022S2C_GetAllRun"
    "e_180\022\032\n\010RuneList\030\001 \003(\0132\010.pb.Rune\"0\n\017C2S"
    "_BuyRune_181\022\016\n\006RuneId\030\001 \001(\r\022\r\n\005Count\030\002 "
    "\001(\r\"6\n\025C2S_DecomposeRune_182\022\016\n\006RuneId\030\001"
    " \001(\r\022\r\n\005Count\030\002 \001(\r\"1\n\032C2S_BatchDecompos"
    "eRune_183\022\023\n\013QualityList\030\001 \003(\r\"8\n\"C2S_Ba"
    "tchDecomposeRuneByItemId_184\022\022\n\nItemIdLi"
    "st\030\001 \003(\r\"\026\n\024C2S_GetAllWeapon_190\"U\n\006Weap"
    "on\022\020\n\010WeaponId\030\001 \001(\t\022\016\n\006ItemId\030\002 \001(\r\022\r\n\005"
    "Weigh\030\003 \001(\r\022\032\n\010RuneList\030\004 \003(\0132\010.pb.Rune\""
    "^\n\024S2C_GetAllWeapon_190\022\036\n\nWeaponList\030\001 "
    "\003(\0132\n.pb.Weapon\022\024\n\014WearWeaponId\030\002 \001(\t\022\020\n"
    "\010Capacity\030\003 \001(\r\"6\n\026C2S_ActivateWeapon_19"
    "1\022\020\n\010WeaponId\030\001 \001(\t\022\n\n\002Op\030\002 \001(\r\"W\n\026S2C_A"
    "ctivateWeapon_191\022\013\n\003Rid\030\001 \001(\004\022\024\n\014Weapon"
    "ItemId\030\002 \001(\r\022\032\n\010RuneList\030\003 \003(\0132\010.pb.Rune"
    "\"&\n\022C2S_SellWeapon_192\022\020\n\010WeaponId\030\001 \003(\t"
    "\"B\n\022C2S_UpdateRune_193\022\020\n\010WeaponId\030\001 \001(\t"
    "\022\032\n\010RuneList\030\002 \003(\0132\010.pb.Rune\"6\n\024C2SFrame"
    "Command_2000\022\014\n\004Data\030\001 \001(\r\022\020\n\010FrameIdx\030\002"
    " \001(\r\"W\n\031S2CServerFrameUpdate_2001\022\017\n\007Fra"
    "meId\030\001 \001(\r\022)\n\007Cmdlist\030\002 \003(\0132\030.pb.C2SFram"
    "eCommand_2000\".\n\032C2SGetRepairFrameData_2"
    "002\022\020\n\010FrameIds\030\001 \003(\r\"R\n\032S2CGetRepairFra"
    "meData_2002\0224\n\rFrameDataList\030\001 \003(\0132\035.pb."
    "S2CServerFrameUpdate_2001\"2\n\032C2SGetSyncC"
    "acheFrames_2003\022\024\n\014BeginFrameId\030\001 \001(\r\"R\n"
    "\032S2CGetSyncCacheFrames_2003\0224\n\rFrameData"
    "List\030\001 \003(\0132\035.pb.S2CServerFrameUpdate_200"
    "1\"\035\n\016C2SUDPReg_2004\022\013\n\003Rid\030\001 \001(\004\">\n\027C2SV"
    "erifyFrameSync_2005\022\017\n\007FrameId\030\001 \001(\r\022\022\n\n"
    "VerifyData\030\002 \001(\r\"\035\n\033S2CVerifyFrameSyncFa"
    "il_2005\"&\n\021C2SStartMatch_210\022\021\n\tMatchMod"
    "e\030\001 \001(\r\"9\n\021S2CStartMatch_210\022\021\n\tMatchMod"
    "e\030\001 \001(\r\022\021\n\tMatchTime\030\002 \001(\r\"\022\n\020S2CMatchSu"
    "cc_217\"\037\n\021C2SReadyMatch_218\022\n\n\002Op\030\001 \001(\010\""
    "!\n\021S2CReadyMatch_218\022\014\n\004Rids\030\001 \003(\004\"\037\n\021S2"
    "CReadyMatch_219\022\n\n\002Tp\030\001 \001(\r\"\024\n\022C2SCancel"
    "Match_211\"\024\n\022S2CCancelMatch_211\"D\n\020S2CMa"
    "tchSucc_212\022\017\n\007WaitSec\030\001 \001(\r\022\037\n\010Userlist"
    "\030\002 \003(\0132\r.pb.PRoomUser\"0\n\016StageBattleEnd\022"
    "\013\n\003UID\030\001 \001(\004\022\021\n\tStageStar\030\002 \001(\r\"\022\n\020C2SMa"
    "tchOver_213\"\'\n\020S2CMatchOver_213\022\023\n\013OverF"
    "rameId\030\001 \001(\r\"\023\n\021C2SLeaveBatUI_214\"\036\n\017C2S"
    "RoomKick_215\022\013\n\003Rid\030\001 \001(\004\"\345\001\n\nMsgbody216"
    "\022\021\n\tRewardStr\030\001 \001(\t\022\021\n\tMatchMode\030\002 \001(\r\022&"
    "\n\nStageDatas\030\003 \003(\0132\022.pb.StageBattleEnd\022\013"
    "\n\003Win\030\004 \001(\r\022\025\n\rLeftJudgement\030\005 \001(\r\022\026\n\016Ri"
    "ghtJudgement\030\006 \001(\r\022\017\n\007BatData\030\007 \001(\t\022\021\n\tL"
    "eftScore\030\010 \001(\r\022\022\n\nRightScore\030\t \001(\r\022\025\n\rBa"
    "ttleSeconds\030\n \001(\r\"\243\001\n\026C2STheBattleResult"
    "_216\022\013\n\003Win\030\001 \001(\r\022\017\n\007BatData\030\002 \001(\t\022\025\n\rLe"
    "ftJudgement\030\003 \001(\r\022\026\n\016RightJudgement\030\004 \001("
    "\r\022\021\n\tLeftScore\030\005 \001(\r\022\022\n\nRightScore\030\006 \001(\r"
    "\022\025\n\rBattleSeconds\030\007 \001(\r\"H\n\026S2CTheBattleR"
    "esult_216\022\034\n\004Body\030\001 \001(\0132\016.pb.Msgbody216\022"
    "\020\n\010IsExpMax\030\002 \001(\010\"\025\n\023C2SBatRecordLst_220"
    "\"C\n\023S2CBatRecordLst_220\022\023\n\013BatRecIdLst\030\001"
    " \003(\004\022\027\n\017BatRecIdTickLst\030\002 \003(\r\"\'\n\020C2SBatR"
    "ecord_221\022\023\n\013BatRecordId\030\001 \001(\004\"\255\002\n\020S2CBa"
    "tRecord_221\022\023\n\013BatRecordId\030\001 \001(\004\022\014\n\004Tick"
    "\030\002 \001(\r\022\022\n\nRandomSeed\030\003 \001(\r\022\037\n\010Userlist\030\004"
    " \003(\0132\r.pb.PRoomUser\0224\n\rFrameDataList\030\005 \003"
    "(\0132\035.pb.S2CServerFrameUpdate_2001\022\016\n\006Bad"
    "ge1\030\006 \001(\r\022\016\n\006Badge2\030\007 \001(\r\022\017\n\007SceneId\030\010 \001"
    "(\r\022\021\n\tCfgstring\030\t \001(\t\022\034\n\004Body\030\n \001(\0132\016.pb"
    ".Msgbody216\022\022\n\nGiveupRids\030\013 \001(\t\022\025\n\rSvrFr"
    "ameDelta\030\014 \001(\r\",\n\031C2SSingleBattleResult_"
    "222\022\017\n\007LtParam\030\001 \001(\t\"\030\n\026C2SGetMatchUserN"
    "um_223\"%\n\026S2CGetMatchUserNum_223\022\013\n\003Num\030"
    "\001 \001(\r\"#\n\020C2SBroadcast_250\022\017\n\007Content\030\001 \001"
    "(\t\"#\n\020S2CBroadcast_250\022\017\n\007Content\030\001 \001(\t\""
    "0\n\024S2CBroadcastProp_251\022\013\n\003Idx\030\001 \001(\r\022\013\n\003"
    "Val\030\002 \001(\r\"U\n\022C2SChatContent_252\022\017\n\007Chann"
    "el\030\001 \001(\r\022\017\n\007Content\030\002 \001(\t\022\016\n\006Userid\030\003 \001("
    "\004\022\r\n\005Param\030\004 \001(\t\"\236\001\n\022S2CChatContent_252\022"
    "\017\n\007Channel\030\001 \001(\r\022\014\n\004Name\030\002 \001(\t\022\017\n\007Conten"
    "t\030\003 \001(\t\022\016\n\006Userid\030\004 \001(\004\022\r\n\005Level\030\005 \001(\r\022\013"
    "\n\003Sex\030\006 \001(\r\022\014\n\004Star\030\007 \001(\r\022\r\n\005Param\030\010 \001(\t"
    "\022\017\n\007Mountid\030\t \001(\r\")\n\010MailGift\022\016\n\006ItemId\030"
    "\001 \001(\r\022\r\n\005Count\030\002 \001(\r\"\230\001\n\004Mail\022\n\n\002Id\030\001 \001("
    "\r\022\r\n\005Title\030\002 \001(\t\022\016\n\006Sender\030\003 \001(\t\022\020\n\010Send"
    "time\030\004 \001(\r\022\017\n\007Content\030\005 \001(\t\022\036\n\010GiftList\030"
    "\006 \003(\0132\014.pb.MailGift\022\016\n\006IsRead\030\007 \001(\010\022\022\n\nI"
    "sReceived\030\010 \001(\010\"\024\n\022C2SGetMailList_253\"0\n"
    "\022S2CGetMailList_253\022\032\n\010MailList\030\001 \003(\0132\010."
    "pb.Mail\"\035\n\017C2SReadMail_254\022\n\n\002Id\030\001 \001(\r\" "
    "\n\022C2SReceiveGift_255\022\n\n\002Id\030\001 \001(\r\"-\n\017S2CS"
    "endMail_256\022\032\n\010MailInfo\030\001 \001(\0132\010.pb.Mail\""
    "\037\n\021C2SDeleteMail_257\022\n\n\002Id\030\001 \001(\r\"F\n\025S2CB"
    "roadcastLevel_258\022\r\n\005Level\030\001 \001(\r\022\013\n\003Exp\030"
    "\002 \001(\r\022\021\n\tRewardStr\030\003 \001(\t\">\n\026S2CImportant"
    "Notice_259\022\017\n\007Content\030\001 \001(\t\022\023\n\013ReplayTim"
    "es\030\002 \001(\r\"\026\n\024C2SGetShopParams_260\"\'\n\024S2CG"
    "etShopParams_260\022\017\n\007MaxStar\030\001 \001(\r\"1\n\021C2S"
    "SearchUser_280\022\016\n\006Userid\030\001 \001(\004\022\014\n\004Name\030\002"
    " \001(\t\"\320\001\n\013UserProfile\022\016\n\006Userid\030\001 \001(\004\022\014\n\004"
    "Name\030\002 \001(\t\022\013\n\003Sex\030\003 \001(\r\022\r\n\005Level\030\004 \001(\r\022\014"
    "\n\004Star\030\005 \001(\r\022\020\n\010Intimacy\030\006 \001(\r\022\021\n\tVerify"
    "Msg\030\007 \001(\t\022\017\n\007Channel\030\010 \001(\r\022\016\n\006Online\030\t \001"
    "(\010\022\020\n\010Location\030\n \001(\t\022\020\n\010Distance\030\013 \001(\r\022\017"
    "\n\007Mountid\030\014 \001(\r\"2\n\021S2CSearchUser_280\022\035\n\004"
    "User\030\001 \001(\0132\017.pb.UserProfile\"J\n\024C2SFriend"
    "Request_281\022\016\n\006Userid\030\001 \001(\004\022\017\n\007Channel\030\002"
    " \001(\r\022\021\n\tVerifyMsg\030\003 \001(\t\"5\n\024S2CFriendRequ"
    "est_281\022\035\n\004User\030\001 \001(\0132\017.pb.UserProfile\"\032"
    "\n\030C2SGetFriendRequests_282\"C\n\030S2CGetFrie"
    "ndRequests_282\022\'\n\016FriendRequests\030\001 \003(\0132\017"
    ".pb.UserProfile\"6\n\030C2SDealFriendRequest_"
    "283\022\016\n\006Userid\030\001 \001(\004\022\n\n\002Op\030\002 \001(\r\"4\n\023S2CAd"
    "dNewFriend_284\022\035\n\004User\030\001 \001(\0132\017.pb.UserPr"
    "ofile\"%\n\023C2SRemoveFriend_285\022\016\n\006Userid\030\001"
    " \001(\004\"\026\n\024C2SGetFriendList_286\";\n\024S2CGetFr"
    "iendList_286\022#\n\nFriendList\030\001 \003(\0132\017.pb.Us"
    "erProfile\"&\n\027C2SGetFriendAvaList_287\022\013\n\003"
    "Num\030\001 \001(\r\"<\n\027S2CGetFriendAvaList_287\022!\n\010"
    "UserList\030\001 \003(\0132\017.pb.UserProfile\"%\n\023C2SAd"
    "dBlackUser_288\022\016\n\006Userid\030\001 \001(\004\"(\n\026C2SRem"
    "oveBlackUser_289\022\016\n\006Userid\030\001 \001(\004\"\025\n\023C2SG"
    "etBlackList_290\"9\n\023S2CGetBlackList_290\022\""
    "\n\tBlackList\030\001 \003(\0132\017.pb.UserProfile\";\n\031S2"
    "CFriendOnlineStatus_291\022\016\n\006Userid\030\001 \001(\004\022"
    "\016\n\006Online\030\002 \001(\010\"\032\n\030C2SGetRecentUserList_"
    "292\"=\n\030S2CGetRecentUserList_292\022!\n\010UserL"
    "ist\030\001 \003(\0132\017.pb.UserProfile\"\?\n\030C2SUploadC"
    "oordinates_293\022\021\n\tLongitude\030\001 \001(\t\022\020\n\010Lat"
    "itude\030\002 \001(\t\"\026\n\024C2SGetUserNearby_294\"9\n\024S"
    "2CGetUserNearby_294\022!\n\010UserList\030\001 \003(\0132\017."
    "pb.UserProfile\"%\n\020C2SRankScore_300\022\021\n\tMa"
    "tchMode\030\001 \001(\r\"O\n\tRankScore\022\016\n\006Userid\030\001 \001"
    "(\004\022\020\n\010Username\030\002 \001(\t\022\r\n\005Score\030\003 \001(\r\022\021\n\tS"
    "ocreTime\030\004 \001(\r\"T\n\020S2CRankScore_300\022\037\n\010Ra"
    "nklist\030\001 \003(\0132\r.pb.RankScore\022\014\n\004Rank\030\002 \001("
    "\r\022\021\n\tMatchMode\030\003 \001(\r\"\024\n\022C2SGetShortMsg_3"
    "11\"%\n\022S2CGetShortMsg_311\022\017\n\007Msglist\030\001 \003("
    "\r\"(\n\025C2SUpdateShortMsg_312\022\017\n\007Msglist\030\001 "
    "\003(\r\"(\n\026C2SGetOneResumeMsg_313\022\016\n\006Userid\030"
    "\001 \001(\004\"E\n\020CharResultRecord\022\017\n\007Mountid\030\001 \001"
    "(\r\022\020\n\010FightNum\030\002 \001(\r\022\016\n\006WinNum\030\003 \001(\r\"\277\002\n"
    "\026S2CGetOneResumeMsg_313\022\021\n\tStageStar\030\001 \001"
    "(\r\022\017\n\007Mountid\030\002 \001(\r\022\013\n\003Sex\030\003 \001(\r\022\014\n\004Name"
    "\030\004 \001(\t\022\020\n\010TeamName\030\005 \001(\t\022\025\n\rSelfIntroduc"
    "e\030\006 \001(\t\022\022\n\nRiderCount\030\007 \001(\r\022\023\n\013BattleCou"
    "nt\030\010 \001(\r\022\024\n\014ClothesCount\030\t \001(\r\022\020\n\010MVPCou"
    "nt\030\n \001(\r\022\013\n\003UID\030\013 \001(\004\022\020\n\010BatDatas\030\014 \003(\t\022"
    "\023\n\013SeasonInfos\030\r \001(\t\022&\n\010CharData\030\016 \003(\0132\024"
    ".pb.CharResultRecord\022\020\n\010Location\030\017 \001(\t\"N"
    "\n\021C2SChangeName_314\022\020\n\010UserName\030\001 \001(\t\022\025\n"
    "\rSelfIntroduce\030\002 \001(\t\022\020\n\010Location\030\003 \001(\t\"Q"
    "\n\nSeasonInfo\022\013\n\003Sid\030\001 \001(\t\022\022\n\nSeasonName\030"
    "\002 \001(\t\022\021\n\tStartTick\030\003 \001(\r\022\017\n\007EndTick\030\004 \001("
    "\r\"H\n\027S2CStageSeasonStart_320\022\034\n\004Info\030\001 \001"
    "(\0132\016.pb.SeasonInfo\022\017\n\007ShowInh\030\002 \001(\010\"6\n\026S"
    "2CStageSeasonOver_321\022\034\n\004Info\030\001 \001(\0132\016.pb"
    ".SeasonInfo\"Y\n\025S2CStageSeasonEnd_322\022\021\n\t"
    "RewardStr\030\001 \001(\t\022\034\n\004Info\030\002 \001(\0132\016.pb.Seaso"
    "nInfo\022\017\n\007MaxStar\030\003 \001(\r\"4\n\024S2CGetSeasonIn"
    "fo_323\022\034\n\004Info\030\001 \001(\0132\016.pb.SeasonInfo\"\026\n\024"
    "C2SGetSeasonInfo_323\"\253\005\n\016OneContestInfo\022"
    "\021\n\tContestId\030\001 \001(\r\022\023\n\013ShowContest\030\002 \001(\010\022"
    "\022\n\nStartFight\030\003 \001(\010\022\024\n\014ContestLevel\030\004 \001("
    "\r\022\023\n\013ContestName\030\005 \001(\t\022\027\n\017ContestDescrib"
    "e\030\006 \001(\t\022#\n\014NewTeamsInfo\030\007 \003(\0132\r.pb.Teams"
    "Info\022\r\n\005MapId\030\010 \001(\r\022\022\n\nMaxTeamNum\030\t \001(\r\022"
    "\024\n\014SetLoopFirst\030\n \001(\010\022\026\n\016SetLoopBOTimes\030"
    "\013 \001(\r\022\027\n\017SetFinalBOTimes\030\014 \001(\r\022\031\n\021DeathF"
    "ightBOTimes\030\r \001(\r\022\"\n\032SetEveryFightWaitTi"
    "meFixed\030\016 \001(\010\022\030\n\020CreatePlayerName\030\017 \001(\t\022"
    "!\n\031MaybeContestFightMintues1\030\020 \001(\r\022!\n\031Ma"
    "ybeContestFightMintues2\030\021 \001(\r\022\027\n\017CreateP"
    "layerUid\030\022 \001(\004\022\023\n\013SettingCode\030\023 \001(\r\022\033\n\023L"
    "oopCircleWaitTimes\030\024 \001(\r\022\032\n\022LoopFightWai"
    "tTimes\030\025 \001(\r\022#\n\033FinalOrDeathCircleWaitTi"
    "mes\030\026 \001(\r\022\"\n\032FinalOrDeathFightWaitTimes\030"
    "\027 \001(\r\022\022\n\nGiveupRids\030\030 \003(\004\022\'\n\005Sinfo\030\031 \001(\013"
    "2\030.pb.OneContestSimpleInfo\"\322\003\n\024OneContes"
    "tSimpleInfo\022\021\n\tContestId\030\001 \001(\r\022\023\n\013ShowCo"
    "ntest\030\002 \001(\010\022\024\n\014ContestLevel\030\004 \001(\r\022\023\n\013Con"
    "testName\030\005 \001(\t\022\027\n\017ContestDescribe\030\006 \001(\t\022"
    "\030\n\020CreatePlayerName\030\007 \001(\t\022\027\n\017CreatePlaye"
    "rUID\030\010 \001(\004\022\024\n\014SetLoopFirst\030\t \001(\010\022\025\n\rSign"
    "PlayerNum\030\n \001(\r\022!\n\031MaybeContestFightMint"
    "ues1\030\013 \001(\r\022!\n\031MaybeContestFightMintues2\030"
    "\014 \001(\r\022\022\n\nLoopBoTime\030\r \001(\r\022\024\n\014FinalBOTime"
    "s\030\016 \001(\r\022\031\n\021DeathFightBOTimes\030\017 \001(\r\022\"\n\032Se"
    "tEveryFightWaitTimeFixed\030\020 \001(\010\022\024\n\014Contes"
    "tState\030\021 \001(\r\022\023\n\013OpenTeamNum\030\022 \001(\r\022\024\n\014Nee"
    "dPassword\030\023 \001(\010\"\201\001\n\024C2SCreateContest_400"
    "\022\024\n\014ContestLevel\030\001 \001(\r\022\023\n\013ShowContest\030\002 "
    "\001(\010\022\020\n\010IsSecret\030\003 \001(\010\022\023\n\013ContestName\030\004 \001"
    "(\t\022\027\n\017ContestDescribe\030\005 \001(\t\"A\n\023S2CBroadC"
    "ontest_400\022*\n\016TheContestInfo\030\001 \001(\0132\022.pb."
    "OneContestInfo\"\027\n\025C2SGetContestList_401\""
    "M\n\025S2CGetContestList_401\0224\n\022TheContestIn"
    "foList\030\001 \003(\0132\030.pb.OneContestSimpleInfo\"<"
    "\n\022C2SSignContest_402\022\021\n\tContestId\030\001 \001(\r\022"
    "\023\n\013PasswordStr\030\002 \001(\t\"R\n\022S2CSignContest_4"
    "02\022\020\n\010SignCode\030\001 \001(\r\022*\n\016TheContestInfo\030\002"
    " \001(\0132\022.pb.OneContestInfo\"X\n\031S2CSignConte"
    "stToOther_413\022\025\n\rContestTeamId\030\001 \001(\r\022$\n\t"
    "addPlayer\030\002 \003(\0132\021.pb.OnePlayerInfo\"+\n\030C2"
    "SCloseContestTeams_403\022\017\n\007CloseId\030\001 \001(\r\""
    "+\n\030S2CCloseContestTeams_403\022\017\n\007CloseId\030\001"
    " \001(\r\"\025\n\023C2SStartContest_404\"6\n\023S2CStartC"
    "ontest_404\022\037\n\010TeamInfo\030\001 \003(\0132\r.pb.PRoomU"
    "ser\")\n\024C2SGetContesInfo_405\022\021\n\tContestId"
    "\030\001 \001(\r\"E\n\024S2CGetContesInfo_405\022-\n\013Contes"
    "tInfo\030\001 \001(\0132\030.pb.OneContestSimpleInfo\"\301\002"
    "\n\025C2SManagerContest_406\022\r\n\005MapId\030\001 \001(\r\022\024"
    "\n\014SetLoopFirst\030\002 \001(\010\022\026\n\016SetLoopBOTimes\030\003"
    " \001(\r\022\033\n\023LoopCircleWaitTimes\030\004 \001(\r\022\032\n\022Loo"
    "pFightWaitTimes\030\005 \001(\r\022\027\n\017SetFinalBOTimes"
    "\030\006 \001(\r\022\027\n\017SetDeathBOTimes\030\007 \001(\r\022#\n\033Final"
    "OrDeathCircleWaitTimes\030\010 \001(\r\022\"\n\032FinalOrD"
    "eathFightWaitTimes\030\t \001(\r\022\"\n\032SetEveryFigh"
    "tWaitTimeFixed\030\n \001(\010\022\023\n\013SettingCode\030\013 \001("
    "\r\"\301\002\n\025S2CManagerContest_406\022\r\n\005MapId\030\001 \001"
    "(\r\022\024\n\014SetLoopFirst\030\002 \001(\010\022\026\n\016SetLoopBOTim"
    "es\030\003 \001(\r\022\033\n\023LoopCircleWaitTimes\030\004 \001(\r\022\032\n"
    "\022LoopFightWaitTimes\030\005 \001(\r\022\027\n\017SetFinalBOT"
    "imes\030\006 \001(\r\022\027\n\017SetDeathBOTimes\030\007 \001(\r\022#\n\033F"
    "inalOrDeathCircleWaitTimes\030\010 \001(\r\022\"\n\032Fina"
    "lOrDeathFightWaitTimes\030\t \001(\r\022\"\n\032SetEvery"
    "FightWaitTimeFixed\030\n \001(\010\022\023\n\013SettingCode\030"
    "\013 \001(\r\"k\n\rOnePlayerInfo\022\017\n\007TeamsId\030\001 \001(\004\022"
    "\021\n\tPlayerUID\030\002 \001(\004\022\022\n\nPlayerName\030\003 \001(\t\022\017"
    "\n\007Mountid\030\004 \001(\r\022\021\n\tIsCaptain\030\005 \001(\010\"Y\n\tTe"
    "amsInfo\022\025\n\rContestTeamId\030\001 \001(\r\022\016\n\006IsOpen"
    "\030\002 \001(\010\022%\n\nplayerList\030\003 \003(\0132\021.pb.OnePlaye"
    "rInfo\"4\n\017TeamsSimpleInfo\022\017\n\007TeamsId\030\001 \001("
    "\004\022\020\n\010TeamName\030\002 \001(\t\"+\n\026C2SGetContestTeam"
    "s_407\022\021\n\tContestId\030\001 \001(\r\"6\n\026S2CGetContes"
    "tTeams_407\022\034\n\005Infos\030\001 \003(\0132\r.pb.TeamsInfo"
    "\"A\n\032C2SEditorContesMembers_408\022#\n\014NewTea"
    "msInfo\030\001 \003(\0132\r.pb.TeamsInfo\"A\n\032S2CEditor"
    "ContesMembers_408\022#\n\014NewTeamsInfo\030\001 \003(\0132"
    "\r.pb.TeamsInfo\"(\n\022C2SQuitContest_409\022\022\n\n"
    "DeleteRids\030\001 \003(\004\"&\n\022S2CQuitContest_409\022\020"
    "\n\010QuitUids\030\001 \003(\004\"3\n\026C2SOpenContestTeam_4"
    "10\022\031\n\021OpenContestTeamId\030\001 \001(\r\"3\n\026S2COpen"
    "ContestTeam_410\022\031\n\021OpenContestTeamId\030\001 \001"
    "(\r\"5\n\022S2CContestStop_412\022\037\n\027ClearContest"
    "DataSeconds\030\001 \001(\r\"\241\001\n\014AteamVsBteam\022\022\n\nLe"
    "ftteamId\030\001 \001(\r\022\023\n\013RightteamId\030\002 \001(\r\022\026\n\016L"
    "eftteamWinNum\030\003 \001(\r\022\027\n\017RightteamWinNum\030\004"
    " \001(\r\022\021\n\twinTeamId\030\005 \001(\r\022\020\n\010RankCode\030\006 \001("
    "\r\022\022\n\nIsFighting\030\007 \001(\010\"\244\001\n\nOutVsFight\022\022\n\n"
    "LeftteamId\030\001 \001(\r\022\023\n\013RightteamId\030\002 \001(\r\022\026\n"
    "\016LeftteamWinNum\030\003 \001(\r\022\027\n\017RightteamWinNum"
    "\030\004 \001(\r\022\021\n\twinTeamId\030\005 \001(\r\022\025\n\rFightTypeCo"
    "de\030\006 \001(\r\022\022\n\nIsFighting\030\007 \001(\010\"g\n\rTeamScor"
    "eInfo\022\016\n\006TeamID\030\001 \001(\r\022\r\n\005Score\030\002 \001(\r\022\016\n\006"
    "WinNum\030\003 \001(\r\022\017\n\007LoseNum\030\004 \001(\r\022\026\n\016BattleK"
    "ADScore\030\005 \001(\r\"/\n\rLoopFightInfo\022\016\n\006ATeams"
    "\030\001 \003(\r\022\016\n\006BTeams\030\002 \003(\r\"%\n\020C2SFightData_4"
    "15\022\021\n\tContestId\030\001 \001(\r\"\310\001\n\020S2CFightData_4"
    "15\022$\n\tloopFight\030\001 \001(\0132\021.pb.LoopFightInfo"
    "\022(\n\rteamScoreData\030\002 \003(\0132\021.pb.TeamScoreIn"
    "fo\022$\n\nRankFights\030\003 \003(\0132\020.pb.AteamVsBteam"
    "\022!\n\tOutFights\030\004 \003(\0132\016.pb.OutVsFight\022\033\n\023L"
    "oopFightWinTeamNum\030\005 \001(\r\"\027\n\025C2SGetContes"
    "tInfo_414\"a\n\025S2CGetContestInfo_414\022\'\n\013Co"
    "ntestInfo\030\001 \001(\0132\022.pb.OneContestInfo\022\037\n\010T"
    "eamInfo\030\002 \003(\0132\r.pb.PRoomUser\".\n\027C2SSetEd"
    "itorContest_417\022\023\n\013BeginEditor\030\001 \001(\010\"\251\001\n"
    "\034S2CGetContestFightBoInfo_418\022\022\n\nLeftTea"
    "mId\030\001 \001(\r\022\025\n\rLeftTeamBoWin\030\002 \001(\r\022\023\n\013Righ"
    "tTeamId\030\003 \001(\r\022\026\n\016RightTeamBoWin\030\004 \001(\r\022\030\n"
    "\020ContestFightType\030\005 \001(\r\022\027\n\017ContestFightN"
    "um\030\006 \001(\r\"I\n\034S2CGetContestFightResult_416"
    "\022\023\n\013ISLoopFight\030\001 \001(\010\022\024\n\014OutFightCode\030\002 "
    "\001(\r\"\030\n\026C2SContestRankInfo_420\".\n\026S2CCont"
    "estRankInfo_420\022\024\n\014ContestRanks\030\001 \003(\t\"\027\n"
    "\025C2SContestWaitSec_421\"$\n\025S2CContestWait"
    "Sec_421\022\013\n\003Sec\030\001 \001(\r\"\027\n\025C2SContestDissmi"
    "s_422\"\027\n\025S2CContestDissmis_422\"\?\n\026C2SWat"
    "chContestBat_423\022\022\n\nLeftTeamId\030\001 \001(\r\022\021\n\t"
    "ContestId\030\002 \001(\r\":\n\024S2CContestReward_424\022"
    "\021\n\tRewardStr\030\001 \001(\t\022\017\n\007Ranking\030\002 \001(\r\"\031\n\027S"
    "2CFreshenFightData_425\"\017\n\rC2SGiveup_426\""
    "\034\n\rS2CGiveup_426\022\013\n\003Rid\030\001 \001(\004\")\n\025C2SSetS"
    "etPassword_427\022\020\n\010Password\030\001 \001(\t\"\032\n\030C2SG"
    "etSignInActivaty_500\"\266\001\n\030S2CGetSignInAct"
    "ivaty_500\022\021\n\tBeginTime\030\001 \001(\r\022\017\n\007EndTime\030"
    "\002 \001(\r\022%\n\010ItemList\030\003 \003(\0132\023.pb.MallBagItem"
    "Data\022\021\n\tSignedIdx\030\004 \001(\r\022\022\n\nRemedyCost\030\005 "
    "\001(\r\022\023\n\013RemedyTimes\030\006 \001(\r\022\023\n\013SignedToday\030"
    "\007 \001(\010\"\027\n\025C2SSignInActivaty_501\"\032\n\030C2SRem"
    "edialSignInAct_502\"C\n\030S2CRemedialSignInA"
    "ct_502\022\022\n\nRemedyCost\030\001 \001(\r\022\023\n\013RemedyTime"
    "s\030\002 \001(\r\"<\n\023S2CShowRedPoint_503\022\n\n\002Id\030\001 \001"
    "(\r\022\014\n\004Type\030\002 \001(\r\022\013\n\003Num\030\003 \001(\r\"\025\n\023C2SGetA"
    "ctDegree_520\"2\n\rActDegreeItem\022\016\n\006ItemId\030"
    "\001 \001(\r\022\021\n\tAchvTimes\030\002 \001(\r\"Y\n\016ActDegreeAwa"
    "rd\022\021\n\tActDegree\030\001 \001(\r\022%\n\010ItemList\030\002 \003(\0132"
    "\023.pb.MallBagItemData\022\r\n\005IsGet\030\003 \001(\010\"\252\001\n\023"
    "S2CGetActDegree_520\022\r\n\005Daily\030\001 \001(\r\022\016\n\006We"
    "ekly\030\002 \001(\r\022#\n\010ItemList\030\003 \003(\0132\021.pb.ActDeg"
    "reeItem\022&\n\nDailyAward\030\004 \003(\0132\022.pb.ActDegr"
    "eeAward\022\'\n\013WeeklyAward\030\005 \003(\0132\022.pb.ActDeg"
    "reeAward\"_\n\031S2CSyncActDegreeSched_521\022\r\n"
    "\005Daily\030\001 \001(\r\022\016\n\006Weekly\030\002 \001(\r\022#\n\010ItemList"
    "\030\003 \003(\0132\021.pb.ActDegreeItem\"9\n\031C2SRecvActD"
    "egreeAward_522\022\014\n\004Type\030\001 \001(\r\022\016\n\006Degree\030\002"
    " \001(\r\"9\n\031S2CRecvActDegreeAward_522\022\014\n\004Typ"
    "e\030\001 \001(\r\022\016\n\006Degree\030\002 \001(\r\"\025\n\023C2SGetCommonA"
    "ct_540\"z\n\tCommonAct\022\n\n\002Id\030\001 \001(\r\022\014\n\004Name\030"
    "\002 \001(\t\022\021\n\tBeginTime\030\003 \001(\r\022\017\n\007EndTime\030\004 \001("
    "\r\022\014\n\004Desc\030\005 \001(\t\022!\n\007SubList\030\006 \003(\0132\020.pb.Co"
    "mmonSubAct\"\231\001\n\014CommonSubAct\022\n\n\002Id\030\001 \001(\r\022"
    "\017\n\007Wording\030\002 \001(\t\022&\n\tAwardList\030\003 \003(\0132\023.pb"
    ".MallBagItemData\022\022\n\nLimitTimes\030\004 \001(\r\022\021\n\t"
    "AchvTimes\030\005 \001(\r\022\r\n\005IsGet\030\006 \001(\010\022\016\n\006CondId"
    "\030\007 \001(\r\"5\n\023S2CGetCommonAct_540\022\036\n\007ActList"
    "\030\001 \003(\0132\r.pb.CommonAct\"L\n\031S2CSyncCommonAc"
    "tSched_541\022\r\n\005ActId\030\001 \001(\r\022\r\n\005SubId\030\002 \003(\r"
    "\022\021\n\tAchvTimes\030\003 \003(\r\"*\n\031C2SRecvCommonActA"
    "ward_542\022\r\n\005SubId\030\001 \001(\r\"*\n\031S2CRecvCommon"
    "ActAward_542\022\r\n\005SubId\030\001 \001(\r\"\030\n\026C2SAchiev"
    "ementList_600\"p\n\026S2CAchievementList_600\022"
    "\021\n\tAchvLevel\030\001 \001(\r\022\017\n\007AchvExp\030\002 \001(\r\022\024\n\014A"
    "chvAwardIdx\030\003 \001(\r\022\n\n\002Id\030\004 \003(\r\022\020\n\010AchvTim"
    "e\030\005 \003(\r\",\n\032C2SAchievementProgress_601\022\016\n"
    "\006CondId\030\001 \001(\r\"/\n\032S2CAchievementProgress_"
    "601\022\021\n\tAchvTimes\030\001 \001(\r\"L\n\026S2CPushAchieve"
    "ment_602\022\021\n\tAchvLevel\030\001 \001(\r\022\017\n\007AchvExp\030\002"
    " \001(\r\022\016\n\006AchvId\030\003 \001(\r\"\034\n\032C2SGetAchievemen"
    "tAward_603\"5\n\024C2SReportBatData_604\022\016\n\006Co"
    "ndId\030\001 \003(\r\022\r\n\005Value\030\002 \003(\rB\005\252\002\002pbb\006proto3", 19240);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "login.proto", &protobuf_RegisterTypes);
  S2CCommonRet_1000::default_instance_ = new S2CCommonRet_1000();
  C2SPing_1001::default_instance_ = new C2SPing_1001();
  S2CPing_1001::default_instance_ = new S2CPing_1001();
  C2S_RegLogin_98::default_instance_ = new C2S_RegLogin_98();
  S2C_RegLogin_98::default_instance_ = new S2C_RegLogin_98();
  C2S_RegAcc_99::default_instance_ = new C2S_RegAcc_99();
  C2S_CreateRole_117::default_instance_ = new C2S_CreateRole_117();
  C2S_LoginData_116::default_instance_ = new C2S_LoginData_116();
  S2C_LoginData_116::default_instance_ = new S2C_LoginData_116();
  C2S_UpdateGuideSteps_118::default_instance_ = new C2S_UpdateGuideSteps_118();
  PRoomInfo::default_instance_ = new PRoomInfo();
  C2S_GetRoomList_100::default_instance_ = new C2S_GetRoomList_100();
  S2C_GetRoomList_100::default_instance_ = new S2C_GetRoomList_100();
  C2SEnterRoom_101::default_instance_ = new C2SEnterRoom_101();
  PRoomUser::default_instance_ = new PRoomUser();
  S2CEnterRoomRet_101::default_instance_ = new S2CEnterRoomRet_101();
  C2SCreateRoom_102::default_instance_ = new C2SCreateRoom_102();
  C2SExitRoom_103::default_instance_ = new C2SExitRoom_103();
  S2CExitRoom_103::default_instance_ = new S2CExitRoom_103();
  C2SUserReady_104::default_instance_ = new C2SUserReady_104();
  S2CUserReady_104::default_instance_ = new S2CUserReady_104();
  C2SMasterStart_105::default_instance_ = new C2SMasterStart_105();
  S2CMasterStart_105::default_instance_ = new S2CMasterStart_105();
  C2SLoadFinish_106::default_instance_ = new C2SLoadFinish_106();
  S2CLoadFinish_106::default_instance_ = new S2CLoadFinish_106();
  S2CRealstart_107::default_instance_ = new S2CRealstart_107();
  S2CEnterRoomRet_108::default_instance_ = new S2CEnterRoomRet_108();
  C2SSwitchCamp_109::default_instance_ = new C2SSwitchCamp_109();
  S2CSwitchCamp_109::default_instance_ = new S2CSwitchCamp_109();
  C2SSwitchWatcher_110::default_instance_ = new C2SSwitchWatcher_110();
  S2CSwitchWatcher_110::default_instance_ = new S2CSwitchWatcher_110();
  S2CLeaveGame_111::default_instance_ = new S2CLeaveGame_111();
  C2SChooseBadge_113::default_instance_ = new C2SChooseBadge_113();
  S2CChooseBadge_113::default_instance_ = new S2CChooseBadge_113();
  C2SBroadRoomcastString_114::default_instance_ = new C2SBroadRoomcastString_114();
  S2CBroadRoomcastString_114::default_instance_ = new S2CBroadRoomcastString_114();
  C2SForceEnterRoom_115::default_instance_ = new C2SForceEnterRoom_115();
  C2SAddRobotToRoom_119::default_instance_ = new C2SAddRobotToRoom_119();
  S2CAddRobotToRoom_119::default_instance_ = new S2CAddRobotToRoom_119();
  PTeammateInfo::default_instance_ = new PTeammateInfo();
  C2SInvitePlayer_120::default_instance_ = new C2SInvitePlayer_120();
  S2CInvitePlayer_120::default_instance_ = new S2CInvitePlayer_120();
  S2CReceiveInvite_121::default_instance_ = new S2CReceiveInvite_121();
  C2SAgreeInvite_122::default_instance_ = new C2SAgreeInvite_122();
  S2CAgreeInvite_122::default_instance_ = new S2CAgreeInvite_122();
  S2CJoinTeam_123::default_instance_ = new S2CJoinTeam_123();
  C2SCancelInvite_124::default_instance_ = new C2SCancelInvite_124();
  S2CCancelInvite_124::default_instance_ = new S2CCancelInvite_124();
  C2SKickPlayer_125::default_instance_ = new C2SKickPlayer_125();
  S2CKickPlayer_125::default_instance_ = new S2CKickPlayer_125();
  C2SLeaveTeam_126::default_instance_ = new C2SLeaveTeam_126();
  S2CLeaveTeam_126::default_instance_ = new S2CLeaveTeam_126();
  S2CCancelInvite_127::default_instance_ = new S2CCancelInvite_127();
  S2CPlayerBatState_128::default_instance_ = new S2CPlayerBatState_128();
  C2SGetTeamAvaList_129::default_instance_ = new C2SGetTeamAvaList_129();
  S2CGetTeamAvaList_129::default_instance_ = new S2CGetTeamAvaList_129();
  C2SToTopTeam_131::default_instance_ = new C2SToTopTeam_131();
  S2CToTopTeam_131::default_instance_ = new S2CToTopTeam_131();
  C2SHandoverLeader_132::default_instance_ = new C2SHandoverLeader_132();
  S2CHandoverLeader_132::default_instance_ = new S2CHandoverLeader_132();
  C2SApplyPlayer_133::default_instance_ = new C2SApplyPlayer_133();
  S2CApplyPlayer_133::default_instance_ = new S2CApplyPlayer_133();
  S2CReceiveApply_134::default_instance_ = new S2CReceiveApply_134();
  C2SAgreeApply_135::default_instance_ = new C2SAgreeApply_135();
  S2CAgreeApply_135::default_instance_ = new S2CAgreeApply_135();
  MallBagItemData::default_instance_ = new MallBagItemData();
  C2SGetChestNum_140::default_instance_ = new C2SGetChestNum_140();
  S2CGetChestNum_140::default_instance_ = new S2CGetChestNum_140();
  C2SOpenChest_141::default_instance_ = new C2SOpenChest_141();
  ChestReward::default_instance_ = new ChestReward();
  S2COpenChest_141::default_instance_ = new S2COpenChest_141();
  C2SBuyChest_142::default_instance_ = new C2SBuyChest_142();
  C2S_BuyItemList_150::default_instance_ = new C2S_BuyItemList_150();
  C2S_ReqBagItemList_151::default_instance_ = new C2S_ReqBagItemList_151();
  S2C_ReqBagItemList_151::default_instance_ = new S2C_ReqBagItemList_151();
  C2S_UseItem_153::default_instance_ = new C2S_UseItem_153();
  C2S_RefreshStore_154::default_instance_ = new C2S_RefreshStore_154();
  S2C_RefreshStore_154::default_instance_ = new S2C_RefreshStore_154();
  C2S_ReqLastStoreItem_155::default_instance_ = new C2S_ReqLastStoreItem_155();
  S2C_ReqLastStoreItem_155::default_instance_ = new S2C_ReqLastStoreItem_155();
  C2S_ReqUnLockCharList_156::default_instance_ = new C2S_ReqUnLockCharList_156();
  S2C_UnlockCharList_156::default_instance_ = new S2C_UnlockCharList_156();
  C2S_ReqAlreadyBuyList_157::default_instance_ = new C2S_ReqAlreadyBuyList_157();
  S2C_AlreadyBuyList_157::default_instance_ = new S2C_AlreadyBuyList_157();
  S2C_AddItem_158::default_instance_ = new S2C_AddItem_158();
  SuitData::default_instance_ = new SuitData();
  C2S_UpdateSuitName_160::default_instance_ = new C2S_UpdateSuitName_160();
  C2S_UpdateSex_161::default_instance_ = new C2S_UpdateSex_161();
  C2S_UpdateSuit_162::default_instance_ = new C2S_UpdateSuit_162();
  C2S_GetAllSuits_163::default_instance_ = new C2S_GetAllSuits_163();
  S2C_GetAllSuits_163::default_instance_ = new S2C_GetAllSuits_163();
  C2S_SelSuit_164::default_instance_ = new C2S_SelSuit_164();
  MountClass::default_instance_ = new MountClass();
  C2S_GetAllUnlockMount_170::default_instance_ = new C2S_GetAllUnlockMount_170();
  S2C_GetAllUnlockMount_170::default_instance_ = new S2C_GetAllUnlockMount_170();
  C2S_UpdateMount_171::default_instance_ = new C2S_UpdateMount_171();
  S2C_UpdateMount_171::default_instance_ = new S2C_UpdateMount_171();
  S2C_MountAddOneSkin_173::default_instance_ = new S2C_MountAddOneSkin_173();
  C2S_GetAllRune_180::default_instance_ = new C2S_GetAllRune_180();
  Rune::default_instance_ = new Rune();
  S2C_GetAllRune_180::default_instance_ = new S2C_GetAllRune_180();
  C2S_BuyRune_181::default_instance_ = new C2S_BuyRune_181();
  C2S_DecomposeRune_182::default_instance_ = new C2S_DecomposeRune_182();
  C2S_BatchDecomposeRune_183::default_instance_ = new C2S_BatchDecomposeRune_183();
  C2S_BatchDecomposeRuneByItemId_184::default_instance_ = new C2S_BatchDecomposeRuneByItemId_184();
  C2S_GetAllWeapon_190::default_instance_ = new C2S_GetAllWeapon_190();
  Weapon::default_instance_ = new Weapon();
  S2C_GetAllWeapon_190::default_instance_ = new S2C_GetAllWeapon_190();
  C2S_ActivateWeapon_191::default_instance_ = new C2S_ActivateWeapon_191();
  S2C_ActivateWeapon_191::default_instance_ = new S2C_ActivateWeapon_191();
  C2S_SellWeapon_192::default_instance_ = new C2S_SellWeapon_192();
  C2S_UpdateRune_193::default_instance_ = new C2S_UpdateRune_193();
  C2SFrameCommand_2000::default_instance_ = new C2SFrameCommand_2000();
  S2CServerFrameUpdate_2001::default_instance_ = new S2CServerFrameUpdate_2001();
  C2SGetRepairFrameData_2002::default_instance_ = new C2SGetRepairFrameData_2002();
  S2CGetRepairFrameData_2002::default_instance_ = new S2CGetRepairFrameData_2002();
  C2SGetSyncCacheFrames_2003::default_instance_ = new C2SGetSyncCacheFrames_2003();
  S2CGetSyncCacheFrames_2003::default_instance_ = new S2CGetSyncCacheFrames_2003();
  C2SUDPReg_2004::default_instance_ = new C2SUDPReg_2004();
  C2SVerifyFrameSync_2005::default_instance_ = new C2SVerifyFrameSync_2005();
  S2CVerifyFrameSyncFail_2005::default_instance_ = new S2CVerifyFrameSyncFail_2005();
  C2SStartMatch_210::default_instance_ = new C2SStartMatch_210();
  S2CStartMatch_210::default_instance_ = new S2CStartMatch_210();
  S2CMatchSucc_217::default_instance_ = new S2CMatchSucc_217();
  C2SReadyMatch_218::default_instance_ = new C2SReadyMatch_218();
  S2CReadyMatch_218::default_instance_ = new S2CReadyMatch_218();
  S2CReadyMatch_219::default_instance_ = new S2CReadyMatch_219();
  C2SCancelMatch_211::default_instance_ = new C2SCancelMatch_211();
  S2CCancelMatch_211::default_instance_ = new S2CCancelMatch_211();
  S2CMatchSucc_212::default_instance_ = new S2CMatchSucc_212();
  StageBattleEnd::default_instance_ = new StageBattleEnd();
  C2SMatchOver_213::default_instance_ = new C2SMatchOver_213();
  S2CMatchOver_213::default_instance_ = new S2CMatchOver_213();
  C2SLeaveBatUI_214::default_instance_ = new C2SLeaveBatUI_214();
  C2SRoomKick_215::default_instance_ = new C2SRoomKick_215();
  Msgbody216::default_instance_ = new Msgbody216();
  C2STheBattleResult_216::default_instance_ = new C2STheBattleResult_216();
  S2CTheBattleResult_216::default_instance_ = new S2CTheBattleResult_216();
  C2SBatRecordLst_220::default_instance_ = new C2SBatRecordLst_220();
  S2CBatRecordLst_220::default_instance_ = new S2CBatRecordLst_220();
  C2SBatRecord_221::default_instance_ = new C2SBatRecord_221();
  S2CBatRecord_221::default_instance_ = new S2CBatRecord_221();
  C2SSingleBattleResult_222::default_instance_ = new C2SSingleBattleResult_222();
  C2SGetMatchUserNum_223::default_instance_ = new C2SGetMatchUserNum_223();
  S2CGetMatchUserNum_223::default_instance_ = new S2CGetMatchUserNum_223();
  C2SBroadcast_250::default_instance_ = new C2SBroadcast_250();
  S2CBroadcast_250::default_instance_ = new S2CBroadcast_250();
  S2CBroadcastProp_251::default_instance_ = new S2CBroadcastProp_251();
  C2SChatContent_252::default_instance_ = new C2SChatContent_252();
  S2CChatContent_252::default_instance_ = new S2CChatContent_252();
  MailGift::default_instance_ = new MailGift();
  Mail::default_instance_ = new Mail();
  C2SGetMailList_253::default_instance_ = new C2SGetMailList_253();
  S2CGetMailList_253::default_instance_ = new S2CGetMailList_253();
  C2SReadMail_254::default_instance_ = new C2SReadMail_254();
  C2SReceiveGift_255::default_instance_ = new C2SReceiveGift_255();
  S2CSendMail_256::default_instance_ = new S2CSendMail_256();
  C2SDeleteMail_257::default_instance_ = new C2SDeleteMail_257();
  S2CBroadcastLevel_258::default_instance_ = new S2CBroadcastLevel_258();
  S2CImportantNotice_259::default_instance_ = new S2CImportantNotice_259();
  C2SGetShopParams_260::default_instance_ = new C2SGetShopParams_260();
  S2CGetShopParams_260::default_instance_ = new S2CGetShopParams_260();
  C2SSearchUser_280::default_instance_ = new C2SSearchUser_280();
  UserProfile::default_instance_ = new UserProfile();
  S2CSearchUser_280::default_instance_ = new S2CSearchUser_280();
  C2SFriendRequest_281::default_instance_ = new C2SFriendRequest_281();
  S2CFriendRequest_281::default_instance_ = new S2CFriendRequest_281();
  C2SGetFriendRequests_282::default_instance_ = new C2SGetFriendRequests_282();
  S2CGetFriendRequests_282::default_instance_ = new S2CGetFriendRequests_282();
  C2SDealFriendRequest_283::default_instance_ = new C2SDealFriendRequest_283();
  S2CAddNewFriend_284::default_instance_ = new S2CAddNewFriend_284();
  C2SRemoveFriend_285::default_instance_ = new C2SRemoveFriend_285();
  C2SGetFriendList_286::default_instance_ = new C2SGetFriendList_286();
  S2CGetFriendList_286::default_instance_ = new S2CGetFriendList_286();
  C2SGetFriendAvaList_287::default_instance_ = new C2SGetFriendAvaList_287();
  S2CGetFriendAvaList_287::default_instance_ = new S2CGetFriendAvaList_287();
  C2SAddBlackUser_288::default_instance_ = new C2SAddBlackUser_288();
  C2SRemoveBlackUser_289::default_instance_ = new C2SRemoveBlackUser_289();
  C2SGetBlackList_290::default_instance_ = new C2SGetBlackList_290();
  S2CGetBlackList_290::default_instance_ = new S2CGetBlackList_290();
  S2CFriendOnlineStatus_291::default_instance_ = new S2CFriendOnlineStatus_291();
  C2SGetRecentUserList_292::default_instance_ = new C2SGetRecentUserList_292();
  S2CGetRecentUserList_292::default_instance_ = new S2CGetRecentUserList_292();
  C2SUploadCoordinates_293::default_instance_ = new C2SUploadCoordinates_293();
  C2SGetUserNearby_294::default_instance_ = new C2SGetUserNearby_294();
  S2CGetUserNearby_294::default_instance_ = new S2CGetUserNearby_294();
  C2SRankScore_300::default_instance_ = new C2SRankScore_300();
  RankScore::default_instance_ = new RankScore();
  S2CRankScore_300::default_instance_ = new S2CRankScore_300();
  C2SGetShortMsg_311::default_instance_ = new C2SGetShortMsg_311();
  S2CGetShortMsg_311::default_instance_ = new S2CGetShortMsg_311();
  C2SUpdateShortMsg_312::default_instance_ = new C2SUpdateShortMsg_312();
  C2SGetOneResumeMsg_313::default_instance_ = new C2SGetOneResumeMsg_313();
  CharResultRecord::default_instance_ = new CharResultRecord();
  S2CGetOneResumeMsg_313::default_instance_ = new S2CGetOneResumeMsg_313();
  C2SChangeName_314::default_instance_ = new C2SChangeName_314();
  SeasonInfo::default_instance_ = new SeasonInfo();
  S2CStageSeasonStart_320::default_instance_ = new S2CStageSeasonStart_320();
  S2CStageSeasonOver_321::default_instance_ = new S2CStageSeasonOver_321();
  S2CStageSeasonEnd_322::default_instance_ = new S2CStageSeasonEnd_322();
  S2CGetSeasonInfo_323::default_instance_ = new S2CGetSeasonInfo_323();
  C2SGetSeasonInfo_323::default_instance_ = new C2SGetSeasonInfo_323();
  OneContestInfo::default_instance_ = new OneContestInfo();
  OneContestSimpleInfo::default_instance_ = new OneContestSimpleInfo();
  C2SCreateContest_400::default_instance_ = new C2SCreateContest_400();
  S2CBroadContest_400::default_instance_ = new S2CBroadContest_400();
  C2SGetContestList_401::default_instance_ = new C2SGetContestList_401();
  S2CGetContestList_401::default_instance_ = new S2CGetContestList_401();
  C2SSignContest_402::default_instance_ = new C2SSignContest_402();
  S2CSignContest_402::default_instance_ = new S2CSignContest_402();
  S2CSignContestToOther_413::default_instance_ = new S2CSignContestToOther_413();
  C2SCloseContestTeams_403::default_instance_ = new C2SCloseContestTeams_403();
  S2CCloseContestTeams_403::default_instance_ = new S2CCloseContestTeams_403();
  C2SStartContest_404::default_instance_ = new C2SStartContest_404();
  S2CStartContest_404::default_instance_ = new S2CStartContest_404();
  C2SGetContesInfo_405::default_instance_ = new C2SGetContesInfo_405();
  S2CGetContesInfo_405::default_instance_ = new S2CGetContesInfo_405();
  C2SManagerContest_406::default_instance_ = new C2SManagerContest_406();
  S2CManagerContest_406::default_instance_ = new S2CManagerContest_406();
  OnePlayerInfo::default_instance_ = new OnePlayerInfo();
  TeamsInfo::default_instance_ = new TeamsInfo();
  TeamsSimpleInfo::default_instance_ = new TeamsSimpleInfo();
  C2SGetContestTeams_407::default_instance_ = new C2SGetContestTeams_407();
  S2CGetContestTeams_407::default_instance_ = new S2CGetContestTeams_407();
  C2SEditorContesMembers_408::default_instance_ = new C2SEditorContesMembers_408();
  S2CEditorContesMembers_408::default_instance_ = new S2CEditorContesMembers_408();
  C2SQuitContest_409::default_instance_ = new C2SQuitContest_409();
  S2CQuitContest_409::default_instance_ = new S2CQuitContest_409();
  C2SOpenContestTeam_410::default_instance_ = new C2SOpenContestTeam_410();
  S2COpenContestTeam_410::default_instance_ = new S2COpenContestTeam_410();
  S2CContestStop_412::default_instance_ = new S2CContestStop_412();
  AteamVsBteam::default_instance_ = new AteamVsBteam();
  OutVsFight::default_instance_ = new OutVsFight();
  TeamScoreInfo::default_instance_ = new TeamScoreInfo();
  LoopFightInfo::default_instance_ = new LoopFightInfo();
  C2SFightData_415::default_instance_ = new C2SFightData_415();
  S2CFightData_415::default_instance_ = new S2CFightData_415();
  C2SGetContestInfo_414::default_instance_ = new C2SGetContestInfo_414();
  S2CGetContestInfo_414::default_instance_ = new S2CGetContestInfo_414();
  C2SSetEditorContest_417::default_instance_ = new C2SSetEditorContest_417();
  S2CGetContestFightBoInfo_418::default_instance_ = new S2CGetContestFightBoInfo_418();
  S2CGetContestFightResult_416::default_instance_ = new S2CGetContestFightResult_416();
  C2SContestRankInfo_420::default_instance_ = new C2SContestRankInfo_420();
  S2CContestRankInfo_420::default_instance_ = new S2CContestRankInfo_420();
  C2SContestWaitSec_421::default_instance_ = new C2SContestWaitSec_421();
  S2CContestWaitSec_421::default_instance_ = new S2CContestWaitSec_421();
  C2SContestDissmis_422::default_instance_ = new C2SContestDissmis_422();
  S2CContestDissmis_422::default_instance_ = new S2CContestDissmis_422();
  C2SWatchContestBat_423::default_instance_ = new C2SWatchContestBat_423();
  S2CContestReward_424::default_instance_ = new S2CContestReward_424();
  S2CFreshenFightData_425::default_instance_ = new S2CFreshenFightData_425();
  C2SGiveup_426::default_instance_ = new C2SGiveup_426();
  S2CGiveup_426::default_instance_ = new S2CGiveup_426();
  C2SSetSetPassword_427::default_instance_ = new C2SSetSetPassword_427();
  C2SGetSignInActivaty_500::default_instance_ = new C2SGetSignInActivaty_500();
  S2CGetSignInActivaty_500::default_instance_ = new S2CGetSignInActivaty_500();
  C2SSignInActivaty_501::default_instance_ = new C2SSignInActivaty_501();
  C2SRemedialSignInAct_502::default_instance_ = new C2SRemedialSignInAct_502();
  S2CRemedialSignInAct_502::default_instance_ = new S2CRemedialSignInAct_502();
  S2CShowRedPoint_503::default_instance_ = new S2CShowRedPoint_503();
  C2SGetActDegree_520::default_instance_ = new C2SGetActDegree_520();
  ActDegreeItem::default_instance_ = new ActDegreeItem();
  ActDegreeAward::default_instance_ = new ActDegreeAward();
  S2CGetActDegree_520::default_instance_ = new S2CGetActDegree_520();
  S2CSyncActDegreeSched_521::default_instance_ = new S2CSyncActDegreeSched_521();
  C2SRecvActDegreeAward_522::default_instance_ = new C2SRecvActDegreeAward_522();
  S2CRecvActDegreeAward_522::default_instance_ = new S2CRecvActDegreeAward_522();
  C2SGetCommonAct_540::default_instance_ = new C2SGetCommonAct_540();
  CommonAct::default_instance_ = new CommonAct();
  CommonSubAct::default_instance_ = new CommonSubAct();
  S2CGetCommonAct_540::default_instance_ = new S2CGetCommonAct_540();
  S2CSyncCommonActSched_541::default_instance_ = new S2CSyncCommonActSched_541();
  C2SRecvCommonActAward_542::default_instance_ = new C2SRecvCommonActAward_542();
  S2CRecvCommonActAward_542::default_instance_ = new S2CRecvCommonActAward_542();
  C2SAchievementList_600::default_instance_ = new C2SAchievementList_600();
  S2CAchievementList_600::default_instance_ = new S2CAchievementList_600();
  C2SAchievementProgress_601::default_instance_ = new C2SAchievementProgress_601();
  S2CAchievementProgress_601::default_instance_ = new S2CAchievementProgress_601();
  S2CPushAchievement_602::default_instance_ = new S2CPushAchievement_602();
  C2SGetAchievementAward_603::default_instance_ = new C2SGetAchievementAward_603();
  C2SReportBatData_604::default_instance_ = new C2SReportBatData_604();
  S2CCommonRet_1000::default_instance_->InitAsDefaultInstance();
  C2SPing_1001::default_instance_->InitAsDefaultInstance();
  S2CPing_1001::default_instance_->InitAsDefaultInstance();
  C2S_RegLogin_98::default_instance_->InitAsDefaultInstance();
  S2C_RegLogin_98::default_instance_->InitAsDefaultInstance();
  C2S_RegAcc_99::default_instance_->InitAsDefaultInstance();
  C2S_CreateRole_117::default_instance_->InitAsDefaultInstance();
  C2S_LoginData_116::default_instance_->InitAsDefaultInstance();
  S2C_LoginData_116::default_instance_->InitAsDefaultInstance();
  C2S_UpdateGuideSteps_118::default_instance_->InitAsDefaultInstance();
  PRoomInfo::default_instance_->InitAsDefaultInstance();
  C2S_GetRoomList_100::default_instance_->InitAsDefaultInstance();
  S2C_GetRoomList_100::default_instance_->InitAsDefaultInstance();
  C2SEnterRoom_101::default_instance_->InitAsDefaultInstance();
  PRoomUser::default_instance_->InitAsDefaultInstance();
  S2CEnterRoomRet_101::default_instance_->InitAsDefaultInstance();
  C2SCreateRoom_102::default_instance_->InitAsDefaultInstance();
  C2SExitRoom_103::default_instance_->InitAsDefaultInstance();
  S2CExitRoom_103::default_instance_->InitAsDefaultInstance();
  C2SUserReady_104::default_instance_->InitAsDefaultInstance();
  S2CUserReady_104::default_instance_->InitAsDefaultInstance();
  C2SMasterStart_105::default_instance_->InitAsDefaultInstance();
  S2CMasterStart_105::default_instance_->InitAsDefaultInstance();
  C2SLoadFinish_106::default_instance_->InitAsDefaultInstance();
  S2CLoadFinish_106::default_instance_->InitAsDefaultInstance();
  S2CRealstart_107::default_instance_->InitAsDefaultInstance();
  S2CEnterRoomRet_108::default_instance_->InitAsDefaultInstance();
  C2SSwitchCamp_109::default_instance_->InitAsDefaultInstance();
  S2CSwitchCamp_109::default_instance_->InitAsDefaultInstance();
  C2SSwitchWatcher_110::default_instance_->InitAsDefaultInstance();
  S2CSwitchWatcher_110::default_instance_->InitAsDefaultInstance();
  S2CLeaveGame_111::default_instance_->InitAsDefaultInstance();
  C2SChooseBadge_113::default_instance_->InitAsDefaultInstance();
  S2CChooseBadge_113::default_instance_->InitAsDefaultInstance();
  C2SBroadRoomcastString_114::default_instance_->InitAsDefaultInstance();
  S2CBroadRoomcastString_114::default_instance_->InitAsDefaultInstance();
  C2SForceEnterRoom_115::default_instance_->InitAsDefaultInstance();
  C2SAddRobotToRoom_119::default_instance_->InitAsDefaultInstance();
  S2CAddRobotToRoom_119::default_instance_->InitAsDefaultInstance();
  PTeammateInfo::default_instance_->InitAsDefaultInstance();
  C2SInvitePlayer_120::default_instance_->InitAsDefaultInstance();
  S2CInvitePlayer_120::default_instance_->InitAsDefaultInstance();
  S2CReceiveInvite_121::default_instance_->InitAsDefaultInstance();
  C2SAgreeInvite_122::default_instance_->InitAsDefaultInstance();
  S2CAgreeInvite_122::default_instance_->InitAsDefaultInstance();
  S2CJoinTeam_123::default_instance_->InitAsDefaultInstance();
  C2SCancelInvite_124::default_instance_->InitAsDefaultInstance();
  S2CCancelInvite_124::default_instance_->InitAsDefaultInstance();
  C2SKickPlayer_125::default_instance_->InitAsDefaultInstance();
  S2CKickPlayer_125::default_instance_->InitAsDefaultInstance();
  C2SLeaveTeam_126::default_instance_->InitAsDefaultInstance();
  S2CLeaveTeam_126::default_instance_->InitAsDefaultInstance();
  S2CCancelInvite_127::default_instance_->InitAsDefaultInstance();
  S2CPlayerBatState_128::default_instance_->InitAsDefaultInstance();
  C2SGetTeamAvaList_129::default_instance_->InitAsDefaultInstance();
  S2CGetTeamAvaList_129::default_instance_->InitAsDefaultInstance();
  C2SToTopTeam_131::default_instance_->InitAsDefaultInstance();
  S2CToTopTeam_131::default_instance_->InitAsDefaultInstance();
  C2SHandoverLeader_132::default_instance_->InitAsDefaultInstance();
  S2CHandoverLeader_132::default_instance_->InitAsDefaultInstance();
  C2SApplyPlayer_133::default_instance_->InitAsDefaultInstance();
  S2CApplyPlayer_133::default_instance_->InitAsDefaultInstance();
  S2CReceiveApply_134::default_instance_->InitAsDefaultInstance();
  C2SAgreeApply_135::default_instance_->InitAsDefaultInstance();
  S2CAgreeApply_135::default_instance_->InitAsDefaultInstance();
  MallBagItemData::default_instance_->InitAsDefaultInstance();
  C2SGetChestNum_140::default_instance_->InitAsDefaultInstance();
  S2CGetChestNum_140::default_instance_->InitAsDefaultInstance();
  C2SOpenChest_141::default_instance_->InitAsDefaultInstance();
  ChestReward::default_instance_->InitAsDefaultInstance();
  S2COpenChest_141::default_instance_->InitAsDefaultInstance();
  C2SBuyChest_142::default_instance_->InitAsDefaultInstance();
  C2S_BuyItemList_150::default_instance_->InitAsDefaultInstance();
  C2S_ReqBagItemList_151::default_instance_->InitAsDefaultInstance();
  S2C_ReqBagItemList_151::default_instance_->InitAsDefaultInstance();
  C2S_UseItem_153::default_instance_->InitAsDefaultInstance();
  C2S_RefreshStore_154::default_instance_->InitAsDefaultInstance();
  S2C_RefreshStore_154::default_instance_->InitAsDefaultInstance();
  C2S_ReqLastStoreItem_155::default_instance_->InitAsDefaultInstance();
  S2C_ReqLastStoreItem_155::default_instance_->InitAsDefaultInstance();
  C2S_ReqUnLockCharList_156::default_instance_->InitAsDefaultInstance();
  S2C_UnlockCharList_156::default_instance_->InitAsDefaultInstance();
  C2S_ReqAlreadyBuyList_157::default_instance_->InitAsDefaultInstance();
  S2C_AlreadyBuyList_157::default_instance_->InitAsDefaultInstance();
  S2C_AddItem_158::default_instance_->InitAsDefaultInstance();
  SuitData::default_instance_->InitAsDefaultInstance();
  C2S_UpdateSuitName_160::default_instance_->InitAsDefaultInstance();
  C2S_UpdateSex_161::default_instance_->InitAsDefaultInstance();
  C2S_UpdateSuit_162::default_instance_->InitAsDefaultInstance();
  C2S_GetAllSuits_163::default_instance_->InitAsDefaultInstance();
  S2C_GetAllSuits_163::default_instance_->InitAsDefaultInstance();
  C2S_SelSuit_164::default_instance_->InitAsDefaultInstance();
  MountClass::default_instance_->InitAsDefaultInstance();
  C2S_GetAllUnlockMount_170::default_instance_->InitAsDefaultInstance();
  S2C_GetAllUnlockMount_170::default_instance_->InitAsDefaultInstance();
  C2S_UpdateMount_171::default_instance_->InitAsDefaultInstance();
  S2C_UpdateMount_171::default_instance_->InitAsDefaultInstance();
  S2C_MountAddOneSkin_173::default_instance_->InitAsDefaultInstance();
  C2S_GetAllRune_180::default_instance_->InitAsDefaultInstance();
  Rune::default_instance_->InitAsDefaultInstance();
  S2C_GetAllRune_180::default_instance_->InitAsDefaultInstance();
  C2S_BuyRune_181::default_instance_->InitAsDefaultInstance();
  C2S_DecomposeRune_182::default_instance_->InitAsDefaultInstance();
  C2S_BatchDecomposeRune_183::default_instance_->InitAsDefaultInstance();
  C2S_BatchDecomposeRuneByItemId_184::default_instance_->InitAsDefaultInstance();
  C2S_GetAllWeapon_190::default_instance_->InitAsDefaultInstance();
  Weapon::default_instance_->InitAsDefaultInstance();
  S2C_GetAllWeapon_190::default_instance_->InitAsDefaultInstance();
  C2S_ActivateWeapon_191::default_instance_->InitAsDefaultInstance();
  S2C_ActivateWeapon_191::default_instance_->InitAsDefaultInstance();
  C2S_SellWeapon_192::default_instance_->InitAsDefaultInstance();
  C2S_UpdateRune_193::default_instance_->InitAsDefaultInstance();
  C2SFrameCommand_2000::default_instance_->InitAsDefaultInstance();
  S2CServerFrameUpdate_2001::default_instance_->InitAsDefaultInstance();
  C2SGetRepairFrameData_2002::default_instance_->InitAsDefaultInstance();
  S2CGetRepairFrameData_2002::default_instance_->InitAsDefaultInstance();
  C2SGetSyncCacheFrames_2003::default_instance_->InitAsDefaultInstance();
  S2CGetSyncCacheFrames_2003::default_instance_->InitAsDefaultInstance();
  C2SUDPReg_2004::default_instance_->InitAsDefaultInstance();
  C2SVerifyFrameSync_2005::default_instance_->InitAsDefaultInstance();
  S2CVerifyFrameSyncFail_2005::default_instance_->InitAsDefaultInstance();
  C2SStartMatch_210::default_instance_->InitAsDefaultInstance();
  S2CStartMatch_210::default_instance_->InitAsDefaultInstance();
  S2CMatchSucc_217::default_instance_->InitAsDefaultInstance();
  C2SReadyMatch_218::default_instance_->InitAsDefaultInstance();
  S2CReadyMatch_218::default_instance_->InitAsDefaultInstance();
  S2CReadyMatch_219::default_instance_->InitAsDefaultInstance();
  C2SCancelMatch_211::default_instance_->InitAsDefaultInstance();
  S2CCancelMatch_211::default_instance_->InitAsDefaultInstance();
  S2CMatchSucc_212::default_instance_->InitAsDefaultInstance();
  StageBattleEnd::default_instance_->InitAsDefaultInstance();
  C2SMatchOver_213::default_instance_->InitAsDefaultInstance();
  S2CMatchOver_213::default_instance_->InitAsDefaultInstance();
  C2SLeaveBatUI_214::default_instance_->InitAsDefaultInstance();
  C2SRoomKick_215::default_instance_->InitAsDefaultInstance();
  Msgbody216::default_instance_->InitAsDefaultInstance();
  C2STheBattleResult_216::default_instance_->InitAsDefaultInstance();
  S2CTheBattleResult_216::default_instance_->InitAsDefaultInstance();
  C2SBatRecordLst_220::default_instance_->InitAsDefaultInstance();
  S2CBatRecordLst_220::default_instance_->InitAsDefaultInstance();
  C2SBatRecord_221::default_instance_->InitAsDefaultInstance();
  S2CBatRecord_221::default_instance_->InitAsDefaultInstance();
  C2SSingleBattleResult_222::default_instance_->InitAsDefaultInstance();
  C2SGetMatchUserNum_223::default_instance_->InitAsDefaultInstance();
  S2CGetMatchUserNum_223::default_instance_->InitAsDefaultInstance();
  C2SBroadcast_250::default_instance_->InitAsDefaultInstance();
  S2CBroadcast_250::default_instance_->InitAsDefaultInstance();
  S2CBroadcastProp_251::default_instance_->InitAsDefaultInstance();
  C2SChatContent_252::default_instance_->InitAsDefaultInstance();
  S2CChatContent_252::default_instance_->InitAsDefaultInstance();
  MailGift::default_instance_->InitAsDefaultInstance();
  Mail::default_instance_->InitAsDefaultInstance();
  C2SGetMailList_253::default_instance_->InitAsDefaultInstance();
  S2CGetMailList_253::default_instance_->InitAsDefaultInstance();
  C2SReadMail_254::default_instance_->InitAsDefaultInstance();
  C2SReceiveGift_255::default_instance_->InitAsDefaultInstance();
  S2CSendMail_256::default_instance_->InitAsDefaultInstance();
  C2SDeleteMail_257::default_instance_->InitAsDefaultInstance();
  S2CBroadcastLevel_258::default_instance_->InitAsDefaultInstance();
  S2CImportantNotice_259::default_instance_->InitAsDefaultInstance();
  C2SGetShopParams_260::default_instance_->InitAsDefaultInstance();
  S2CGetShopParams_260::default_instance_->InitAsDefaultInstance();
  C2SSearchUser_280::default_instance_->InitAsDefaultInstance();
  UserProfile::default_instance_->InitAsDefaultInstance();
  S2CSearchUser_280::default_instance_->InitAsDefaultInstance();
  C2SFriendRequest_281::default_instance_->InitAsDefaultInstance();
  S2CFriendRequest_281::default_instance_->InitAsDefaultInstance();
  C2SGetFriendRequests_282::default_instance_->InitAsDefaultInstance();
  S2CGetFriendRequests_282::default_instance_->InitAsDefaultInstance();
  C2SDealFriendRequest_283::default_instance_->InitAsDefaultInstance();
  S2CAddNewFriend_284::default_instance_->InitAsDefaultInstance();
  C2SRemoveFriend_285::default_instance_->InitAsDefaultInstance();
  C2SGetFriendList_286::default_instance_->InitAsDefaultInstance();
  S2CGetFriendList_286::default_instance_->InitAsDefaultInstance();
  C2SGetFriendAvaList_287::default_instance_->InitAsDefaultInstance();
  S2CGetFriendAvaList_287::default_instance_->InitAsDefaultInstance();
  C2SAddBlackUser_288::default_instance_->InitAsDefaultInstance();
  C2SRemoveBlackUser_289::default_instance_->InitAsDefaultInstance();
  C2SGetBlackList_290::default_instance_->InitAsDefaultInstance();
  S2CGetBlackList_290::default_instance_->InitAsDefaultInstance();
  S2CFriendOnlineStatus_291::default_instance_->InitAsDefaultInstance();
  C2SGetRecentUserList_292::default_instance_->InitAsDefaultInstance();
  S2CGetRecentUserList_292::default_instance_->InitAsDefaultInstance();
  C2SUploadCoordinates_293::default_instance_->InitAsDefaultInstance();
  C2SGetUserNearby_294::default_instance_->InitAsDefaultInstance();
  S2CGetUserNearby_294::default_instance_->InitAsDefaultInstance();
  C2SRankScore_300::default_instance_->InitAsDefaultInstance();
  RankScore::default_instance_->InitAsDefaultInstance();
  S2CRankScore_300::default_instance_->InitAsDefaultInstance();
  C2SGetShortMsg_311::default_instance_->InitAsDefaultInstance();
  S2CGetShortMsg_311::default_instance_->InitAsDefaultInstance();
  C2SUpdateShortMsg_312::default_instance_->InitAsDefaultInstance();
  C2SGetOneResumeMsg_313::default_instance_->InitAsDefaultInstance();
  CharResultRecord::default_instance_->InitAsDefaultInstance();
  S2CGetOneResumeMsg_313::default_instance_->InitAsDefaultInstance();
  C2SChangeName_314::default_instance_->InitAsDefaultInstance();
  SeasonInfo::default_instance_->InitAsDefaultInstance();
  S2CStageSeasonStart_320::default_instance_->InitAsDefaultInstance();
  S2CStageSeasonOver_321::default_instance_->InitAsDefaultInstance();
  S2CStageSeasonEnd_322::default_instance_->InitAsDefaultInstance();
  S2CGetSeasonInfo_323::default_instance_->InitAsDefaultInstance();
  C2SGetSeasonInfo_323::default_instance_->InitAsDefaultInstance();
  OneContestInfo::default_instance_->InitAsDefaultInstance();
  OneContestSimpleInfo::default_instance_->InitAsDefaultInstance();
  C2SCreateContest_400::default_instance_->InitAsDefaultInstance();
  S2CBroadContest_400::default_instance_->InitAsDefaultInstance();
  C2SGetContestList_401::default_instance_->InitAsDefaultInstance();
  S2CGetContestList_401::default_instance_->InitAsDefaultInstance();
  C2SSignContest_402::default_instance_->InitAsDefaultInstance();
  S2CSignContest_402::default_instance_->InitAsDefaultInstance();
  S2CSignContestToOther_413::default_instance_->InitAsDefaultInstance();
  C2SCloseContestTeams_403::default_instance_->InitAsDefaultInstance();
  S2CCloseContestTeams_403::default_instance_->InitAsDefaultInstance();
  C2SStartContest_404::default_instance_->InitAsDefaultInstance();
  S2CStartContest_404::default_instance_->InitAsDefaultInstance();
  C2SGetContesInfo_405::default_instance_->InitAsDefaultInstance();
  S2CGetContesInfo_405::default_instance_->InitAsDefaultInstance();
  C2SManagerContest_406::default_instance_->InitAsDefaultInstance();
  S2CManagerContest_406::default_instance_->InitAsDefaultInstance();
  OnePlayerInfo::default_instance_->InitAsDefaultInstance();
  TeamsInfo::default_instance_->InitAsDefaultInstance();
  TeamsSimpleInfo::default_instance_->InitAsDefaultInstance();
  C2SGetContestTeams_407::default_instance_->InitAsDefaultInstance();
  S2CGetContestTeams_407::default_instance_->InitAsDefaultInstance();
  C2SEditorContesMembers_408::default_instance_->InitAsDefaultInstance();
  S2CEditorContesMembers_408::default_instance_->InitAsDefaultInstance();
  C2SQuitContest_409::default_instance_->InitAsDefaultInstance();
  S2CQuitContest_409::default_instance_->InitAsDefaultInstance();
  C2SOpenContestTeam_410::default_instance_->InitAsDefaultInstance();
  S2COpenContestTeam_410::default_instance_->InitAsDefaultInstance();
  S2CContestStop_412::default_instance_->InitAsDefaultInstance();
  AteamVsBteam::default_instance_->InitAsDefaultInstance();
  OutVsFight::default_instance_->InitAsDefaultInstance();
  TeamScoreInfo::default_instance_->InitAsDefaultInstance();
  LoopFightInfo::default_instance_->InitAsDefaultInstance();
  C2SFightData_415::default_instance_->InitAsDefaultInstance();
  S2CFightData_415::default_instance_->InitAsDefaultInstance();
  C2SGetContestInfo_414::default_instance_->InitAsDefaultInstance();
  S2CGetContestInfo_414::default_instance_->InitAsDefaultInstance();
  C2SSetEditorContest_417::default_instance_->InitAsDefaultInstance();
  S2CGetContestFightBoInfo_418::default_instance_->InitAsDefaultInstance();
  S2CGetContestFightResult_416::default_instance_->InitAsDefaultInstance();
  C2SContestRankInfo_420::default_instance_->InitAsDefaultInstance();
  S2CContestRankInfo_420::default_instance_->InitAsDefaultInstance();
  C2SContestWaitSec_421::default_instance_->InitAsDefaultInstance();
  S2CContestWaitSec_421::default_instance_->InitAsDefaultInstance();
  C2SContestDissmis_422::default_instance_->InitAsDefaultInstance();
  S2CContestDissmis_422::default_instance_->InitAsDefaultInstance();
  C2SWatchContestBat_423::default_instance_->InitAsDefaultInstance();
  S2CContestReward_424::default_instance_->InitAsDefaultInstance();
  S2CFreshenFightData_425::default_instance_->InitAsDefaultInstance();
  C2SGiveup_426::default_instance_->InitAsDefaultInstance();
  S2CGiveup_426::default_instance_->InitAsDefaultInstance();
  C2SSetSetPassword_427::default_instance_->InitAsDefaultInstance();
  C2SGetSignInActivaty_500::default_instance_->InitAsDefaultInstance();
  S2CGetSignInActivaty_500::default_instance_->InitAsDefaultInstance();
  C2SSignInActivaty_501::default_instance_->InitAsDefaultInstance();
  C2SRemedialSignInAct_502::default_instance_->InitAsDefaultInstance();
  S2CRemedialSignInAct_502::default_instance_->InitAsDefaultInstance();
  S2CShowRedPoint_503::default_instance_->InitAsDefaultInstance();
  C2SGetActDegree_520::default_instance_->InitAsDefaultInstance();
  ActDegreeItem::default_instance_->InitAsDefaultInstance();
  ActDegreeAward::default_instance_->InitAsDefaultInstance();
  S2CGetActDegree_520::default_instance_->InitAsDefaultInstance();
  S2CSyncActDegreeSched_521::default_instance_->InitAsDefaultInstance();
  C2SRecvActDegreeAward_522::default_instance_->InitAsDefaultInstance();
  S2CRecvActDegreeAward_522::default_instance_->InitAsDefaultInstance();
  C2SGetCommonAct_540::default_instance_->InitAsDefaultInstance();
  CommonAct::default_instance_->InitAsDefaultInstance();
  CommonSubAct::default_instance_->InitAsDefaultInstance();
  S2CGetCommonAct_540::default_instance_->InitAsDefaultInstance();
  S2CSyncCommonActSched_541::default_instance_->InitAsDefaultInstance();
  C2SRecvCommonActAward_542::default_instance_->InitAsDefaultInstance();
  S2CRecvCommonActAward_542::default_instance_->InitAsDefaultInstance();
  C2SAchievementList_600::default_instance_->InitAsDefaultInstance();
  S2CAchievementList_600::default_instance_->InitAsDefaultInstance();
  C2SAchievementProgress_601::default_instance_->InitAsDefaultInstance();
  S2CAchievementProgress_601::default_instance_->InitAsDefaultInstance();
  S2CPushAchievement_602::default_instance_->InitAsDefaultInstance();
  C2SGetAchievementAward_603::default_instance_->InitAsDefaultInstance();
  C2SReportBatData_604::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_login_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_login_2eproto {
  StaticDescriptorInitializer_login_2eproto() {
    protobuf_AddDesc_login_2eproto();
  }
} static_descriptor_initializer_login_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CCommonRet_1000::kPtidFieldNumber;
const int S2CCommonRet_1000::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CCommonRet_1000::S2CCommonRet_1000()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CCommonRet_1000)
}

void S2CCommonRet_1000::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CCommonRet_1000::S2CCommonRet_1000(const S2CCommonRet_1000& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CCommonRet_1000)
}

void S2CCommonRet_1000::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  ptid_ = 0u;
  ret_ = 0u;
}

S2CCommonRet_1000::~S2CCommonRet_1000() {
  // @@protoc_insertion_point(destructor:pb.S2CCommonRet_1000)
  SharedDtor();
}

void S2CCommonRet_1000::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CCommonRet_1000::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CCommonRet_1000::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CCommonRet_1000_descriptor_;
}

const S2CCommonRet_1000& S2CCommonRet_1000::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CCommonRet_1000* S2CCommonRet_1000::default_instance_ = NULL;

S2CCommonRet_1000* S2CCommonRet_1000::New(::google::protobuf::Arena* arena) const {
  S2CCommonRet_1000* n = new S2CCommonRet_1000;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CCommonRet_1000::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CCommonRet_1000)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CCommonRet_1000, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CCommonRet_1000*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ptid_, ret_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2CCommonRet_1000::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CCommonRet_1000)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Ptid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ptid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Ret;
        break;
      }

      // optional uint32 Ret = 2;
      case 2: {
        if (tag == 16) {
         parse_Ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CCommonRet_1000)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CCommonRet_1000)
  return false;
#undef DO_
}

void S2CCommonRet_1000::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CCommonRet_1000)
  // optional uint32 Ptid = 1;
  if (this->ptid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ptid(), output);
  }

  // optional uint32 Ret = 2;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ret(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CCommonRet_1000)
}

::google::protobuf::uint8* S2CCommonRet_1000::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CCommonRet_1000)
  // optional uint32 Ptid = 1;
  if (this->ptid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ptid(), target);
  }

  // optional uint32 Ret = 2;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ret(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CCommonRet_1000)
  return target;
}

int S2CCommonRet_1000::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CCommonRet_1000)
  int total_size = 0;

  // optional uint32 Ptid = 1;
  if (this->ptid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ptid());
  }

  // optional uint32 Ret = 2;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ret());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CCommonRet_1000::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CCommonRet_1000)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CCommonRet_1000* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CCommonRet_1000>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CCommonRet_1000)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CCommonRet_1000)
    MergeFrom(*source);
  }
}

void S2CCommonRet_1000::MergeFrom(const S2CCommonRet_1000& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CCommonRet_1000)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.ptid() != 0) {
    set_ptid(from.ptid());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void S2CCommonRet_1000::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CCommonRet_1000)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CCommonRet_1000::CopyFrom(const S2CCommonRet_1000& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CCommonRet_1000)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CCommonRet_1000::IsInitialized() const {

  return true;
}

void S2CCommonRet_1000::Swap(S2CCommonRet_1000* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CCommonRet_1000::InternalSwap(S2CCommonRet_1000* other) {
  std::swap(ptid_, other->ptid_);
  std::swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CCommonRet_1000::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CCommonRet_1000_descriptor_;
  metadata.reflection = S2CCommonRet_1000_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CCommonRet_1000

// optional uint32 Ptid = 1;
void S2CCommonRet_1000::clear_ptid() {
  ptid_ = 0u;
}
 ::google::protobuf::uint32 S2CCommonRet_1000::ptid() const {
  // @@protoc_insertion_point(field_get:pb.S2CCommonRet_1000.Ptid)
  return ptid_;
}
 void S2CCommonRet_1000::set_ptid(::google::protobuf::uint32 value) {
  
  ptid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CCommonRet_1000.Ptid)
}

// optional uint32 Ret = 2;
void S2CCommonRet_1000::clear_ret() {
  ret_ = 0u;
}
 ::google::protobuf::uint32 S2CCommonRet_1000::ret() const {
  // @@protoc_insertion_point(field_get:pb.S2CCommonRet_1000.Ret)
  return ret_;
}
 void S2CCommonRet_1000::set_ret(::google::protobuf::uint32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CCommonRet_1000.Ret)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SPing_1001::C2SPing_1001()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SPing_1001)
}

void C2SPing_1001::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SPing_1001::C2SPing_1001(const C2SPing_1001& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SPing_1001)
}

void C2SPing_1001::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SPing_1001::~C2SPing_1001() {
  // @@protoc_insertion_point(destructor:pb.C2SPing_1001)
  SharedDtor();
}

void C2SPing_1001::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SPing_1001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SPing_1001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SPing_1001_descriptor_;
}

const C2SPing_1001& C2SPing_1001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SPing_1001* C2SPing_1001::default_instance_ = NULL;

C2SPing_1001* C2SPing_1001::New(::google::protobuf::Arena* arena) const {
  C2SPing_1001* n = new C2SPing_1001;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SPing_1001::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SPing_1001)
}

bool C2SPing_1001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SPing_1001)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SPing_1001)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SPing_1001)
  return false;
#undef DO_
}

void C2SPing_1001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SPing_1001)
  // @@protoc_insertion_point(serialize_end:pb.C2SPing_1001)
}

::google::protobuf::uint8* C2SPing_1001::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SPing_1001)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SPing_1001)
  return target;
}

int C2SPing_1001::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SPing_1001)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SPing_1001::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SPing_1001)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SPing_1001* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SPing_1001>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SPing_1001)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SPing_1001)
    MergeFrom(*source);
  }
}

void C2SPing_1001::MergeFrom(const C2SPing_1001& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SPing_1001)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SPing_1001::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SPing_1001)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SPing_1001::CopyFrom(const C2SPing_1001& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SPing_1001)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SPing_1001::IsInitialized() const {

  return true;
}

void C2SPing_1001::Swap(C2SPing_1001* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SPing_1001::InternalSwap(C2SPing_1001* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SPing_1001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SPing_1001_descriptor_;
  metadata.reflection = C2SPing_1001_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SPing_1001

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CPing_1001::S2CPing_1001()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CPing_1001)
}

void S2CPing_1001::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CPing_1001::S2CPing_1001(const S2CPing_1001& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CPing_1001)
}

void S2CPing_1001::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CPing_1001::~S2CPing_1001() {
  // @@protoc_insertion_point(destructor:pb.S2CPing_1001)
  SharedDtor();
}

void S2CPing_1001::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CPing_1001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CPing_1001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CPing_1001_descriptor_;
}

const S2CPing_1001& S2CPing_1001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CPing_1001* S2CPing_1001::default_instance_ = NULL;

S2CPing_1001* S2CPing_1001::New(::google::protobuf::Arena* arena) const {
  S2CPing_1001* n = new S2CPing_1001;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CPing_1001::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CPing_1001)
}

bool S2CPing_1001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CPing_1001)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CPing_1001)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CPing_1001)
  return false;
#undef DO_
}

void S2CPing_1001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CPing_1001)
  // @@protoc_insertion_point(serialize_end:pb.S2CPing_1001)
}

::google::protobuf::uint8* S2CPing_1001::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CPing_1001)
  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CPing_1001)
  return target;
}

int S2CPing_1001::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CPing_1001)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CPing_1001::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CPing_1001)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CPing_1001* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CPing_1001>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CPing_1001)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CPing_1001)
    MergeFrom(*source);
  }
}

void S2CPing_1001::MergeFrom(const S2CPing_1001& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CPing_1001)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void S2CPing_1001::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CPing_1001)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CPing_1001::CopyFrom(const S2CPing_1001& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CPing_1001)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CPing_1001::IsInitialized() const {

  return true;
}

void S2CPing_1001::Swap(S2CPing_1001* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CPing_1001::InternalSwap(S2CPing_1001* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CPing_1001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CPing_1001_descriptor_;
  metadata.reflection = S2CPing_1001_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CPing_1001

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_RegLogin_98::kVersionFieldNumber;
const int C2S_RegLogin_98::kLtParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_RegLogin_98::C2S_RegLogin_98()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_RegLogin_98)
}

void C2S_RegLogin_98::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_RegLogin_98::C2S_RegLogin_98(const C2S_RegLogin_98& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_RegLogin_98)
}

void C2S_RegLogin_98::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ltparam_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2S_RegLogin_98::~C2S_RegLogin_98() {
  // @@protoc_insertion_point(destructor:pb.C2S_RegLogin_98)
  SharedDtor();
}

void C2S_RegLogin_98::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ltparam_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2S_RegLogin_98::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_RegLogin_98::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_RegLogin_98_descriptor_;
}

const C2S_RegLogin_98& C2S_RegLogin_98::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_RegLogin_98* C2S_RegLogin_98::default_instance_ = NULL;

C2S_RegLogin_98* C2S_RegLogin_98::New(::google::protobuf::Arena* arena) const {
  C2S_RegLogin_98* n = new C2S_RegLogin_98;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_RegLogin_98::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_RegLogin_98)
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ltparam_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2S_RegLogin_98::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_RegLogin_98)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Version = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_RegLogin_98.Version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_LtParam;
        break;
      }

      // optional string LtParam = 2;
      case 2: {
        if (tag == 18) {
         parse_LtParam:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ltparam()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ltparam().data(), this->ltparam().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_RegLogin_98.LtParam"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_RegLogin_98)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_RegLogin_98)
  return false;
#undef DO_
}

void C2S_RegLogin_98::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_RegLogin_98)
  // optional string Version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_RegLogin_98.Version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  // optional string LtParam = 2;
  if (this->ltparam().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ltparam().data(), this->ltparam().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_RegLogin_98.LtParam");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ltparam(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_RegLogin_98)
}

::google::protobuf::uint8* C2S_RegLogin_98::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_RegLogin_98)
  // optional string Version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_RegLogin_98.Version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  // optional string LtParam = 2;
  if (this->ltparam().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ltparam().data(), this->ltparam().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_RegLogin_98.LtParam");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ltparam(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_RegLogin_98)
  return target;
}

int C2S_RegLogin_98::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_RegLogin_98)
  int total_size = 0;

  // optional string Version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // optional string LtParam = 2;
  if (this->ltparam().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ltparam());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_RegLogin_98::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_RegLogin_98)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_RegLogin_98* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_RegLogin_98>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_RegLogin_98)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_RegLogin_98)
    MergeFrom(*source);
  }
}

void C2S_RegLogin_98::MergeFrom(const C2S_RegLogin_98& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_RegLogin_98)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.ltparam().size() > 0) {

    ltparam_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ltparam_);
  }
}

void C2S_RegLogin_98::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_RegLogin_98)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_RegLogin_98::CopyFrom(const C2S_RegLogin_98& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_RegLogin_98)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_RegLogin_98::IsInitialized() const {

  return true;
}

void C2S_RegLogin_98::Swap(C2S_RegLogin_98* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_RegLogin_98::InternalSwap(C2S_RegLogin_98* other) {
  version_.Swap(&other->version_);
  ltparam_.Swap(&other->ltparam_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_RegLogin_98::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_RegLogin_98_descriptor_;
  metadata.reflection = C2S_RegLogin_98_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_RegLogin_98

// optional string Version = 1;
void C2S_RegLogin_98::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2S_RegLogin_98::version() const {
  // @@protoc_insertion_point(field_get:pb.C2S_RegLogin_98.Version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_RegLogin_98::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_RegLogin_98.Version)
}
 void C2S_RegLogin_98::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_RegLogin_98.Version)
}
 void C2S_RegLogin_98::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_RegLogin_98.Version)
}
 ::std::string* C2S_RegLogin_98::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_RegLogin_98.Version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2S_RegLogin_98::release_version() {
  // @@protoc_insertion_point(field_release:pb.C2S_RegLogin_98.Version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_RegLogin_98::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_RegLogin_98.Version)
}

// optional string LtParam = 2;
void C2S_RegLogin_98::clear_ltparam() {
  ltparam_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2S_RegLogin_98::ltparam() const {
  // @@protoc_insertion_point(field_get:pb.C2S_RegLogin_98.LtParam)
  return ltparam_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_RegLogin_98::set_ltparam(const ::std::string& value) {
  
  ltparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_RegLogin_98.LtParam)
}
 void C2S_RegLogin_98::set_ltparam(const char* value) {
  
  ltparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_RegLogin_98.LtParam)
}
 void C2S_RegLogin_98::set_ltparam(const char* value, size_t size) {
  
  ltparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_RegLogin_98.LtParam)
}
 ::std::string* C2S_RegLogin_98::mutable_ltparam() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_RegLogin_98.LtParam)
  return ltparam_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2S_RegLogin_98::release_ltparam() {
  // @@protoc_insertion_point(field_release:pb.C2S_RegLogin_98.LtParam)
  
  return ltparam_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_RegLogin_98::set_allocated_ltparam(::std::string* ltparam) {
  if (ltparam != NULL) {
    
  } else {
    
  }
  ltparam_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ltparam);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_RegLogin_98.LtParam)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_RegLogin_98::kAccFieldNumber;
const int S2C_RegLogin_98::kPwdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_RegLogin_98::S2C_RegLogin_98()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_RegLogin_98)
}

void S2C_RegLogin_98::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2C_RegLogin_98::S2C_RegLogin_98(const S2C_RegLogin_98& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2C_RegLogin_98)
}

void S2C_RegLogin_98::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  acc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

S2C_RegLogin_98::~S2C_RegLogin_98() {
  // @@protoc_insertion_point(destructor:pb.S2C_RegLogin_98)
  SharedDtor();
}

void S2C_RegLogin_98::SharedDtor() {
  acc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void S2C_RegLogin_98::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_RegLogin_98::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2C_RegLogin_98_descriptor_;
}

const S2C_RegLogin_98& S2C_RegLogin_98::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2C_RegLogin_98* S2C_RegLogin_98::default_instance_ = NULL;

S2C_RegLogin_98* S2C_RegLogin_98::New(::google::protobuf::Arena* arena) const {
  S2C_RegLogin_98* n = new S2C_RegLogin_98;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_RegLogin_98::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_RegLogin_98)
  acc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool S2C_RegLogin_98::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_RegLogin_98)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Acc = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_acc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->acc().data(), this->acc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2C_RegLogin_98.Acc"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Pwd;
        break;
      }

      // optional string Pwd = 2;
      case 2: {
        if (tag == 18) {
         parse_Pwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pwd().data(), this->pwd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2C_RegLogin_98.Pwd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_RegLogin_98)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_RegLogin_98)
  return false;
#undef DO_
}

void S2C_RegLogin_98::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_RegLogin_98)
  // optional string Acc = 1;
  if (this->acc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->acc().data(), this->acc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2C_RegLogin_98.Acc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->acc(), output);
  }

  // optional string Pwd = 2;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), this->pwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2C_RegLogin_98.Pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pwd(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_RegLogin_98)
}

::google::protobuf::uint8* S2C_RegLogin_98::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_RegLogin_98)
  // optional string Acc = 1;
  if (this->acc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->acc().data(), this->acc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2C_RegLogin_98.Acc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->acc(), target);
  }

  // optional string Pwd = 2;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), this->pwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2C_RegLogin_98.Pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pwd(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_RegLogin_98)
  return target;
}

int S2C_RegLogin_98::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_RegLogin_98)
  int total_size = 0;

  // optional string Acc = 1;
  if (this->acc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->acc());
  }

  // optional string Pwd = 2;
  if (this->pwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pwd());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_RegLogin_98::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_RegLogin_98)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2C_RegLogin_98* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_RegLogin_98>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_RegLogin_98)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_RegLogin_98)
    MergeFrom(*source);
  }
}

void S2C_RegLogin_98::MergeFrom(const S2C_RegLogin_98& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_RegLogin_98)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.acc().size() > 0) {

    acc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acc_);
  }
  if (from.pwd().size() > 0) {

    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
}

void S2C_RegLogin_98::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_RegLogin_98)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_RegLogin_98::CopyFrom(const S2C_RegLogin_98& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_RegLogin_98)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_RegLogin_98::IsInitialized() const {

  return true;
}

void S2C_RegLogin_98::Swap(S2C_RegLogin_98* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_RegLogin_98::InternalSwap(S2C_RegLogin_98* other) {
  acc_.Swap(&other->acc_);
  pwd_.Swap(&other->pwd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_RegLogin_98::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2C_RegLogin_98_descriptor_;
  metadata.reflection = S2C_RegLogin_98_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_RegLogin_98

// optional string Acc = 1;
void S2C_RegLogin_98::clear_acc() {
  acc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2C_RegLogin_98::acc() const {
  // @@protoc_insertion_point(field_get:pb.S2C_RegLogin_98.Acc)
  return acc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2C_RegLogin_98::set_acc(const ::std::string& value) {
  
  acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2C_RegLogin_98.Acc)
}
 void S2C_RegLogin_98::set_acc(const char* value) {
  
  acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2C_RegLogin_98.Acc)
}
 void S2C_RegLogin_98::set_acc(const char* value, size_t size) {
  
  acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2C_RegLogin_98.Acc)
}
 ::std::string* S2C_RegLogin_98::mutable_acc() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2C_RegLogin_98.Acc)
  return acc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2C_RegLogin_98::release_acc() {
  // @@protoc_insertion_point(field_release:pb.S2C_RegLogin_98.Acc)
  
  return acc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2C_RegLogin_98::set_allocated_acc(::std::string* acc) {
  if (acc != NULL) {
    
  } else {
    
  }
  acc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), acc);
  // @@protoc_insertion_point(field_set_allocated:pb.S2C_RegLogin_98.Acc)
}

// optional string Pwd = 2;
void S2C_RegLogin_98::clear_pwd() {
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2C_RegLogin_98::pwd() const {
  // @@protoc_insertion_point(field_get:pb.S2C_RegLogin_98.Pwd)
  return pwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2C_RegLogin_98::set_pwd(const ::std::string& value) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2C_RegLogin_98.Pwd)
}
 void S2C_RegLogin_98::set_pwd(const char* value) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2C_RegLogin_98.Pwd)
}
 void S2C_RegLogin_98::set_pwd(const char* value, size_t size) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2C_RegLogin_98.Pwd)
}
 ::std::string* S2C_RegLogin_98::mutable_pwd() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2C_RegLogin_98.Pwd)
  return pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2C_RegLogin_98::release_pwd() {
  // @@protoc_insertion_point(field_release:pb.S2C_RegLogin_98.Pwd)
  
  return pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2C_RegLogin_98::set_allocated_pwd(::std::string* pwd) {
  if (pwd != NULL) {
    
  } else {
    
  }
  pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwd);
  // @@protoc_insertion_point(field_set_allocated:pb.S2C_RegLogin_98.Pwd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_RegAcc_99::kAccFieldNumber;
const int C2S_RegAcc_99::kPwdFieldNumber;
const int C2S_RegAcc_99::kTelFieldNumber;
const int C2S_RegAcc_99::kVersionFieldNumber;
const int C2S_RegAcc_99::kLtParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_RegAcc_99::C2S_RegAcc_99()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_RegAcc_99)
}

void C2S_RegAcc_99::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_RegAcc_99::C2S_RegAcc_99(const C2S_RegAcc_99& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_RegAcc_99)
}

void C2S_RegAcc_99::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  acc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ltparam_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2S_RegAcc_99::~C2S_RegAcc_99() {
  // @@protoc_insertion_point(destructor:pb.C2S_RegAcc_99)
  SharedDtor();
}

void C2S_RegAcc_99::SharedDtor() {
  acc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ltparam_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2S_RegAcc_99::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_RegAcc_99::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_RegAcc_99_descriptor_;
}

const C2S_RegAcc_99& C2S_RegAcc_99::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_RegAcc_99* C2S_RegAcc_99::default_instance_ = NULL;

C2S_RegAcc_99* C2S_RegAcc_99::New(::google::protobuf::Arena* arena) const {
  C2S_RegAcc_99* n = new C2S_RegAcc_99;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_RegAcc_99::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_RegAcc_99)
  acc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ltparam_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2S_RegAcc_99::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_RegAcc_99)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Acc = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_acc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->acc().data(), this->acc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_RegAcc_99.Acc"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Pwd;
        break;
      }

      // optional string Pwd = 2;
      case 2: {
        if (tag == 18) {
         parse_Pwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pwd().data(), this->pwd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_RegAcc_99.Pwd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Tel;
        break;
      }

      // optional string Tel = 3;
      case 3: {
        if (tag == 26) {
         parse_Tel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tel().data(), this->tel().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_RegAcc_99.Tel"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Version;
        break;
      }

      // optional string Version = 4;
      case 4: {
        if (tag == 34) {
         parse_Version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_RegAcc_99.Version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_LtParam;
        break;
      }

      // optional string LtParam = 5;
      case 5: {
        if (tag == 42) {
         parse_LtParam:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ltparam()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ltparam().data(), this->ltparam().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_RegAcc_99.LtParam"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_RegAcc_99)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_RegAcc_99)
  return false;
#undef DO_
}

void C2S_RegAcc_99::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_RegAcc_99)
  // optional string Acc = 1;
  if (this->acc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->acc().data(), this->acc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_RegAcc_99.Acc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->acc(), output);
  }

  // optional string Pwd = 2;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), this->pwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_RegAcc_99.Pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pwd(), output);
  }

  // optional string Tel = 3;
  if (this->tel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tel().data(), this->tel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_RegAcc_99.Tel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tel(), output);
  }

  // optional string Version = 4;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_RegAcc_99.Version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->version(), output);
  }

  // optional string LtParam = 5;
  if (this->ltparam().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ltparam().data(), this->ltparam().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_RegAcc_99.LtParam");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ltparam(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_RegAcc_99)
}

::google::protobuf::uint8* C2S_RegAcc_99::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_RegAcc_99)
  // optional string Acc = 1;
  if (this->acc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->acc().data(), this->acc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_RegAcc_99.Acc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->acc(), target);
  }

  // optional string Pwd = 2;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), this->pwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_RegAcc_99.Pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pwd(), target);
  }

  // optional string Tel = 3;
  if (this->tel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tel().data(), this->tel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_RegAcc_99.Tel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tel(), target);
  }

  // optional string Version = 4;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_RegAcc_99.Version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->version(), target);
  }

  // optional string LtParam = 5;
  if (this->ltparam().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ltparam().data(), this->ltparam().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_RegAcc_99.LtParam");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ltparam(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_RegAcc_99)
  return target;
}

int C2S_RegAcc_99::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_RegAcc_99)
  int total_size = 0;

  // optional string Acc = 1;
  if (this->acc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->acc());
  }

  // optional string Pwd = 2;
  if (this->pwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pwd());
  }

  // optional string Tel = 3;
  if (this->tel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tel());
  }

  // optional string Version = 4;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // optional string LtParam = 5;
  if (this->ltparam().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ltparam());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_RegAcc_99::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_RegAcc_99)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_RegAcc_99* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_RegAcc_99>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_RegAcc_99)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_RegAcc_99)
    MergeFrom(*source);
  }
}

void C2S_RegAcc_99::MergeFrom(const C2S_RegAcc_99& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_RegAcc_99)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.acc().size() > 0) {

    acc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acc_);
  }
  if (from.pwd().size() > 0) {

    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
  if (from.tel().size() > 0) {

    tel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tel_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.ltparam().size() > 0) {

    ltparam_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ltparam_);
  }
}

void C2S_RegAcc_99::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_RegAcc_99)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_RegAcc_99::CopyFrom(const C2S_RegAcc_99& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_RegAcc_99)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_RegAcc_99::IsInitialized() const {

  return true;
}

void C2S_RegAcc_99::Swap(C2S_RegAcc_99* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_RegAcc_99::InternalSwap(C2S_RegAcc_99* other) {
  acc_.Swap(&other->acc_);
  pwd_.Swap(&other->pwd_);
  tel_.Swap(&other->tel_);
  version_.Swap(&other->version_);
  ltparam_.Swap(&other->ltparam_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_RegAcc_99::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_RegAcc_99_descriptor_;
  metadata.reflection = C2S_RegAcc_99_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_RegAcc_99

// optional string Acc = 1;
void C2S_RegAcc_99::clear_acc() {
  acc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2S_RegAcc_99::acc() const {
  // @@protoc_insertion_point(field_get:pb.C2S_RegAcc_99.Acc)
  return acc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_RegAcc_99::set_acc(const ::std::string& value) {
  
  acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_RegAcc_99.Acc)
}
 void C2S_RegAcc_99::set_acc(const char* value) {
  
  acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_RegAcc_99.Acc)
}
 void C2S_RegAcc_99::set_acc(const char* value, size_t size) {
  
  acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_RegAcc_99.Acc)
}
 ::std::string* C2S_RegAcc_99::mutable_acc() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_RegAcc_99.Acc)
  return acc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2S_RegAcc_99::release_acc() {
  // @@protoc_insertion_point(field_release:pb.C2S_RegAcc_99.Acc)
  
  return acc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_RegAcc_99::set_allocated_acc(::std::string* acc) {
  if (acc != NULL) {
    
  } else {
    
  }
  acc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), acc);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_RegAcc_99.Acc)
}

// optional string Pwd = 2;
void C2S_RegAcc_99::clear_pwd() {
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2S_RegAcc_99::pwd() const {
  // @@protoc_insertion_point(field_get:pb.C2S_RegAcc_99.Pwd)
  return pwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_RegAcc_99::set_pwd(const ::std::string& value) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_RegAcc_99.Pwd)
}
 void C2S_RegAcc_99::set_pwd(const char* value) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_RegAcc_99.Pwd)
}
 void C2S_RegAcc_99::set_pwd(const char* value, size_t size) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_RegAcc_99.Pwd)
}
 ::std::string* C2S_RegAcc_99::mutable_pwd() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_RegAcc_99.Pwd)
  return pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2S_RegAcc_99::release_pwd() {
  // @@protoc_insertion_point(field_release:pb.C2S_RegAcc_99.Pwd)
  
  return pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_RegAcc_99::set_allocated_pwd(::std::string* pwd) {
  if (pwd != NULL) {
    
  } else {
    
  }
  pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwd);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_RegAcc_99.Pwd)
}

// optional string Tel = 3;
void C2S_RegAcc_99::clear_tel() {
  tel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2S_RegAcc_99::tel() const {
  // @@protoc_insertion_point(field_get:pb.C2S_RegAcc_99.Tel)
  return tel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_RegAcc_99::set_tel(const ::std::string& value) {
  
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_RegAcc_99.Tel)
}
 void C2S_RegAcc_99::set_tel(const char* value) {
  
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_RegAcc_99.Tel)
}
 void C2S_RegAcc_99::set_tel(const char* value, size_t size) {
  
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_RegAcc_99.Tel)
}
 ::std::string* C2S_RegAcc_99::mutable_tel() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_RegAcc_99.Tel)
  return tel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2S_RegAcc_99::release_tel() {
  // @@protoc_insertion_point(field_release:pb.C2S_RegAcc_99.Tel)
  
  return tel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_RegAcc_99::set_allocated_tel(::std::string* tel) {
  if (tel != NULL) {
    
  } else {
    
  }
  tel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tel);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_RegAcc_99.Tel)
}

// optional string Version = 4;
void C2S_RegAcc_99::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2S_RegAcc_99::version() const {
  // @@protoc_insertion_point(field_get:pb.C2S_RegAcc_99.Version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_RegAcc_99::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_RegAcc_99.Version)
}
 void C2S_RegAcc_99::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_RegAcc_99.Version)
}
 void C2S_RegAcc_99::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_RegAcc_99.Version)
}
 ::std::string* C2S_RegAcc_99::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_RegAcc_99.Version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2S_RegAcc_99::release_version() {
  // @@protoc_insertion_point(field_release:pb.C2S_RegAcc_99.Version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_RegAcc_99::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_RegAcc_99.Version)
}

// optional string LtParam = 5;
void C2S_RegAcc_99::clear_ltparam() {
  ltparam_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2S_RegAcc_99::ltparam() const {
  // @@protoc_insertion_point(field_get:pb.C2S_RegAcc_99.LtParam)
  return ltparam_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_RegAcc_99::set_ltparam(const ::std::string& value) {
  
  ltparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_RegAcc_99.LtParam)
}
 void C2S_RegAcc_99::set_ltparam(const char* value) {
  
  ltparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_RegAcc_99.LtParam)
}
 void C2S_RegAcc_99::set_ltparam(const char* value, size_t size) {
  
  ltparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_RegAcc_99.LtParam)
}
 ::std::string* C2S_RegAcc_99::mutable_ltparam() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_RegAcc_99.LtParam)
  return ltparam_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2S_RegAcc_99::release_ltparam() {
  // @@protoc_insertion_point(field_release:pb.C2S_RegAcc_99.LtParam)
  
  return ltparam_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_RegAcc_99::set_allocated_ltparam(::std::string* ltparam) {
  if (ltparam != NULL) {
    
  } else {
    
  }
  ltparam_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ltparam);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_RegAcc_99.LtParam)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_CreateRole_117::kNameFieldNumber;
const int C2S_CreateRole_117::kSexFieldNumber;
const int C2S_CreateRole_117::kLtParamFieldNumber;
const int C2S_CreateRole_117::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_CreateRole_117::C2S_CreateRole_117()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_CreateRole_117)
}

void C2S_CreateRole_117::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_CreateRole_117::C2S_CreateRole_117(const C2S_CreateRole_117& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_CreateRole_117)
}

void C2S_CreateRole_117::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sex_ = 0u;
  ltparam_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2S_CreateRole_117::~C2S_CreateRole_117() {
  // @@protoc_insertion_point(destructor:pb.C2S_CreateRole_117)
  SharedDtor();
}

void C2S_CreateRole_117::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ltparam_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2S_CreateRole_117::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_CreateRole_117::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_CreateRole_117_descriptor_;
}

const C2S_CreateRole_117& C2S_CreateRole_117::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_CreateRole_117* C2S_CreateRole_117::default_instance_ = NULL;

C2S_CreateRole_117* C2S_CreateRole_117::New(::google::protobuf::Arena* arena) const {
  C2S_CreateRole_117* n = new C2S_CreateRole_117;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_CreateRole_117::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_CreateRole_117)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sex_ = 0u;
  ltparam_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2S_CreateRole_117::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_CreateRole_117)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_CreateRole_117.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Sex;
        break;
      }

      // optional uint32 Sex = 2;
      case 2: {
        if (tag == 16) {
         parse_Sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_LtParam;
        break;
      }

      // optional string LtParam = 3;
      case 3: {
        if (tag == 26) {
         parse_LtParam:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ltparam()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ltparam().data(), this->ltparam().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_CreateRole_117.LtParam"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Version;
        break;
      }

      // optional string Version = 4;
      case 4: {
        if (tag == 34) {
         parse_Version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_CreateRole_117.Version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_CreateRole_117)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_CreateRole_117)
  return false;
#undef DO_
}

void C2S_CreateRole_117::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_CreateRole_117)
  // optional string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_CreateRole_117.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 Sex = 2;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sex(), output);
  }

  // optional string LtParam = 3;
  if (this->ltparam().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ltparam().data(), this->ltparam().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_CreateRole_117.LtParam");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ltparam(), output);
  }

  // optional string Version = 4;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_CreateRole_117.Version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->version(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_CreateRole_117)
}

::google::protobuf::uint8* C2S_CreateRole_117::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_CreateRole_117)
  // optional string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_CreateRole_117.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 Sex = 2;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sex(), target);
  }

  // optional string LtParam = 3;
  if (this->ltparam().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ltparam().data(), this->ltparam().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_CreateRole_117.LtParam");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ltparam(), target);
  }

  // optional string Version = 4;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_CreateRole_117.Version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_CreateRole_117)
  return target;
}

int C2S_CreateRole_117::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_CreateRole_117)
  int total_size = 0;

  // optional string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional uint32 Sex = 2;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sex());
  }

  // optional string LtParam = 3;
  if (this->ltparam().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ltparam());
  }

  // optional string Version = 4;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_CreateRole_117::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_CreateRole_117)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_CreateRole_117* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_CreateRole_117>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_CreateRole_117)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_CreateRole_117)
    MergeFrom(*source);
  }
}

void C2S_CreateRole_117::MergeFrom(const C2S_CreateRole_117& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_CreateRole_117)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.ltparam().size() > 0) {

    ltparam_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ltparam_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
}

void C2S_CreateRole_117::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_CreateRole_117)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_CreateRole_117::CopyFrom(const C2S_CreateRole_117& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_CreateRole_117)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_CreateRole_117::IsInitialized() const {

  return true;
}

void C2S_CreateRole_117::Swap(C2S_CreateRole_117* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_CreateRole_117::InternalSwap(C2S_CreateRole_117* other) {
  name_.Swap(&other->name_);
  std::swap(sex_, other->sex_);
  ltparam_.Swap(&other->ltparam_);
  version_.Swap(&other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_CreateRole_117::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_CreateRole_117_descriptor_;
  metadata.reflection = C2S_CreateRole_117_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_CreateRole_117

// optional string Name = 1;
void C2S_CreateRole_117::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2S_CreateRole_117::name() const {
  // @@protoc_insertion_point(field_get:pb.C2S_CreateRole_117.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_CreateRole_117::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_CreateRole_117.Name)
}
 void C2S_CreateRole_117::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_CreateRole_117.Name)
}
 void C2S_CreateRole_117::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_CreateRole_117.Name)
}
 ::std::string* C2S_CreateRole_117::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_CreateRole_117.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2S_CreateRole_117::release_name() {
  // @@protoc_insertion_point(field_release:pb.C2S_CreateRole_117.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_CreateRole_117::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_CreateRole_117.Name)
}

// optional uint32 Sex = 2;
void C2S_CreateRole_117::clear_sex() {
  sex_ = 0u;
}
 ::google::protobuf::uint32 C2S_CreateRole_117::sex() const {
  // @@protoc_insertion_point(field_get:pb.C2S_CreateRole_117.Sex)
  return sex_;
}
 void C2S_CreateRole_117::set_sex(::google::protobuf::uint32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_CreateRole_117.Sex)
}

// optional string LtParam = 3;
void C2S_CreateRole_117::clear_ltparam() {
  ltparam_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2S_CreateRole_117::ltparam() const {
  // @@protoc_insertion_point(field_get:pb.C2S_CreateRole_117.LtParam)
  return ltparam_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_CreateRole_117::set_ltparam(const ::std::string& value) {
  
  ltparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_CreateRole_117.LtParam)
}
 void C2S_CreateRole_117::set_ltparam(const char* value) {
  
  ltparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_CreateRole_117.LtParam)
}
 void C2S_CreateRole_117::set_ltparam(const char* value, size_t size) {
  
  ltparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_CreateRole_117.LtParam)
}
 ::std::string* C2S_CreateRole_117::mutable_ltparam() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_CreateRole_117.LtParam)
  return ltparam_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2S_CreateRole_117::release_ltparam() {
  // @@protoc_insertion_point(field_release:pb.C2S_CreateRole_117.LtParam)
  
  return ltparam_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_CreateRole_117::set_allocated_ltparam(::std::string* ltparam) {
  if (ltparam != NULL) {
    
  } else {
    
  }
  ltparam_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ltparam);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_CreateRole_117.LtParam)
}

// optional string Version = 4;
void C2S_CreateRole_117::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2S_CreateRole_117::version() const {
  // @@protoc_insertion_point(field_get:pb.C2S_CreateRole_117.Version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_CreateRole_117::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_CreateRole_117.Version)
}
 void C2S_CreateRole_117::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_CreateRole_117.Version)
}
 void C2S_CreateRole_117::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_CreateRole_117.Version)
}
 ::std::string* C2S_CreateRole_117::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_CreateRole_117.Version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2S_CreateRole_117::release_version() {
  // @@protoc_insertion_point(field_release:pb.C2S_CreateRole_117.Version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_CreateRole_117::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_CreateRole_117.Version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_LoginData_116::kAccFieldNumber;
const int C2S_LoginData_116::kPwdFieldNumber;
const int C2S_LoginData_116::kVersionFieldNumber;
const int C2S_LoginData_116::kLtParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_LoginData_116::C2S_LoginData_116()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_LoginData_116)
}

void C2S_LoginData_116::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_LoginData_116::C2S_LoginData_116(const C2S_LoginData_116& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_LoginData_116)
}

void C2S_LoginData_116::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  acc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ltparam_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2S_LoginData_116::~C2S_LoginData_116() {
  // @@protoc_insertion_point(destructor:pb.C2S_LoginData_116)
  SharedDtor();
}

void C2S_LoginData_116::SharedDtor() {
  acc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ltparam_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2S_LoginData_116::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_LoginData_116::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_LoginData_116_descriptor_;
}

const C2S_LoginData_116& C2S_LoginData_116::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_LoginData_116* C2S_LoginData_116::default_instance_ = NULL;

C2S_LoginData_116* C2S_LoginData_116::New(::google::protobuf::Arena* arena) const {
  C2S_LoginData_116* n = new C2S_LoginData_116;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_LoginData_116::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_LoginData_116)
  acc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ltparam_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2S_LoginData_116::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_LoginData_116)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Acc = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_acc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->acc().data(), this->acc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_LoginData_116.Acc"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Pwd;
        break;
      }

      // optional string Pwd = 2;
      case 2: {
        if (tag == 18) {
         parse_Pwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pwd().data(), this->pwd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_LoginData_116.Pwd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Version;
        break;
      }

      // optional string Version = 3;
      case 3: {
        if (tag == 26) {
         parse_Version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_LoginData_116.Version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_LtParam;
        break;
      }

      // optional string LtParam = 4;
      case 4: {
        if (tag == 34) {
         parse_LtParam:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ltparam()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ltparam().data(), this->ltparam().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_LoginData_116.LtParam"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_LoginData_116)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_LoginData_116)
  return false;
#undef DO_
}

void C2S_LoginData_116::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_LoginData_116)
  // optional string Acc = 1;
  if (this->acc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->acc().data(), this->acc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_LoginData_116.Acc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->acc(), output);
  }

  // optional string Pwd = 2;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), this->pwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_LoginData_116.Pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pwd(), output);
  }

  // optional string Version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_LoginData_116.Version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version(), output);
  }

  // optional string LtParam = 4;
  if (this->ltparam().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ltparam().data(), this->ltparam().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_LoginData_116.LtParam");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ltparam(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_LoginData_116)
}

::google::protobuf::uint8* C2S_LoginData_116::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_LoginData_116)
  // optional string Acc = 1;
  if (this->acc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->acc().data(), this->acc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_LoginData_116.Acc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->acc(), target);
  }

  // optional string Pwd = 2;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), this->pwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_LoginData_116.Pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pwd(), target);
  }

  // optional string Version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_LoginData_116.Version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version(), target);
  }

  // optional string LtParam = 4;
  if (this->ltparam().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ltparam().data(), this->ltparam().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_LoginData_116.LtParam");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ltparam(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_LoginData_116)
  return target;
}

int C2S_LoginData_116::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_LoginData_116)
  int total_size = 0;

  // optional string Acc = 1;
  if (this->acc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->acc());
  }

  // optional string Pwd = 2;
  if (this->pwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pwd());
  }

  // optional string Version = 3;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // optional string LtParam = 4;
  if (this->ltparam().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ltparam());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_LoginData_116::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_LoginData_116)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_LoginData_116* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_LoginData_116>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_LoginData_116)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_LoginData_116)
    MergeFrom(*source);
  }
}

void C2S_LoginData_116::MergeFrom(const C2S_LoginData_116& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_LoginData_116)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.acc().size() > 0) {

    acc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acc_);
  }
  if (from.pwd().size() > 0) {

    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.ltparam().size() > 0) {

    ltparam_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ltparam_);
  }
}

void C2S_LoginData_116::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_LoginData_116)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_LoginData_116::CopyFrom(const C2S_LoginData_116& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_LoginData_116)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_LoginData_116::IsInitialized() const {

  return true;
}

void C2S_LoginData_116::Swap(C2S_LoginData_116* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_LoginData_116::InternalSwap(C2S_LoginData_116* other) {
  acc_.Swap(&other->acc_);
  pwd_.Swap(&other->pwd_);
  version_.Swap(&other->version_);
  ltparam_.Swap(&other->ltparam_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_LoginData_116::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_LoginData_116_descriptor_;
  metadata.reflection = C2S_LoginData_116_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_LoginData_116

// optional string Acc = 1;
void C2S_LoginData_116::clear_acc() {
  acc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2S_LoginData_116::acc() const {
  // @@protoc_insertion_point(field_get:pb.C2S_LoginData_116.Acc)
  return acc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_LoginData_116::set_acc(const ::std::string& value) {
  
  acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_LoginData_116.Acc)
}
 void C2S_LoginData_116::set_acc(const char* value) {
  
  acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_LoginData_116.Acc)
}
 void C2S_LoginData_116::set_acc(const char* value, size_t size) {
  
  acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_LoginData_116.Acc)
}
 ::std::string* C2S_LoginData_116::mutable_acc() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_LoginData_116.Acc)
  return acc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2S_LoginData_116::release_acc() {
  // @@protoc_insertion_point(field_release:pb.C2S_LoginData_116.Acc)
  
  return acc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_LoginData_116::set_allocated_acc(::std::string* acc) {
  if (acc != NULL) {
    
  } else {
    
  }
  acc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), acc);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_LoginData_116.Acc)
}

// optional string Pwd = 2;
void C2S_LoginData_116::clear_pwd() {
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2S_LoginData_116::pwd() const {
  // @@protoc_insertion_point(field_get:pb.C2S_LoginData_116.Pwd)
  return pwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_LoginData_116::set_pwd(const ::std::string& value) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_LoginData_116.Pwd)
}
 void C2S_LoginData_116::set_pwd(const char* value) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_LoginData_116.Pwd)
}
 void C2S_LoginData_116::set_pwd(const char* value, size_t size) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_LoginData_116.Pwd)
}
 ::std::string* C2S_LoginData_116::mutable_pwd() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_LoginData_116.Pwd)
  return pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2S_LoginData_116::release_pwd() {
  // @@protoc_insertion_point(field_release:pb.C2S_LoginData_116.Pwd)
  
  return pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_LoginData_116::set_allocated_pwd(::std::string* pwd) {
  if (pwd != NULL) {
    
  } else {
    
  }
  pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwd);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_LoginData_116.Pwd)
}

// optional string Version = 3;
void C2S_LoginData_116::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2S_LoginData_116::version() const {
  // @@protoc_insertion_point(field_get:pb.C2S_LoginData_116.Version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_LoginData_116::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_LoginData_116.Version)
}
 void C2S_LoginData_116::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_LoginData_116.Version)
}
 void C2S_LoginData_116::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_LoginData_116.Version)
}
 ::std::string* C2S_LoginData_116::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_LoginData_116.Version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2S_LoginData_116::release_version() {
  // @@protoc_insertion_point(field_release:pb.C2S_LoginData_116.Version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_LoginData_116::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_LoginData_116.Version)
}

// optional string LtParam = 4;
void C2S_LoginData_116::clear_ltparam() {
  ltparam_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2S_LoginData_116::ltparam() const {
  // @@protoc_insertion_point(field_get:pb.C2S_LoginData_116.LtParam)
  return ltparam_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_LoginData_116::set_ltparam(const ::std::string& value) {
  
  ltparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_LoginData_116.LtParam)
}
 void C2S_LoginData_116::set_ltparam(const char* value) {
  
  ltparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_LoginData_116.LtParam)
}
 void C2S_LoginData_116::set_ltparam(const char* value, size_t size) {
  
  ltparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_LoginData_116.LtParam)
}
 ::std::string* C2S_LoginData_116::mutable_ltparam() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_LoginData_116.LtParam)
  return ltparam_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2S_LoginData_116::release_ltparam() {
  // @@protoc_insertion_point(field_release:pb.C2S_LoginData_116.LtParam)
  
  return ltparam_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_LoginData_116::set_allocated_ltparam(::std::string* ltparam) {
  if (ltparam != NULL) {
    
  } else {
    
  }
  ltparam_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ltparam);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_LoginData_116.LtParam)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_LoginData_116::kUseridFieldNumber;
const int S2C_LoginData_116::kUsernameFieldNumber;
const int S2C_LoginData_116::kRoomidFieldNumber;
const int S2C_LoginData_116::kGoldFieldNumber;
const int S2C_LoginData_116::kMountidFieldNumber;
const int S2C_LoginData_116::kSexFieldNumber;
const int S2C_LoginData_116::kHideScoreFieldNumber;
const int S2C_LoginData_116::kStarFieldNumber;
const int S2C_LoginData_116::kStarWinFieldNumber;
const int S2C_LoginData_116::kStarFailFieldNumber;
const int S2C_LoginData_116::kSelfIntroduceFieldNumber;
const int S2C_LoginData_116::kStageStartFieldNumber;
const int S2C_LoginData_116::kStarStageProFailFieldNumber;
const int S2C_LoginData_116::kRuneShardFieldNumber;
const int S2C_LoginData_116::kContestIdFieldNumber;
const int S2C_LoginData_116::kWeaponItemIdFieldNumber;
const int S2C_LoginData_116::kExpFieldNumber;
const int S2C_LoginData_116::kGuideStepsFieldNumber;
const int S2C_LoginData_116::kDiamondFieldNumber;
const int S2C_LoginData_116::kLevelFieldNumber;
const int S2C_LoginData_116::kIsExpMaxFieldNumber;
const int S2C_LoginData_116::kUseMountSkinIdFieldNumber;
const int S2C_LoginData_116::kPidFieldNumber;
const int S2C_LoginData_116::kMatchReadyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_LoginData_116::S2C_LoginData_116()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_LoginData_116)
}

void S2C_LoginData_116::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2C_LoginData_116::S2C_LoginData_116(const S2C_LoginData_116& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2C_LoginData_116)
}

void S2C_LoginData_116::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = GOOGLE_ULONGLONG(0);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomid_ = 0u;
  gold_ = 0u;
  mountid_ = 0u;
  sex_ = 0u;
  hidescore_ = 0u;
  star_ = 0u;
  starwin_ = 0u;
  starfail_ = 0u;
  selfintroduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stagestart_ = false;
  starstageprofail_ = 0u;
  runeshard_ = 0u;
  contestid_ = 0u;
  weaponitemid_ = 0u;
  exp_ = 0u;
  guidesteps_ = 0u;
  diamond_ = 0u;
  level_ = 0u;
  isexpmax_ = false;
  usemountskinid_ = 0u;
  pid_ = 0u;
  matchreadyid_ = 0u;
}

S2C_LoginData_116::~S2C_LoginData_116() {
  // @@protoc_insertion_point(destructor:pb.S2C_LoginData_116)
  SharedDtor();
}

void S2C_LoginData_116::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selfintroduce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void S2C_LoginData_116::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_LoginData_116::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2C_LoginData_116_descriptor_;
}

const S2C_LoginData_116& S2C_LoginData_116::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2C_LoginData_116* S2C_LoginData_116::default_instance_ = NULL;

S2C_LoginData_116* S2C_LoginData_116::New(::google::protobuf::Arena* arena) const {
  S2C_LoginData_116* n = new S2C_LoginData_116;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_LoginData_116::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_LoginData_116)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2C_LoginData_116, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2C_LoginData_116*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roomid_, star_);
  userid_ = GOOGLE_ULONGLONG(0);
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(starwin_, starfail_);
  ZR_(starstageprofail_, stagestart_);
  selfintroduce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(isexpmax_, matchreadyid_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2C_LoginData_116::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_LoginData_116)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Username;
        break;
      }

      // optional string Username = 2;
      case 2: {
        if (tag == 18) {
         parse_Username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2C_LoginData_116.Username"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Roomid;
        break;
      }

      // optional uint32 Roomid = 3;
      case 3: {
        if (tag == 24) {
         parse_Roomid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Gold;
        break;
      }

      // optional uint32 Gold = 4;
      case 4: {
        if (tag == 32) {
         parse_Gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Mountid;
        break;
      }

      // optional uint32 Mountid = 5;
      case 5: {
        if (tag == 40) {
         parse_Mountid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Sex;
        break;
      }

      // optional uint32 Sex = 6;
      case 6: {
        if (tag == 48) {
         parse_Sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_HideScore;
        break;
      }

      // optional uint32 HideScore = 7;
      case 7: {
        if (tag == 56) {
         parse_HideScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hidescore_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_Star;
        break;
      }

      // optional uint32 Star = 8;
      case 8: {
        if (tag == 64) {
         parse_Star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &star_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_StarWin;
        break;
      }

      // optional uint32 StarWin = 9;
      case 9: {
        if (tag == 72) {
         parse_StarWin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starwin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_StarFail;
        break;
      }

      // optional uint32 StarFail = 10;
      case 10: {
        if (tag == 80) {
         parse_StarFail:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starfail_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_SelfIntroduce;
        break;
      }

      // optional string SelfIntroduce = 11;
      case 11: {
        if (tag == 90) {
         parse_SelfIntroduce:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_selfintroduce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->selfintroduce().data(), this->selfintroduce().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2C_LoginData_116.SelfIntroduce"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_StageStart;
        break;
      }

      // optional bool StageStart = 12;
      case 12: {
        if (tag == 96) {
         parse_StageStart:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stagestart_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_StarStageProFail;
        break;
      }

      // optional uint32 StarStageProFail = 13;
      case 13: {
        if (tag == 104) {
         parse_StarStageProFail:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starstageprofail_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_RuneShard;
        break;
      }

      // optional uint32 RuneShard = 14;
      case 14: {
        if (tag == 112) {
         parse_RuneShard:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &runeshard_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_ContestId;
        break;
      }

      // optional uint32 ContestId = 15;
      case 15: {
        if (tag == 120) {
         parse_ContestId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contestid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_WeaponItemId;
        break;
      }

      // optional uint32 WeaponItemId = 16;
      case 16: {
        if (tag == 128) {
         parse_WeaponItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weaponitemid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_Exp;
        break;
      }

      // optional uint32 Exp = 17;
      case 17: {
        if (tag == 136) {
         parse_Exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_GuideSteps;
        break;
      }

      // optional uint32 GuideSteps = 18;
      case 18: {
        if (tag == 144) {
         parse_GuideSteps:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guidesteps_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_Diamond;
        break;
      }

      // optional uint32 Diamond = 19;
      case 19: {
        if (tag == 152) {
         parse_Diamond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &diamond_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_Level;
        break;
      }

      // optional uint32 Level = 20;
      case 20: {
        if (tag == 160) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_IsExpMax;
        break;
      }

      // optional bool IsExpMax = 21;
      case 21: {
        if (tag == 168) {
         parse_IsExpMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isexpmax_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_UseMountSkinId;
        break;
      }

      // optional uint32 UseMountSkinId = 22;
      case 22: {
        if (tag == 176) {
         parse_UseMountSkinId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usemountskinid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_Pid;
        break;
      }

      // optional uint32 Pid = 23;
      case 23: {
        if (tag == 184) {
         parse_Pid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_MatchReadyId;
        break;
      }

      // optional uint32 MatchReadyId = 24;
      case 24: {
        if (tag == 192) {
         parse_MatchReadyId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchreadyid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_LoginData_116)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_LoginData_116)
  return false;
#undef DO_
}

void S2C_LoginData_116::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_LoginData_116)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->userid(), output);
  }

  // optional string Username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2C_LoginData_116.Username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional uint32 Roomid = 3;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->roomid(), output);
  }

  // optional uint32 Gold = 4;
  if (this->gold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->gold(), output);
  }

  // optional uint32 Mountid = 5;
  if (this->mountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->mountid(), output);
  }

  // optional uint32 Sex = 6;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->sex(), output);
  }

  // optional uint32 HideScore = 7;
  if (this->hidescore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->hidescore(), output);
  }

  // optional uint32 Star = 8;
  if (this->star() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->star(), output);
  }

  // optional uint32 StarWin = 9;
  if (this->starwin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->starwin(), output);
  }

  // optional uint32 StarFail = 10;
  if (this->starfail() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->starfail(), output);
  }

  // optional string SelfIntroduce = 11;
  if (this->selfintroduce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selfintroduce().data(), this->selfintroduce().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2C_LoginData_116.SelfIntroduce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->selfintroduce(), output);
  }

  // optional bool StageStart = 12;
  if (this->stagestart() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->stagestart(), output);
  }

  // optional uint32 StarStageProFail = 13;
  if (this->starstageprofail() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->starstageprofail(), output);
  }

  // optional uint32 RuneShard = 14;
  if (this->runeshard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->runeshard(), output);
  }

  // optional uint32 ContestId = 15;
  if (this->contestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->contestid(), output);
  }

  // optional uint32 WeaponItemId = 16;
  if (this->weaponitemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->weaponitemid(), output);
  }

  // optional uint32 Exp = 17;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->exp(), output);
  }

  // optional uint32 GuideSteps = 18;
  if (this->guidesteps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->guidesteps(), output);
  }

  // optional uint32 Diamond = 19;
  if (this->diamond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->diamond(), output);
  }

  // optional uint32 Level = 20;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->level(), output);
  }

  // optional bool IsExpMax = 21;
  if (this->isexpmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->isexpmax(), output);
  }

  // optional uint32 UseMountSkinId = 22;
  if (this->usemountskinid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->usemountskinid(), output);
  }

  // optional uint32 Pid = 23;
  if (this->pid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->pid(), output);
  }

  // optional uint32 MatchReadyId = 24;
  if (this->matchreadyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->matchreadyid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_LoginData_116)
}

::google::protobuf::uint8* S2C_LoginData_116::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_LoginData_116)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->userid(), target);
  }

  // optional string Username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2C_LoginData_116.Username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional uint32 Roomid = 3;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->roomid(), target);
  }

  // optional uint32 Gold = 4;
  if (this->gold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->gold(), target);
  }

  // optional uint32 Mountid = 5;
  if (this->mountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->mountid(), target);
  }

  // optional uint32 Sex = 6;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->sex(), target);
  }

  // optional uint32 HideScore = 7;
  if (this->hidescore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->hidescore(), target);
  }

  // optional uint32 Star = 8;
  if (this->star() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->star(), target);
  }

  // optional uint32 StarWin = 9;
  if (this->starwin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->starwin(), target);
  }

  // optional uint32 StarFail = 10;
  if (this->starfail() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->starfail(), target);
  }

  // optional string SelfIntroduce = 11;
  if (this->selfintroduce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selfintroduce().data(), this->selfintroduce().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2C_LoginData_116.SelfIntroduce");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->selfintroduce(), target);
  }

  // optional bool StageStart = 12;
  if (this->stagestart() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->stagestart(), target);
  }

  // optional uint32 StarStageProFail = 13;
  if (this->starstageprofail() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->starstageprofail(), target);
  }

  // optional uint32 RuneShard = 14;
  if (this->runeshard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->runeshard(), target);
  }

  // optional uint32 ContestId = 15;
  if (this->contestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->contestid(), target);
  }

  // optional uint32 WeaponItemId = 16;
  if (this->weaponitemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->weaponitemid(), target);
  }

  // optional uint32 Exp = 17;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->exp(), target);
  }

  // optional uint32 GuideSteps = 18;
  if (this->guidesteps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->guidesteps(), target);
  }

  // optional uint32 Diamond = 19;
  if (this->diamond() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->diamond(), target);
  }

  // optional uint32 Level = 20;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->level(), target);
  }

  // optional bool IsExpMax = 21;
  if (this->isexpmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->isexpmax(), target);
  }

  // optional uint32 UseMountSkinId = 22;
  if (this->usemountskinid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->usemountskinid(), target);
  }

  // optional uint32 Pid = 23;
  if (this->pid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->pid(), target);
  }

  // optional uint32 MatchReadyId = 24;
  if (this->matchreadyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->matchreadyid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_LoginData_116)
  return target;
}

int S2C_LoginData_116::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_LoginData_116)
  int total_size = 0;

  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // optional string Username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional uint32 Roomid = 3;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  // optional uint32 Gold = 4;
  if (this->gold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gold());
  }

  // optional uint32 Mountid = 5;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mountid());
  }

  // optional uint32 Sex = 6;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sex());
  }

  // optional uint32 HideScore = 7;
  if (this->hidescore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hidescore());
  }

  // optional uint32 Star = 8;
  if (this->star() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->star());
  }

  // optional uint32 StarWin = 9;
  if (this->starwin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->starwin());
  }

  // optional uint32 StarFail = 10;
  if (this->starfail() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->starfail());
  }

  // optional string SelfIntroduce = 11;
  if (this->selfintroduce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->selfintroduce());
  }

  // optional bool StageStart = 12;
  if (this->stagestart() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 StarStageProFail = 13;
  if (this->starstageprofail() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->starstageprofail());
  }

  // optional uint32 RuneShard = 14;
  if (this->runeshard() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->runeshard());
  }

  // optional uint32 ContestId = 15;
  if (this->contestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contestid());
  }

  // optional uint32 WeaponItemId = 16;
  if (this->weaponitemid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weaponitemid());
  }

  // optional uint32 Exp = 17;
  if (this->exp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp());
  }

  // optional uint32 GuideSteps = 18;
  if (this->guidesteps() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guidesteps());
  }

  // optional uint32 Diamond = 19;
  if (this->diamond() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->diamond());
  }

  // optional uint32 Level = 20;
  if (this->level() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // optional bool IsExpMax = 21;
  if (this->isexpmax() != 0) {
    total_size += 2 + 1;
  }

  // optional uint32 UseMountSkinId = 22;
  if (this->usemountskinid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->usemountskinid());
  }

  // optional uint32 Pid = 23;
  if (this->pid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());
  }

  // optional uint32 MatchReadyId = 24;
  if (this->matchreadyid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchreadyid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_LoginData_116::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_LoginData_116)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2C_LoginData_116* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_LoginData_116>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_LoginData_116)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_LoginData_116)
    MergeFrom(*source);
  }
}

void S2C_LoginData_116::MergeFrom(const S2C_LoginData_116& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_LoginData_116)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.gold() != 0) {
    set_gold(from.gold());
  }
  if (from.mountid() != 0) {
    set_mountid(from.mountid());
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.hidescore() != 0) {
    set_hidescore(from.hidescore());
  }
  if (from.star() != 0) {
    set_star(from.star());
  }
  if (from.starwin() != 0) {
    set_starwin(from.starwin());
  }
  if (from.starfail() != 0) {
    set_starfail(from.starfail());
  }
  if (from.selfintroduce().size() > 0) {

    selfintroduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.selfintroduce_);
  }
  if (from.stagestart() != 0) {
    set_stagestart(from.stagestart());
  }
  if (from.starstageprofail() != 0) {
    set_starstageprofail(from.starstageprofail());
  }
  if (from.runeshard() != 0) {
    set_runeshard(from.runeshard());
  }
  if (from.contestid() != 0) {
    set_contestid(from.contestid());
  }
  if (from.weaponitemid() != 0) {
    set_weaponitemid(from.weaponitemid());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.guidesteps() != 0) {
    set_guidesteps(from.guidesteps());
  }
  if (from.diamond() != 0) {
    set_diamond(from.diamond());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.isexpmax() != 0) {
    set_isexpmax(from.isexpmax());
  }
  if (from.usemountskinid() != 0) {
    set_usemountskinid(from.usemountskinid());
  }
  if (from.pid() != 0) {
    set_pid(from.pid());
  }
  if (from.matchreadyid() != 0) {
    set_matchreadyid(from.matchreadyid());
  }
}

void S2C_LoginData_116::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_LoginData_116)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_LoginData_116::CopyFrom(const S2C_LoginData_116& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_LoginData_116)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_LoginData_116::IsInitialized() const {

  return true;
}

void S2C_LoginData_116::Swap(S2C_LoginData_116* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_LoginData_116::InternalSwap(S2C_LoginData_116* other) {
  std::swap(userid_, other->userid_);
  username_.Swap(&other->username_);
  std::swap(roomid_, other->roomid_);
  std::swap(gold_, other->gold_);
  std::swap(mountid_, other->mountid_);
  std::swap(sex_, other->sex_);
  std::swap(hidescore_, other->hidescore_);
  std::swap(star_, other->star_);
  std::swap(starwin_, other->starwin_);
  std::swap(starfail_, other->starfail_);
  selfintroduce_.Swap(&other->selfintroduce_);
  std::swap(stagestart_, other->stagestart_);
  std::swap(starstageprofail_, other->starstageprofail_);
  std::swap(runeshard_, other->runeshard_);
  std::swap(contestid_, other->contestid_);
  std::swap(weaponitemid_, other->weaponitemid_);
  std::swap(exp_, other->exp_);
  std::swap(guidesteps_, other->guidesteps_);
  std::swap(diamond_, other->diamond_);
  std::swap(level_, other->level_);
  std::swap(isexpmax_, other->isexpmax_);
  std::swap(usemountskinid_, other->usemountskinid_);
  std::swap(pid_, other->pid_);
  std::swap(matchreadyid_, other->matchreadyid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_LoginData_116::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2C_LoginData_116_descriptor_;
  metadata.reflection = S2C_LoginData_116_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_LoginData_116

// optional uint64 Userid = 1;
void S2C_LoginData_116::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2C_LoginData_116::userid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.Userid)
  return userid_;
}
 void S2C_LoginData_116::set_userid(::google::protobuf::uint64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.Userid)
}

// optional string Username = 2;
void S2C_LoginData_116::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2C_LoginData_116::username() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.Username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2C_LoginData_116::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.Username)
}
 void S2C_LoginData_116::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2C_LoginData_116.Username)
}
 void S2C_LoginData_116::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2C_LoginData_116.Username)
}
 ::std::string* S2C_LoginData_116::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2C_LoginData_116.Username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2C_LoginData_116::release_username() {
  // @@protoc_insertion_point(field_release:pb.S2C_LoginData_116.Username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2C_LoginData_116::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:pb.S2C_LoginData_116.Username)
}

// optional uint32 Roomid = 3;
void S2C_LoginData_116::clear_roomid() {
  roomid_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::roomid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.Roomid)
  return roomid_;
}
 void S2C_LoginData_116::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.Roomid)
}

// optional uint32 Gold = 4;
void S2C_LoginData_116::clear_gold() {
  gold_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::gold() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.Gold)
  return gold_;
}
 void S2C_LoginData_116::set_gold(::google::protobuf::uint32 value) {
  
  gold_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.Gold)
}

// optional uint32 Mountid = 5;
void S2C_LoginData_116::clear_mountid() {
  mountid_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::mountid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.Mountid)
  return mountid_;
}
 void S2C_LoginData_116::set_mountid(::google::protobuf::uint32 value) {
  
  mountid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.Mountid)
}

// optional uint32 Sex = 6;
void S2C_LoginData_116::clear_sex() {
  sex_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::sex() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.Sex)
  return sex_;
}
 void S2C_LoginData_116::set_sex(::google::protobuf::uint32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.Sex)
}

// optional uint32 HideScore = 7;
void S2C_LoginData_116::clear_hidescore() {
  hidescore_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::hidescore() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.HideScore)
  return hidescore_;
}
 void S2C_LoginData_116::set_hidescore(::google::protobuf::uint32 value) {
  
  hidescore_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.HideScore)
}

// optional uint32 Star = 8;
void S2C_LoginData_116::clear_star() {
  star_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::star() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.Star)
  return star_;
}
 void S2C_LoginData_116::set_star(::google::protobuf::uint32 value) {
  
  star_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.Star)
}

// optional uint32 StarWin = 9;
void S2C_LoginData_116::clear_starwin() {
  starwin_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::starwin() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.StarWin)
  return starwin_;
}
 void S2C_LoginData_116::set_starwin(::google::protobuf::uint32 value) {
  
  starwin_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.StarWin)
}

// optional uint32 StarFail = 10;
void S2C_LoginData_116::clear_starfail() {
  starfail_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::starfail() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.StarFail)
  return starfail_;
}
 void S2C_LoginData_116::set_starfail(::google::protobuf::uint32 value) {
  
  starfail_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.StarFail)
}

// optional string SelfIntroduce = 11;
void S2C_LoginData_116::clear_selfintroduce() {
  selfintroduce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2C_LoginData_116::selfintroduce() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.SelfIntroduce)
  return selfintroduce_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2C_LoginData_116::set_selfintroduce(const ::std::string& value) {
  
  selfintroduce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.SelfIntroduce)
}
 void S2C_LoginData_116::set_selfintroduce(const char* value) {
  
  selfintroduce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2C_LoginData_116.SelfIntroduce)
}
 void S2C_LoginData_116::set_selfintroduce(const char* value, size_t size) {
  
  selfintroduce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2C_LoginData_116.SelfIntroduce)
}
 ::std::string* S2C_LoginData_116::mutable_selfintroduce() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2C_LoginData_116.SelfIntroduce)
  return selfintroduce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2C_LoginData_116::release_selfintroduce() {
  // @@protoc_insertion_point(field_release:pb.S2C_LoginData_116.SelfIntroduce)
  
  return selfintroduce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2C_LoginData_116::set_allocated_selfintroduce(::std::string* selfintroduce) {
  if (selfintroduce != NULL) {
    
  } else {
    
  }
  selfintroduce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), selfintroduce);
  // @@protoc_insertion_point(field_set_allocated:pb.S2C_LoginData_116.SelfIntroduce)
}

// optional bool StageStart = 12;
void S2C_LoginData_116::clear_stagestart() {
  stagestart_ = false;
}
 bool S2C_LoginData_116::stagestart() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.StageStart)
  return stagestart_;
}
 void S2C_LoginData_116::set_stagestart(bool value) {
  
  stagestart_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.StageStart)
}

// optional uint32 StarStageProFail = 13;
void S2C_LoginData_116::clear_starstageprofail() {
  starstageprofail_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::starstageprofail() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.StarStageProFail)
  return starstageprofail_;
}
 void S2C_LoginData_116::set_starstageprofail(::google::protobuf::uint32 value) {
  
  starstageprofail_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.StarStageProFail)
}

// optional uint32 RuneShard = 14;
void S2C_LoginData_116::clear_runeshard() {
  runeshard_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::runeshard() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.RuneShard)
  return runeshard_;
}
 void S2C_LoginData_116::set_runeshard(::google::protobuf::uint32 value) {
  
  runeshard_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.RuneShard)
}

// optional uint32 ContestId = 15;
void S2C_LoginData_116::clear_contestid() {
  contestid_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::contestid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.ContestId)
  return contestid_;
}
 void S2C_LoginData_116::set_contestid(::google::protobuf::uint32 value) {
  
  contestid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.ContestId)
}

// optional uint32 WeaponItemId = 16;
void S2C_LoginData_116::clear_weaponitemid() {
  weaponitemid_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::weaponitemid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.WeaponItemId)
  return weaponitemid_;
}
 void S2C_LoginData_116::set_weaponitemid(::google::protobuf::uint32 value) {
  
  weaponitemid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.WeaponItemId)
}

// optional uint32 Exp = 17;
void S2C_LoginData_116::clear_exp() {
  exp_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::exp() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.Exp)
  return exp_;
}
 void S2C_LoginData_116::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.Exp)
}

// optional uint32 GuideSteps = 18;
void S2C_LoginData_116::clear_guidesteps() {
  guidesteps_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::guidesteps() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.GuideSteps)
  return guidesteps_;
}
 void S2C_LoginData_116::set_guidesteps(::google::protobuf::uint32 value) {
  
  guidesteps_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.GuideSteps)
}

// optional uint32 Diamond = 19;
void S2C_LoginData_116::clear_diamond() {
  diamond_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::diamond() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.Diamond)
  return diamond_;
}
 void S2C_LoginData_116::set_diamond(::google::protobuf::uint32 value) {
  
  diamond_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.Diamond)
}

// optional uint32 Level = 20;
void S2C_LoginData_116::clear_level() {
  level_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::level() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.Level)
  return level_;
}
 void S2C_LoginData_116::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.Level)
}

// optional bool IsExpMax = 21;
void S2C_LoginData_116::clear_isexpmax() {
  isexpmax_ = false;
}
 bool S2C_LoginData_116::isexpmax() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.IsExpMax)
  return isexpmax_;
}
 void S2C_LoginData_116::set_isexpmax(bool value) {
  
  isexpmax_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.IsExpMax)
}

// optional uint32 UseMountSkinId = 22;
void S2C_LoginData_116::clear_usemountskinid() {
  usemountskinid_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::usemountskinid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.UseMountSkinId)
  return usemountskinid_;
}
 void S2C_LoginData_116::set_usemountskinid(::google::protobuf::uint32 value) {
  
  usemountskinid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.UseMountSkinId)
}

// optional uint32 Pid = 23;
void S2C_LoginData_116::clear_pid() {
  pid_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::pid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.Pid)
  return pid_;
}
 void S2C_LoginData_116::set_pid(::google::protobuf::uint32 value) {
  
  pid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.Pid)
}

// optional uint32 MatchReadyId = 24;
void S2C_LoginData_116::clear_matchreadyid() {
  matchreadyid_ = 0u;
}
 ::google::protobuf::uint32 S2C_LoginData_116::matchreadyid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_LoginData_116.MatchReadyId)
  return matchreadyid_;
}
 void S2C_LoginData_116::set_matchreadyid(::google::protobuf::uint32 value) {
  
  matchreadyid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_LoginData_116.MatchReadyId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_UpdateGuideSteps_118::kGuideStepsFieldNumber;
const int C2S_UpdateGuideSteps_118::kIsSkipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_UpdateGuideSteps_118::C2S_UpdateGuideSteps_118()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_UpdateGuideSteps_118)
}

void C2S_UpdateGuideSteps_118::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_UpdateGuideSteps_118::C2S_UpdateGuideSteps_118(const C2S_UpdateGuideSteps_118& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_UpdateGuideSteps_118)
}

void C2S_UpdateGuideSteps_118::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  guidesteps_ = 0u;
  isskip_ = false;
}

C2S_UpdateGuideSteps_118::~C2S_UpdateGuideSteps_118() {
  // @@protoc_insertion_point(destructor:pb.C2S_UpdateGuideSteps_118)
  SharedDtor();
}

void C2S_UpdateGuideSteps_118::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_UpdateGuideSteps_118::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_UpdateGuideSteps_118::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_UpdateGuideSteps_118_descriptor_;
}

const C2S_UpdateGuideSteps_118& C2S_UpdateGuideSteps_118::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_UpdateGuideSteps_118* C2S_UpdateGuideSteps_118::default_instance_ = NULL;

C2S_UpdateGuideSteps_118* C2S_UpdateGuideSteps_118::New(::google::protobuf::Arena* arena) const {
  C2S_UpdateGuideSteps_118* n = new C2S_UpdateGuideSteps_118;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_UpdateGuideSteps_118::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_UpdateGuideSteps_118)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(C2S_UpdateGuideSteps_118, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<C2S_UpdateGuideSteps_118*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(guidesteps_, isskip_);

#undef ZR_HELPER_
#undef ZR_

}

bool C2S_UpdateGuideSteps_118::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_UpdateGuideSteps_118)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 GuideSteps = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guidesteps_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_IsSkip;
        break;
      }

      // optional bool IsSkip = 2;
      case 2: {
        if (tag == 16) {
         parse_IsSkip:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isskip_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_UpdateGuideSteps_118)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_UpdateGuideSteps_118)
  return false;
#undef DO_
}

void C2S_UpdateGuideSteps_118::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_UpdateGuideSteps_118)
  // optional uint32 GuideSteps = 1;
  if (this->guidesteps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->guidesteps(), output);
  }

  // optional bool IsSkip = 2;
  if (this->isskip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isskip(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_UpdateGuideSteps_118)
}

::google::protobuf::uint8* C2S_UpdateGuideSteps_118::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_UpdateGuideSteps_118)
  // optional uint32 GuideSteps = 1;
  if (this->guidesteps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->guidesteps(), target);
  }

  // optional bool IsSkip = 2;
  if (this->isskip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isskip(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_UpdateGuideSteps_118)
  return target;
}

int C2S_UpdateGuideSteps_118::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_UpdateGuideSteps_118)
  int total_size = 0;

  // optional uint32 GuideSteps = 1;
  if (this->guidesteps() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guidesteps());
  }

  // optional bool IsSkip = 2;
  if (this->isskip() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_UpdateGuideSteps_118::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_UpdateGuideSteps_118)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_UpdateGuideSteps_118* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_UpdateGuideSteps_118>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_UpdateGuideSteps_118)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_UpdateGuideSteps_118)
    MergeFrom(*source);
  }
}

void C2S_UpdateGuideSteps_118::MergeFrom(const C2S_UpdateGuideSteps_118& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_UpdateGuideSteps_118)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.guidesteps() != 0) {
    set_guidesteps(from.guidesteps());
  }
  if (from.isskip() != 0) {
    set_isskip(from.isskip());
  }
}

void C2S_UpdateGuideSteps_118::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_UpdateGuideSteps_118)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_UpdateGuideSteps_118::CopyFrom(const C2S_UpdateGuideSteps_118& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_UpdateGuideSteps_118)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_UpdateGuideSteps_118::IsInitialized() const {

  return true;
}

void C2S_UpdateGuideSteps_118::Swap(C2S_UpdateGuideSteps_118* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_UpdateGuideSteps_118::InternalSwap(C2S_UpdateGuideSteps_118* other) {
  std::swap(guidesteps_, other->guidesteps_);
  std::swap(isskip_, other->isskip_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_UpdateGuideSteps_118::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_UpdateGuideSteps_118_descriptor_;
  metadata.reflection = C2S_UpdateGuideSteps_118_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_UpdateGuideSteps_118

// optional uint32 GuideSteps = 1;
void C2S_UpdateGuideSteps_118::clear_guidesteps() {
  guidesteps_ = 0u;
}
 ::google::protobuf::uint32 C2S_UpdateGuideSteps_118::guidesteps() const {
  // @@protoc_insertion_point(field_get:pb.C2S_UpdateGuideSteps_118.GuideSteps)
  return guidesteps_;
}
 void C2S_UpdateGuideSteps_118::set_guidesteps(::google::protobuf::uint32 value) {
  
  guidesteps_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_UpdateGuideSteps_118.GuideSteps)
}

// optional bool IsSkip = 2;
void C2S_UpdateGuideSteps_118::clear_isskip() {
  isskip_ = false;
}
 bool C2S_UpdateGuideSteps_118::isskip() const {
  // @@protoc_insertion_point(field_get:pb.C2S_UpdateGuideSteps_118.IsSkip)
  return isskip_;
}
 void C2S_UpdateGuideSteps_118::set_isskip(bool value) {
  
  isskip_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_UpdateGuideSteps_118.IsSkip)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRoomInfo::kRoomIdFieldNumber;
const int PRoomInfo::kRoomNameFieldNumber;
const int PRoomInfo::kRoomMaxPnumFieldNumber;
const int PRoomInfo::kRoomPnumFieldNumber;
const int PRoomInfo::kCreateRidFieldNumber;
const int PRoomInfo::kIsstartedFieldNumber;
const int PRoomInfo::kBadge1FieldNumber;
const int PRoomInfo::kBadge2FieldNumber;
const int PRoomInfo::kSceneIdFieldNumber;
const int PRoomInfo::kCfgstringFieldNumber;
const int PRoomInfo::kRandomSeedFieldNumber;
const int PRoomInfo::kRoomTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRoomInfo::PRoomInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.PRoomInfo)
}

void PRoomInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PRoomInfo::PRoomInfo(const PRoomInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.PRoomInfo)
}

void PRoomInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  roomid_ = 0u;
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roommaxpnum_ = 0u;
  roompnum_ = 0u;
  createrid_ = GOOGLE_ULONGLONG(0);
  isstarted_ = false;
  badge1_ = 0u;
  badge2_ = 0u;
  sceneid_ = 0u;
  cfgstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  randomseed_ = 0u;
  roomtype_ = 0u;
}

PRoomInfo::~PRoomInfo() {
  // @@protoc_insertion_point(destructor:pb.PRoomInfo)
  SharedDtor();
}

void PRoomInfo::SharedDtor() {
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cfgstring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PRoomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PRoomInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PRoomInfo_descriptor_;
}

const PRoomInfo& PRoomInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

PRoomInfo* PRoomInfo::default_instance_ = NULL;

PRoomInfo* PRoomInfo::New(::google::protobuf::Arena* arena) const {
  PRoomInfo* n = new PRoomInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PRoomInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.PRoomInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PRoomInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PRoomInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roomid_, badge2_);
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(sceneid_, roomtype_);
  cfgstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PRoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.PRoomInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RoomId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RoomName;
        break;
      }

      // optional string RoomName = 2;
      case 2: {
        if (tag == 18) {
         parse_RoomName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomname().data(), this->roomname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.PRoomInfo.RoomName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RoomMaxPnum;
        break;
      }

      // optional uint32 RoomMaxPnum = 3;
      case 3: {
        if (tag == 24) {
         parse_RoomMaxPnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roommaxpnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_RoomPnum;
        break;
      }

      // optional uint32 RoomPnum = 4;
      case 4: {
        if (tag == 32) {
         parse_RoomPnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roompnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_CreateRid;
        break;
      }

      // optional uint64 CreateRid = 5;
      case 5: {
        if (tag == 40) {
         parse_CreateRid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &createrid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Isstarted;
        break;
      }

      // optional bool Isstarted = 6;
      case 6: {
        if (tag == 48) {
         parse_Isstarted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isstarted_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Badge1;
        break;
      }

      // optional uint32 Badge1 = 7;
      case 7: {
        if (tag == 56) {
         parse_Badge1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &badge1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_Badge2;
        break;
      }

      // optional uint32 Badge2 = 8;
      case 8: {
        if (tag == 64) {
         parse_Badge2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &badge2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_SceneId;
        break;
      }

      // optional uint32 SceneId = 9;
      case 9: {
        if (tag == 72) {
         parse_SceneId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sceneid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_Cfgstring;
        break;
      }

      // optional string Cfgstring = 10;
      case 10: {
        if (tag == 82) {
         parse_Cfgstring:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cfgstring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cfgstring().data(), this->cfgstring().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.PRoomInfo.Cfgstring"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_RandomSeed;
        break;
      }

      // optional uint32 RandomSeed = 11;
      case 11: {
        if (tag == 88) {
         parse_RandomSeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &randomseed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_RoomType;
        break;
      }

      // optional uint32 RoomType = 12;
      case 12: {
        if (tag == 96) {
         parse_RoomType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.PRoomInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.PRoomInfo)
  return false;
#undef DO_
}

void PRoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.PRoomInfo)
  // optional uint32 RoomId = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->roomid(), output);
  }

  // optional string RoomName = 2;
  if (this->roomname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.PRoomInfo.RoomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->roomname(), output);
  }

  // optional uint32 RoomMaxPnum = 3;
  if (this->roommaxpnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->roommaxpnum(), output);
  }

  // optional uint32 RoomPnum = 4;
  if (this->roompnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->roompnum(), output);
  }

  // optional uint64 CreateRid = 5;
  if (this->createrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->createrid(), output);
  }

  // optional bool Isstarted = 6;
  if (this->isstarted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->isstarted(), output);
  }

  // optional uint32 Badge1 = 7;
  if (this->badge1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->badge1(), output);
  }

  // optional uint32 Badge2 = 8;
  if (this->badge2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->badge2(), output);
  }

  // optional uint32 SceneId = 9;
  if (this->sceneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->sceneid(), output);
  }

  // optional string Cfgstring = 10;
  if (this->cfgstring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cfgstring().data(), this->cfgstring().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.PRoomInfo.Cfgstring");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->cfgstring(), output);
  }

  // optional uint32 RandomSeed = 11;
  if (this->randomseed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->randomseed(), output);
  }

  // optional uint32 RoomType = 12;
  if (this->roomtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->roomtype(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.PRoomInfo)
}

::google::protobuf::uint8* PRoomInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.PRoomInfo)
  // optional uint32 RoomId = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->roomid(), target);
  }

  // optional string RoomName = 2;
  if (this->roomname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.PRoomInfo.RoomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->roomname(), target);
  }

  // optional uint32 RoomMaxPnum = 3;
  if (this->roommaxpnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->roommaxpnum(), target);
  }

  // optional uint32 RoomPnum = 4;
  if (this->roompnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->roompnum(), target);
  }

  // optional uint64 CreateRid = 5;
  if (this->createrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->createrid(), target);
  }

  // optional bool Isstarted = 6;
  if (this->isstarted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->isstarted(), target);
  }

  // optional uint32 Badge1 = 7;
  if (this->badge1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->badge1(), target);
  }

  // optional uint32 Badge2 = 8;
  if (this->badge2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->badge2(), target);
  }

  // optional uint32 SceneId = 9;
  if (this->sceneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->sceneid(), target);
  }

  // optional string Cfgstring = 10;
  if (this->cfgstring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cfgstring().data(), this->cfgstring().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.PRoomInfo.Cfgstring");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->cfgstring(), target);
  }

  // optional uint32 RandomSeed = 11;
  if (this->randomseed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->randomseed(), target);
  }

  // optional uint32 RoomType = 12;
  if (this->roomtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->roomtype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.PRoomInfo)
  return target;
}

int PRoomInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.PRoomInfo)
  int total_size = 0;

  // optional uint32 RoomId = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  // optional string RoomName = 2;
  if (this->roomname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomname());
  }

  // optional uint32 RoomMaxPnum = 3;
  if (this->roommaxpnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roommaxpnum());
  }

  // optional uint32 RoomPnum = 4;
  if (this->roompnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roompnum());
  }

  // optional uint64 CreateRid = 5;
  if (this->createrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->createrid());
  }

  // optional bool Isstarted = 6;
  if (this->isstarted() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 Badge1 = 7;
  if (this->badge1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->badge1());
  }

  // optional uint32 Badge2 = 8;
  if (this->badge2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->badge2());
  }

  // optional uint32 SceneId = 9;
  if (this->sceneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sceneid());
  }

  // optional string Cfgstring = 10;
  if (this->cfgstring().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cfgstring());
  }

  // optional uint32 RandomSeed = 11;
  if (this->randomseed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->randomseed());
  }

  // optional uint32 RoomType = 12;
  if (this->roomtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomtype());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PRoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.PRoomInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PRoomInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PRoomInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.PRoomInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.PRoomInfo)
    MergeFrom(*source);
  }
}

void PRoomInfo::MergeFrom(const PRoomInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.PRoomInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.roomname().size() > 0) {

    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  if (from.roommaxpnum() != 0) {
    set_roommaxpnum(from.roommaxpnum());
  }
  if (from.roompnum() != 0) {
    set_roompnum(from.roompnum());
  }
  if (from.createrid() != 0) {
    set_createrid(from.createrid());
  }
  if (from.isstarted() != 0) {
    set_isstarted(from.isstarted());
  }
  if (from.badge1() != 0) {
    set_badge1(from.badge1());
  }
  if (from.badge2() != 0) {
    set_badge2(from.badge2());
  }
  if (from.sceneid() != 0) {
    set_sceneid(from.sceneid());
  }
  if (from.cfgstring().size() > 0) {

    cfgstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cfgstring_);
  }
  if (from.randomseed() != 0) {
    set_randomseed(from.randomseed());
  }
  if (from.roomtype() != 0) {
    set_roomtype(from.roomtype());
  }
}

void PRoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.PRoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRoomInfo::CopyFrom(const PRoomInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.PRoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRoomInfo::IsInitialized() const {

  return true;
}

void PRoomInfo::Swap(PRoomInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRoomInfo::InternalSwap(PRoomInfo* other) {
  std::swap(roomid_, other->roomid_);
  roomname_.Swap(&other->roomname_);
  std::swap(roommaxpnum_, other->roommaxpnum_);
  std::swap(roompnum_, other->roompnum_);
  std::swap(createrid_, other->createrid_);
  std::swap(isstarted_, other->isstarted_);
  std::swap(badge1_, other->badge1_);
  std::swap(badge2_, other->badge2_);
  std::swap(sceneid_, other->sceneid_);
  cfgstring_.Swap(&other->cfgstring_);
  std::swap(randomseed_, other->randomseed_);
  std::swap(roomtype_, other->roomtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PRoomInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PRoomInfo_descriptor_;
  metadata.reflection = PRoomInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PRoomInfo

// optional uint32 RoomId = 1;
void PRoomInfo::clear_roomid() {
  roomid_ = 0u;
}
 ::google::protobuf::uint32 PRoomInfo::roomid() const {
  // @@protoc_insertion_point(field_get:pb.PRoomInfo.RoomId)
  return roomid_;
}
 void PRoomInfo::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomInfo.RoomId)
}

// optional string RoomName = 2;
void PRoomInfo::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PRoomInfo::roomname() const {
  // @@protoc_insertion_point(field_get:pb.PRoomInfo.RoomName)
  return roomname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PRoomInfo::set_roomname(const ::std::string& value) {
  
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.PRoomInfo.RoomName)
}
 void PRoomInfo::set_roomname(const char* value) {
  
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.PRoomInfo.RoomName)
}
 void PRoomInfo::set_roomname(const char* value, size_t size) {
  
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.PRoomInfo.RoomName)
}
 ::std::string* PRoomInfo::mutable_roomname() {
  
  // @@protoc_insertion_point(field_mutable:pb.PRoomInfo.RoomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PRoomInfo::release_roomname() {
  // @@protoc_insertion_point(field_release:pb.PRoomInfo.RoomName)
  
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PRoomInfo::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    
  } else {
    
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:pb.PRoomInfo.RoomName)
}

// optional uint32 RoomMaxPnum = 3;
void PRoomInfo::clear_roommaxpnum() {
  roommaxpnum_ = 0u;
}
 ::google::protobuf::uint32 PRoomInfo::roommaxpnum() const {
  // @@protoc_insertion_point(field_get:pb.PRoomInfo.RoomMaxPnum)
  return roommaxpnum_;
}
 void PRoomInfo::set_roommaxpnum(::google::protobuf::uint32 value) {
  
  roommaxpnum_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomInfo.RoomMaxPnum)
}

// optional uint32 RoomPnum = 4;
void PRoomInfo::clear_roompnum() {
  roompnum_ = 0u;
}
 ::google::protobuf::uint32 PRoomInfo::roompnum() const {
  // @@protoc_insertion_point(field_get:pb.PRoomInfo.RoomPnum)
  return roompnum_;
}
 void PRoomInfo::set_roompnum(::google::protobuf::uint32 value) {
  
  roompnum_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomInfo.RoomPnum)
}

// optional uint64 CreateRid = 5;
void PRoomInfo::clear_createrid() {
  createrid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PRoomInfo::createrid() const {
  // @@protoc_insertion_point(field_get:pb.PRoomInfo.CreateRid)
  return createrid_;
}
 void PRoomInfo::set_createrid(::google::protobuf::uint64 value) {
  
  createrid_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomInfo.CreateRid)
}

// optional bool Isstarted = 6;
void PRoomInfo::clear_isstarted() {
  isstarted_ = false;
}
 bool PRoomInfo::isstarted() const {
  // @@protoc_insertion_point(field_get:pb.PRoomInfo.Isstarted)
  return isstarted_;
}
 void PRoomInfo::set_isstarted(bool value) {
  
  isstarted_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomInfo.Isstarted)
}

// optional uint32 Badge1 = 7;
void PRoomInfo::clear_badge1() {
  badge1_ = 0u;
}
 ::google::protobuf::uint32 PRoomInfo::badge1() const {
  // @@protoc_insertion_point(field_get:pb.PRoomInfo.Badge1)
  return badge1_;
}
 void PRoomInfo::set_badge1(::google::protobuf::uint32 value) {
  
  badge1_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomInfo.Badge1)
}

// optional uint32 Badge2 = 8;
void PRoomInfo::clear_badge2() {
  badge2_ = 0u;
}
 ::google::protobuf::uint32 PRoomInfo::badge2() const {
  // @@protoc_insertion_point(field_get:pb.PRoomInfo.Badge2)
  return badge2_;
}
 void PRoomInfo::set_badge2(::google::protobuf::uint32 value) {
  
  badge2_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomInfo.Badge2)
}

// optional uint32 SceneId = 9;
void PRoomInfo::clear_sceneid() {
  sceneid_ = 0u;
}
 ::google::protobuf::uint32 PRoomInfo::sceneid() const {
  // @@protoc_insertion_point(field_get:pb.PRoomInfo.SceneId)
  return sceneid_;
}
 void PRoomInfo::set_sceneid(::google::protobuf::uint32 value) {
  
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomInfo.SceneId)
}

// optional string Cfgstring = 10;
void PRoomInfo::clear_cfgstring() {
  cfgstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PRoomInfo::cfgstring() const {
  // @@protoc_insertion_point(field_get:pb.PRoomInfo.Cfgstring)
  return cfgstring_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PRoomInfo::set_cfgstring(const ::std::string& value) {
  
  cfgstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.PRoomInfo.Cfgstring)
}
 void PRoomInfo::set_cfgstring(const char* value) {
  
  cfgstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.PRoomInfo.Cfgstring)
}
 void PRoomInfo::set_cfgstring(const char* value, size_t size) {
  
  cfgstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.PRoomInfo.Cfgstring)
}
 ::std::string* PRoomInfo::mutable_cfgstring() {
  
  // @@protoc_insertion_point(field_mutable:pb.PRoomInfo.Cfgstring)
  return cfgstring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PRoomInfo::release_cfgstring() {
  // @@protoc_insertion_point(field_release:pb.PRoomInfo.Cfgstring)
  
  return cfgstring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PRoomInfo::set_allocated_cfgstring(::std::string* cfgstring) {
  if (cfgstring != NULL) {
    
  } else {
    
  }
  cfgstring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cfgstring);
  // @@protoc_insertion_point(field_set_allocated:pb.PRoomInfo.Cfgstring)
}

// optional uint32 RandomSeed = 11;
void PRoomInfo::clear_randomseed() {
  randomseed_ = 0u;
}
 ::google::protobuf::uint32 PRoomInfo::randomseed() const {
  // @@protoc_insertion_point(field_get:pb.PRoomInfo.RandomSeed)
  return randomseed_;
}
 void PRoomInfo::set_randomseed(::google::protobuf::uint32 value) {
  
  randomseed_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomInfo.RandomSeed)
}

// optional uint32 RoomType = 12;
void PRoomInfo::clear_roomtype() {
  roomtype_ = 0u;
}
 ::google::protobuf::uint32 PRoomInfo::roomtype() const {
  // @@protoc_insertion_point(field_get:pb.PRoomInfo.RoomType)
  return roomtype_;
}
 void PRoomInfo::set_roomtype(::google::protobuf::uint32 value) {
  
  roomtype_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomInfo.RoomType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_GetRoomList_100::C2S_GetRoomList_100()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_GetRoomList_100)
}

void C2S_GetRoomList_100::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_GetRoomList_100::C2S_GetRoomList_100(const C2S_GetRoomList_100& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_GetRoomList_100)
}

void C2S_GetRoomList_100::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2S_GetRoomList_100::~C2S_GetRoomList_100() {
  // @@protoc_insertion_point(destructor:pb.C2S_GetRoomList_100)
  SharedDtor();
}

void C2S_GetRoomList_100::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_GetRoomList_100::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_GetRoomList_100::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_GetRoomList_100_descriptor_;
}

const C2S_GetRoomList_100& C2S_GetRoomList_100::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_GetRoomList_100* C2S_GetRoomList_100::default_instance_ = NULL;

C2S_GetRoomList_100* C2S_GetRoomList_100::New(::google::protobuf::Arena* arena) const {
  C2S_GetRoomList_100* n = new C2S_GetRoomList_100;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_GetRoomList_100::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_GetRoomList_100)
}

bool C2S_GetRoomList_100::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_GetRoomList_100)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_GetRoomList_100)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_GetRoomList_100)
  return false;
#undef DO_
}

void C2S_GetRoomList_100::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_GetRoomList_100)
  // @@protoc_insertion_point(serialize_end:pb.C2S_GetRoomList_100)
}

::google::protobuf::uint8* C2S_GetRoomList_100::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_GetRoomList_100)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_GetRoomList_100)
  return target;
}

int C2S_GetRoomList_100::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_GetRoomList_100)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_GetRoomList_100::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_GetRoomList_100)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_GetRoomList_100* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_GetRoomList_100>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_GetRoomList_100)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_GetRoomList_100)
    MergeFrom(*source);
  }
}

void C2S_GetRoomList_100::MergeFrom(const C2S_GetRoomList_100& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_GetRoomList_100)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2S_GetRoomList_100::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_GetRoomList_100)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_GetRoomList_100::CopyFrom(const C2S_GetRoomList_100& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_GetRoomList_100)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_GetRoomList_100::IsInitialized() const {

  return true;
}

void C2S_GetRoomList_100::Swap(C2S_GetRoomList_100* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_GetRoomList_100::InternalSwap(C2S_GetRoomList_100* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_GetRoomList_100::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_GetRoomList_100_descriptor_;
  metadata.reflection = C2S_GetRoomList_100_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_GetRoomList_100

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_GetRoomList_100::kRoomlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_GetRoomList_100::S2C_GetRoomList_100()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_GetRoomList_100)
}

void S2C_GetRoomList_100::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2C_GetRoomList_100::S2C_GetRoomList_100(const S2C_GetRoomList_100& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2C_GetRoomList_100)
}

void S2C_GetRoomList_100::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2C_GetRoomList_100::~S2C_GetRoomList_100() {
  // @@protoc_insertion_point(destructor:pb.S2C_GetRoomList_100)
  SharedDtor();
}

void S2C_GetRoomList_100::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2C_GetRoomList_100::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_GetRoomList_100::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2C_GetRoomList_100_descriptor_;
}

const S2C_GetRoomList_100& S2C_GetRoomList_100::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2C_GetRoomList_100* S2C_GetRoomList_100::default_instance_ = NULL;

S2C_GetRoomList_100* S2C_GetRoomList_100::New(::google::protobuf::Arena* arena) const {
  S2C_GetRoomList_100* n = new S2C_GetRoomList_100;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_GetRoomList_100::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_GetRoomList_100)
  roomlist_.Clear();
}

bool S2C_GetRoomList_100::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_GetRoomList_100)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.PRoomInfo Roomlist = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Roomlist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_roomlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_Roomlist;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_GetRoomList_100)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_GetRoomList_100)
  return false;
#undef DO_
}

void S2C_GetRoomList_100::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_GetRoomList_100)
  // repeated .pb.PRoomInfo Roomlist = 1;
  for (unsigned int i = 0, n = this->roomlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->roomlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_GetRoomList_100)
}

::google::protobuf::uint8* S2C_GetRoomList_100::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_GetRoomList_100)
  // repeated .pb.PRoomInfo Roomlist = 1;
  for (unsigned int i = 0, n = this->roomlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->roomlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_GetRoomList_100)
  return target;
}

int S2C_GetRoomList_100::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_GetRoomList_100)
  int total_size = 0;

  // repeated .pb.PRoomInfo Roomlist = 1;
  total_size += 1 * this->roomlist_size();
  for (int i = 0; i < this->roomlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->roomlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_GetRoomList_100::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_GetRoomList_100)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2C_GetRoomList_100* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_GetRoomList_100>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_GetRoomList_100)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_GetRoomList_100)
    MergeFrom(*source);
  }
}

void S2C_GetRoomList_100::MergeFrom(const S2C_GetRoomList_100& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_GetRoomList_100)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  roomlist_.MergeFrom(from.roomlist_);
}

void S2C_GetRoomList_100::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_GetRoomList_100)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_GetRoomList_100::CopyFrom(const S2C_GetRoomList_100& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_GetRoomList_100)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_GetRoomList_100::IsInitialized() const {

  return true;
}

void S2C_GetRoomList_100::Swap(S2C_GetRoomList_100* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_GetRoomList_100::InternalSwap(S2C_GetRoomList_100* other) {
  roomlist_.UnsafeArenaSwap(&other->roomlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_GetRoomList_100::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2C_GetRoomList_100_descriptor_;
  metadata.reflection = S2C_GetRoomList_100_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_GetRoomList_100

// repeated .pb.PRoomInfo Roomlist = 1;
int S2C_GetRoomList_100::roomlist_size() const {
  return roomlist_.size();
}
void S2C_GetRoomList_100::clear_roomlist() {
  roomlist_.Clear();
}
const ::pb::PRoomInfo& S2C_GetRoomList_100::roomlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2C_GetRoomList_100.Roomlist)
  return roomlist_.Get(index);
}
::pb::PRoomInfo* S2C_GetRoomList_100::mutable_roomlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2C_GetRoomList_100.Roomlist)
  return roomlist_.Mutable(index);
}
::pb::PRoomInfo* S2C_GetRoomList_100::add_roomlist() {
  // @@protoc_insertion_point(field_add:pb.S2C_GetRoomList_100.Roomlist)
  return roomlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::PRoomInfo >*
S2C_GetRoomList_100::mutable_roomlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2C_GetRoomList_100.Roomlist)
  return &roomlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::PRoomInfo >&
S2C_GetRoomList_100::roomlist() const {
  // @@protoc_insertion_point(field_list:pb.S2C_GetRoomList_100.Roomlist)
  return roomlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SEnterRoom_101::kRoomidFieldNumber;
const int C2SEnterRoom_101::kReloginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SEnterRoom_101::C2SEnterRoom_101()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SEnterRoom_101)
}

void C2SEnterRoom_101::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SEnterRoom_101::C2SEnterRoom_101(const C2SEnterRoom_101& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SEnterRoom_101)
}

void C2SEnterRoom_101::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roomid_ = 0u;
  relogin_ = 0u;
}

C2SEnterRoom_101::~C2SEnterRoom_101() {
  // @@protoc_insertion_point(destructor:pb.C2SEnterRoom_101)
  SharedDtor();
}

void C2SEnterRoom_101::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SEnterRoom_101::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SEnterRoom_101::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SEnterRoom_101_descriptor_;
}

const C2SEnterRoom_101& C2SEnterRoom_101::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SEnterRoom_101* C2SEnterRoom_101::default_instance_ = NULL;

C2SEnterRoom_101* C2SEnterRoom_101::New(::google::protobuf::Arena* arena) const {
  C2SEnterRoom_101* n = new C2SEnterRoom_101;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SEnterRoom_101::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SEnterRoom_101)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(C2SEnterRoom_101, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<C2SEnterRoom_101*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roomid_, relogin_);

#undef ZR_HELPER_
#undef ZR_

}

bool C2SEnterRoom_101::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SEnterRoom_101)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Roomid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Relogin;
        break;
      }

      // optional uint32 Relogin = 2;
      case 2: {
        if (tag == 16) {
         parse_Relogin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &relogin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SEnterRoom_101)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SEnterRoom_101)
  return false;
#undef DO_
}

void C2SEnterRoom_101::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SEnterRoom_101)
  // optional uint32 Roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->roomid(), output);
  }

  // optional uint32 Relogin = 2;
  if (this->relogin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->relogin(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SEnterRoom_101)
}

::google::protobuf::uint8* C2SEnterRoom_101::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SEnterRoom_101)
  // optional uint32 Roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->roomid(), target);
  }

  // optional uint32 Relogin = 2;
  if (this->relogin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->relogin(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SEnterRoom_101)
  return target;
}

int C2SEnterRoom_101::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SEnterRoom_101)
  int total_size = 0;

  // optional uint32 Roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  // optional uint32 Relogin = 2;
  if (this->relogin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->relogin());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SEnterRoom_101::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SEnterRoom_101)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SEnterRoom_101* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SEnterRoom_101>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SEnterRoom_101)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SEnterRoom_101)
    MergeFrom(*source);
  }
}

void C2SEnterRoom_101::MergeFrom(const C2SEnterRoom_101& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SEnterRoom_101)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.relogin() != 0) {
    set_relogin(from.relogin());
  }
}

void C2SEnterRoom_101::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SEnterRoom_101)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SEnterRoom_101::CopyFrom(const C2SEnterRoom_101& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SEnterRoom_101)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SEnterRoom_101::IsInitialized() const {

  return true;
}

void C2SEnterRoom_101::Swap(C2SEnterRoom_101* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SEnterRoom_101::InternalSwap(C2SEnterRoom_101* other) {
  std::swap(roomid_, other->roomid_);
  std::swap(relogin_, other->relogin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SEnterRoom_101::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SEnterRoom_101_descriptor_;
  metadata.reflection = C2SEnterRoom_101_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SEnterRoom_101

// optional uint32 Roomid = 1;
void C2SEnterRoom_101::clear_roomid() {
  roomid_ = 0u;
}
 ::google::protobuf::uint32 C2SEnterRoom_101::roomid() const {
  // @@protoc_insertion_point(field_get:pb.C2SEnterRoom_101.Roomid)
  return roomid_;
}
 void C2SEnterRoom_101::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SEnterRoom_101.Roomid)
}

// optional uint32 Relogin = 2;
void C2SEnterRoom_101::clear_relogin() {
  relogin_ = 0u;
}
 ::google::protobuf::uint32 C2SEnterRoom_101::relogin() const {
  // @@protoc_insertion_point(field_get:pb.C2SEnterRoom_101.Relogin)
  return relogin_;
}
 void C2SEnterRoom_101::set_relogin(::google::protobuf::uint32 value) {
  
  relogin_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SEnterRoom_101.Relogin)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRoomUser::kUseridFieldNumber;
const int PRoomUser::kUsernameFieldNumber;
const int PRoomUser::kIsreadyFieldNumber;
const int PRoomUser::kCampFieldNumber;
const int PRoomUser::kMountidFieldNumber;
const int PRoomUser::kIsWatcherFieldNumber;
const int PRoomUser::kDressDataFieldNumber;
const int PRoomUser::kSexFieldNumber;
const int PRoomUser::kStageStarFieldNumber;
const int PRoomUser::kWeaponItemIdFieldNumber;
const int PRoomUser::kRuneListFieldNumber;
const int PRoomUser::kBatCountFieldNumber;
const int PRoomUser::kMvpCountFieldNumber;
const int PRoomUser::kMountBatCountFieldNumber;
const int PRoomUser::kMountWinCountFieldNumber;
const int PRoomUser::kAvgShowPointFieldNumber;
const int PRoomUser::kStageWinNumFieldNumber;
const int PRoomUser::kMvpLastStageFieldNumber;
const int PRoomUser::kMountSkinIdFieldNumber;
const int PRoomUser::kIsRobotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRoomUser::PRoomUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.PRoomUser)
}

void PRoomUser::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PRoomUser::PRoomUser(const PRoomUser& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.PRoomUser)
}

void PRoomUser::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = GOOGLE_ULONGLONG(0);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isready_ = false;
  camp_ = 0u;
  mountid_ = 0u;
  iswatcher_ = false;
  sex_ = 0u;
  stagestar_ = 0u;
  weaponitemid_ = 0u;
  batcount_ = 0u;
  mvpcount_ = 0u;
  mountbatcount_ = 0u;
  mountwincount_ = 0u;
  avgshowpoint_ = 0u;
  stagewinnum_ = 0u;
  mvplaststage_ = false;
  mountskinid_ = 0u;
  isrobot_ = false;
}

PRoomUser::~PRoomUser() {
  // @@protoc_insertion_point(destructor:pb.PRoomUser)
  SharedDtor();
}

void PRoomUser::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PRoomUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PRoomUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PRoomUser_descriptor_;
}

const PRoomUser& PRoomUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

PRoomUser* PRoomUser::default_instance_ = NULL;

PRoomUser* PRoomUser::New(::google::protobuf::Arena* arena) const {
  PRoomUser* n = new PRoomUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PRoomUser::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.PRoomUser)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PRoomUser, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PRoomUser*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(camp_, mountid_);
  ZR_(isready_, iswatcher_);
  userid_ = GOOGLE_ULONGLONG(0);
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sex_ = 0u;
  ZR_(batcount_, avgshowpoint_);
  stagestar_ = 0u;
  weaponitemid_ = 0u;
  ZR_(mvplaststage_, isrobot_);
  ZR_(stagewinnum_, mountskinid_);

#undef ZR_HELPER_
#undef ZR_

  dressdata_.Clear();
  runelist_.Clear();
}

bool PRoomUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.PRoomUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Username;
        break;
      }

      // optional string Username = 2;
      case 2: {
        if (tag == 18) {
         parse_Username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.PRoomUser.Username"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Isready;
        break;
      }

      // optional bool Isready = 3;
      case 3: {
        if (tag == 24) {
         parse_Isready:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isready_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Camp;
        break;
      }

      // optional uint32 Camp = 4;
      case 4: {
        if (tag == 32) {
         parse_Camp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &camp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Mountid;
        break;
      }

      // optional uint32 Mountid = 5;
      case 5: {
        if (tag == 40) {
         parse_Mountid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_IsWatcher;
        break;
      }

      // optional bool IsWatcher = 6;
      case 6: {
        if (tag == 48) {
         parse_IsWatcher:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &iswatcher_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_DressData;
        break;
      }

      // repeated uint32 DressData = 7;
      case 7: {
        if (tag == 58) {
         parse_DressData:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_dressdata())));
        } else if (tag == 56) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 58, input, this->mutable_dressdata())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_Sex;
        break;
      }

      // optional uint32 Sex = 8;
      case 8: {
        if (tag == 64) {
         parse_Sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_StageStar;
        break;
      }

      // optional uint32 StageStar = 9;
      case 9: {
        if (tag == 72) {
         parse_StageStar:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stagestar_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_WeaponItemId;
        break;
      }

      // optional uint32 WeaponItemId = 10;
      case 10: {
        if (tag == 80) {
         parse_WeaponItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weaponitemid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_RuneList;
        break;
      }

      // repeated .pb.Rune RuneList = 11;
      case 11: {
        if (tag == 90) {
         parse_RuneList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_RuneList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_runelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_loop_RuneList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(96)) goto parse_BatCount;
        break;
      }

      // optional uint32 BatCount = 12;
      case 12: {
        if (tag == 96) {
         parse_BatCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &batcount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_MvpCount;
        break;
      }

      // optional uint32 MvpCount = 13;
      case 13: {
        if (tag == 104) {
         parse_MvpCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mvpcount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_MountBatCount;
        break;
      }

      // optional uint32 MountBatCount = 14;
      case 14: {
        if (tag == 112) {
         parse_MountBatCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mountbatcount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_MountWinCount;
        break;
      }

      // optional uint32 MountWinCount = 15;
      case 15: {
        if (tag == 120) {
         parse_MountWinCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mountwincount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_AvgShowPoint;
        break;
      }

      // optional uint32 AvgShowPoint = 16;
      case 16: {
        if (tag == 128) {
         parse_AvgShowPoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avgshowpoint_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_StageWinNum;
        break;
      }

      // optional uint32 StageWinNum = 17;
      case 17: {
        if (tag == 136) {
         parse_StageWinNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stagewinnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_MvpLastStage;
        break;
      }

      // optional bool MvpLastStage = 18;
      case 18: {
        if (tag == 144) {
         parse_MvpLastStage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &mvplaststage_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_MountSkinId;
        break;
      }

      // optional uint32 MountSkinId = 19;
      case 19: {
        if (tag == 152) {
         parse_MountSkinId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mountskinid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_IsRobot;
        break;
      }

      // optional bool IsRobot = 20;
      case 20: {
        if (tag == 160) {
         parse_IsRobot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isrobot_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.PRoomUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.PRoomUser)
  return false;
#undef DO_
}

void PRoomUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.PRoomUser)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->userid(), output);
  }

  // optional string Username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.PRoomUser.Username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional bool Isready = 3;
  if (this->isready() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isready(), output);
  }

  // optional uint32 Camp = 4;
  if (this->camp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->camp(), output);
  }

  // optional uint32 Mountid = 5;
  if (this->mountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->mountid(), output);
  }

  // optional bool IsWatcher = 6;
  if (this->iswatcher() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->iswatcher(), output);
  }

  // repeated uint32 DressData = 7;
  if (this->dressdata_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_dressdata_cached_byte_size_);
  }
  for (int i = 0; i < this->dressdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->dressdata(i), output);
  }

  // optional uint32 Sex = 8;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->sex(), output);
  }

  // optional uint32 StageStar = 9;
  if (this->stagestar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->stagestar(), output);
  }

  // optional uint32 WeaponItemId = 10;
  if (this->weaponitemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->weaponitemid(), output);
  }

  // repeated .pb.Rune RuneList = 11;
  for (unsigned int i = 0, n = this->runelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->runelist(i), output);
  }

  // optional uint32 BatCount = 12;
  if (this->batcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->batcount(), output);
  }

  // optional uint32 MvpCount = 13;
  if (this->mvpcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->mvpcount(), output);
  }

  // optional uint32 MountBatCount = 14;
  if (this->mountbatcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->mountbatcount(), output);
  }

  // optional uint32 MountWinCount = 15;
  if (this->mountwincount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->mountwincount(), output);
  }

  // optional uint32 AvgShowPoint = 16;
  if (this->avgshowpoint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->avgshowpoint(), output);
  }

  // optional uint32 StageWinNum = 17;
  if (this->stagewinnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->stagewinnum(), output);
  }

  // optional bool MvpLastStage = 18;
  if (this->mvplaststage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->mvplaststage(), output);
  }

  // optional uint32 MountSkinId = 19;
  if (this->mountskinid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->mountskinid(), output);
  }

  // optional bool IsRobot = 20;
  if (this->isrobot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->isrobot(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.PRoomUser)
}

::google::protobuf::uint8* PRoomUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.PRoomUser)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->userid(), target);
  }

  // optional string Username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.PRoomUser.Username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional bool Isready = 3;
  if (this->isready() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isready(), target);
  }

  // optional uint32 Camp = 4;
  if (this->camp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->camp(), target);
  }

  // optional uint32 Mountid = 5;
  if (this->mountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->mountid(), target);
  }

  // optional bool IsWatcher = 6;
  if (this->iswatcher() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->iswatcher(), target);
  }

  // repeated uint32 DressData = 7;
  if (this->dressdata_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _dressdata_cached_byte_size_, target);
  }
  for (int i = 0; i < this->dressdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->dressdata(i), target);
  }

  // optional uint32 Sex = 8;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->sex(), target);
  }

  // optional uint32 StageStar = 9;
  if (this->stagestar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->stagestar(), target);
  }

  // optional uint32 WeaponItemId = 10;
  if (this->weaponitemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->weaponitemid(), target);
  }

  // repeated .pb.Rune RuneList = 11;
  for (unsigned int i = 0, n = this->runelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->runelist(i), false, target);
  }

  // optional uint32 BatCount = 12;
  if (this->batcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->batcount(), target);
  }

  // optional uint32 MvpCount = 13;
  if (this->mvpcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->mvpcount(), target);
  }

  // optional uint32 MountBatCount = 14;
  if (this->mountbatcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->mountbatcount(), target);
  }

  // optional uint32 MountWinCount = 15;
  if (this->mountwincount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->mountwincount(), target);
  }

  // optional uint32 AvgShowPoint = 16;
  if (this->avgshowpoint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->avgshowpoint(), target);
  }

  // optional uint32 StageWinNum = 17;
  if (this->stagewinnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->stagewinnum(), target);
  }

  // optional bool MvpLastStage = 18;
  if (this->mvplaststage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->mvplaststage(), target);
  }

  // optional uint32 MountSkinId = 19;
  if (this->mountskinid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->mountskinid(), target);
  }

  // optional bool IsRobot = 20;
  if (this->isrobot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->isrobot(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.PRoomUser)
  return target;
}

int PRoomUser::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.PRoomUser)
  int total_size = 0;

  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // optional string Username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional bool Isready = 3;
  if (this->isready() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 Camp = 4;
  if (this->camp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->camp());
  }

  // optional uint32 Mountid = 5;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mountid());
  }

  // optional bool IsWatcher = 6;
  if (this->iswatcher() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 Sex = 8;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sex());
  }

  // optional uint32 StageStar = 9;
  if (this->stagestar() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stagestar());
  }

  // optional uint32 WeaponItemId = 10;
  if (this->weaponitemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weaponitemid());
  }

  // optional uint32 BatCount = 12;
  if (this->batcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->batcount());
  }

  // optional uint32 MvpCount = 13;
  if (this->mvpcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mvpcount());
  }

  // optional uint32 MountBatCount = 14;
  if (this->mountbatcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mountbatcount());
  }

  // optional uint32 MountWinCount = 15;
  if (this->mountwincount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mountwincount());
  }

  // optional uint32 AvgShowPoint = 16;
  if (this->avgshowpoint() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avgshowpoint());
  }

  // optional uint32 StageWinNum = 17;
  if (this->stagewinnum() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stagewinnum());
  }

  // optional bool MvpLastStage = 18;
  if (this->mvplaststage() != 0) {
    total_size += 2 + 1;
  }

  // optional uint32 MountSkinId = 19;
  if (this->mountskinid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mountskinid());
  }

  // optional bool IsRobot = 20;
  if (this->isrobot() != 0) {
    total_size += 2 + 1;
  }

  // repeated uint32 DressData = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->dressdata_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->dressdata(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dressdata_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .pb.Rune RuneList = 11;
  total_size += 1 * this->runelist_size();
  for (int i = 0; i < this->runelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->runelist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PRoomUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.PRoomUser)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PRoomUser* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PRoomUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.PRoomUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.PRoomUser)
    MergeFrom(*source);
  }
}

void PRoomUser::MergeFrom(const PRoomUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.PRoomUser)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  dressdata_.MergeFrom(from.dressdata_);
  runelist_.MergeFrom(from.runelist_);
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.isready() != 0) {
    set_isready(from.isready());
  }
  if (from.camp() != 0) {
    set_camp(from.camp());
  }
  if (from.mountid() != 0) {
    set_mountid(from.mountid());
  }
  if (from.iswatcher() != 0) {
    set_iswatcher(from.iswatcher());
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.stagestar() != 0) {
    set_stagestar(from.stagestar());
  }
  if (from.weaponitemid() != 0) {
    set_weaponitemid(from.weaponitemid());
  }
  if (from.batcount() != 0) {
    set_batcount(from.batcount());
  }
  if (from.mvpcount() != 0) {
    set_mvpcount(from.mvpcount());
  }
  if (from.mountbatcount() != 0) {
    set_mountbatcount(from.mountbatcount());
  }
  if (from.mountwincount() != 0) {
    set_mountwincount(from.mountwincount());
  }
  if (from.avgshowpoint() != 0) {
    set_avgshowpoint(from.avgshowpoint());
  }
  if (from.stagewinnum() != 0) {
    set_stagewinnum(from.stagewinnum());
  }
  if (from.mvplaststage() != 0) {
    set_mvplaststage(from.mvplaststage());
  }
  if (from.mountskinid() != 0) {
    set_mountskinid(from.mountskinid());
  }
  if (from.isrobot() != 0) {
    set_isrobot(from.isrobot());
  }
}

void PRoomUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.PRoomUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRoomUser::CopyFrom(const PRoomUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.PRoomUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRoomUser::IsInitialized() const {

  return true;
}

void PRoomUser::Swap(PRoomUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRoomUser::InternalSwap(PRoomUser* other) {
  std::swap(userid_, other->userid_);
  username_.Swap(&other->username_);
  std::swap(isready_, other->isready_);
  std::swap(camp_, other->camp_);
  std::swap(mountid_, other->mountid_);
  std::swap(iswatcher_, other->iswatcher_);
  dressdata_.UnsafeArenaSwap(&other->dressdata_);
  std::swap(sex_, other->sex_);
  std::swap(stagestar_, other->stagestar_);
  std::swap(weaponitemid_, other->weaponitemid_);
  runelist_.UnsafeArenaSwap(&other->runelist_);
  std::swap(batcount_, other->batcount_);
  std::swap(mvpcount_, other->mvpcount_);
  std::swap(mountbatcount_, other->mountbatcount_);
  std::swap(mountwincount_, other->mountwincount_);
  std::swap(avgshowpoint_, other->avgshowpoint_);
  std::swap(stagewinnum_, other->stagewinnum_);
  std::swap(mvplaststage_, other->mvplaststage_);
  std::swap(mountskinid_, other->mountskinid_);
  std::swap(isrobot_, other->isrobot_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PRoomUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PRoomUser_descriptor_;
  metadata.reflection = PRoomUser_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PRoomUser

// optional uint64 Userid = 1;
void PRoomUser::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PRoomUser::userid() const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.Userid)
  return userid_;
}
 void PRoomUser::set_userid(::google::protobuf::uint64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomUser.Userid)
}

// optional string Username = 2;
void PRoomUser::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PRoomUser::username() const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.Username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PRoomUser::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.PRoomUser.Username)
}
 void PRoomUser::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.PRoomUser.Username)
}
 void PRoomUser::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.PRoomUser.Username)
}
 ::std::string* PRoomUser::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:pb.PRoomUser.Username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PRoomUser::release_username() {
  // @@protoc_insertion_point(field_release:pb.PRoomUser.Username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PRoomUser::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:pb.PRoomUser.Username)
}

// optional bool Isready = 3;
void PRoomUser::clear_isready() {
  isready_ = false;
}
 bool PRoomUser::isready() const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.Isready)
  return isready_;
}
 void PRoomUser::set_isready(bool value) {
  
  isready_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomUser.Isready)
}

// optional uint32 Camp = 4;
void PRoomUser::clear_camp() {
  camp_ = 0u;
}
 ::google::protobuf::uint32 PRoomUser::camp() const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.Camp)
  return camp_;
}
 void PRoomUser::set_camp(::google::protobuf::uint32 value) {
  
  camp_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomUser.Camp)
}

// optional uint32 Mountid = 5;
void PRoomUser::clear_mountid() {
  mountid_ = 0u;
}
 ::google::protobuf::uint32 PRoomUser::mountid() const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.Mountid)
  return mountid_;
}
 void PRoomUser::set_mountid(::google::protobuf::uint32 value) {
  
  mountid_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomUser.Mountid)
}

// optional bool IsWatcher = 6;
void PRoomUser::clear_iswatcher() {
  iswatcher_ = false;
}
 bool PRoomUser::iswatcher() const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.IsWatcher)
  return iswatcher_;
}
 void PRoomUser::set_iswatcher(bool value) {
  
  iswatcher_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomUser.IsWatcher)
}

// repeated uint32 DressData = 7;
int PRoomUser::dressdata_size() const {
  return dressdata_.size();
}
void PRoomUser::clear_dressdata() {
  dressdata_.Clear();
}
 ::google::protobuf::uint32 PRoomUser::dressdata(int index) const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.DressData)
  return dressdata_.Get(index);
}
 void PRoomUser::set_dressdata(int index, ::google::protobuf::uint32 value) {
  dressdata_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.PRoomUser.DressData)
}
 void PRoomUser::add_dressdata(::google::protobuf::uint32 value) {
  dressdata_.Add(value);
  // @@protoc_insertion_point(field_add:pb.PRoomUser.DressData)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PRoomUser::dressdata() const {
  // @@protoc_insertion_point(field_list:pb.PRoomUser.DressData)
  return dressdata_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PRoomUser::mutable_dressdata() {
  // @@protoc_insertion_point(field_mutable_list:pb.PRoomUser.DressData)
  return &dressdata_;
}

// optional uint32 Sex = 8;
void PRoomUser::clear_sex() {
  sex_ = 0u;
}
 ::google::protobuf::uint32 PRoomUser::sex() const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.Sex)
  return sex_;
}
 void PRoomUser::set_sex(::google::protobuf::uint32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomUser.Sex)
}

// optional uint32 StageStar = 9;
void PRoomUser::clear_stagestar() {
  stagestar_ = 0u;
}
 ::google::protobuf::uint32 PRoomUser::stagestar() const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.StageStar)
  return stagestar_;
}
 void PRoomUser::set_stagestar(::google::protobuf::uint32 value) {
  
  stagestar_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomUser.StageStar)
}

// optional uint32 WeaponItemId = 10;
void PRoomUser::clear_weaponitemid() {
  weaponitemid_ = 0u;
}
 ::google::protobuf::uint32 PRoomUser::weaponitemid() const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.WeaponItemId)
  return weaponitemid_;
}
 void PRoomUser::set_weaponitemid(::google::protobuf::uint32 value) {
  
  weaponitemid_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomUser.WeaponItemId)
}

// repeated .pb.Rune RuneList = 11;
int PRoomUser::runelist_size() const {
  return runelist_.size();
}
void PRoomUser::clear_runelist() {
  runelist_.Clear();
}
const ::pb::Rune& PRoomUser::runelist(int index) const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.RuneList)
  return runelist_.Get(index);
}
::pb::Rune* PRoomUser::mutable_runelist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.PRoomUser.RuneList)
  return runelist_.Mutable(index);
}
::pb::Rune* PRoomUser::add_runelist() {
  // @@protoc_insertion_point(field_add:pb.PRoomUser.RuneList)
  return runelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::Rune >*
PRoomUser::mutable_runelist() {
  // @@protoc_insertion_point(field_mutable_list:pb.PRoomUser.RuneList)
  return &runelist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::Rune >&
PRoomUser::runelist() const {
  // @@protoc_insertion_point(field_list:pb.PRoomUser.RuneList)
  return runelist_;
}

// optional uint32 BatCount = 12;
void PRoomUser::clear_batcount() {
  batcount_ = 0u;
}
 ::google::protobuf::uint32 PRoomUser::batcount() const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.BatCount)
  return batcount_;
}
 void PRoomUser::set_batcount(::google::protobuf::uint32 value) {
  
  batcount_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomUser.BatCount)
}

// optional uint32 MvpCount = 13;
void PRoomUser::clear_mvpcount() {
  mvpcount_ = 0u;
}
 ::google::protobuf::uint32 PRoomUser::mvpcount() const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.MvpCount)
  return mvpcount_;
}
 void PRoomUser::set_mvpcount(::google::protobuf::uint32 value) {
  
  mvpcount_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomUser.MvpCount)
}

// optional uint32 MountBatCount = 14;
void PRoomUser::clear_mountbatcount() {
  mountbatcount_ = 0u;
}
 ::google::protobuf::uint32 PRoomUser::mountbatcount() const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.MountBatCount)
  return mountbatcount_;
}
 void PRoomUser::set_mountbatcount(::google::protobuf::uint32 value) {
  
  mountbatcount_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomUser.MountBatCount)
}

// optional uint32 MountWinCount = 15;
void PRoomUser::clear_mountwincount() {
  mountwincount_ = 0u;
}
 ::google::protobuf::uint32 PRoomUser::mountwincount() const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.MountWinCount)
  return mountwincount_;
}
 void PRoomUser::set_mountwincount(::google::protobuf::uint32 value) {
  
  mountwincount_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomUser.MountWinCount)
}

// optional uint32 AvgShowPoint = 16;
void PRoomUser::clear_avgshowpoint() {
  avgshowpoint_ = 0u;
}
 ::google::protobuf::uint32 PRoomUser::avgshowpoint() const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.AvgShowPoint)
  return avgshowpoint_;
}
 void PRoomUser::set_avgshowpoint(::google::protobuf::uint32 value) {
  
  avgshowpoint_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomUser.AvgShowPoint)
}

// optional uint32 StageWinNum = 17;
void PRoomUser::clear_stagewinnum() {
  stagewinnum_ = 0u;
}
 ::google::protobuf::uint32 PRoomUser::stagewinnum() const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.StageWinNum)
  return stagewinnum_;
}
 void PRoomUser::set_stagewinnum(::google::protobuf::uint32 value) {
  
  stagewinnum_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomUser.StageWinNum)
}

// optional bool MvpLastStage = 18;
void PRoomUser::clear_mvplaststage() {
  mvplaststage_ = false;
}
 bool PRoomUser::mvplaststage() const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.MvpLastStage)
  return mvplaststage_;
}
 void PRoomUser::set_mvplaststage(bool value) {
  
  mvplaststage_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomUser.MvpLastStage)
}

// optional uint32 MountSkinId = 19;
void PRoomUser::clear_mountskinid() {
  mountskinid_ = 0u;
}
 ::google::protobuf::uint32 PRoomUser::mountskinid() const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.MountSkinId)
  return mountskinid_;
}
 void PRoomUser::set_mountskinid(::google::protobuf::uint32 value) {
  
  mountskinid_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomUser.MountSkinId)
}

// optional bool IsRobot = 20;
void PRoomUser::clear_isrobot() {
  isrobot_ = false;
}
 bool PRoomUser::isrobot() const {
  // @@protoc_insertion_point(field_get:pb.PRoomUser.IsRobot)
  return isrobot_;
}
 void PRoomUser::set_isrobot(bool value) {
  
  isrobot_ = value;
  // @@protoc_insertion_point(field_set:pb.PRoomUser.IsRobot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CEnterRoomRet_101::kRoominfoFieldNumber;
const int S2CEnterRoomRet_101::kUserlistFieldNumber;
const int S2CEnterRoomRet_101::kOffLineUserlistFieldNumber;
const int S2CEnterRoomRet_101::kGiveuplistFieldNumber;
const int S2CEnterRoomRet_101::kUdpipFieldNumber;
const int S2CEnterRoomRet_101::kUdpportFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CEnterRoomRet_101::S2CEnterRoomRet_101()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CEnterRoomRet_101)
}

void S2CEnterRoomRet_101::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  roominfo_ = const_cast< ::pb::PRoomInfo*>(&::pb::PRoomInfo::default_instance());
}

S2CEnterRoomRet_101::S2CEnterRoomRet_101(const S2CEnterRoomRet_101& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CEnterRoomRet_101)
}

void S2CEnterRoomRet_101::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  roominfo_ = NULL;
  udpip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  udpport_ = 0u;
}

S2CEnterRoomRet_101::~S2CEnterRoomRet_101() {
  // @@protoc_insertion_point(destructor:pb.S2CEnterRoomRet_101)
  SharedDtor();
}

void S2CEnterRoomRet_101::SharedDtor() {
  udpip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete roominfo_;
  }
}

void S2CEnterRoomRet_101::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CEnterRoomRet_101::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CEnterRoomRet_101_descriptor_;
}

const S2CEnterRoomRet_101& S2CEnterRoomRet_101::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CEnterRoomRet_101* S2CEnterRoomRet_101::default_instance_ = NULL;

S2CEnterRoomRet_101* S2CEnterRoomRet_101::New(::google::protobuf::Arena* arena) const {
  S2CEnterRoomRet_101* n = new S2CEnterRoomRet_101;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CEnterRoomRet_101::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CEnterRoomRet_101)
  if (GetArenaNoVirtual() == NULL && roominfo_ != NULL) delete roominfo_;
  roominfo_ = NULL;
  udpip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  udpport_ = 0u;
  userlist_.Clear();
  offlineuserlist_.Clear();
  giveuplist_.Clear();
}

bool S2CEnterRoomRet_101::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CEnterRoomRet_101)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.PRoomInfo Roominfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roominfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Userlist;
        break;
      }

      // repeated .pb.PRoomUser Userlist = 2;
      case 2: {
        if (tag == 18) {
         parse_Userlist:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Userlist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_userlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Userlist;
        if (input->ExpectTag(26)) goto parse_loop_OffLineUserlist;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .pb.PRoomUser OffLineUserlist = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_OffLineUserlist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_offlineuserlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_OffLineUserlist;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_Giveuplist;
        break;
      }

      // repeated uint64 Giveuplist = 4;
      case 4: {
        if (tag == 34) {
         parse_Giveuplist:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_giveuplist())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34, input, this->mutable_giveuplist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Udpip;
        break;
      }

      // optional string Udpip = 5;
      case 5: {
        if (tag == 42) {
         parse_Udpip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_udpip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->udpip().data(), this->udpip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CEnterRoomRet_101.Udpip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Udpport;
        break;
      }

      // optional uint32 Udpport = 6;
      case 6: {
        if (tag == 48) {
         parse_Udpport:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &udpport_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CEnterRoomRet_101)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CEnterRoomRet_101)
  return false;
#undef DO_
}

void S2CEnterRoomRet_101::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CEnterRoomRet_101)
  // optional .pb.PRoomInfo Roominfo = 1;
  if (this->has_roominfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->roominfo_, output);
  }

  // repeated .pb.PRoomUser Userlist = 2;
  for (unsigned int i = 0, n = this->userlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->userlist(i), output);
  }

  // repeated .pb.PRoomUser OffLineUserlist = 3;
  for (unsigned int i = 0, n = this->offlineuserlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->offlineuserlist(i), output);
  }

  // repeated uint64 Giveuplist = 4;
  if (this->giveuplist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_giveuplist_cached_byte_size_);
  }
  for (int i = 0; i < this->giveuplist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->giveuplist(i), output);
  }

  // optional string Udpip = 5;
  if (this->udpip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->udpip().data(), this->udpip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CEnterRoomRet_101.Udpip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->udpip(), output);
  }

  // optional uint32 Udpport = 6;
  if (this->udpport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->udpport(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CEnterRoomRet_101)
}

::google::protobuf::uint8* S2CEnterRoomRet_101::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CEnterRoomRet_101)
  // optional .pb.PRoomInfo Roominfo = 1;
  if (this->has_roominfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->roominfo_, false, target);
  }

  // repeated .pb.PRoomUser Userlist = 2;
  for (unsigned int i = 0, n = this->userlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->userlist(i), false, target);
  }

  // repeated .pb.PRoomUser OffLineUserlist = 3;
  for (unsigned int i = 0, n = this->offlineuserlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->offlineuserlist(i), false, target);
  }

  // repeated uint64 Giveuplist = 4;
  if (this->giveuplist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _giveuplist_cached_byte_size_, target);
  }
  for (int i = 0; i < this->giveuplist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->giveuplist(i), target);
  }

  // optional string Udpip = 5;
  if (this->udpip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->udpip().data(), this->udpip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CEnterRoomRet_101.Udpip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->udpip(), target);
  }

  // optional uint32 Udpport = 6;
  if (this->udpport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->udpport(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CEnterRoomRet_101)
  return target;
}

int S2CEnterRoomRet_101::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CEnterRoomRet_101)
  int total_size = 0;

  // optional .pb.PRoomInfo Roominfo = 1;
  if (this->has_roominfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->roominfo_);
  }

  // optional string Udpip = 5;
  if (this->udpip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->udpip());
  }

  // optional uint32 Udpport = 6;
  if (this->udpport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->udpport());
  }

  // repeated .pb.PRoomUser Userlist = 2;
  total_size += 1 * this->userlist_size();
  for (int i = 0; i < this->userlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userlist(i));
  }

  // repeated .pb.PRoomUser OffLineUserlist = 3;
  total_size += 1 * this->offlineuserlist_size();
  for (int i = 0; i < this->offlineuserlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->offlineuserlist(i));
  }

  // repeated uint64 Giveuplist = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->giveuplist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->giveuplist(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _giveuplist_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CEnterRoomRet_101::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CEnterRoomRet_101)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CEnterRoomRet_101* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CEnterRoomRet_101>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CEnterRoomRet_101)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CEnterRoomRet_101)
    MergeFrom(*source);
  }
}

void S2CEnterRoomRet_101::MergeFrom(const S2CEnterRoomRet_101& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CEnterRoomRet_101)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  userlist_.MergeFrom(from.userlist_);
  offlineuserlist_.MergeFrom(from.offlineuserlist_);
  giveuplist_.MergeFrom(from.giveuplist_);
  if (from.has_roominfo()) {
    mutable_roominfo()->::pb::PRoomInfo::MergeFrom(from.roominfo());
  }
  if (from.udpip().size() > 0) {

    udpip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.udpip_);
  }
  if (from.udpport() != 0) {
    set_udpport(from.udpport());
  }
}

void S2CEnterRoomRet_101::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CEnterRoomRet_101)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CEnterRoomRet_101::CopyFrom(const S2CEnterRoomRet_101& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CEnterRoomRet_101)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CEnterRoomRet_101::IsInitialized() const {

  return true;
}

void S2CEnterRoomRet_101::Swap(S2CEnterRoomRet_101* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CEnterRoomRet_101::InternalSwap(S2CEnterRoomRet_101* other) {
  std::swap(roominfo_, other->roominfo_);
  userlist_.UnsafeArenaSwap(&other->userlist_);
  offlineuserlist_.UnsafeArenaSwap(&other->offlineuserlist_);
  giveuplist_.UnsafeArenaSwap(&other->giveuplist_);
  udpip_.Swap(&other->udpip_);
  std::swap(udpport_, other->udpport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CEnterRoomRet_101::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CEnterRoomRet_101_descriptor_;
  metadata.reflection = S2CEnterRoomRet_101_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CEnterRoomRet_101

// optional .pb.PRoomInfo Roominfo = 1;
bool S2CEnterRoomRet_101::has_roominfo() const {
  return !_is_default_instance_ && roominfo_ != NULL;
}
void S2CEnterRoomRet_101::clear_roominfo() {
  if (GetArenaNoVirtual() == NULL && roominfo_ != NULL) delete roominfo_;
  roominfo_ = NULL;
}
const ::pb::PRoomInfo& S2CEnterRoomRet_101::roominfo() const {
  // @@protoc_insertion_point(field_get:pb.S2CEnterRoomRet_101.Roominfo)
  return roominfo_ != NULL ? *roominfo_ : *default_instance_->roominfo_;
}
::pb::PRoomInfo* S2CEnterRoomRet_101::mutable_roominfo() {
  
  if (roominfo_ == NULL) {
    roominfo_ = new ::pb::PRoomInfo;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CEnterRoomRet_101.Roominfo)
  return roominfo_;
}
::pb::PRoomInfo* S2CEnterRoomRet_101::release_roominfo() {
  // @@protoc_insertion_point(field_release:pb.S2CEnterRoomRet_101.Roominfo)
  
  ::pb::PRoomInfo* temp = roominfo_;
  roominfo_ = NULL;
  return temp;
}
void S2CEnterRoomRet_101::set_allocated_roominfo(::pb::PRoomInfo* roominfo) {
  delete roominfo_;
  roominfo_ = roominfo;
  if (roominfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CEnterRoomRet_101.Roominfo)
}

// repeated .pb.PRoomUser Userlist = 2;
int S2CEnterRoomRet_101::userlist_size() const {
  return userlist_.size();
}
void S2CEnterRoomRet_101::clear_userlist() {
  userlist_.Clear();
}
const ::pb::PRoomUser& S2CEnterRoomRet_101::userlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CEnterRoomRet_101.Userlist)
  return userlist_.Get(index);
}
::pb::PRoomUser* S2CEnterRoomRet_101::mutable_userlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CEnterRoomRet_101.Userlist)
  return userlist_.Mutable(index);
}
::pb::PRoomUser* S2CEnterRoomRet_101::add_userlist() {
  // @@protoc_insertion_point(field_add:pb.S2CEnterRoomRet_101.Userlist)
  return userlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::PRoomUser >*
S2CEnterRoomRet_101::mutable_userlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CEnterRoomRet_101.Userlist)
  return &userlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::PRoomUser >&
S2CEnterRoomRet_101::userlist() const {
  // @@protoc_insertion_point(field_list:pb.S2CEnterRoomRet_101.Userlist)
  return userlist_;
}

// repeated .pb.PRoomUser OffLineUserlist = 3;
int S2CEnterRoomRet_101::offlineuserlist_size() const {
  return offlineuserlist_.size();
}
void S2CEnterRoomRet_101::clear_offlineuserlist() {
  offlineuserlist_.Clear();
}
const ::pb::PRoomUser& S2CEnterRoomRet_101::offlineuserlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CEnterRoomRet_101.OffLineUserlist)
  return offlineuserlist_.Get(index);
}
::pb::PRoomUser* S2CEnterRoomRet_101::mutable_offlineuserlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CEnterRoomRet_101.OffLineUserlist)
  return offlineuserlist_.Mutable(index);
}
::pb::PRoomUser* S2CEnterRoomRet_101::add_offlineuserlist() {
  // @@protoc_insertion_point(field_add:pb.S2CEnterRoomRet_101.OffLineUserlist)
  return offlineuserlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::PRoomUser >*
S2CEnterRoomRet_101::mutable_offlineuserlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CEnterRoomRet_101.OffLineUserlist)
  return &offlineuserlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::PRoomUser >&
S2CEnterRoomRet_101::offlineuserlist() const {
  // @@protoc_insertion_point(field_list:pb.S2CEnterRoomRet_101.OffLineUserlist)
  return offlineuserlist_;
}

// repeated uint64 Giveuplist = 4;
int S2CEnterRoomRet_101::giveuplist_size() const {
  return giveuplist_.size();
}
void S2CEnterRoomRet_101::clear_giveuplist() {
  giveuplist_.Clear();
}
 ::google::protobuf::uint64 S2CEnterRoomRet_101::giveuplist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CEnterRoomRet_101.Giveuplist)
  return giveuplist_.Get(index);
}
 void S2CEnterRoomRet_101::set_giveuplist(int index, ::google::protobuf::uint64 value) {
  giveuplist_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.S2CEnterRoomRet_101.Giveuplist)
}
 void S2CEnterRoomRet_101::add_giveuplist(::google::protobuf::uint64 value) {
  giveuplist_.Add(value);
  // @@protoc_insertion_point(field_add:pb.S2CEnterRoomRet_101.Giveuplist)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2CEnterRoomRet_101::giveuplist() const {
  // @@protoc_insertion_point(field_list:pb.S2CEnterRoomRet_101.Giveuplist)
  return giveuplist_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2CEnterRoomRet_101::mutable_giveuplist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CEnterRoomRet_101.Giveuplist)
  return &giveuplist_;
}

// optional string Udpip = 5;
void S2CEnterRoomRet_101::clear_udpip() {
  udpip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CEnterRoomRet_101::udpip() const {
  // @@protoc_insertion_point(field_get:pb.S2CEnterRoomRet_101.Udpip)
  return udpip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CEnterRoomRet_101::set_udpip(const ::std::string& value) {
  
  udpip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CEnterRoomRet_101.Udpip)
}
 void S2CEnterRoomRet_101::set_udpip(const char* value) {
  
  udpip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CEnterRoomRet_101.Udpip)
}
 void S2CEnterRoomRet_101::set_udpip(const char* value, size_t size) {
  
  udpip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CEnterRoomRet_101.Udpip)
}
 ::std::string* S2CEnterRoomRet_101::mutable_udpip() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CEnterRoomRet_101.Udpip)
  return udpip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CEnterRoomRet_101::release_udpip() {
  // @@protoc_insertion_point(field_release:pb.S2CEnterRoomRet_101.Udpip)
  
  return udpip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CEnterRoomRet_101::set_allocated_udpip(::std::string* udpip) {
  if (udpip != NULL) {
    
  } else {
    
  }
  udpip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), udpip);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CEnterRoomRet_101.Udpip)
}

// optional uint32 Udpport = 6;
void S2CEnterRoomRet_101::clear_udpport() {
  udpport_ = 0u;
}
 ::google::protobuf::uint32 S2CEnterRoomRet_101::udpport() const {
  // @@protoc_insertion_point(field_get:pb.S2CEnterRoomRet_101.Udpport)
  return udpport_;
}
 void S2CEnterRoomRet_101::set_udpport(::google::protobuf::uint32 value) {
  
  udpport_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CEnterRoomRet_101.Udpport)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SCreateRoom_102::kRoomnameFieldNumber;
const int C2SCreateRoom_102::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SCreateRoom_102::C2SCreateRoom_102()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SCreateRoom_102)
}

void C2SCreateRoom_102::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SCreateRoom_102::C2SCreateRoom_102(const C2SCreateRoom_102& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SCreateRoom_102)
}

void C2SCreateRoom_102::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sceneid_ = 0u;
}

C2SCreateRoom_102::~C2SCreateRoom_102() {
  // @@protoc_insertion_point(destructor:pb.C2SCreateRoom_102)
  SharedDtor();
}

void C2SCreateRoom_102::SharedDtor() {
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2SCreateRoom_102::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SCreateRoom_102::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SCreateRoom_102_descriptor_;
}

const C2SCreateRoom_102& C2SCreateRoom_102::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SCreateRoom_102* C2SCreateRoom_102::default_instance_ = NULL;

C2SCreateRoom_102* C2SCreateRoom_102::New(::google::protobuf::Arena* arena) const {
  C2SCreateRoom_102* n = new C2SCreateRoom_102;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SCreateRoom_102::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SCreateRoom_102)
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sceneid_ = 0u;
}

bool C2SCreateRoom_102::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SCreateRoom_102)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Roomname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomname().data(), this->roomname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SCreateRoom_102.Roomname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SceneId;
        break;
      }

      // optional uint32 SceneId = 2;
      case 2: {
        if (tag == 16) {
         parse_SceneId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sceneid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SCreateRoom_102)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SCreateRoom_102)
  return false;
#undef DO_
}

void C2SCreateRoom_102::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SCreateRoom_102)
  // optional string Roomname = 1;
  if (this->roomname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SCreateRoom_102.Roomname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roomname(), output);
  }

  // optional uint32 SceneId = 2;
  if (this->sceneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sceneid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SCreateRoom_102)
}

::google::protobuf::uint8* C2SCreateRoom_102::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SCreateRoom_102)
  // optional string Roomname = 1;
  if (this->roomname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SCreateRoom_102.Roomname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomname(), target);
  }

  // optional uint32 SceneId = 2;
  if (this->sceneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sceneid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SCreateRoom_102)
  return target;
}

int C2SCreateRoom_102::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SCreateRoom_102)
  int total_size = 0;

  // optional string Roomname = 1;
  if (this->roomname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomname());
  }

  // optional uint32 SceneId = 2;
  if (this->sceneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sceneid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SCreateRoom_102::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SCreateRoom_102)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SCreateRoom_102* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SCreateRoom_102>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SCreateRoom_102)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SCreateRoom_102)
    MergeFrom(*source);
  }
}

void C2SCreateRoom_102::MergeFrom(const C2SCreateRoom_102& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SCreateRoom_102)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roomname().size() > 0) {

    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  if (from.sceneid() != 0) {
    set_sceneid(from.sceneid());
  }
}

void C2SCreateRoom_102::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SCreateRoom_102)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SCreateRoom_102::CopyFrom(const C2SCreateRoom_102& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SCreateRoom_102)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SCreateRoom_102::IsInitialized() const {

  return true;
}

void C2SCreateRoom_102::Swap(C2SCreateRoom_102* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SCreateRoom_102::InternalSwap(C2SCreateRoom_102* other) {
  roomname_.Swap(&other->roomname_);
  std::swap(sceneid_, other->sceneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SCreateRoom_102::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SCreateRoom_102_descriptor_;
  metadata.reflection = C2SCreateRoom_102_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SCreateRoom_102

// optional string Roomname = 1;
void C2SCreateRoom_102::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SCreateRoom_102::roomname() const {
  // @@protoc_insertion_point(field_get:pb.C2SCreateRoom_102.Roomname)
  return roomname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SCreateRoom_102::set_roomname(const ::std::string& value) {
  
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SCreateRoom_102.Roomname)
}
 void C2SCreateRoom_102::set_roomname(const char* value) {
  
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SCreateRoom_102.Roomname)
}
 void C2SCreateRoom_102::set_roomname(const char* value, size_t size) {
  
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SCreateRoom_102.Roomname)
}
 ::std::string* C2SCreateRoom_102::mutable_roomname() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SCreateRoom_102.Roomname)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SCreateRoom_102::release_roomname() {
  // @@protoc_insertion_point(field_release:pb.C2SCreateRoom_102.Roomname)
  
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SCreateRoom_102::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    
  } else {
    
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SCreateRoom_102.Roomname)
}

// optional uint32 SceneId = 2;
void C2SCreateRoom_102::clear_sceneid() {
  sceneid_ = 0u;
}
 ::google::protobuf::uint32 C2SCreateRoom_102::sceneid() const {
  // @@protoc_insertion_point(field_get:pb.C2SCreateRoom_102.SceneId)
  return sceneid_;
}
 void C2SCreateRoom_102::set_sceneid(::google::protobuf::uint32 value) {
  
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SCreateRoom_102.SceneId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SExitRoom_103::C2SExitRoom_103()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SExitRoom_103)
}

void C2SExitRoom_103::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SExitRoom_103::C2SExitRoom_103(const C2SExitRoom_103& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SExitRoom_103)
}

void C2SExitRoom_103::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SExitRoom_103::~C2SExitRoom_103() {
  // @@protoc_insertion_point(destructor:pb.C2SExitRoom_103)
  SharedDtor();
}

void C2SExitRoom_103::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SExitRoom_103::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SExitRoom_103::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SExitRoom_103_descriptor_;
}

const C2SExitRoom_103& C2SExitRoom_103::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SExitRoom_103* C2SExitRoom_103::default_instance_ = NULL;

C2SExitRoom_103* C2SExitRoom_103::New(::google::protobuf::Arena* arena) const {
  C2SExitRoom_103* n = new C2SExitRoom_103;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SExitRoom_103::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SExitRoom_103)
}

bool C2SExitRoom_103::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SExitRoom_103)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SExitRoom_103)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SExitRoom_103)
  return false;
#undef DO_
}

void C2SExitRoom_103::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SExitRoom_103)
  // @@protoc_insertion_point(serialize_end:pb.C2SExitRoom_103)
}

::google::protobuf::uint8* C2SExitRoom_103::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SExitRoom_103)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SExitRoom_103)
  return target;
}

int C2SExitRoom_103::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SExitRoom_103)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SExitRoom_103::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SExitRoom_103)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SExitRoom_103* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SExitRoom_103>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SExitRoom_103)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SExitRoom_103)
    MergeFrom(*source);
  }
}

void C2SExitRoom_103::MergeFrom(const C2SExitRoom_103& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SExitRoom_103)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SExitRoom_103::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SExitRoom_103)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SExitRoom_103::CopyFrom(const C2SExitRoom_103& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SExitRoom_103)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SExitRoom_103::IsInitialized() const {

  return true;
}

void C2SExitRoom_103::Swap(C2SExitRoom_103* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SExitRoom_103::InternalSwap(C2SExitRoom_103* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SExitRoom_103::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SExitRoom_103_descriptor_;
  metadata.reflection = C2SExitRoom_103_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SExitRoom_103

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CExitRoom_103::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CExitRoom_103::S2CExitRoom_103()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CExitRoom_103)
}

void S2CExitRoom_103::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CExitRoom_103::S2CExitRoom_103(const S2CExitRoom_103& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CExitRoom_103)
}

void S2CExitRoom_103::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
}

S2CExitRoom_103::~S2CExitRoom_103() {
  // @@protoc_insertion_point(destructor:pb.S2CExitRoom_103)
  SharedDtor();
}

void S2CExitRoom_103::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CExitRoom_103::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CExitRoom_103::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CExitRoom_103_descriptor_;
}

const S2CExitRoom_103& S2CExitRoom_103::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CExitRoom_103* S2CExitRoom_103::default_instance_ = NULL;

S2CExitRoom_103* S2CExitRoom_103::New(::google::protobuf::Arena* arena) const {
  S2CExitRoom_103* n = new S2CExitRoom_103;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CExitRoom_103::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CExitRoom_103)
  rid_ = GOOGLE_ULONGLONG(0);
}

bool S2CExitRoom_103::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CExitRoom_103)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CExitRoom_103)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CExitRoom_103)
  return false;
#undef DO_
}

void S2CExitRoom_103::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CExitRoom_103)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CExitRoom_103)
}

::google::protobuf::uint8* S2CExitRoom_103::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CExitRoom_103)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CExitRoom_103)
  return target;
}

int S2CExitRoom_103::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CExitRoom_103)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CExitRoom_103::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CExitRoom_103)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CExitRoom_103* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CExitRoom_103>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CExitRoom_103)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CExitRoom_103)
    MergeFrom(*source);
  }
}

void S2CExitRoom_103::MergeFrom(const S2CExitRoom_103& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CExitRoom_103)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void S2CExitRoom_103::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CExitRoom_103)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CExitRoom_103::CopyFrom(const S2CExitRoom_103& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CExitRoom_103)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CExitRoom_103::IsInitialized() const {

  return true;
}

void S2CExitRoom_103::Swap(S2CExitRoom_103* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CExitRoom_103::InternalSwap(S2CExitRoom_103* other) {
  std::swap(rid_, other->rid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CExitRoom_103::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CExitRoom_103_descriptor_;
  metadata.reflection = S2CExitRoom_103_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CExitRoom_103

// optional uint64 Rid = 1;
void S2CExitRoom_103::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CExitRoom_103::rid() const {
  // @@protoc_insertion_point(field_get:pb.S2CExitRoom_103.Rid)
  return rid_;
}
 void S2CExitRoom_103::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CExitRoom_103.Rid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SUserReady_104::kDoreadyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SUserReady_104::C2SUserReady_104()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SUserReady_104)
}

void C2SUserReady_104::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SUserReady_104::C2SUserReady_104(const C2SUserReady_104& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SUserReady_104)
}

void C2SUserReady_104::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  doready_ = false;
}

C2SUserReady_104::~C2SUserReady_104() {
  // @@protoc_insertion_point(destructor:pb.C2SUserReady_104)
  SharedDtor();
}

void C2SUserReady_104::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SUserReady_104::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SUserReady_104::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SUserReady_104_descriptor_;
}

const C2SUserReady_104& C2SUserReady_104::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SUserReady_104* C2SUserReady_104::default_instance_ = NULL;

C2SUserReady_104* C2SUserReady_104::New(::google::protobuf::Arena* arena) const {
  C2SUserReady_104* n = new C2SUserReady_104;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SUserReady_104::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SUserReady_104)
  doready_ = false;
}

bool C2SUserReady_104::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SUserReady_104)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Doready = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &doready_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SUserReady_104)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SUserReady_104)
  return false;
#undef DO_
}

void C2SUserReady_104::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SUserReady_104)
  // optional bool Doready = 1;
  if (this->doready() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->doready(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SUserReady_104)
}

::google::protobuf::uint8* C2SUserReady_104::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SUserReady_104)
  // optional bool Doready = 1;
  if (this->doready() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->doready(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SUserReady_104)
  return target;
}

int C2SUserReady_104::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SUserReady_104)
  int total_size = 0;

  // optional bool Doready = 1;
  if (this->doready() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SUserReady_104::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SUserReady_104)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SUserReady_104* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SUserReady_104>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SUserReady_104)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SUserReady_104)
    MergeFrom(*source);
  }
}

void C2SUserReady_104::MergeFrom(const C2SUserReady_104& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SUserReady_104)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.doready() != 0) {
    set_doready(from.doready());
  }
}

void C2SUserReady_104::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SUserReady_104)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SUserReady_104::CopyFrom(const C2SUserReady_104& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SUserReady_104)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SUserReady_104::IsInitialized() const {

  return true;
}

void C2SUserReady_104::Swap(C2SUserReady_104* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SUserReady_104::InternalSwap(C2SUserReady_104* other) {
  std::swap(doready_, other->doready_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SUserReady_104::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SUserReady_104_descriptor_;
  metadata.reflection = C2SUserReady_104_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SUserReady_104

// optional bool Doready = 1;
void C2SUserReady_104::clear_doready() {
  doready_ = false;
}
 bool C2SUserReady_104::doready() const {
  // @@protoc_insertion_point(field_get:pb.C2SUserReady_104.Doready)
  return doready_;
}
 void C2SUserReady_104::set_doready(bool value) {
  
  doready_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SUserReady_104.Doready)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CUserReady_104::kRidFieldNumber;
const int S2CUserReady_104::kIsreadyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CUserReady_104::S2CUserReady_104()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CUserReady_104)
}

void S2CUserReady_104::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CUserReady_104::S2CUserReady_104(const S2CUserReady_104& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CUserReady_104)
}

void S2CUserReady_104::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
  isready_ = false;
}

S2CUserReady_104::~S2CUserReady_104() {
  // @@protoc_insertion_point(destructor:pb.S2CUserReady_104)
  SharedDtor();
}

void S2CUserReady_104::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CUserReady_104::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CUserReady_104::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CUserReady_104_descriptor_;
}

const S2CUserReady_104& S2CUserReady_104::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CUserReady_104* S2CUserReady_104::default_instance_ = NULL;

S2CUserReady_104* S2CUserReady_104::New(::google::protobuf::Arena* arena) const {
  S2CUserReady_104* n = new S2CUserReady_104;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CUserReady_104::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CUserReady_104)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CUserReady_104, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CUserReady_104*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rid_, isready_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2CUserReady_104::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CUserReady_104)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Isready;
        break;
      }

      // optional bool Isready = 2;
      case 2: {
        if (tag == 16) {
         parse_Isready:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isready_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CUserReady_104)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CUserReady_104)
  return false;
#undef DO_
}

void S2CUserReady_104::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CUserReady_104)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // optional bool Isready = 2;
  if (this->isready() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isready(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CUserReady_104)
}

::google::protobuf::uint8* S2CUserReady_104::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CUserReady_104)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // optional bool Isready = 2;
  if (this->isready() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isready(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CUserReady_104)
  return target;
}

int S2CUserReady_104::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CUserReady_104)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  // optional bool Isready = 2;
  if (this->isready() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CUserReady_104::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CUserReady_104)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CUserReady_104* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CUserReady_104>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CUserReady_104)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CUserReady_104)
    MergeFrom(*source);
  }
}

void S2CUserReady_104::MergeFrom(const S2CUserReady_104& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CUserReady_104)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.isready() != 0) {
    set_isready(from.isready());
  }
}

void S2CUserReady_104::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CUserReady_104)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CUserReady_104::CopyFrom(const S2CUserReady_104& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CUserReady_104)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CUserReady_104::IsInitialized() const {

  return true;
}

void S2CUserReady_104::Swap(S2CUserReady_104* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CUserReady_104::InternalSwap(S2CUserReady_104* other) {
  std::swap(rid_, other->rid_);
  std::swap(isready_, other->isready_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CUserReady_104::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CUserReady_104_descriptor_;
  metadata.reflection = S2CUserReady_104_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CUserReady_104

// optional uint64 Rid = 1;
void S2CUserReady_104::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CUserReady_104::rid() const {
  // @@protoc_insertion_point(field_get:pb.S2CUserReady_104.Rid)
  return rid_;
}
 void S2CUserReady_104::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CUserReady_104.Rid)
}

// optional bool Isready = 2;
void S2CUserReady_104::clear_isready() {
  isready_ = false;
}
 bool S2CUserReady_104::isready() const {
  // @@protoc_insertion_point(field_get:pb.S2CUserReady_104.Isready)
  return isready_;
}
 void S2CUserReady_104::set_isready(bool value) {
  
  isready_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CUserReady_104.Isready)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SMasterStart_105::C2SMasterStart_105()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SMasterStart_105)
}

void C2SMasterStart_105::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SMasterStart_105::C2SMasterStart_105(const C2SMasterStart_105& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SMasterStart_105)
}

void C2SMasterStart_105::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SMasterStart_105::~C2SMasterStart_105() {
  // @@protoc_insertion_point(destructor:pb.C2SMasterStart_105)
  SharedDtor();
}

void C2SMasterStart_105::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SMasterStart_105::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SMasterStart_105::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SMasterStart_105_descriptor_;
}

const C2SMasterStart_105& C2SMasterStart_105::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SMasterStart_105* C2SMasterStart_105::default_instance_ = NULL;

C2SMasterStart_105* C2SMasterStart_105::New(::google::protobuf::Arena* arena) const {
  C2SMasterStart_105* n = new C2SMasterStart_105;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SMasterStart_105::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SMasterStart_105)
}

bool C2SMasterStart_105::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SMasterStart_105)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SMasterStart_105)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SMasterStart_105)
  return false;
#undef DO_
}

void C2SMasterStart_105::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SMasterStart_105)
  // @@protoc_insertion_point(serialize_end:pb.C2SMasterStart_105)
}

::google::protobuf::uint8* C2SMasterStart_105::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SMasterStart_105)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SMasterStart_105)
  return target;
}

int C2SMasterStart_105::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SMasterStart_105)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SMasterStart_105::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SMasterStart_105)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SMasterStart_105* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SMasterStart_105>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SMasterStart_105)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SMasterStart_105)
    MergeFrom(*source);
  }
}

void C2SMasterStart_105::MergeFrom(const C2SMasterStart_105& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SMasterStart_105)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SMasterStart_105::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SMasterStart_105)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SMasterStart_105::CopyFrom(const C2SMasterStart_105& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SMasterStart_105)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SMasterStart_105::IsInitialized() const {

  return true;
}

void C2SMasterStart_105::Swap(C2SMasterStart_105* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SMasterStart_105::InternalSwap(C2SMasterStart_105* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SMasterStart_105::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SMasterStart_105_descriptor_;
  metadata.reflection = C2SMasterStart_105_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SMasterStart_105

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CMasterStart_105::S2CMasterStart_105()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CMasterStart_105)
}

void S2CMasterStart_105::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CMasterStart_105::S2CMasterStart_105(const S2CMasterStart_105& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CMasterStart_105)
}

void S2CMasterStart_105::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CMasterStart_105::~S2CMasterStart_105() {
  // @@protoc_insertion_point(destructor:pb.S2CMasterStart_105)
  SharedDtor();
}

void S2CMasterStart_105::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CMasterStart_105::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CMasterStart_105::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CMasterStart_105_descriptor_;
}

const S2CMasterStart_105& S2CMasterStart_105::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CMasterStart_105* S2CMasterStart_105::default_instance_ = NULL;

S2CMasterStart_105* S2CMasterStart_105::New(::google::protobuf::Arena* arena) const {
  S2CMasterStart_105* n = new S2CMasterStart_105;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CMasterStart_105::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CMasterStart_105)
}

bool S2CMasterStart_105::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CMasterStart_105)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CMasterStart_105)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CMasterStart_105)
  return false;
#undef DO_
}

void S2CMasterStart_105::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CMasterStart_105)
  // @@protoc_insertion_point(serialize_end:pb.S2CMasterStart_105)
}

::google::protobuf::uint8* S2CMasterStart_105::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CMasterStart_105)
  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CMasterStart_105)
  return target;
}

int S2CMasterStart_105::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CMasterStart_105)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CMasterStart_105::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CMasterStart_105)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CMasterStart_105* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CMasterStart_105>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CMasterStart_105)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CMasterStart_105)
    MergeFrom(*source);
  }
}

void S2CMasterStart_105::MergeFrom(const S2CMasterStart_105& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CMasterStart_105)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void S2CMasterStart_105::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CMasterStart_105)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CMasterStart_105::CopyFrom(const S2CMasterStart_105& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CMasterStart_105)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CMasterStart_105::IsInitialized() const {

  return true;
}

void S2CMasterStart_105::Swap(S2CMasterStart_105* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CMasterStart_105::InternalSwap(S2CMasterStart_105* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CMasterStart_105::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CMasterStart_105_descriptor_;
  metadata.reflection = S2CMasterStart_105_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CMasterStart_105

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SLoadFinish_106::C2SLoadFinish_106()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SLoadFinish_106)
}

void C2SLoadFinish_106::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SLoadFinish_106::C2SLoadFinish_106(const C2SLoadFinish_106& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SLoadFinish_106)
}

void C2SLoadFinish_106::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SLoadFinish_106::~C2SLoadFinish_106() {
  // @@protoc_insertion_point(destructor:pb.C2SLoadFinish_106)
  SharedDtor();
}

void C2SLoadFinish_106::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SLoadFinish_106::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SLoadFinish_106::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SLoadFinish_106_descriptor_;
}

const C2SLoadFinish_106& C2SLoadFinish_106::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SLoadFinish_106* C2SLoadFinish_106::default_instance_ = NULL;

C2SLoadFinish_106* C2SLoadFinish_106::New(::google::protobuf::Arena* arena) const {
  C2SLoadFinish_106* n = new C2SLoadFinish_106;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SLoadFinish_106::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SLoadFinish_106)
}

bool C2SLoadFinish_106::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SLoadFinish_106)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SLoadFinish_106)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SLoadFinish_106)
  return false;
#undef DO_
}

void C2SLoadFinish_106::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SLoadFinish_106)
  // @@protoc_insertion_point(serialize_end:pb.C2SLoadFinish_106)
}

::google::protobuf::uint8* C2SLoadFinish_106::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SLoadFinish_106)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SLoadFinish_106)
  return target;
}

int C2SLoadFinish_106::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SLoadFinish_106)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SLoadFinish_106::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SLoadFinish_106)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SLoadFinish_106* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SLoadFinish_106>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SLoadFinish_106)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SLoadFinish_106)
    MergeFrom(*source);
  }
}

void C2SLoadFinish_106::MergeFrom(const C2SLoadFinish_106& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SLoadFinish_106)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SLoadFinish_106::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SLoadFinish_106)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SLoadFinish_106::CopyFrom(const C2SLoadFinish_106& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SLoadFinish_106)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SLoadFinish_106::IsInitialized() const {

  return true;
}

void C2SLoadFinish_106::Swap(C2SLoadFinish_106* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SLoadFinish_106::InternalSwap(C2SLoadFinish_106* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SLoadFinish_106::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SLoadFinish_106_descriptor_;
  metadata.reflection = C2SLoadFinish_106_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SLoadFinish_106

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CLoadFinish_106::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CLoadFinish_106::S2CLoadFinish_106()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CLoadFinish_106)
}

void S2CLoadFinish_106::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CLoadFinish_106::S2CLoadFinish_106(const S2CLoadFinish_106& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CLoadFinish_106)
}

void S2CLoadFinish_106::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
}

S2CLoadFinish_106::~S2CLoadFinish_106() {
  // @@protoc_insertion_point(destructor:pb.S2CLoadFinish_106)
  SharedDtor();
}

void S2CLoadFinish_106::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CLoadFinish_106::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CLoadFinish_106::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CLoadFinish_106_descriptor_;
}

const S2CLoadFinish_106& S2CLoadFinish_106::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CLoadFinish_106* S2CLoadFinish_106::default_instance_ = NULL;

S2CLoadFinish_106* S2CLoadFinish_106::New(::google::protobuf::Arena* arena) const {
  S2CLoadFinish_106* n = new S2CLoadFinish_106;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CLoadFinish_106::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CLoadFinish_106)
  rid_ = GOOGLE_ULONGLONG(0);
}

bool S2CLoadFinish_106::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CLoadFinish_106)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CLoadFinish_106)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CLoadFinish_106)
  return false;
#undef DO_
}

void S2CLoadFinish_106::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CLoadFinish_106)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CLoadFinish_106)
}

::google::protobuf::uint8* S2CLoadFinish_106::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CLoadFinish_106)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CLoadFinish_106)
  return target;
}

int S2CLoadFinish_106::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CLoadFinish_106)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CLoadFinish_106::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CLoadFinish_106)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CLoadFinish_106* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CLoadFinish_106>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CLoadFinish_106)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CLoadFinish_106)
    MergeFrom(*source);
  }
}

void S2CLoadFinish_106::MergeFrom(const S2CLoadFinish_106& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CLoadFinish_106)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void S2CLoadFinish_106::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CLoadFinish_106)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CLoadFinish_106::CopyFrom(const S2CLoadFinish_106& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CLoadFinish_106)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CLoadFinish_106::IsInitialized() const {

  return true;
}

void S2CLoadFinish_106::Swap(S2CLoadFinish_106* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CLoadFinish_106::InternalSwap(S2CLoadFinish_106* other) {
  std::swap(rid_, other->rid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CLoadFinish_106::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CLoadFinish_106_descriptor_;
  metadata.reflection = S2CLoadFinish_106_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CLoadFinish_106

// optional uint64 Rid = 1;
void S2CLoadFinish_106::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CLoadFinish_106::rid() const {
  // @@protoc_insertion_point(field_get:pb.S2CLoadFinish_106.Rid)
  return rid_;
}
 void S2CLoadFinish_106::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CLoadFinish_106.Rid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CRealstart_107::kRoomSnFieldNumber;
const int S2CRealstart_107::kSvrFrameDeltaFieldNumber;
const int S2CRealstart_107::kEnableUDPFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CRealstart_107::S2CRealstart_107()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CRealstart_107)
}

void S2CRealstart_107::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CRealstart_107::S2CRealstart_107(const S2CRealstart_107& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CRealstart_107)
}

void S2CRealstart_107::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  roomsn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  svrframedelta_ = 0u;
  enableudp_ = false;
}

S2CRealstart_107::~S2CRealstart_107() {
  // @@protoc_insertion_point(destructor:pb.S2CRealstart_107)
  SharedDtor();
}

void S2CRealstart_107::SharedDtor() {
  roomsn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void S2CRealstart_107::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CRealstart_107::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CRealstart_107_descriptor_;
}

const S2CRealstart_107& S2CRealstart_107::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CRealstart_107* S2CRealstart_107::default_instance_ = NULL;

S2CRealstart_107* S2CRealstart_107::New(::google::protobuf::Arena* arena) const {
  S2CRealstart_107* n = new S2CRealstart_107;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CRealstart_107::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CRealstart_107)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CRealstart_107, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CRealstart_107*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(svrframedelta_, enableudp_);
  roomsn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool S2CRealstart_107::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CRealstart_107)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RoomSn = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomsn()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomsn().data(), this->roomsn().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CRealstart_107.RoomSn"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SvrFrameDelta;
        break;
      }

      // optional uint32 SvrFrameDelta = 2;
      case 2: {
        if (tag == 16) {
         parse_SvrFrameDelta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &svrframedelta_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_EnableUDP;
        break;
      }

      // optional bool EnableUDP = 3;
      case 3: {
        if (tag == 24) {
         parse_EnableUDP:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enableudp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CRealstart_107)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CRealstart_107)
  return false;
#undef DO_
}

void S2CRealstart_107::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CRealstart_107)
  // optional string RoomSn = 1;
  if (this->roomsn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomsn().data(), this->roomsn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CRealstart_107.RoomSn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roomsn(), output);
  }

  // optional uint32 SvrFrameDelta = 2;
  if (this->svrframedelta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->svrframedelta(), output);
  }

  // optional bool EnableUDP = 3;
  if (this->enableudp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->enableudp(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CRealstart_107)
}

::google::protobuf::uint8* S2CRealstart_107::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CRealstart_107)
  // optional string RoomSn = 1;
  if (this->roomsn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomsn().data(), this->roomsn().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CRealstart_107.RoomSn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomsn(), target);
  }

  // optional uint32 SvrFrameDelta = 2;
  if (this->svrframedelta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->svrframedelta(), target);
  }

  // optional bool EnableUDP = 3;
  if (this->enableudp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->enableudp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CRealstart_107)
  return target;
}

int S2CRealstart_107::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CRealstart_107)
  int total_size = 0;

  // optional string RoomSn = 1;
  if (this->roomsn().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomsn());
  }

  // optional uint32 SvrFrameDelta = 2;
  if (this->svrframedelta() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->svrframedelta());
  }

  // optional bool EnableUDP = 3;
  if (this->enableudp() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CRealstart_107::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CRealstart_107)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CRealstart_107* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CRealstart_107>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CRealstart_107)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CRealstart_107)
    MergeFrom(*source);
  }
}

void S2CRealstart_107::MergeFrom(const S2CRealstart_107& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CRealstart_107)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roomsn().size() > 0) {

    roomsn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomsn_);
  }
  if (from.svrframedelta() != 0) {
    set_svrframedelta(from.svrframedelta());
  }
  if (from.enableudp() != 0) {
    set_enableudp(from.enableudp());
  }
}

void S2CRealstart_107::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CRealstart_107)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CRealstart_107::CopyFrom(const S2CRealstart_107& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CRealstart_107)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CRealstart_107::IsInitialized() const {

  return true;
}

void S2CRealstart_107::Swap(S2CRealstart_107* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CRealstart_107::InternalSwap(S2CRealstart_107* other) {
  roomsn_.Swap(&other->roomsn_);
  std::swap(svrframedelta_, other->svrframedelta_);
  std::swap(enableudp_, other->enableudp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CRealstart_107::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CRealstart_107_descriptor_;
  metadata.reflection = S2CRealstart_107_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CRealstart_107

// optional string RoomSn = 1;
void S2CRealstart_107::clear_roomsn() {
  roomsn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CRealstart_107::roomsn() const {
  // @@protoc_insertion_point(field_get:pb.S2CRealstart_107.RoomSn)
  return roomsn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CRealstart_107::set_roomsn(const ::std::string& value) {
  
  roomsn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CRealstart_107.RoomSn)
}
 void S2CRealstart_107::set_roomsn(const char* value) {
  
  roomsn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CRealstart_107.RoomSn)
}
 void S2CRealstart_107::set_roomsn(const char* value, size_t size) {
  
  roomsn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CRealstart_107.RoomSn)
}
 ::std::string* S2CRealstart_107::mutable_roomsn() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CRealstart_107.RoomSn)
  return roomsn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CRealstart_107::release_roomsn() {
  // @@protoc_insertion_point(field_release:pb.S2CRealstart_107.RoomSn)
  
  return roomsn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CRealstart_107::set_allocated_roomsn(::std::string* roomsn) {
  if (roomsn != NULL) {
    
  } else {
    
  }
  roomsn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomsn);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CRealstart_107.RoomSn)
}

// optional uint32 SvrFrameDelta = 2;
void S2CRealstart_107::clear_svrframedelta() {
  svrframedelta_ = 0u;
}
 ::google::protobuf::uint32 S2CRealstart_107::svrframedelta() const {
  // @@protoc_insertion_point(field_get:pb.S2CRealstart_107.SvrFrameDelta)
  return svrframedelta_;
}
 void S2CRealstart_107::set_svrframedelta(::google::protobuf::uint32 value) {
  
  svrframedelta_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CRealstart_107.SvrFrameDelta)
}

// optional bool EnableUDP = 3;
void S2CRealstart_107::clear_enableudp() {
  enableudp_ = false;
}
 bool S2CRealstart_107::enableudp() const {
  // @@protoc_insertion_point(field_get:pb.S2CRealstart_107.EnableUDP)
  return enableudp_;
}
 void S2CRealstart_107::set_enableudp(bool value) {
  
  enableudp_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CRealstart_107.EnableUDP)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CEnterRoomRet_108::kUserinfoFieldNumber;
const int S2CEnterRoomRet_108::kIsappendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CEnterRoomRet_108::S2CEnterRoomRet_108()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CEnterRoomRet_108)
}

void S2CEnterRoomRet_108::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CEnterRoomRet_108::S2CEnterRoomRet_108(const S2CEnterRoomRet_108& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CEnterRoomRet_108)
}

void S2CEnterRoomRet_108::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  isappend_ = false;
}

S2CEnterRoomRet_108::~S2CEnterRoomRet_108() {
  // @@protoc_insertion_point(destructor:pb.S2CEnterRoomRet_108)
  SharedDtor();
}

void S2CEnterRoomRet_108::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CEnterRoomRet_108::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CEnterRoomRet_108::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CEnterRoomRet_108_descriptor_;
}

const S2CEnterRoomRet_108& S2CEnterRoomRet_108::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CEnterRoomRet_108* S2CEnterRoomRet_108::default_instance_ = NULL;

S2CEnterRoomRet_108* S2CEnterRoomRet_108::New(::google::protobuf::Arena* arena) const {
  S2CEnterRoomRet_108* n = new S2CEnterRoomRet_108;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CEnterRoomRet_108::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CEnterRoomRet_108)
  isappend_ = false;
  userinfo_.Clear();
}

bool S2CEnterRoomRet_108::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CEnterRoomRet_108)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.PRoomUser Userinfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Userinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_Userinfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_Isappend;
        break;
      }

      // optional bool Isappend = 2;
      case 2: {
        if (tag == 16) {
         parse_Isappend:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isappend_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CEnterRoomRet_108)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CEnterRoomRet_108)
  return false;
#undef DO_
}

void S2CEnterRoomRet_108::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CEnterRoomRet_108)
  // repeated .pb.PRoomUser Userinfo = 1;
  for (unsigned int i = 0, n = this->userinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfo(i), output);
  }

  // optional bool Isappend = 2;
  if (this->isappend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isappend(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CEnterRoomRet_108)
}

::google::protobuf::uint8* S2CEnterRoomRet_108::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CEnterRoomRet_108)
  // repeated .pb.PRoomUser Userinfo = 1;
  for (unsigned int i = 0, n = this->userinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->userinfo(i), false, target);
  }

  // optional bool Isappend = 2;
  if (this->isappend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isappend(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CEnterRoomRet_108)
  return target;
}

int S2CEnterRoomRet_108::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CEnterRoomRet_108)
  int total_size = 0;

  // optional bool Isappend = 2;
  if (this->isappend() != 0) {
    total_size += 1 + 1;
  }

  // repeated .pb.PRoomUser Userinfo = 1;
  total_size += 1 * this->userinfo_size();
  for (int i = 0; i < this->userinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userinfo(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CEnterRoomRet_108::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CEnterRoomRet_108)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CEnterRoomRet_108* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CEnterRoomRet_108>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CEnterRoomRet_108)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CEnterRoomRet_108)
    MergeFrom(*source);
  }
}

void S2CEnterRoomRet_108::MergeFrom(const S2CEnterRoomRet_108& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CEnterRoomRet_108)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  userinfo_.MergeFrom(from.userinfo_);
  if (from.isappend() != 0) {
    set_isappend(from.isappend());
  }
}

void S2CEnterRoomRet_108::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CEnterRoomRet_108)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CEnterRoomRet_108::CopyFrom(const S2CEnterRoomRet_108& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CEnterRoomRet_108)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CEnterRoomRet_108::IsInitialized() const {

  return true;
}

void S2CEnterRoomRet_108::Swap(S2CEnterRoomRet_108* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CEnterRoomRet_108::InternalSwap(S2CEnterRoomRet_108* other) {
  userinfo_.UnsafeArenaSwap(&other->userinfo_);
  std::swap(isappend_, other->isappend_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CEnterRoomRet_108::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CEnterRoomRet_108_descriptor_;
  metadata.reflection = S2CEnterRoomRet_108_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CEnterRoomRet_108

// repeated .pb.PRoomUser Userinfo = 1;
int S2CEnterRoomRet_108::userinfo_size() const {
  return userinfo_.size();
}
void S2CEnterRoomRet_108::clear_userinfo() {
  userinfo_.Clear();
}
const ::pb::PRoomUser& S2CEnterRoomRet_108::userinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CEnterRoomRet_108.Userinfo)
  return userinfo_.Get(index);
}
::pb::PRoomUser* S2CEnterRoomRet_108::mutable_userinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CEnterRoomRet_108.Userinfo)
  return userinfo_.Mutable(index);
}
::pb::PRoomUser* S2CEnterRoomRet_108::add_userinfo() {
  // @@protoc_insertion_point(field_add:pb.S2CEnterRoomRet_108.Userinfo)
  return userinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::PRoomUser >*
S2CEnterRoomRet_108::mutable_userinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CEnterRoomRet_108.Userinfo)
  return &userinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::PRoomUser >&
S2CEnterRoomRet_108::userinfo() const {
  // @@protoc_insertion_point(field_list:pb.S2CEnterRoomRet_108.Userinfo)
  return userinfo_;
}

// optional bool Isappend = 2;
void S2CEnterRoomRet_108::clear_isappend() {
  isappend_ = false;
}
 bool S2CEnterRoomRet_108::isappend() const {
  // @@protoc_insertion_point(field_get:pb.S2CEnterRoomRet_108.Isappend)
  return isappend_;
}
 void S2CEnterRoomRet_108::set_isappend(bool value) {
  
  isappend_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CEnterRoomRet_108.Isappend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SSwitchCamp_109::C2SSwitchCamp_109()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SSwitchCamp_109)
}

void C2SSwitchCamp_109::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SSwitchCamp_109::C2SSwitchCamp_109(const C2SSwitchCamp_109& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SSwitchCamp_109)
}

void C2SSwitchCamp_109::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SSwitchCamp_109::~C2SSwitchCamp_109() {
  // @@protoc_insertion_point(destructor:pb.C2SSwitchCamp_109)
  SharedDtor();
}

void C2SSwitchCamp_109::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SSwitchCamp_109::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SSwitchCamp_109::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SSwitchCamp_109_descriptor_;
}

const C2SSwitchCamp_109& C2SSwitchCamp_109::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SSwitchCamp_109* C2SSwitchCamp_109::default_instance_ = NULL;

C2SSwitchCamp_109* C2SSwitchCamp_109::New(::google::protobuf::Arena* arena) const {
  C2SSwitchCamp_109* n = new C2SSwitchCamp_109;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SSwitchCamp_109::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SSwitchCamp_109)
}

bool C2SSwitchCamp_109::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SSwitchCamp_109)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SSwitchCamp_109)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SSwitchCamp_109)
  return false;
#undef DO_
}

void C2SSwitchCamp_109::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SSwitchCamp_109)
  // @@protoc_insertion_point(serialize_end:pb.C2SSwitchCamp_109)
}

::google::protobuf::uint8* C2SSwitchCamp_109::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SSwitchCamp_109)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SSwitchCamp_109)
  return target;
}

int C2SSwitchCamp_109::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SSwitchCamp_109)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SSwitchCamp_109::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SSwitchCamp_109)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SSwitchCamp_109* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SSwitchCamp_109>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SSwitchCamp_109)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SSwitchCamp_109)
    MergeFrom(*source);
  }
}

void C2SSwitchCamp_109::MergeFrom(const C2SSwitchCamp_109& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SSwitchCamp_109)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SSwitchCamp_109::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SSwitchCamp_109)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SSwitchCamp_109::CopyFrom(const C2SSwitchCamp_109& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SSwitchCamp_109)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SSwitchCamp_109::IsInitialized() const {

  return true;
}

void C2SSwitchCamp_109::Swap(C2SSwitchCamp_109* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SSwitchCamp_109::InternalSwap(C2SSwitchCamp_109* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SSwitchCamp_109::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SSwitchCamp_109_descriptor_;
  metadata.reflection = C2SSwitchCamp_109_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SSwitchCamp_109

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CSwitchCamp_109::kRidFieldNumber;
const int S2CSwitchCamp_109::kCampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CSwitchCamp_109::S2CSwitchCamp_109()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CSwitchCamp_109)
}

void S2CSwitchCamp_109::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CSwitchCamp_109::S2CSwitchCamp_109(const S2CSwitchCamp_109& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CSwitchCamp_109)
}

void S2CSwitchCamp_109::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
  camp_ = 0u;
}

S2CSwitchCamp_109::~S2CSwitchCamp_109() {
  // @@protoc_insertion_point(destructor:pb.S2CSwitchCamp_109)
  SharedDtor();
}

void S2CSwitchCamp_109::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CSwitchCamp_109::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CSwitchCamp_109::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CSwitchCamp_109_descriptor_;
}

const S2CSwitchCamp_109& S2CSwitchCamp_109::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CSwitchCamp_109* S2CSwitchCamp_109::default_instance_ = NULL;

S2CSwitchCamp_109* S2CSwitchCamp_109::New(::google::protobuf::Arena* arena) const {
  S2CSwitchCamp_109* n = new S2CSwitchCamp_109;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CSwitchCamp_109::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CSwitchCamp_109)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CSwitchCamp_109, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CSwitchCamp_109*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rid_, camp_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2CSwitchCamp_109::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CSwitchCamp_109)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Camp;
        break;
      }

      // optional uint32 Camp = 2;
      case 2: {
        if (tag == 16) {
         parse_Camp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &camp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CSwitchCamp_109)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CSwitchCamp_109)
  return false;
#undef DO_
}

void S2CSwitchCamp_109::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CSwitchCamp_109)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // optional uint32 Camp = 2;
  if (this->camp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->camp(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CSwitchCamp_109)
}

::google::protobuf::uint8* S2CSwitchCamp_109::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CSwitchCamp_109)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // optional uint32 Camp = 2;
  if (this->camp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->camp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CSwitchCamp_109)
  return target;
}

int S2CSwitchCamp_109::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CSwitchCamp_109)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  // optional uint32 Camp = 2;
  if (this->camp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->camp());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CSwitchCamp_109::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CSwitchCamp_109)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CSwitchCamp_109* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CSwitchCamp_109>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CSwitchCamp_109)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CSwitchCamp_109)
    MergeFrom(*source);
  }
}

void S2CSwitchCamp_109::MergeFrom(const S2CSwitchCamp_109& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CSwitchCamp_109)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.camp() != 0) {
    set_camp(from.camp());
  }
}

void S2CSwitchCamp_109::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CSwitchCamp_109)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CSwitchCamp_109::CopyFrom(const S2CSwitchCamp_109& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CSwitchCamp_109)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CSwitchCamp_109::IsInitialized() const {

  return true;
}

void S2CSwitchCamp_109::Swap(S2CSwitchCamp_109* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CSwitchCamp_109::InternalSwap(S2CSwitchCamp_109* other) {
  std::swap(rid_, other->rid_);
  std::swap(camp_, other->camp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CSwitchCamp_109::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CSwitchCamp_109_descriptor_;
  metadata.reflection = S2CSwitchCamp_109_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CSwitchCamp_109

// optional uint64 Rid = 1;
void S2CSwitchCamp_109::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CSwitchCamp_109::rid() const {
  // @@protoc_insertion_point(field_get:pb.S2CSwitchCamp_109.Rid)
  return rid_;
}
 void S2CSwitchCamp_109::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CSwitchCamp_109.Rid)
}

// optional uint32 Camp = 2;
void S2CSwitchCamp_109::clear_camp() {
  camp_ = 0u;
}
 ::google::protobuf::uint32 S2CSwitchCamp_109::camp() const {
  // @@protoc_insertion_point(field_get:pb.S2CSwitchCamp_109.Camp)
  return camp_;
}
 void S2CSwitchCamp_109::set_camp(::google::protobuf::uint32 value) {
  
  camp_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CSwitchCamp_109.Camp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SSwitchWatcher_110::C2SSwitchWatcher_110()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SSwitchWatcher_110)
}

void C2SSwitchWatcher_110::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SSwitchWatcher_110::C2SSwitchWatcher_110(const C2SSwitchWatcher_110& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SSwitchWatcher_110)
}

void C2SSwitchWatcher_110::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SSwitchWatcher_110::~C2SSwitchWatcher_110() {
  // @@protoc_insertion_point(destructor:pb.C2SSwitchWatcher_110)
  SharedDtor();
}

void C2SSwitchWatcher_110::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SSwitchWatcher_110::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SSwitchWatcher_110::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SSwitchWatcher_110_descriptor_;
}

const C2SSwitchWatcher_110& C2SSwitchWatcher_110::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SSwitchWatcher_110* C2SSwitchWatcher_110::default_instance_ = NULL;

C2SSwitchWatcher_110* C2SSwitchWatcher_110::New(::google::protobuf::Arena* arena) const {
  C2SSwitchWatcher_110* n = new C2SSwitchWatcher_110;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SSwitchWatcher_110::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SSwitchWatcher_110)
}

bool C2SSwitchWatcher_110::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SSwitchWatcher_110)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SSwitchWatcher_110)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SSwitchWatcher_110)
  return false;
#undef DO_
}

void C2SSwitchWatcher_110::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SSwitchWatcher_110)
  // @@protoc_insertion_point(serialize_end:pb.C2SSwitchWatcher_110)
}

::google::protobuf::uint8* C2SSwitchWatcher_110::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SSwitchWatcher_110)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SSwitchWatcher_110)
  return target;
}

int C2SSwitchWatcher_110::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SSwitchWatcher_110)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SSwitchWatcher_110::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SSwitchWatcher_110)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SSwitchWatcher_110* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SSwitchWatcher_110>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SSwitchWatcher_110)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SSwitchWatcher_110)
    MergeFrom(*source);
  }
}

void C2SSwitchWatcher_110::MergeFrom(const C2SSwitchWatcher_110& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SSwitchWatcher_110)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SSwitchWatcher_110::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SSwitchWatcher_110)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SSwitchWatcher_110::CopyFrom(const C2SSwitchWatcher_110& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SSwitchWatcher_110)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SSwitchWatcher_110::IsInitialized() const {

  return true;
}

void C2SSwitchWatcher_110::Swap(C2SSwitchWatcher_110* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SSwitchWatcher_110::InternalSwap(C2SSwitchWatcher_110* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SSwitchWatcher_110::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SSwitchWatcher_110_descriptor_;
  metadata.reflection = C2SSwitchWatcher_110_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SSwitchWatcher_110

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CSwitchWatcher_110::kRidFieldNumber;
const int S2CSwitchWatcher_110::kIsWatcherFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CSwitchWatcher_110::S2CSwitchWatcher_110()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CSwitchWatcher_110)
}

void S2CSwitchWatcher_110::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CSwitchWatcher_110::S2CSwitchWatcher_110(const S2CSwitchWatcher_110& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CSwitchWatcher_110)
}

void S2CSwitchWatcher_110::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
  iswatcher_ = false;
}

S2CSwitchWatcher_110::~S2CSwitchWatcher_110() {
  // @@protoc_insertion_point(destructor:pb.S2CSwitchWatcher_110)
  SharedDtor();
}

void S2CSwitchWatcher_110::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CSwitchWatcher_110::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CSwitchWatcher_110::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CSwitchWatcher_110_descriptor_;
}

const S2CSwitchWatcher_110& S2CSwitchWatcher_110::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CSwitchWatcher_110* S2CSwitchWatcher_110::default_instance_ = NULL;

S2CSwitchWatcher_110* S2CSwitchWatcher_110::New(::google::protobuf::Arena* arena) const {
  S2CSwitchWatcher_110* n = new S2CSwitchWatcher_110;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CSwitchWatcher_110::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CSwitchWatcher_110)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CSwitchWatcher_110, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CSwitchWatcher_110*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rid_, iswatcher_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2CSwitchWatcher_110::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CSwitchWatcher_110)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_IsWatcher;
        break;
      }

      // optional bool IsWatcher = 2;
      case 2: {
        if (tag == 16) {
         parse_IsWatcher:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &iswatcher_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CSwitchWatcher_110)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CSwitchWatcher_110)
  return false;
#undef DO_
}

void S2CSwitchWatcher_110::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CSwitchWatcher_110)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // optional bool IsWatcher = 2;
  if (this->iswatcher() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->iswatcher(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CSwitchWatcher_110)
}

::google::protobuf::uint8* S2CSwitchWatcher_110::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CSwitchWatcher_110)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // optional bool IsWatcher = 2;
  if (this->iswatcher() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->iswatcher(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CSwitchWatcher_110)
  return target;
}

int S2CSwitchWatcher_110::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CSwitchWatcher_110)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  // optional bool IsWatcher = 2;
  if (this->iswatcher() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CSwitchWatcher_110::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CSwitchWatcher_110)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CSwitchWatcher_110* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CSwitchWatcher_110>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CSwitchWatcher_110)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CSwitchWatcher_110)
    MergeFrom(*source);
  }
}

void S2CSwitchWatcher_110::MergeFrom(const S2CSwitchWatcher_110& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CSwitchWatcher_110)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.iswatcher() != 0) {
    set_iswatcher(from.iswatcher());
  }
}

void S2CSwitchWatcher_110::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CSwitchWatcher_110)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CSwitchWatcher_110::CopyFrom(const S2CSwitchWatcher_110& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CSwitchWatcher_110)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CSwitchWatcher_110::IsInitialized() const {

  return true;
}

void S2CSwitchWatcher_110::Swap(S2CSwitchWatcher_110* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CSwitchWatcher_110::InternalSwap(S2CSwitchWatcher_110* other) {
  std::swap(rid_, other->rid_);
  std::swap(iswatcher_, other->iswatcher_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CSwitchWatcher_110::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CSwitchWatcher_110_descriptor_;
  metadata.reflection = S2CSwitchWatcher_110_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CSwitchWatcher_110

// optional uint64 Rid = 1;
void S2CSwitchWatcher_110::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CSwitchWatcher_110::rid() const {
  // @@protoc_insertion_point(field_get:pb.S2CSwitchWatcher_110.Rid)
  return rid_;
}
 void S2CSwitchWatcher_110::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CSwitchWatcher_110.Rid)
}

// optional bool IsWatcher = 2;
void S2CSwitchWatcher_110::clear_iswatcher() {
  iswatcher_ = false;
}
 bool S2CSwitchWatcher_110::iswatcher() const {
  // @@protoc_insertion_point(field_get:pb.S2CSwitchWatcher_110.IsWatcher)
  return iswatcher_;
}
 void S2CSwitchWatcher_110::set_iswatcher(bool value) {
  
  iswatcher_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CSwitchWatcher_110.IsWatcher)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CLeaveGame_111::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CLeaveGame_111::S2CLeaveGame_111()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CLeaveGame_111)
}

void S2CLeaveGame_111::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CLeaveGame_111::S2CLeaveGame_111(const S2CLeaveGame_111& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CLeaveGame_111)
}

void S2CLeaveGame_111::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
}

S2CLeaveGame_111::~S2CLeaveGame_111() {
  // @@protoc_insertion_point(destructor:pb.S2CLeaveGame_111)
  SharedDtor();
}

void S2CLeaveGame_111::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CLeaveGame_111::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CLeaveGame_111::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CLeaveGame_111_descriptor_;
}

const S2CLeaveGame_111& S2CLeaveGame_111::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CLeaveGame_111* S2CLeaveGame_111::default_instance_ = NULL;

S2CLeaveGame_111* S2CLeaveGame_111::New(::google::protobuf::Arena* arena) const {
  S2CLeaveGame_111* n = new S2CLeaveGame_111;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CLeaveGame_111::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CLeaveGame_111)
  rid_ = GOOGLE_ULONGLONG(0);
}

bool S2CLeaveGame_111::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CLeaveGame_111)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CLeaveGame_111)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CLeaveGame_111)
  return false;
#undef DO_
}

void S2CLeaveGame_111::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CLeaveGame_111)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CLeaveGame_111)
}

::google::protobuf::uint8* S2CLeaveGame_111::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CLeaveGame_111)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CLeaveGame_111)
  return target;
}

int S2CLeaveGame_111::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CLeaveGame_111)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CLeaveGame_111::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CLeaveGame_111)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CLeaveGame_111* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CLeaveGame_111>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CLeaveGame_111)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CLeaveGame_111)
    MergeFrom(*source);
  }
}

void S2CLeaveGame_111::MergeFrom(const S2CLeaveGame_111& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CLeaveGame_111)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void S2CLeaveGame_111::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CLeaveGame_111)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CLeaveGame_111::CopyFrom(const S2CLeaveGame_111& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CLeaveGame_111)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CLeaveGame_111::IsInitialized() const {

  return true;
}

void S2CLeaveGame_111::Swap(S2CLeaveGame_111* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CLeaveGame_111::InternalSwap(S2CLeaveGame_111* other) {
  std::swap(rid_, other->rid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CLeaveGame_111::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CLeaveGame_111_descriptor_;
  metadata.reflection = S2CLeaveGame_111_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CLeaveGame_111

// optional uint64 Rid = 1;
void S2CLeaveGame_111::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CLeaveGame_111::rid() const {
  // @@protoc_insertion_point(field_get:pb.S2CLeaveGame_111.Rid)
  return rid_;
}
 void S2CLeaveGame_111::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CLeaveGame_111.Rid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SChooseBadge_113::kBadge1FieldNumber;
const int C2SChooseBadge_113::kBadge2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SChooseBadge_113::C2SChooseBadge_113()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SChooseBadge_113)
}

void C2SChooseBadge_113::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SChooseBadge_113::C2SChooseBadge_113(const C2SChooseBadge_113& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SChooseBadge_113)
}

void C2SChooseBadge_113::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  badge1_ = 0u;
  badge2_ = 0u;
}

C2SChooseBadge_113::~C2SChooseBadge_113() {
  // @@protoc_insertion_point(destructor:pb.C2SChooseBadge_113)
  SharedDtor();
}

void C2SChooseBadge_113::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SChooseBadge_113::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SChooseBadge_113::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SChooseBadge_113_descriptor_;
}

const C2SChooseBadge_113& C2SChooseBadge_113::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SChooseBadge_113* C2SChooseBadge_113::default_instance_ = NULL;

C2SChooseBadge_113* C2SChooseBadge_113::New(::google::protobuf::Arena* arena) const {
  C2SChooseBadge_113* n = new C2SChooseBadge_113;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SChooseBadge_113::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SChooseBadge_113)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(C2SChooseBadge_113, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<C2SChooseBadge_113*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(badge1_, badge2_);

#undef ZR_HELPER_
#undef ZR_

}

bool C2SChooseBadge_113::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SChooseBadge_113)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Badge1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &badge1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Badge2;
        break;
      }

      // optional uint32 Badge2 = 2;
      case 2: {
        if (tag == 16) {
         parse_Badge2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &badge2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SChooseBadge_113)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SChooseBadge_113)
  return false;
#undef DO_
}

void C2SChooseBadge_113::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SChooseBadge_113)
  // optional uint32 Badge1 = 1;
  if (this->badge1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->badge1(), output);
  }

  // optional uint32 Badge2 = 2;
  if (this->badge2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->badge2(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SChooseBadge_113)
}

::google::protobuf::uint8* C2SChooseBadge_113::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SChooseBadge_113)
  // optional uint32 Badge1 = 1;
  if (this->badge1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->badge1(), target);
  }

  // optional uint32 Badge2 = 2;
  if (this->badge2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->badge2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SChooseBadge_113)
  return target;
}

int C2SChooseBadge_113::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SChooseBadge_113)
  int total_size = 0;

  // optional uint32 Badge1 = 1;
  if (this->badge1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->badge1());
  }

  // optional uint32 Badge2 = 2;
  if (this->badge2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->badge2());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SChooseBadge_113::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SChooseBadge_113)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SChooseBadge_113* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SChooseBadge_113>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SChooseBadge_113)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SChooseBadge_113)
    MergeFrom(*source);
  }
}

void C2SChooseBadge_113::MergeFrom(const C2SChooseBadge_113& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SChooseBadge_113)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.badge1() != 0) {
    set_badge1(from.badge1());
  }
  if (from.badge2() != 0) {
    set_badge2(from.badge2());
  }
}

void C2SChooseBadge_113::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SChooseBadge_113)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SChooseBadge_113::CopyFrom(const C2SChooseBadge_113& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SChooseBadge_113)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SChooseBadge_113::IsInitialized() const {

  return true;
}

void C2SChooseBadge_113::Swap(C2SChooseBadge_113* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SChooseBadge_113::InternalSwap(C2SChooseBadge_113* other) {
  std::swap(badge1_, other->badge1_);
  std::swap(badge2_, other->badge2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SChooseBadge_113::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SChooseBadge_113_descriptor_;
  metadata.reflection = C2SChooseBadge_113_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SChooseBadge_113

// optional uint32 Badge1 = 1;
void C2SChooseBadge_113::clear_badge1() {
  badge1_ = 0u;
}
 ::google::protobuf::uint32 C2SChooseBadge_113::badge1() const {
  // @@protoc_insertion_point(field_get:pb.C2SChooseBadge_113.Badge1)
  return badge1_;
}
 void C2SChooseBadge_113::set_badge1(::google::protobuf::uint32 value) {
  
  badge1_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SChooseBadge_113.Badge1)
}

// optional uint32 Badge2 = 2;
void C2SChooseBadge_113::clear_badge2() {
  badge2_ = 0u;
}
 ::google::protobuf::uint32 C2SChooseBadge_113::badge2() const {
  // @@protoc_insertion_point(field_get:pb.C2SChooseBadge_113.Badge2)
  return badge2_;
}
 void C2SChooseBadge_113::set_badge2(::google::protobuf::uint32 value) {
  
  badge2_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SChooseBadge_113.Badge2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CChooseBadge_113::kBadge1FieldNumber;
const int S2CChooseBadge_113::kBadge2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CChooseBadge_113::S2CChooseBadge_113()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CChooseBadge_113)
}

void S2CChooseBadge_113::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CChooseBadge_113::S2CChooseBadge_113(const S2CChooseBadge_113& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CChooseBadge_113)
}

void S2CChooseBadge_113::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  badge1_ = 0u;
  badge2_ = 0u;
}

S2CChooseBadge_113::~S2CChooseBadge_113() {
  // @@protoc_insertion_point(destructor:pb.S2CChooseBadge_113)
  SharedDtor();
}

void S2CChooseBadge_113::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CChooseBadge_113::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CChooseBadge_113::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CChooseBadge_113_descriptor_;
}

const S2CChooseBadge_113& S2CChooseBadge_113::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CChooseBadge_113* S2CChooseBadge_113::default_instance_ = NULL;

S2CChooseBadge_113* S2CChooseBadge_113::New(::google::protobuf::Arena* arena) const {
  S2CChooseBadge_113* n = new S2CChooseBadge_113;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CChooseBadge_113::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CChooseBadge_113)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CChooseBadge_113, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CChooseBadge_113*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(badge1_, badge2_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2CChooseBadge_113::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CChooseBadge_113)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Badge1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &badge1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Badge2;
        break;
      }

      // optional uint32 Badge2 = 2;
      case 2: {
        if (tag == 16) {
         parse_Badge2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &badge2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CChooseBadge_113)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CChooseBadge_113)
  return false;
#undef DO_
}

void S2CChooseBadge_113::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CChooseBadge_113)
  // optional uint32 Badge1 = 1;
  if (this->badge1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->badge1(), output);
  }

  // optional uint32 Badge2 = 2;
  if (this->badge2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->badge2(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CChooseBadge_113)
}

::google::protobuf::uint8* S2CChooseBadge_113::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CChooseBadge_113)
  // optional uint32 Badge1 = 1;
  if (this->badge1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->badge1(), target);
  }

  // optional uint32 Badge2 = 2;
  if (this->badge2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->badge2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CChooseBadge_113)
  return target;
}

int S2CChooseBadge_113::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CChooseBadge_113)
  int total_size = 0;

  // optional uint32 Badge1 = 1;
  if (this->badge1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->badge1());
  }

  // optional uint32 Badge2 = 2;
  if (this->badge2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->badge2());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CChooseBadge_113::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CChooseBadge_113)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CChooseBadge_113* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CChooseBadge_113>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CChooseBadge_113)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CChooseBadge_113)
    MergeFrom(*source);
  }
}

void S2CChooseBadge_113::MergeFrom(const S2CChooseBadge_113& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CChooseBadge_113)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.badge1() != 0) {
    set_badge1(from.badge1());
  }
  if (from.badge2() != 0) {
    set_badge2(from.badge2());
  }
}

void S2CChooseBadge_113::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CChooseBadge_113)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CChooseBadge_113::CopyFrom(const S2CChooseBadge_113& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CChooseBadge_113)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CChooseBadge_113::IsInitialized() const {

  return true;
}

void S2CChooseBadge_113::Swap(S2CChooseBadge_113* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CChooseBadge_113::InternalSwap(S2CChooseBadge_113* other) {
  std::swap(badge1_, other->badge1_);
  std::swap(badge2_, other->badge2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CChooseBadge_113::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CChooseBadge_113_descriptor_;
  metadata.reflection = S2CChooseBadge_113_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CChooseBadge_113

// optional uint32 Badge1 = 1;
void S2CChooseBadge_113::clear_badge1() {
  badge1_ = 0u;
}
 ::google::protobuf::uint32 S2CChooseBadge_113::badge1() const {
  // @@protoc_insertion_point(field_get:pb.S2CChooseBadge_113.Badge1)
  return badge1_;
}
 void S2CChooseBadge_113::set_badge1(::google::protobuf::uint32 value) {
  
  badge1_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CChooseBadge_113.Badge1)
}

// optional uint32 Badge2 = 2;
void S2CChooseBadge_113::clear_badge2() {
  badge2_ = 0u;
}
 ::google::protobuf::uint32 S2CChooseBadge_113::badge2() const {
  // @@protoc_insertion_point(field_get:pb.S2CChooseBadge_113.Badge2)
  return badge2_;
}
 void S2CChooseBadge_113::set_badge2(::google::protobuf::uint32 value) {
  
  badge2_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CChooseBadge_113.Badge2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SBroadRoomcastString_114::kValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SBroadRoomcastString_114::C2SBroadRoomcastString_114()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SBroadRoomcastString_114)
}

void C2SBroadRoomcastString_114::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SBroadRoomcastString_114::C2SBroadRoomcastString_114(const C2SBroadRoomcastString_114& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SBroadRoomcastString_114)
}

void C2SBroadRoomcastString_114::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2SBroadRoomcastString_114::~C2SBroadRoomcastString_114() {
  // @@protoc_insertion_point(destructor:pb.C2SBroadRoomcastString_114)
  SharedDtor();
}

void C2SBroadRoomcastString_114::SharedDtor() {
  val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2SBroadRoomcastString_114::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SBroadRoomcastString_114::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SBroadRoomcastString_114_descriptor_;
}

const C2SBroadRoomcastString_114& C2SBroadRoomcastString_114::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SBroadRoomcastString_114* C2SBroadRoomcastString_114::default_instance_ = NULL;

C2SBroadRoomcastString_114* C2SBroadRoomcastString_114::New(::google::protobuf::Arena* arena) const {
  C2SBroadRoomcastString_114* n = new C2SBroadRoomcastString_114;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SBroadRoomcastString_114::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SBroadRoomcastString_114)
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2SBroadRoomcastString_114::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SBroadRoomcastString_114)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Val = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_val()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->val().data(), this->val().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SBroadRoomcastString_114.Val"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SBroadRoomcastString_114)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SBroadRoomcastString_114)
  return false;
#undef DO_
}

void C2SBroadRoomcastString_114::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SBroadRoomcastString_114)
  // optional string Val = 1;
  if (this->val().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->val().data(), this->val().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SBroadRoomcastString_114.Val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->val(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SBroadRoomcastString_114)
}

::google::protobuf::uint8* C2SBroadRoomcastString_114::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SBroadRoomcastString_114)
  // optional string Val = 1;
  if (this->val().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->val().data(), this->val().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SBroadRoomcastString_114.Val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->val(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SBroadRoomcastString_114)
  return target;
}

int C2SBroadRoomcastString_114::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SBroadRoomcastString_114)
  int total_size = 0;

  // optional string Val = 1;
  if (this->val().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->val());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SBroadRoomcastString_114::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SBroadRoomcastString_114)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SBroadRoomcastString_114* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SBroadRoomcastString_114>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SBroadRoomcastString_114)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SBroadRoomcastString_114)
    MergeFrom(*source);
  }
}

void C2SBroadRoomcastString_114::MergeFrom(const C2SBroadRoomcastString_114& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SBroadRoomcastString_114)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.val().size() > 0) {

    val_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.val_);
  }
}

void C2SBroadRoomcastString_114::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SBroadRoomcastString_114)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SBroadRoomcastString_114::CopyFrom(const C2SBroadRoomcastString_114& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SBroadRoomcastString_114)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SBroadRoomcastString_114::IsInitialized() const {

  return true;
}

void C2SBroadRoomcastString_114::Swap(C2SBroadRoomcastString_114* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SBroadRoomcastString_114::InternalSwap(C2SBroadRoomcastString_114* other) {
  val_.Swap(&other->val_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SBroadRoomcastString_114::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SBroadRoomcastString_114_descriptor_;
  metadata.reflection = C2SBroadRoomcastString_114_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SBroadRoomcastString_114

// optional string Val = 1;
void C2SBroadRoomcastString_114::clear_val() {
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SBroadRoomcastString_114::val() const {
  // @@protoc_insertion_point(field_get:pb.C2SBroadRoomcastString_114.Val)
  return val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SBroadRoomcastString_114::set_val(const ::std::string& value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SBroadRoomcastString_114.Val)
}
 void C2SBroadRoomcastString_114::set_val(const char* value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SBroadRoomcastString_114.Val)
}
 void C2SBroadRoomcastString_114::set_val(const char* value, size_t size) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SBroadRoomcastString_114.Val)
}
 ::std::string* C2SBroadRoomcastString_114::mutable_val() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SBroadRoomcastString_114.Val)
  return val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SBroadRoomcastString_114::release_val() {
  // @@protoc_insertion_point(field_release:pb.C2SBroadRoomcastString_114.Val)
  
  return val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SBroadRoomcastString_114::set_allocated_val(::std::string* val) {
  if (val != NULL) {
    
  } else {
    
  }
  val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SBroadRoomcastString_114.Val)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CBroadRoomcastString_114::kValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CBroadRoomcastString_114::S2CBroadRoomcastString_114()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CBroadRoomcastString_114)
}

void S2CBroadRoomcastString_114::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CBroadRoomcastString_114::S2CBroadRoomcastString_114(const S2CBroadRoomcastString_114& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CBroadRoomcastString_114)
}

void S2CBroadRoomcastString_114::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

S2CBroadRoomcastString_114::~S2CBroadRoomcastString_114() {
  // @@protoc_insertion_point(destructor:pb.S2CBroadRoomcastString_114)
  SharedDtor();
}

void S2CBroadRoomcastString_114::SharedDtor() {
  val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void S2CBroadRoomcastString_114::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CBroadRoomcastString_114::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CBroadRoomcastString_114_descriptor_;
}

const S2CBroadRoomcastString_114& S2CBroadRoomcastString_114::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CBroadRoomcastString_114* S2CBroadRoomcastString_114::default_instance_ = NULL;

S2CBroadRoomcastString_114* S2CBroadRoomcastString_114::New(::google::protobuf::Arena* arena) const {
  S2CBroadRoomcastString_114* n = new S2CBroadRoomcastString_114;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CBroadRoomcastString_114::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CBroadRoomcastString_114)
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool S2CBroadRoomcastString_114::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CBroadRoomcastString_114)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Val = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_val()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->val().data(), this->val().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CBroadRoomcastString_114.Val"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CBroadRoomcastString_114)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CBroadRoomcastString_114)
  return false;
#undef DO_
}

void S2CBroadRoomcastString_114::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CBroadRoomcastString_114)
  // optional string Val = 1;
  if (this->val().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->val().data(), this->val().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CBroadRoomcastString_114.Val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->val(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CBroadRoomcastString_114)
}

::google::protobuf::uint8* S2CBroadRoomcastString_114::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CBroadRoomcastString_114)
  // optional string Val = 1;
  if (this->val().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->val().data(), this->val().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CBroadRoomcastString_114.Val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->val(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CBroadRoomcastString_114)
  return target;
}

int S2CBroadRoomcastString_114::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CBroadRoomcastString_114)
  int total_size = 0;

  // optional string Val = 1;
  if (this->val().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->val());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CBroadRoomcastString_114::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CBroadRoomcastString_114)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CBroadRoomcastString_114* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CBroadRoomcastString_114>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CBroadRoomcastString_114)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CBroadRoomcastString_114)
    MergeFrom(*source);
  }
}

void S2CBroadRoomcastString_114::MergeFrom(const S2CBroadRoomcastString_114& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CBroadRoomcastString_114)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.val().size() > 0) {

    val_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.val_);
  }
}

void S2CBroadRoomcastString_114::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CBroadRoomcastString_114)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CBroadRoomcastString_114::CopyFrom(const S2CBroadRoomcastString_114& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CBroadRoomcastString_114)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CBroadRoomcastString_114::IsInitialized() const {

  return true;
}

void S2CBroadRoomcastString_114::Swap(S2CBroadRoomcastString_114* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CBroadRoomcastString_114::InternalSwap(S2CBroadRoomcastString_114* other) {
  val_.Swap(&other->val_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CBroadRoomcastString_114::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CBroadRoomcastString_114_descriptor_;
  metadata.reflection = S2CBroadRoomcastString_114_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CBroadRoomcastString_114

// optional string Val = 1;
void S2CBroadRoomcastString_114::clear_val() {
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CBroadRoomcastString_114::val() const {
  // @@protoc_insertion_point(field_get:pb.S2CBroadRoomcastString_114.Val)
  return val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CBroadRoomcastString_114::set_val(const ::std::string& value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CBroadRoomcastString_114.Val)
}
 void S2CBroadRoomcastString_114::set_val(const char* value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CBroadRoomcastString_114.Val)
}
 void S2CBroadRoomcastString_114::set_val(const char* value, size_t size) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CBroadRoomcastString_114.Val)
}
 ::std::string* S2CBroadRoomcastString_114::mutable_val() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CBroadRoomcastString_114.Val)
  return val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CBroadRoomcastString_114::release_val() {
  // @@protoc_insertion_point(field_release:pb.S2CBroadRoomcastString_114.Val)
  
  return val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CBroadRoomcastString_114::set_allocated_val(::std::string* val) {
  if (val != NULL) {
    
  } else {
    
  }
  val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CBroadRoomcastString_114.Val)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SForceEnterRoom_115::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SForceEnterRoom_115::C2SForceEnterRoom_115()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SForceEnterRoom_115)
}

void C2SForceEnterRoom_115::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SForceEnterRoom_115::C2SForceEnterRoom_115(const C2SForceEnterRoom_115& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SForceEnterRoom_115)
}

void C2SForceEnterRoom_115::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roomid_ = 0u;
}

C2SForceEnterRoom_115::~C2SForceEnterRoom_115() {
  // @@protoc_insertion_point(destructor:pb.C2SForceEnterRoom_115)
  SharedDtor();
}

void C2SForceEnterRoom_115::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SForceEnterRoom_115::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SForceEnterRoom_115::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SForceEnterRoom_115_descriptor_;
}

const C2SForceEnterRoom_115& C2SForceEnterRoom_115::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SForceEnterRoom_115* C2SForceEnterRoom_115::default_instance_ = NULL;

C2SForceEnterRoom_115* C2SForceEnterRoom_115::New(::google::protobuf::Arena* arena) const {
  C2SForceEnterRoom_115* n = new C2SForceEnterRoom_115;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SForceEnterRoom_115::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SForceEnterRoom_115)
  roomid_ = 0u;
}

bool C2SForceEnterRoom_115::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SForceEnterRoom_115)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RoomId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SForceEnterRoom_115)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SForceEnterRoom_115)
  return false;
#undef DO_
}

void C2SForceEnterRoom_115::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SForceEnterRoom_115)
  // optional uint32 RoomId = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->roomid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SForceEnterRoom_115)
}

::google::protobuf::uint8* C2SForceEnterRoom_115::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SForceEnterRoom_115)
  // optional uint32 RoomId = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->roomid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SForceEnterRoom_115)
  return target;
}

int C2SForceEnterRoom_115::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SForceEnterRoom_115)
  int total_size = 0;

  // optional uint32 RoomId = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SForceEnterRoom_115::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SForceEnterRoom_115)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SForceEnterRoom_115* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SForceEnterRoom_115>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SForceEnterRoom_115)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SForceEnterRoom_115)
    MergeFrom(*source);
  }
}

void C2SForceEnterRoom_115::MergeFrom(const C2SForceEnterRoom_115& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SForceEnterRoom_115)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void C2SForceEnterRoom_115::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SForceEnterRoom_115)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SForceEnterRoom_115::CopyFrom(const C2SForceEnterRoom_115& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SForceEnterRoom_115)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SForceEnterRoom_115::IsInitialized() const {

  return true;
}

void C2SForceEnterRoom_115::Swap(C2SForceEnterRoom_115* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SForceEnterRoom_115::InternalSwap(C2SForceEnterRoom_115* other) {
  std::swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SForceEnterRoom_115::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SForceEnterRoom_115_descriptor_;
  metadata.reflection = C2SForceEnterRoom_115_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SForceEnterRoom_115

// optional uint32 RoomId = 1;
void C2SForceEnterRoom_115::clear_roomid() {
  roomid_ = 0u;
}
 ::google::protobuf::uint32 C2SForceEnterRoom_115::roomid() const {
  // @@protoc_insertion_point(field_get:pb.C2SForceEnterRoom_115.RoomId)
  return roomid_;
}
 void C2SForceEnterRoom_115::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SForceEnterRoom_115.RoomId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SAddRobotToRoom_119::kCampIdFieldNumber;
const int C2SAddRobotToRoom_119::kRobotIdFieldNumber;
const int C2SAddRobotToRoom_119::kOperFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SAddRobotToRoom_119::C2SAddRobotToRoom_119()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SAddRobotToRoom_119)
}

void C2SAddRobotToRoom_119::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SAddRobotToRoom_119::C2SAddRobotToRoom_119(const C2SAddRobotToRoom_119& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SAddRobotToRoom_119)
}

void C2SAddRobotToRoom_119::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  campid_ = 0u;
  robotid_ = 0u;
  oper_ = false;
}

C2SAddRobotToRoom_119::~C2SAddRobotToRoom_119() {
  // @@protoc_insertion_point(destructor:pb.C2SAddRobotToRoom_119)
  SharedDtor();
}

void C2SAddRobotToRoom_119::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SAddRobotToRoom_119::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SAddRobotToRoom_119::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SAddRobotToRoom_119_descriptor_;
}

const C2SAddRobotToRoom_119& C2SAddRobotToRoom_119::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SAddRobotToRoom_119* C2SAddRobotToRoom_119::default_instance_ = NULL;

C2SAddRobotToRoom_119* C2SAddRobotToRoom_119::New(::google::protobuf::Arena* arena) const {
  C2SAddRobotToRoom_119* n = new C2SAddRobotToRoom_119;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SAddRobotToRoom_119::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SAddRobotToRoom_119)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(C2SAddRobotToRoom_119, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<C2SAddRobotToRoom_119*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(campid_, oper_);

#undef ZR_HELPER_
#undef ZR_

}

bool C2SAddRobotToRoom_119::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SAddRobotToRoom_119)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 CampId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RobotId;
        break;
      }

      // optional uint32 RobotId = 2;
      case 2: {
        if (tag == 16) {
         parse_RobotId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &robotid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Oper;
        break;
      }

      // optional bool Oper = 3;
      case 3: {
        if (tag == 24) {
         parse_Oper:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &oper_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SAddRobotToRoom_119)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SAddRobotToRoom_119)
  return false;
#undef DO_
}

void C2SAddRobotToRoom_119::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SAddRobotToRoom_119)
  // optional uint32 CampId = 1;
  if (this->campid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->campid(), output);
  }

  // optional uint32 RobotId = 2;
  if (this->robotid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->robotid(), output);
  }

  // optional bool Oper = 3;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->oper(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SAddRobotToRoom_119)
}

::google::protobuf::uint8* C2SAddRobotToRoom_119::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SAddRobotToRoom_119)
  // optional uint32 CampId = 1;
  if (this->campid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->campid(), target);
  }

  // optional uint32 RobotId = 2;
  if (this->robotid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->robotid(), target);
  }

  // optional bool Oper = 3;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->oper(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SAddRobotToRoom_119)
  return target;
}

int C2SAddRobotToRoom_119::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SAddRobotToRoom_119)
  int total_size = 0;

  // optional uint32 CampId = 1;
  if (this->campid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->campid());
  }

  // optional uint32 RobotId = 2;
  if (this->robotid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->robotid());
  }

  // optional bool Oper = 3;
  if (this->oper() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SAddRobotToRoom_119::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SAddRobotToRoom_119)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SAddRobotToRoom_119* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SAddRobotToRoom_119>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SAddRobotToRoom_119)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SAddRobotToRoom_119)
    MergeFrom(*source);
  }
}

void C2SAddRobotToRoom_119::MergeFrom(const C2SAddRobotToRoom_119& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SAddRobotToRoom_119)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.campid() != 0) {
    set_campid(from.campid());
  }
  if (from.robotid() != 0) {
    set_robotid(from.robotid());
  }
  if (from.oper() != 0) {
    set_oper(from.oper());
  }
}

void C2SAddRobotToRoom_119::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SAddRobotToRoom_119)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SAddRobotToRoom_119::CopyFrom(const C2SAddRobotToRoom_119& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SAddRobotToRoom_119)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SAddRobotToRoom_119::IsInitialized() const {

  return true;
}

void C2SAddRobotToRoom_119::Swap(C2SAddRobotToRoom_119* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SAddRobotToRoom_119::InternalSwap(C2SAddRobotToRoom_119* other) {
  std::swap(campid_, other->campid_);
  std::swap(robotid_, other->robotid_);
  std::swap(oper_, other->oper_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SAddRobotToRoom_119::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SAddRobotToRoom_119_descriptor_;
  metadata.reflection = C2SAddRobotToRoom_119_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SAddRobotToRoom_119

// optional uint32 CampId = 1;
void C2SAddRobotToRoom_119::clear_campid() {
  campid_ = 0u;
}
 ::google::protobuf::uint32 C2SAddRobotToRoom_119::campid() const {
  // @@protoc_insertion_point(field_get:pb.C2SAddRobotToRoom_119.CampId)
  return campid_;
}
 void C2SAddRobotToRoom_119::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SAddRobotToRoom_119.CampId)
}

// optional uint32 RobotId = 2;
void C2SAddRobotToRoom_119::clear_robotid() {
  robotid_ = 0u;
}
 ::google::protobuf::uint32 C2SAddRobotToRoom_119::robotid() const {
  // @@protoc_insertion_point(field_get:pb.C2SAddRobotToRoom_119.RobotId)
  return robotid_;
}
 void C2SAddRobotToRoom_119::set_robotid(::google::protobuf::uint32 value) {
  
  robotid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SAddRobotToRoom_119.RobotId)
}

// optional bool Oper = 3;
void C2SAddRobotToRoom_119::clear_oper() {
  oper_ = false;
}
 bool C2SAddRobotToRoom_119::oper() const {
  // @@protoc_insertion_point(field_get:pb.C2SAddRobotToRoom_119.Oper)
  return oper_;
}
 void C2SAddRobotToRoom_119::set_oper(bool value) {
  
  oper_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SAddRobotToRoom_119.Oper)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CAddRobotToRoom_119::kRobotIdsCamp0FieldNumber;
const int S2CAddRobotToRoom_119::kRobotIdsCamp1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CAddRobotToRoom_119::S2CAddRobotToRoom_119()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CAddRobotToRoom_119)
}

void S2CAddRobotToRoom_119::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CAddRobotToRoom_119::S2CAddRobotToRoom_119(const S2CAddRobotToRoom_119& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CAddRobotToRoom_119)
}

void S2CAddRobotToRoom_119::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CAddRobotToRoom_119::~S2CAddRobotToRoom_119() {
  // @@protoc_insertion_point(destructor:pb.S2CAddRobotToRoom_119)
  SharedDtor();
}

void S2CAddRobotToRoom_119::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CAddRobotToRoom_119::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CAddRobotToRoom_119::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CAddRobotToRoom_119_descriptor_;
}

const S2CAddRobotToRoom_119& S2CAddRobotToRoom_119::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CAddRobotToRoom_119* S2CAddRobotToRoom_119::default_instance_ = NULL;

S2CAddRobotToRoom_119* S2CAddRobotToRoom_119::New(::google::protobuf::Arena* arena) const {
  S2CAddRobotToRoom_119* n = new S2CAddRobotToRoom_119;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CAddRobotToRoom_119::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CAddRobotToRoom_119)
  robotidscamp0_.Clear();
  robotidscamp1_.Clear();
}

bool S2CAddRobotToRoom_119::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CAddRobotToRoom_119)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 RobotIdsCamp0 = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_robotidscamp0())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_robotidscamp0())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RobotIdsCamp1;
        break;
      }

      // repeated uint32 RobotIdsCamp1 = 2;
      case 2: {
        if (tag == 18) {
         parse_RobotIdsCamp1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_robotidscamp1())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_robotidscamp1())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CAddRobotToRoom_119)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CAddRobotToRoom_119)
  return false;
#undef DO_
}

void S2CAddRobotToRoom_119::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CAddRobotToRoom_119)
  // repeated uint32 RobotIdsCamp0 = 1;
  if (this->robotidscamp0_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_robotidscamp0_cached_byte_size_);
  }
  for (int i = 0; i < this->robotidscamp0_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->robotidscamp0(i), output);
  }

  // repeated uint32 RobotIdsCamp1 = 2;
  if (this->robotidscamp1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_robotidscamp1_cached_byte_size_);
  }
  for (int i = 0; i < this->robotidscamp1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->robotidscamp1(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CAddRobotToRoom_119)
}

::google::protobuf::uint8* S2CAddRobotToRoom_119::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CAddRobotToRoom_119)
  // repeated uint32 RobotIdsCamp0 = 1;
  if (this->robotidscamp0_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _robotidscamp0_cached_byte_size_, target);
  }
  for (int i = 0; i < this->robotidscamp0_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->robotidscamp0(i), target);
  }

  // repeated uint32 RobotIdsCamp1 = 2;
  if (this->robotidscamp1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _robotidscamp1_cached_byte_size_, target);
  }
  for (int i = 0; i < this->robotidscamp1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->robotidscamp1(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CAddRobotToRoom_119)
  return target;
}

int S2CAddRobotToRoom_119::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CAddRobotToRoom_119)
  int total_size = 0;

  // repeated uint32 RobotIdsCamp0 = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->robotidscamp0_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->robotidscamp0(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _robotidscamp0_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 RobotIdsCamp1 = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->robotidscamp1_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->robotidscamp1(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _robotidscamp1_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CAddRobotToRoom_119::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CAddRobotToRoom_119)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CAddRobotToRoom_119* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CAddRobotToRoom_119>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CAddRobotToRoom_119)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CAddRobotToRoom_119)
    MergeFrom(*source);
  }
}

void S2CAddRobotToRoom_119::MergeFrom(const S2CAddRobotToRoom_119& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CAddRobotToRoom_119)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  robotidscamp0_.MergeFrom(from.robotidscamp0_);
  robotidscamp1_.MergeFrom(from.robotidscamp1_);
}

void S2CAddRobotToRoom_119::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CAddRobotToRoom_119)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CAddRobotToRoom_119::CopyFrom(const S2CAddRobotToRoom_119& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CAddRobotToRoom_119)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CAddRobotToRoom_119::IsInitialized() const {

  return true;
}

void S2CAddRobotToRoom_119::Swap(S2CAddRobotToRoom_119* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CAddRobotToRoom_119::InternalSwap(S2CAddRobotToRoom_119* other) {
  robotidscamp0_.UnsafeArenaSwap(&other->robotidscamp0_);
  robotidscamp1_.UnsafeArenaSwap(&other->robotidscamp1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CAddRobotToRoom_119::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CAddRobotToRoom_119_descriptor_;
  metadata.reflection = S2CAddRobotToRoom_119_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CAddRobotToRoom_119

// repeated uint32 RobotIdsCamp0 = 1;
int S2CAddRobotToRoom_119::robotidscamp0_size() const {
  return robotidscamp0_.size();
}
void S2CAddRobotToRoom_119::clear_robotidscamp0() {
  robotidscamp0_.Clear();
}
 ::google::protobuf::uint32 S2CAddRobotToRoom_119::robotidscamp0(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CAddRobotToRoom_119.RobotIdsCamp0)
  return robotidscamp0_.Get(index);
}
 void S2CAddRobotToRoom_119::set_robotidscamp0(int index, ::google::protobuf::uint32 value) {
  robotidscamp0_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.S2CAddRobotToRoom_119.RobotIdsCamp0)
}
 void S2CAddRobotToRoom_119::add_robotidscamp0(::google::protobuf::uint32 value) {
  robotidscamp0_.Add(value);
  // @@protoc_insertion_point(field_add:pb.S2CAddRobotToRoom_119.RobotIdsCamp0)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
S2CAddRobotToRoom_119::robotidscamp0() const {
  // @@protoc_insertion_point(field_list:pb.S2CAddRobotToRoom_119.RobotIdsCamp0)
  return robotidscamp0_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
S2CAddRobotToRoom_119::mutable_robotidscamp0() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CAddRobotToRoom_119.RobotIdsCamp0)
  return &robotidscamp0_;
}

// repeated uint32 RobotIdsCamp1 = 2;
int S2CAddRobotToRoom_119::robotidscamp1_size() const {
  return robotidscamp1_.size();
}
void S2CAddRobotToRoom_119::clear_robotidscamp1() {
  robotidscamp1_.Clear();
}
 ::google::protobuf::uint32 S2CAddRobotToRoom_119::robotidscamp1(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CAddRobotToRoom_119.RobotIdsCamp1)
  return robotidscamp1_.Get(index);
}
 void S2CAddRobotToRoom_119::set_robotidscamp1(int index, ::google::protobuf::uint32 value) {
  robotidscamp1_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.S2CAddRobotToRoom_119.RobotIdsCamp1)
}
 void S2CAddRobotToRoom_119::add_robotidscamp1(::google::protobuf::uint32 value) {
  robotidscamp1_.Add(value);
  // @@protoc_insertion_point(field_add:pb.S2CAddRobotToRoom_119.RobotIdsCamp1)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
S2CAddRobotToRoom_119::robotidscamp1() const {
  // @@protoc_insertion_point(field_list:pb.S2CAddRobotToRoom_119.RobotIdsCamp1)
  return robotidscamp1_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
S2CAddRobotToRoom_119::mutable_robotidscamp1() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CAddRobotToRoom_119.RobotIdsCamp1)
  return &robotidscamp1_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PTeammateInfo::kUseridFieldNumber;
const int PTeammateInfo::kUsernameFieldNumber;
const int PTeammateInfo::kLeftSecFieldNumber;
const int PTeammateInfo::kBatStateFieldNumber;
const int PTeammateInfo::kMountFieldNumber;
const int PTeammateInfo::kTeammateCountFieldNumber;
const int PTeammateInfo::kIsTopFieldNumber;
const int PTeammateInfo::kTeamIdFieldNumber;
const int PTeammateInfo::kInContestFieldNumber;
const int PTeammateInfo::kLvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PTeammateInfo::PTeammateInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.PTeammateInfo)
}

void PTeammateInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PTeammateInfo::PTeammateInfo(const PTeammateInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.PTeammateInfo)
}

void PTeammateInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = GOOGLE_ULONGLONG(0);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leftsec_ = 0u;
  batstate_ = 0u;
  mount_ = 0u;
  teammatecount_ = 0u;
  istop_ = false;
  teamid_ = GOOGLE_ULONGLONG(0);
  incontest_ = false;
  lv_ = 0u;
}

PTeammateInfo::~PTeammateInfo() {
  // @@protoc_insertion_point(destructor:pb.PTeammateInfo)
  SharedDtor();
}

void PTeammateInfo::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PTeammateInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PTeammateInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PTeammateInfo_descriptor_;
}

const PTeammateInfo& PTeammateInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

PTeammateInfo* PTeammateInfo::default_instance_ = NULL;

PTeammateInfo* PTeammateInfo::New(::google::protobuf::Arena* arena) const {
  PTeammateInfo* n = new PTeammateInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PTeammateInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.PTeammateInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PTeammateInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PTeammateInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(leftsec_, istop_);
  userid_ = GOOGLE_ULONGLONG(0);
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(incontest_, lv_);

#undef ZR_HELPER_
#undef ZR_

}

bool PTeammateInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.PTeammateInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Username;
        break;
      }

      // optional string Username = 2;
      case 2: {
        if (tag == 18) {
         parse_Username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.PTeammateInfo.Username"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_LeftSec;
        break;
      }

      // optional uint32 LeftSec = 3;
      case 3: {
        if (tag == 24) {
         parse_LeftSec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftsec_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_BatState;
        break;
      }

      // optional uint32 BatState = 4;
      case 4: {
        if (tag == 32) {
         parse_BatState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &batstate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Mount;
        break;
      }

      // optional uint32 Mount = 5;
      case 5: {
        if (tag == 40) {
         parse_Mount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_TeammateCount;
        break;
      }

      // optional uint32 TeammateCount = 6;
      case 6: {
        if (tag == 48) {
         parse_TeammateCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &teammatecount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_IsTop;
        break;
      }

      // optional bool IsTop = 7;
      case 7: {
        if (tag == 56) {
         parse_IsTop:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &istop_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_TeamId;
        break;
      }

      // optional uint64 TeamId = 8;
      case 8: {
        if (tag == 64) {
         parse_TeamId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_InContest;
        break;
      }

      // optional bool InContest = 9;
      case 9: {
        if (tag == 72) {
         parse_InContest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &incontest_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_Lv;
        break;
      }

      // optional uint32 Lv = 10;
      case 10: {
        if (tag == 80) {
         parse_Lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lv_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.PTeammateInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.PTeammateInfo)
  return false;
#undef DO_
}

void PTeammateInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.PTeammateInfo)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->userid(), output);
  }

  // optional string Username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.PTeammateInfo.Username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional uint32 LeftSec = 3;
  if (this->leftsec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->leftsec(), output);
  }

  // optional uint32 BatState = 4;
  if (this->batstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->batstate(), output);
  }

  // optional uint32 Mount = 5;
  if (this->mount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->mount(), output);
  }

  // optional uint32 TeammateCount = 6;
  if (this->teammatecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->teammatecount(), output);
  }

  // optional bool IsTop = 7;
  if (this->istop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->istop(), output);
  }

  // optional uint64 TeamId = 8;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->teamid(), output);
  }

  // optional bool InContest = 9;
  if (this->incontest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->incontest(), output);
  }

  // optional uint32 Lv = 10;
  if (this->lv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->lv(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.PTeammateInfo)
}

::google::protobuf::uint8* PTeammateInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.PTeammateInfo)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->userid(), target);
  }

  // optional string Username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.PTeammateInfo.Username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional uint32 LeftSec = 3;
  if (this->leftsec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->leftsec(), target);
  }

  // optional uint32 BatState = 4;
  if (this->batstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->batstate(), target);
  }

  // optional uint32 Mount = 5;
  if (this->mount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->mount(), target);
  }

  // optional uint32 TeammateCount = 6;
  if (this->teammatecount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->teammatecount(), target);
  }

  // optional bool IsTop = 7;
  if (this->istop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->istop(), target);
  }

  // optional uint64 TeamId = 8;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->teamid(), target);
  }

  // optional bool InContest = 9;
  if (this->incontest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->incontest(), target);
  }

  // optional uint32 Lv = 10;
  if (this->lv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->lv(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.PTeammateInfo)
  return target;
}

int PTeammateInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.PTeammateInfo)
  int total_size = 0;

  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // optional string Username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional uint32 LeftSec = 3;
  if (this->leftsec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftsec());
  }

  // optional uint32 BatState = 4;
  if (this->batstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->batstate());
  }

  // optional uint32 Mount = 5;
  if (this->mount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mount());
  }

  // optional uint32 TeammateCount = 6;
  if (this->teammatecount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->teammatecount());
  }

  // optional bool IsTop = 7;
  if (this->istop() != 0) {
    total_size += 1 + 1;
  }

  // optional uint64 TeamId = 8;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamid());
  }

  // optional bool InContest = 9;
  if (this->incontest() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 Lv = 10;
  if (this->lv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lv());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PTeammateInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.PTeammateInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PTeammateInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PTeammateInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.PTeammateInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.PTeammateInfo)
    MergeFrom(*source);
  }
}

void PTeammateInfo::MergeFrom(const PTeammateInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.PTeammateInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.leftsec() != 0) {
    set_leftsec(from.leftsec());
  }
  if (from.batstate() != 0) {
    set_batstate(from.batstate());
  }
  if (from.mount() != 0) {
    set_mount(from.mount());
  }
  if (from.teammatecount() != 0) {
    set_teammatecount(from.teammatecount());
  }
  if (from.istop() != 0) {
    set_istop(from.istop());
  }
  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
  if (from.incontest() != 0) {
    set_incontest(from.incontest());
  }
  if (from.lv() != 0) {
    set_lv(from.lv());
  }
}

void PTeammateInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.PTeammateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PTeammateInfo::CopyFrom(const PTeammateInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.PTeammateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PTeammateInfo::IsInitialized() const {

  return true;
}

void PTeammateInfo::Swap(PTeammateInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PTeammateInfo::InternalSwap(PTeammateInfo* other) {
  std::swap(userid_, other->userid_);
  username_.Swap(&other->username_);
  std::swap(leftsec_, other->leftsec_);
  std::swap(batstate_, other->batstate_);
  std::swap(mount_, other->mount_);
  std::swap(teammatecount_, other->teammatecount_);
  std::swap(istop_, other->istop_);
  std::swap(teamid_, other->teamid_);
  std::swap(incontest_, other->incontest_);
  std::swap(lv_, other->lv_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PTeammateInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PTeammateInfo_descriptor_;
  metadata.reflection = PTeammateInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PTeammateInfo

// optional uint64 Userid = 1;
void PTeammateInfo::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PTeammateInfo::userid() const {
  // @@protoc_insertion_point(field_get:pb.PTeammateInfo.Userid)
  return userid_;
}
 void PTeammateInfo::set_userid(::google::protobuf::uint64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:pb.PTeammateInfo.Userid)
}

// optional string Username = 2;
void PTeammateInfo::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PTeammateInfo::username() const {
  // @@protoc_insertion_point(field_get:pb.PTeammateInfo.Username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PTeammateInfo::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.PTeammateInfo.Username)
}
 void PTeammateInfo::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.PTeammateInfo.Username)
}
 void PTeammateInfo::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.PTeammateInfo.Username)
}
 ::std::string* PTeammateInfo::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:pb.PTeammateInfo.Username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PTeammateInfo::release_username() {
  // @@protoc_insertion_point(field_release:pb.PTeammateInfo.Username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PTeammateInfo::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:pb.PTeammateInfo.Username)
}

// optional uint32 LeftSec = 3;
void PTeammateInfo::clear_leftsec() {
  leftsec_ = 0u;
}
 ::google::protobuf::uint32 PTeammateInfo::leftsec() const {
  // @@protoc_insertion_point(field_get:pb.PTeammateInfo.LeftSec)
  return leftsec_;
}
 void PTeammateInfo::set_leftsec(::google::protobuf::uint32 value) {
  
  leftsec_ = value;
  // @@protoc_insertion_point(field_set:pb.PTeammateInfo.LeftSec)
}

// optional uint32 BatState = 4;
void PTeammateInfo::clear_batstate() {
  batstate_ = 0u;
}
 ::google::protobuf::uint32 PTeammateInfo::batstate() const {
  // @@protoc_insertion_point(field_get:pb.PTeammateInfo.BatState)
  return batstate_;
}
 void PTeammateInfo::set_batstate(::google::protobuf::uint32 value) {
  
  batstate_ = value;
  // @@protoc_insertion_point(field_set:pb.PTeammateInfo.BatState)
}

// optional uint32 Mount = 5;
void PTeammateInfo::clear_mount() {
  mount_ = 0u;
}
 ::google::protobuf::uint32 PTeammateInfo::mount() const {
  // @@protoc_insertion_point(field_get:pb.PTeammateInfo.Mount)
  return mount_;
}
 void PTeammateInfo::set_mount(::google::protobuf::uint32 value) {
  
  mount_ = value;
  // @@protoc_insertion_point(field_set:pb.PTeammateInfo.Mount)
}

// optional uint32 TeammateCount = 6;
void PTeammateInfo::clear_teammatecount() {
  teammatecount_ = 0u;
}
 ::google::protobuf::uint32 PTeammateInfo::teammatecount() const {
  // @@protoc_insertion_point(field_get:pb.PTeammateInfo.TeammateCount)
  return teammatecount_;
}
 void PTeammateInfo::set_teammatecount(::google::protobuf::uint32 value) {
  
  teammatecount_ = value;
  // @@protoc_insertion_point(field_set:pb.PTeammateInfo.TeammateCount)
}

// optional bool IsTop = 7;
void PTeammateInfo::clear_istop() {
  istop_ = false;
}
 bool PTeammateInfo::istop() const {
  // @@protoc_insertion_point(field_get:pb.PTeammateInfo.IsTop)
  return istop_;
}
 void PTeammateInfo::set_istop(bool value) {
  
  istop_ = value;
  // @@protoc_insertion_point(field_set:pb.PTeammateInfo.IsTop)
}

// optional uint64 TeamId = 8;
void PTeammateInfo::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 PTeammateInfo::teamid() const {
  // @@protoc_insertion_point(field_get:pb.PTeammateInfo.TeamId)
  return teamid_;
}
 void PTeammateInfo::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.PTeammateInfo.TeamId)
}

// optional bool InContest = 9;
void PTeammateInfo::clear_incontest() {
  incontest_ = false;
}
 bool PTeammateInfo::incontest() const {
  // @@protoc_insertion_point(field_get:pb.PTeammateInfo.InContest)
  return incontest_;
}
 void PTeammateInfo::set_incontest(bool value) {
  
  incontest_ = value;
  // @@protoc_insertion_point(field_set:pb.PTeammateInfo.InContest)
}

// optional uint32 Lv = 10;
void PTeammateInfo::clear_lv() {
  lv_ = 0u;
}
 ::google::protobuf::uint32 PTeammateInfo::lv() const {
  // @@protoc_insertion_point(field_get:pb.PTeammateInfo.Lv)
  return lv_;
}
 void PTeammateInfo::set_lv(::google::protobuf::uint32 value) {
  
  lv_ = value;
  // @@protoc_insertion_point(field_set:pb.PTeammateInfo.Lv)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SInvitePlayer_120::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SInvitePlayer_120::C2SInvitePlayer_120()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SInvitePlayer_120)
}

void C2SInvitePlayer_120::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SInvitePlayer_120::C2SInvitePlayer_120(const C2SInvitePlayer_120& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SInvitePlayer_120)
}

void C2SInvitePlayer_120::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2SInvitePlayer_120::~C2SInvitePlayer_120() {
  // @@protoc_insertion_point(destructor:pb.C2SInvitePlayer_120)
  SharedDtor();
}

void C2SInvitePlayer_120::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2SInvitePlayer_120::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SInvitePlayer_120::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SInvitePlayer_120_descriptor_;
}

const C2SInvitePlayer_120& C2SInvitePlayer_120::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SInvitePlayer_120* C2SInvitePlayer_120::default_instance_ = NULL;

C2SInvitePlayer_120* C2SInvitePlayer_120::New(::google::protobuf::Arena* arena) const {
  C2SInvitePlayer_120* n = new C2SInvitePlayer_120;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SInvitePlayer_120::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SInvitePlayer_120)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2SInvitePlayer_120::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SInvitePlayer_120)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SInvitePlayer_120.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SInvitePlayer_120)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SInvitePlayer_120)
  return false;
#undef DO_
}

void C2SInvitePlayer_120::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SInvitePlayer_120)
  // optional string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SInvitePlayer_120.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SInvitePlayer_120)
}

::google::protobuf::uint8* C2SInvitePlayer_120::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SInvitePlayer_120)
  // optional string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SInvitePlayer_120.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SInvitePlayer_120)
  return target;
}

int C2SInvitePlayer_120::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SInvitePlayer_120)
  int total_size = 0;

  // optional string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SInvitePlayer_120::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SInvitePlayer_120)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SInvitePlayer_120* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SInvitePlayer_120>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SInvitePlayer_120)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SInvitePlayer_120)
    MergeFrom(*source);
  }
}

void C2SInvitePlayer_120::MergeFrom(const C2SInvitePlayer_120& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SInvitePlayer_120)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void C2SInvitePlayer_120::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SInvitePlayer_120)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SInvitePlayer_120::CopyFrom(const C2SInvitePlayer_120& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SInvitePlayer_120)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SInvitePlayer_120::IsInitialized() const {

  return true;
}

void C2SInvitePlayer_120::Swap(C2SInvitePlayer_120* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SInvitePlayer_120::InternalSwap(C2SInvitePlayer_120* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SInvitePlayer_120::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SInvitePlayer_120_descriptor_;
  metadata.reflection = C2SInvitePlayer_120_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SInvitePlayer_120

// optional string Name = 1;
void C2SInvitePlayer_120::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SInvitePlayer_120::name() const {
  // @@protoc_insertion_point(field_get:pb.C2SInvitePlayer_120.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SInvitePlayer_120::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SInvitePlayer_120.Name)
}
 void C2SInvitePlayer_120::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SInvitePlayer_120.Name)
}
 void C2SInvitePlayer_120::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SInvitePlayer_120.Name)
}
 ::std::string* C2SInvitePlayer_120::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SInvitePlayer_120.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SInvitePlayer_120::release_name() {
  // @@protoc_insertion_point(field_release:pb.C2SInvitePlayer_120.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SInvitePlayer_120::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SInvitePlayer_120.Name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CInvitePlayer_120::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CInvitePlayer_120::S2CInvitePlayer_120()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CInvitePlayer_120)
}

void S2CInvitePlayer_120::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  info_ = const_cast< ::pb::PTeammateInfo*>(&::pb::PTeammateInfo::default_instance());
}

S2CInvitePlayer_120::S2CInvitePlayer_120(const S2CInvitePlayer_120& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CInvitePlayer_120)
}

void S2CInvitePlayer_120::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  info_ = NULL;
}

S2CInvitePlayer_120::~S2CInvitePlayer_120() {
  // @@protoc_insertion_point(destructor:pb.S2CInvitePlayer_120)
  SharedDtor();
}

void S2CInvitePlayer_120::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void S2CInvitePlayer_120::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CInvitePlayer_120::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CInvitePlayer_120_descriptor_;
}

const S2CInvitePlayer_120& S2CInvitePlayer_120::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CInvitePlayer_120* S2CInvitePlayer_120::default_instance_ = NULL;

S2CInvitePlayer_120* S2CInvitePlayer_120::New(::google::protobuf::Arena* arena) const {
  S2CInvitePlayer_120* n = new S2CInvitePlayer_120;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CInvitePlayer_120::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CInvitePlayer_120)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}

bool S2CInvitePlayer_120::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CInvitePlayer_120)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.PTeammateInfo Info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CInvitePlayer_120)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CInvitePlayer_120)
  return false;
#undef DO_
}

void S2CInvitePlayer_120::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CInvitePlayer_120)
  // optional .pb.PTeammateInfo Info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CInvitePlayer_120)
}

::google::protobuf::uint8* S2CInvitePlayer_120::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CInvitePlayer_120)
  // optional .pb.PTeammateInfo Info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CInvitePlayer_120)
  return target;
}

int S2CInvitePlayer_120::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CInvitePlayer_120)
  int total_size = 0;

  // optional .pb.PTeammateInfo Info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CInvitePlayer_120::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CInvitePlayer_120)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CInvitePlayer_120* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CInvitePlayer_120>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CInvitePlayer_120)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CInvitePlayer_120)
    MergeFrom(*source);
  }
}

void S2CInvitePlayer_120::MergeFrom(const S2CInvitePlayer_120& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CInvitePlayer_120)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_info()) {
    mutable_info()->::pb::PTeammateInfo::MergeFrom(from.info());
  }
}

void S2CInvitePlayer_120::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CInvitePlayer_120)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CInvitePlayer_120::CopyFrom(const S2CInvitePlayer_120& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CInvitePlayer_120)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CInvitePlayer_120::IsInitialized() const {

  return true;
}

void S2CInvitePlayer_120::Swap(S2CInvitePlayer_120* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CInvitePlayer_120::InternalSwap(S2CInvitePlayer_120* other) {
  std::swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CInvitePlayer_120::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CInvitePlayer_120_descriptor_;
  metadata.reflection = S2CInvitePlayer_120_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CInvitePlayer_120

// optional .pb.PTeammateInfo Info = 1;
bool S2CInvitePlayer_120::has_info() const {
  return !_is_default_instance_ && info_ != NULL;
}
void S2CInvitePlayer_120::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::pb::PTeammateInfo& S2CInvitePlayer_120::info() const {
  // @@protoc_insertion_point(field_get:pb.S2CInvitePlayer_120.Info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
::pb::PTeammateInfo* S2CInvitePlayer_120::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::pb::PTeammateInfo;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CInvitePlayer_120.Info)
  return info_;
}
::pb::PTeammateInfo* S2CInvitePlayer_120::release_info() {
  // @@protoc_insertion_point(field_release:pb.S2CInvitePlayer_120.Info)
  
  ::pb::PTeammateInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void S2CInvitePlayer_120::set_allocated_info(::pb::PTeammateInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CInvitePlayer_120.Info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CReceiveInvite_121::kTeamIdFieldNumber;
const int S2CReceiveInvite_121::kFromNameFieldNumber;
const int S2CReceiveInvite_121::kExpiresInFieldNumber;
const int S2CReceiveInvite_121::kMountFieldNumber;
const int S2CReceiveInvite_121::kLvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CReceiveInvite_121::S2CReceiveInvite_121()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CReceiveInvite_121)
}

void S2CReceiveInvite_121::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CReceiveInvite_121::S2CReceiveInvite_121(const S2CReceiveInvite_121& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CReceiveInvite_121)
}

void S2CReceiveInvite_121::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  teamid_ = GOOGLE_ULONGLONG(0);
  fromname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiresin_ = 0u;
  mount_ = 0u;
  lv_ = 0u;
}

S2CReceiveInvite_121::~S2CReceiveInvite_121() {
  // @@protoc_insertion_point(destructor:pb.S2CReceiveInvite_121)
  SharedDtor();
}

void S2CReceiveInvite_121::SharedDtor() {
  fromname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void S2CReceiveInvite_121::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CReceiveInvite_121::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CReceiveInvite_121_descriptor_;
}

const S2CReceiveInvite_121& S2CReceiveInvite_121::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CReceiveInvite_121* S2CReceiveInvite_121::default_instance_ = NULL;

S2CReceiveInvite_121* S2CReceiveInvite_121::New(::google::protobuf::Arena* arena) const {
  S2CReceiveInvite_121* n = new S2CReceiveInvite_121;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CReceiveInvite_121::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CReceiveInvite_121)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CReceiveInvite_121, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CReceiveInvite_121*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(expiresin_, lv_);
  teamid_ = GOOGLE_ULONGLONG(0);
  fromname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool S2CReceiveInvite_121::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CReceiveInvite_121)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 TeamId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_FromName;
        break;
      }

      // optional string FromName = 2;
      case 2: {
        if (tag == 18) {
         parse_FromName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fromname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fromname().data(), this->fromname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CReceiveInvite_121.FromName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ExpiresIn;
        break;
      }

      // optional uint32 ExpiresIn = 3;
      case 3: {
        if (tag == 24) {
         parse_ExpiresIn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expiresin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Mount;
        break;
      }

      // optional uint32 Mount = 4;
      case 4: {
        if (tag == 32) {
         parse_Mount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Lv;
        break;
      }

      // optional uint32 Lv = 5;
      case 5: {
        if (tag == 40) {
         parse_Lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lv_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CReceiveInvite_121)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CReceiveInvite_121)
  return false;
#undef DO_
}

void S2CReceiveInvite_121::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CReceiveInvite_121)
  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamid(), output);
  }

  // optional string FromName = 2;
  if (this->fromname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fromname().data(), this->fromname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CReceiveInvite_121.FromName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->fromname(), output);
  }

  // optional uint32 ExpiresIn = 3;
  if (this->expiresin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->expiresin(), output);
  }

  // optional uint32 Mount = 4;
  if (this->mount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->mount(), output);
  }

  // optional uint32 Lv = 5;
  if (this->lv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->lv(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CReceiveInvite_121)
}

::google::protobuf::uint8* S2CReceiveInvite_121::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CReceiveInvite_121)
  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamid(), target);
  }

  // optional string FromName = 2;
  if (this->fromname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fromname().data(), this->fromname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CReceiveInvite_121.FromName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->fromname(), target);
  }

  // optional uint32 ExpiresIn = 3;
  if (this->expiresin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->expiresin(), target);
  }

  // optional uint32 Mount = 4;
  if (this->mount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->mount(), target);
  }

  // optional uint32 Lv = 5;
  if (this->lv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->lv(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CReceiveInvite_121)
  return target;
}

int S2CReceiveInvite_121::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CReceiveInvite_121)
  int total_size = 0;

  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamid());
  }

  // optional string FromName = 2;
  if (this->fromname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fromname());
  }

  // optional uint32 ExpiresIn = 3;
  if (this->expiresin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->expiresin());
  }

  // optional uint32 Mount = 4;
  if (this->mount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mount());
  }

  // optional uint32 Lv = 5;
  if (this->lv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lv());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CReceiveInvite_121::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CReceiveInvite_121)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CReceiveInvite_121* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CReceiveInvite_121>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CReceiveInvite_121)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CReceiveInvite_121)
    MergeFrom(*source);
  }
}

void S2CReceiveInvite_121::MergeFrom(const S2CReceiveInvite_121& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CReceiveInvite_121)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
  if (from.fromname().size() > 0) {

    fromname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromname_);
  }
  if (from.expiresin() != 0) {
    set_expiresin(from.expiresin());
  }
  if (from.mount() != 0) {
    set_mount(from.mount());
  }
  if (from.lv() != 0) {
    set_lv(from.lv());
  }
}

void S2CReceiveInvite_121::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CReceiveInvite_121)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CReceiveInvite_121::CopyFrom(const S2CReceiveInvite_121& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CReceiveInvite_121)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CReceiveInvite_121::IsInitialized() const {

  return true;
}

void S2CReceiveInvite_121::Swap(S2CReceiveInvite_121* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CReceiveInvite_121::InternalSwap(S2CReceiveInvite_121* other) {
  std::swap(teamid_, other->teamid_);
  fromname_.Swap(&other->fromname_);
  std::swap(expiresin_, other->expiresin_);
  std::swap(mount_, other->mount_);
  std::swap(lv_, other->lv_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CReceiveInvite_121::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CReceiveInvite_121_descriptor_;
  metadata.reflection = S2CReceiveInvite_121_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CReceiveInvite_121

// optional uint64 TeamId = 1;
void S2CReceiveInvite_121::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CReceiveInvite_121::teamid() const {
  // @@protoc_insertion_point(field_get:pb.S2CReceiveInvite_121.TeamId)
  return teamid_;
}
 void S2CReceiveInvite_121::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CReceiveInvite_121.TeamId)
}

// optional string FromName = 2;
void S2CReceiveInvite_121::clear_fromname() {
  fromname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CReceiveInvite_121::fromname() const {
  // @@protoc_insertion_point(field_get:pb.S2CReceiveInvite_121.FromName)
  return fromname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CReceiveInvite_121::set_fromname(const ::std::string& value) {
  
  fromname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CReceiveInvite_121.FromName)
}
 void S2CReceiveInvite_121::set_fromname(const char* value) {
  
  fromname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CReceiveInvite_121.FromName)
}
 void S2CReceiveInvite_121::set_fromname(const char* value, size_t size) {
  
  fromname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CReceiveInvite_121.FromName)
}
 ::std::string* S2CReceiveInvite_121::mutable_fromname() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CReceiveInvite_121.FromName)
  return fromname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CReceiveInvite_121::release_fromname() {
  // @@protoc_insertion_point(field_release:pb.S2CReceiveInvite_121.FromName)
  
  return fromname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CReceiveInvite_121::set_allocated_fromname(::std::string* fromname) {
  if (fromname != NULL) {
    
  } else {
    
  }
  fromname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromname);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CReceiveInvite_121.FromName)
}

// optional uint32 ExpiresIn = 3;
void S2CReceiveInvite_121::clear_expiresin() {
  expiresin_ = 0u;
}
 ::google::protobuf::uint32 S2CReceiveInvite_121::expiresin() const {
  // @@protoc_insertion_point(field_get:pb.S2CReceiveInvite_121.ExpiresIn)
  return expiresin_;
}
 void S2CReceiveInvite_121::set_expiresin(::google::protobuf::uint32 value) {
  
  expiresin_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CReceiveInvite_121.ExpiresIn)
}

// optional uint32 Mount = 4;
void S2CReceiveInvite_121::clear_mount() {
  mount_ = 0u;
}
 ::google::protobuf::uint32 S2CReceiveInvite_121::mount() const {
  // @@protoc_insertion_point(field_get:pb.S2CReceiveInvite_121.Mount)
  return mount_;
}
 void S2CReceiveInvite_121::set_mount(::google::protobuf::uint32 value) {
  
  mount_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CReceiveInvite_121.Mount)
}

// optional uint32 Lv = 5;
void S2CReceiveInvite_121::clear_lv() {
  lv_ = 0u;
}
 ::google::protobuf::uint32 S2CReceiveInvite_121::lv() const {
  // @@protoc_insertion_point(field_get:pb.S2CReceiveInvite_121.Lv)
  return lv_;
}
 void S2CReceiveInvite_121::set_lv(::google::protobuf::uint32 value) {
  
  lv_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CReceiveInvite_121.Lv)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SAgreeInvite_122::kTeamIdFieldNumber;
const int C2SAgreeInvite_122::kOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SAgreeInvite_122::C2SAgreeInvite_122()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SAgreeInvite_122)
}

void C2SAgreeInvite_122::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SAgreeInvite_122::C2SAgreeInvite_122(const C2SAgreeInvite_122& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SAgreeInvite_122)
}

void C2SAgreeInvite_122::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  teamid_ = GOOGLE_ULONGLONG(0);
  op_ = 0u;
}

C2SAgreeInvite_122::~C2SAgreeInvite_122() {
  // @@protoc_insertion_point(destructor:pb.C2SAgreeInvite_122)
  SharedDtor();
}

void C2SAgreeInvite_122::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SAgreeInvite_122::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SAgreeInvite_122::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SAgreeInvite_122_descriptor_;
}

const C2SAgreeInvite_122& C2SAgreeInvite_122::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SAgreeInvite_122* C2SAgreeInvite_122::default_instance_ = NULL;

C2SAgreeInvite_122* C2SAgreeInvite_122::New(::google::protobuf::Arena* arena) const {
  C2SAgreeInvite_122* n = new C2SAgreeInvite_122;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SAgreeInvite_122::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SAgreeInvite_122)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(C2SAgreeInvite_122, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<C2SAgreeInvite_122*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(teamid_, op_);

#undef ZR_HELPER_
#undef ZR_

}

bool C2SAgreeInvite_122::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SAgreeInvite_122)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 TeamId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Op;
        break;
      }

      // optional uint32 Op = 2;
      case 2: {
        if (tag == 16) {
         parse_Op:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &op_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SAgreeInvite_122)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SAgreeInvite_122)
  return false;
#undef DO_
}

void C2SAgreeInvite_122::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SAgreeInvite_122)
  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamid(), output);
  }

  // optional uint32 Op = 2;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->op(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SAgreeInvite_122)
}

::google::protobuf::uint8* C2SAgreeInvite_122::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SAgreeInvite_122)
  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamid(), target);
  }

  // optional uint32 Op = 2;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->op(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SAgreeInvite_122)
  return target;
}

int C2SAgreeInvite_122::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SAgreeInvite_122)
  int total_size = 0;

  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamid());
  }

  // optional uint32 Op = 2;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->op());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SAgreeInvite_122::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SAgreeInvite_122)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SAgreeInvite_122* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SAgreeInvite_122>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SAgreeInvite_122)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SAgreeInvite_122)
    MergeFrom(*source);
  }
}

void C2SAgreeInvite_122::MergeFrom(const C2SAgreeInvite_122& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SAgreeInvite_122)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
}

void C2SAgreeInvite_122::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SAgreeInvite_122)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SAgreeInvite_122::CopyFrom(const C2SAgreeInvite_122& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SAgreeInvite_122)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SAgreeInvite_122::IsInitialized() const {

  return true;
}

void C2SAgreeInvite_122::Swap(C2SAgreeInvite_122* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SAgreeInvite_122::InternalSwap(C2SAgreeInvite_122* other) {
  std::swap(teamid_, other->teamid_);
  std::swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SAgreeInvite_122::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SAgreeInvite_122_descriptor_;
  metadata.reflection = C2SAgreeInvite_122_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SAgreeInvite_122

// optional uint64 TeamId = 1;
void C2SAgreeInvite_122::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 C2SAgreeInvite_122::teamid() const {
  // @@protoc_insertion_point(field_get:pb.C2SAgreeInvite_122.TeamId)
  return teamid_;
}
 void C2SAgreeInvite_122::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SAgreeInvite_122.TeamId)
}

// optional uint32 Op = 2;
void C2SAgreeInvite_122::clear_op() {
  op_ = 0u;
}
 ::google::protobuf::uint32 C2SAgreeInvite_122::op() const {
  // @@protoc_insertion_point(field_get:pb.C2SAgreeInvite_122.Op)
  return op_;
}
 void C2SAgreeInvite_122::set_op(::google::protobuf::uint32 value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SAgreeInvite_122.Op)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CAgreeInvite_122::kTeamIdFieldNumber;
const int S2CAgreeInvite_122::kInfoFieldNumber;
const int S2CAgreeInvite_122::kOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CAgreeInvite_122::S2CAgreeInvite_122()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CAgreeInvite_122)
}

void S2CAgreeInvite_122::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  info_ = const_cast< ::pb::PTeammateInfo*>(&::pb::PTeammateInfo::default_instance());
}

S2CAgreeInvite_122::S2CAgreeInvite_122(const S2CAgreeInvite_122& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CAgreeInvite_122)
}

void S2CAgreeInvite_122::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  teamid_ = GOOGLE_ULONGLONG(0);
  info_ = NULL;
  op_ = 0u;
}

S2CAgreeInvite_122::~S2CAgreeInvite_122() {
  // @@protoc_insertion_point(destructor:pb.S2CAgreeInvite_122)
  SharedDtor();
}

void S2CAgreeInvite_122::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void S2CAgreeInvite_122::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CAgreeInvite_122::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CAgreeInvite_122_descriptor_;
}

const S2CAgreeInvite_122& S2CAgreeInvite_122::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CAgreeInvite_122* S2CAgreeInvite_122::default_instance_ = NULL;

S2CAgreeInvite_122* S2CAgreeInvite_122::New(::google::protobuf::Arena* arena) const {
  S2CAgreeInvite_122* n = new S2CAgreeInvite_122;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CAgreeInvite_122::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CAgreeInvite_122)
  teamid_ = GOOGLE_ULONGLONG(0);
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
  op_ = 0u;
}

bool S2CAgreeInvite_122::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CAgreeInvite_122)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 TeamId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Info;
        break;
      }

      // optional .pb.PTeammateInfo Info = 2;
      case 2: {
        if (tag == 18) {
         parse_Info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Op;
        break;
      }

      // optional uint32 Op = 3;
      case 3: {
        if (tag == 24) {
         parse_Op:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &op_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CAgreeInvite_122)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CAgreeInvite_122)
  return false;
#undef DO_
}

void S2CAgreeInvite_122::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CAgreeInvite_122)
  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamid(), output);
  }

  // optional .pb.PTeammateInfo Info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  // optional uint32 Op = 3;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->op(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CAgreeInvite_122)
}

::google::protobuf::uint8* S2CAgreeInvite_122::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CAgreeInvite_122)
  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamid(), target);
  }

  // optional .pb.PTeammateInfo Info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, false, target);
  }

  // optional uint32 Op = 3;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->op(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CAgreeInvite_122)
  return target;
}

int S2CAgreeInvite_122::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CAgreeInvite_122)
  int total_size = 0;

  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamid());
  }

  // optional .pb.PTeammateInfo Info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // optional uint32 Op = 3;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->op());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CAgreeInvite_122::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CAgreeInvite_122)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CAgreeInvite_122* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CAgreeInvite_122>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CAgreeInvite_122)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CAgreeInvite_122)
    MergeFrom(*source);
  }
}

void S2CAgreeInvite_122::MergeFrom(const S2CAgreeInvite_122& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CAgreeInvite_122)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
  if (from.has_info()) {
    mutable_info()->::pb::PTeammateInfo::MergeFrom(from.info());
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
}

void S2CAgreeInvite_122::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CAgreeInvite_122)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CAgreeInvite_122::CopyFrom(const S2CAgreeInvite_122& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CAgreeInvite_122)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CAgreeInvite_122::IsInitialized() const {

  return true;
}

void S2CAgreeInvite_122::Swap(S2CAgreeInvite_122* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CAgreeInvite_122::InternalSwap(S2CAgreeInvite_122* other) {
  std::swap(teamid_, other->teamid_);
  std::swap(info_, other->info_);
  std::swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CAgreeInvite_122::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CAgreeInvite_122_descriptor_;
  metadata.reflection = S2CAgreeInvite_122_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CAgreeInvite_122

// optional uint64 TeamId = 1;
void S2CAgreeInvite_122::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CAgreeInvite_122::teamid() const {
  // @@protoc_insertion_point(field_get:pb.S2CAgreeInvite_122.TeamId)
  return teamid_;
}
 void S2CAgreeInvite_122::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CAgreeInvite_122.TeamId)
}

// optional .pb.PTeammateInfo Info = 2;
bool S2CAgreeInvite_122::has_info() const {
  return !_is_default_instance_ && info_ != NULL;
}
void S2CAgreeInvite_122::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::pb::PTeammateInfo& S2CAgreeInvite_122::info() const {
  // @@protoc_insertion_point(field_get:pb.S2CAgreeInvite_122.Info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
::pb::PTeammateInfo* S2CAgreeInvite_122::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::pb::PTeammateInfo;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CAgreeInvite_122.Info)
  return info_;
}
::pb::PTeammateInfo* S2CAgreeInvite_122::release_info() {
  // @@protoc_insertion_point(field_release:pb.S2CAgreeInvite_122.Info)
  
  ::pb::PTeammateInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void S2CAgreeInvite_122::set_allocated_info(::pb::PTeammateInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CAgreeInvite_122.Info)
}

// optional uint32 Op = 3;
void S2CAgreeInvite_122::clear_op() {
  op_ = 0u;
}
 ::google::protobuf::uint32 S2CAgreeInvite_122::op() const {
  // @@protoc_insertion_point(field_get:pb.S2CAgreeInvite_122.Op)
  return op_;
}
 void S2CAgreeInvite_122::set_op(::google::protobuf::uint32 value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CAgreeInvite_122.Op)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CJoinTeam_123::kTeamIdFieldNumber;
const int S2CJoinTeam_123::kCaptainRidFieldNumber;
const int S2CJoinTeam_123::kIsTopFieldNumber;
const int S2CJoinTeam_123::kTeammateListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CJoinTeam_123::S2CJoinTeam_123()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CJoinTeam_123)
}

void S2CJoinTeam_123::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CJoinTeam_123::S2CJoinTeam_123(const S2CJoinTeam_123& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CJoinTeam_123)
}

void S2CJoinTeam_123::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  teamid_ = GOOGLE_ULONGLONG(0);
  captainrid_ = GOOGLE_ULONGLONG(0);
  istop_ = false;
}

S2CJoinTeam_123::~S2CJoinTeam_123() {
  // @@protoc_insertion_point(destructor:pb.S2CJoinTeam_123)
  SharedDtor();
}

void S2CJoinTeam_123::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CJoinTeam_123::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CJoinTeam_123::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CJoinTeam_123_descriptor_;
}

const S2CJoinTeam_123& S2CJoinTeam_123::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CJoinTeam_123* S2CJoinTeam_123::default_instance_ = NULL;

S2CJoinTeam_123* S2CJoinTeam_123::New(::google::protobuf::Arena* arena) const {
  S2CJoinTeam_123* n = new S2CJoinTeam_123;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CJoinTeam_123::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CJoinTeam_123)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CJoinTeam_123, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CJoinTeam_123*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(teamid_, captainrid_);
  istop_ = false;

#undef ZR_HELPER_
#undef ZR_

  teammatelist_.Clear();
}

bool S2CJoinTeam_123::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CJoinTeam_123)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 TeamId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CaptainRid;
        break;
      }

      // optional uint64 CaptainRid = 2;
      case 2: {
        if (tag == 16) {
         parse_CaptainRid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &captainrid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_IsTop;
        break;
      }

      // optional bool IsTop = 3;
      case 3: {
        if (tag == 24) {
         parse_IsTop:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &istop_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_TeammateList;
        break;
      }

      // repeated .pb.PTeammateInfo TeammateList = 4;
      case 4: {
        if (tag == 34) {
         parse_TeammateList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_TeammateList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_teammatelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_TeammateList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CJoinTeam_123)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CJoinTeam_123)
  return false;
#undef DO_
}

void S2CJoinTeam_123::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CJoinTeam_123)
  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamid(), output);
  }

  // optional uint64 CaptainRid = 2;
  if (this->captainrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->captainrid(), output);
  }

  // optional bool IsTop = 3;
  if (this->istop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->istop(), output);
  }

  // repeated .pb.PTeammateInfo TeammateList = 4;
  for (unsigned int i = 0, n = this->teammatelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->teammatelist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CJoinTeam_123)
}

::google::protobuf::uint8* S2CJoinTeam_123::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CJoinTeam_123)
  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamid(), target);
  }

  // optional uint64 CaptainRid = 2;
  if (this->captainrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->captainrid(), target);
  }

  // optional bool IsTop = 3;
  if (this->istop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->istop(), target);
  }

  // repeated .pb.PTeammateInfo TeammateList = 4;
  for (unsigned int i = 0, n = this->teammatelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->teammatelist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CJoinTeam_123)
  return target;
}

int S2CJoinTeam_123::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CJoinTeam_123)
  int total_size = 0;

  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamid());
  }

  // optional uint64 CaptainRid = 2;
  if (this->captainrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->captainrid());
  }

  // optional bool IsTop = 3;
  if (this->istop() != 0) {
    total_size += 1 + 1;
  }

  // repeated .pb.PTeammateInfo TeammateList = 4;
  total_size += 1 * this->teammatelist_size();
  for (int i = 0; i < this->teammatelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->teammatelist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CJoinTeam_123::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CJoinTeam_123)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CJoinTeam_123* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CJoinTeam_123>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CJoinTeam_123)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CJoinTeam_123)
    MergeFrom(*source);
  }
}

void S2CJoinTeam_123::MergeFrom(const S2CJoinTeam_123& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CJoinTeam_123)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  teammatelist_.MergeFrom(from.teammatelist_);
  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
  if (from.captainrid() != 0) {
    set_captainrid(from.captainrid());
  }
  if (from.istop() != 0) {
    set_istop(from.istop());
  }
}

void S2CJoinTeam_123::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CJoinTeam_123)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CJoinTeam_123::CopyFrom(const S2CJoinTeam_123& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CJoinTeam_123)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CJoinTeam_123::IsInitialized() const {

  return true;
}

void S2CJoinTeam_123::Swap(S2CJoinTeam_123* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CJoinTeam_123::InternalSwap(S2CJoinTeam_123* other) {
  std::swap(teamid_, other->teamid_);
  std::swap(captainrid_, other->captainrid_);
  std::swap(istop_, other->istop_);
  teammatelist_.UnsafeArenaSwap(&other->teammatelist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CJoinTeam_123::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CJoinTeam_123_descriptor_;
  metadata.reflection = S2CJoinTeam_123_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CJoinTeam_123

// optional uint64 TeamId = 1;
void S2CJoinTeam_123::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CJoinTeam_123::teamid() const {
  // @@protoc_insertion_point(field_get:pb.S2CJoinTeam_123.TeamId)
  return teamid_;
}
 void S2CJoinTeam_123::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CJoinTeam_123.TeamId)
}

// optional uint64 CaptainRid = 2;
void S2CJoinTeam_123::clear_captainrid() {
  captainrid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CJoinTeam_123::captainrid() const {
  // @@protoc_insertion_point(field_get:pb.S2CJoinTeam_123.CaptainRid)
  return captainrid_;
}
 void S2CJoinTeam_123::set_captainrid(::google::protobuf::uint64 value) {
  
  captainrid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CJoinTeam_123.CaptainRid)
}

// optional bool IsTop = 3;
void S2CJoinTeam_123::clear_istop() {
  istop_ = false;
}
 bool S2CJoinTeam_123::istop() const {
  // @@protoc_insertion_point(field_get:pb.S2CJoinTeam_123.IsTop)
  return istop_;
}
 void S2CJoinTeam_123::set_istop(bool value) {
  
  istop_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CJoinTeam_123.IsTop)
}

// repeated .pb.PTeammateInfo TeammateList = 4;
int S2CJoinTeam_123::teammatelist_size() const {
  return teammatelist_.size();
}
void S2CJoinTeam_123::clear_teammatelist() {
  teammatelist_.Clear();
}
const ::pb::PTeammateInfo& S2CJoinTeam_123::teammatelist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CJoinTeam_123.TeammateList)
  return teammatelist_.Get(index);
}
::pb::PTeammateInfo* S2CJoinTeam_123::mutable_teammatelist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CJoinTeam_123.TeammateList)
  return teammatelist_.Mutable(index);
}
::pb::PTeammateInfo* S2CJoinTeam_123::add_teammatelist() {
  // @@protoc_insertion_point(field_add:pb.S2CJoinTeam_123.TeammateList)
  return teammatelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::PTeammateInfo >*
S2CJoinTeam_123::mutable_teammatelist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CJoinTeam_123.TeammateList)
  return &teammatelist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::PTeammateInfo >&
S2CJoinTeam_123::teammatelist() const {
  // @@protoc_insertion_point(field_list:pb.S2CJoinTeam_123.TeammateList)
  return teammatelist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SCancelInvite_124::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SCancelInvite_124::C2SCancelInvite_124()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SCancelInvite_124)
}

void C2SCancelInvite_124::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SCancelInvite_124::C2SCancelInvite_124(const C2SCancelInvite_124& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SCancelInvite_124)
}

void C2SCancelInvite_124::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
}

C2SCancelInvite_124::~C2SCancelInvite_124() {
  // @@protoc_insertion_point(destructor:pb.C2SCancelInvite_124)
  SharedDtor();
}

void C2SCancelInvite_124::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SCancelInvite_124::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SCancelInvite_124::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SCancelInvite_124_descriptor_;
}

const C2SCancelInvite_124& C2SCancelInvite_124::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SCancelInvite_124* C2SCancelInvite_124::default_instance_ = NULL;

C2SCancelInvite_124* C2SCancelInvite_124::New(::google::protobuf::Arena* arena) const {
  C2SCancelInvite_124* n = new C2SCancelInvite_124;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SCancelInvite_124::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SCancelInvite_124)
  rid_ = GOOGLE_ULONGLONG(0);
}

bool C2SCancelInvite_124::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SCancelInvite_124)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SCancelInvite_124)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SCancelInvite_124)
  return false;
#undef DO_
}

void C2SCancelInvite_124::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SCancelInvite_124)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SCancelInvite_124)
}

::google::protobuf::uint8* C2SCancelInvite_124::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SCancelInvite_124)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SCancelInvite_124)
  return target;
}

int C2SCancelInvite_124::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SCancelInvite_124)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SCancelInvite_124::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SCancelInvite_124)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SCancelInvite_124* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SCancelInvite_124>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SCancelInvite_124)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SCancelInvite_124)
    MergeFrom(*source);
  }
}

void C2SCancelInvite_124::MergeFrom(const C2SCancelInvite_124& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SCancelInvite_124)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void C2SCancelInvite_124::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SCancelInvite_124)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SCancelInvite_124::CopyFrom(const C2SCancelInvite_124& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SCancelInvite_124)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SCancelInvite_124::IsInitialized() const {

  return true;
}

void C2SCancelInvite_124::Swap(C2SCancelInvite_124* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SCancelInvite_124::InternalSwap(C2SCancelInvite_124* other) {
  std::swap(rid_, other->rid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SCancelInvite_124::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SCancelInvite_124_descriptor_;
  metadata.reflection = C2SCancelInvite_124_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SCancelInvite_124

// optional uint64 Rid = 1;
void C2SCancelInvite_124::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 C2SCancelInvite_124::rid() const {
  // @@protoc_insertion_point(field_get:pb.C2SCancelInvite_124.Rid)
  return rid_;
}
 void C2SCancelInvite_124::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SCancelInvite_124.Rid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CCancelInvite_124::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CCancelInvite_124::S2CCancelInvite_124()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CCancelInvite_124)
}

void S2CCancelInvite_124::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CCancelInvite_124::S2CCancelInvite_124(const S2CCancelInvite_124& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CCancelInvite_124)
}

void S2CCancelInvite_124::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
}

S2CCancelInvite_124::~S2CCancelInvite_124() {
  // @@protoc_insertion_point(destructor:pb.S2CCancelInvite_124)
  SharedDtor();
}

void S2CCancelInvite_124::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CCancelInvite_124::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CCancelInvite_124::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CCancelInvite_124_descriptor_;
}

const S2CCancelInvite_124& S2CCancelInvite_124::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CCancelInvite_124* S2CCancelInvite_124::default_instance_ = NULL;

S2CCancelInvite_124* S2CCancelInvite_124::New(::google::protobuf::Arena* arena) const {
  S2CCancelInvite_124* n = new S2CCancelInvite_124;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CCancelInvite_124::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CCancelInvite_124)
  rid_ = GOOGLE_ULONGLONG(0);
}

bool S2CCancelInvite_124::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CCancelInvite_124)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CCancelInvite_124)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CCancelInvite_124)
  return false;
#undef DO_
}

void S2CCancelInvite_124::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CCancelInvite_124)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CCancelInvite_124)
}

::google::protobuf::uint8* S2CCancelInvite_124::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CCancelInvite_124)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CCancelInvite_124)
  return target;
}

int S2CCancelInvite_124::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CCancelInvite_124)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CCancelInvite_124::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CCancelInvite_124)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CCancelInvite_124* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CCancelInvite_124>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CCancelInvite_124)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CCancelInvite_124)
    MergeFrom(*source);
  }
}

void S2CCancelInvite_124::MergeFrom(const S2CCancelInvite_124& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CCancelInvite_124)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void S2CCancelInvite_124::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CCancelInvite_124)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CCancelInvite_124::CopyFrom(const S2CCancelInvite_124& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CCancelInvite_124)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CCancelInvite_124::IsInitialized() const {

  return true;
}

void S2CCancelInvite_124::Swap(S2CCancelInvite_124* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CCancelInvite_124::InternalSwap(S2CCancelInvite_124* other) {
  std::swap(rid_, other->rid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CCancelInvite_124::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CCancelInvite_124_descriptor_;
  metadata.reflection = S2CCancelInvite_124_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CCancelInvite_124

// optional uint64 Rid = 1;
void S2CCancelInvite_124::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CCancelInvite_124::rid() const {
  // @@protoc_insertion_point(field_get:pb.S2CCancelInvite_124.Rid)
  return rid_;
}
 void S2CCancelInvite_124::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CCancelInvite_124.Rid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SKickPlayer_125::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SKickPlayer_125::C2SKickPlayer_125()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SKickPlayer_125)
}

void C2SKickPlayer_125::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SKickPlayer_125::C2SKickPlayer_125(const C2SKickPlayer_125& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SKickPlayer_125)
}

void C2SKickPlayer_125::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
}

C2SKickPlayer_125::~C2SKickPlayer_125() {
  // @@protoc_insertion_point(destructor:pb.C2SKickPlayer_125)
  SharedDtor();
}

void C2SKickPlayer_125::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SKickPlayer_125::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SKickPlayer_125::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SKickPlayer_125_descriptor_;
}

const C2SKickPlayer_125& C2SKickPlayer_125::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SKickPlayer_125* C2SKickPlayer_125::default_instance_ = NULL;

C2SKickPlayer_125* C2SKickPlayer_125::New(::google::protobuf::Arena* arena) const {
  C2SKickPlayer_125* n = new C2SKickPlayer_125;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SKickPlayer_125::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SKickPlayer_125)
  rid_ = GOOGLE_ULONGLONG(0);
}

bool C2SKickPlayer_125::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SKickPlayer_125)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SKickPlayer_125)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SKickPlayer_125)
  return false;
#undef DO_
}

void C2SKickPlayer_125::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SKickPlayer_125)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SKickPlayer_125)
}

::google::protobuf::uint8* C2SKickPlayer_125::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SKickPlayer_125)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SKickPlayer_125)
  return target;
}

int C2SKickPlayer_125::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SKickPlayer_125)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SKickPlayer_125::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SKickPlayer_125)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SKickPlayer_125* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SKickPlayer_125>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SKickPlayer_125)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SKickPlayer_125)
    MergeFrom(*source);
  }
}

void C2SKickPlayer_125::MergeFrom(const C2SKickPlayer_125& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SKickPlayer_125)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void C2SKickPlayer_125::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SKickPlayer_125)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SKickPlayer_125::CopyFrom(const C2SKickPlayer_125& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SKickPlayer_125)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SKickPlayer_125::IsInitialized() const {

  return true;
}

void C2SKickPlayer_125::Swap(C2SKickPlayer_125* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SKickPlayer_125::InternalSwap(C2SKickPlayer_125* other) {
  std::swap(rid_, other->rid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SKickPlayer_125::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SKickPlayer_125_descriptor_;
  metadata.reflection = C2SKickPlayer_125_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SKickPlayer_125

// optional uint64 Rid = 1;
void C2SKickPlayer_125::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 C2SKickPlayer_125::rid() const {
  // @@protoc_insertion_point(field_get:pb.C2SKickPlayer_125.Rid)
  return rid_;
}
 void C2SKickPlayer_125::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SKickPlayer_125.Rid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CKickPlayer_125::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CKickPlayer_125::S2CKickPlayer_125()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CKickPlayer_125)
}

void S2CKickPlayer_125::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CKickPlayer_125::S2CKickPlayer_125(const S2CKickPlayer_125& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CKickPlayer_125)
}

void S2CKickPlayer_125::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
}

S2CKickPlayer_125::~S2CKickPlayer_125() {
  // @@protoc_insertion_point(destructor:pb.S2CKickPlayer_125)
  SharedDtor();
}

void S2CKickPlayer_125::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CKickPlayer_125::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CKickPlayer_125::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CKickPlayer_125_descriptor_;
}

const S2CKickPlayer_125& S2CKickPlayer_125::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CKickPlayer_125* S2CKickPlayer_125::default_instance_ = NULL;

S2CKickPlayer_125* S2CKickPlayer_125::New(::google::protobuf::Arena* arena) const {
  S2CKickPlayer_125* n = new S2CKickPlayer_125;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CKickPlayer_125::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CKickPlayer_125)
  rid_ = GOOGLE_ULONGLONG(0);
}

bool S2CKickPlayer_125::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CKickPlayer_125)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CKickPlayer_125)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CKickPlayer_125)
  return false;
#undef DO_
}

void S2CKickPlayer_125::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CKickPlayer_125)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CKickPlayer_125)
}

::google::protobuf::uint8* S2CKickPlayer_125::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CKickPlayer_125)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CKickPlayer_125)
  return target;
}

int S2CKickPlayer_125::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CKickPlayer_125)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CKickPlayer_125::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CKickPlayer_125)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CKickPlayer_125* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CKickPlayer_125>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CKickPlayer_125)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CKickPlayer_125)
    MergeFrom(*source);
  }
}

void S2CKickPlayer_125::MergeFrom(const S2CKickPlayer_125& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CKickPlayer_125)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void S2CKickPlayer_125::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CKickPlayer_125)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CKickPlayer_125::CopyFrom(const S2CKickPlayer_125& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CKickPlayer_125)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CKickPlayer_125::IsInitialized() const {

  return true;
}

void S2CKickPlayer_125::Swap(S2CKickPlayer_125* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CKickPlayer_125::InternalSwap(S2CKickPlayer_125* other) {
  std::swap(rid_, other->rid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CKickPlayer_125::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CKickPlayer_125_descriptor_;
  metadata.reflection = S2CKickPlayer_125_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CKickPlayer_125

// optional uint64 Rid = 1;
void S2CKickPlayer_125::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CKickPlayer_125::rid() const {
  // @@protoc_insertion_point(field_get:pb.S2CKickPlayer_125.Rid)
  return rid_;
}
 void S2CKickPlayer_125::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CKickPlayer_125.Rid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SLeaveTeam_126::C2SLeaveTeam_126()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SLeaveTeam_126)
}

void C2SLeaveTeam_126::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SLeaveTeam_126::C2SLeaveTeam_126(const C2SLeaveTeam_126& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SLeaveTeam_126)
}

void C2SLeaveTeam_126::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SLeaveTeam_126::~C2SLeaveTeam_126() {
  // @@protoc_insertion_point(destructor:pb.C2SLeaveTeam_126)
  SharedDtor();
}

void C2SLeaveTeam_126::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SLeaveTeam_126::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SLeaveTeam_126::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SLeaveTeam_126_descriptor_;
}

const C2SLeaveTeam_126& C2SLeaveTeam_126::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SLeaveTeam_126* C2SLeaveTeam_126::default_instance_ = NULL;

C2SLeaveTeam_126* C2SLeaveTeam_126::New(::google::protobuf::Arena* arena) const {
  C2SLeaveTeam_126* n = new C2SLeaveTeam_126;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SLeaveTeam_126::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SLeaveTeam_126)
}

bool C2SLeaveTeam_126::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SLeaveTeam_126)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SLeaveTeam_126)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SLeaveTeam_126)
  return false;
#undef DO_
}

void C2SLeaveTeam_126::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SLeaveTeam_126)
  // @@protoc_insertion_point(serialize_end:pb.C2SLeaveTeam_126)
}

::google::protobuf::uint8* C2SLeaveTeam_126::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SLeaveTeam_126)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SLeaveTeam_126)
  return target;
}

int C2SLeaveTeam_126::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SLeaveTeam_126)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SLeaveTeam_126::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SLeaveTeam_126)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SLeaveTeam_126* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SLeaveTeam_126>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SLeaveTeam_126)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SLeaveTeam_126)
    MergeFrom(*source);
  }
}

void C2SLeaveTeam_126::MergeFrom(const C2SLeaveTeam_126& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SLeaveTeam_126)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SLeaveTeam_126::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SLeaveTeam_126)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SLeaveTeam_126::CopyFrom(const C2SLeaveTeam_126& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SLeaveTeam_126)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SLeaveTeam_126::IsInitialized() const {

  return true;
}

void C2SLeaveTeam_126::Swap(C2SLeaveTeam_126* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SLeaveTeam_126::InternalSwap(C2SLeaveTeam_126* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SLeaveTeam_126::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SLeaveTeam_126_descriptor_;
  metadata.reflection = C2SLeaveTeam_126_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SLeaveTeam_126

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CLeaveTeam_126::kRidFieldNumber;
const int S2CLeaveTeam_126::kCaptainRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CLeaveTeam_126::S2CLeaveTeam_126()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CLeaveTeam_126)
}

void S2CLeaveTeam_126::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CLeaveTeam_126::S2CLeaveTeam_126(const S2CLeaveTeam_126& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CLeaveTeam_126)
}

void S2CLeaveTeam_126::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
  captainrid_ = GOOGLE_ULONGLONG(0);
}

S2CLeaveTeam_126::~S2CLeaveTeam_126() {
  // @@protoc_insertion_point(destructor:pb.S2CLeaveTeam_126)
  SharedDtor();
}

void S2CLeaveTeam_126::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CLeaveTeam_126::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CLeaveTeam_126::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CLeaveTeam_126_descriptor_;
}

const S2CLeaveTeam_126& S2CLeaveTeam_126::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CLeaveTeam_126* S2CLeaveTeam_126::default_instance_ = NULL;

S2CLeaveTeam_126* S2CLeaveTeam_126::New(::google::protobuf::Arena* arena) const {
  S2CLeaveTeam_126* n = new S2CLeaveTeam_126;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CLeaveTeam_126::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CLeaveTeam_126)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CLeaveTeam_126, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CLeaveTeam_126*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rid_, captainrid_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2CLeaveTeam_126::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CLeaveTeam_126)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CaptainRid;
        break;
      }

      // optional uint64 CaptainRid = 2;
      case 2: {
        if (tag == 16) {
         parse_CaptainRid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &captainrid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CLeaveTeam_126)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CLeaveTeam_126)
  return false;
#undef DO_
}

void S2CLeaveTeam_126::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CLeaveTeam_126)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // optional uint64 CaptainRid = 2;
  if (this->captainrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->captainrid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CLeaveTeam_126)
}

::google::protobuf::uint8* S2CLeaveTeam_126::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CLeaveTeam_126)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // optional uint64 CaptainRid = 2;
  if (this->captainrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->captainrid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CLeaveTeam_126)
  return target;
}

int S2CLeaveTeam_126::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CLeaveTeam_126)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  // optional uint64 CaptainRid = 2;
  if (this->captainrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->captainrid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CLeaveTeam_126::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CLeaveTeam_126)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CLeaveTeam_126* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CLeaveTeam_126>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CLeaveTeam_126)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CLeaveTeam_126)
    MergeFrom(*source);
  }
}

void S2CLeaveTeam_126::MergeFrom(const S2CLeaveTeam_126& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CLeaveTeam_126)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.captainrid() != 0) {
    set_captainrid(from.captainrid());
  }
}

void S2CLeaveTeam_126::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CLeaveTeam_126)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CLeaveTeam_126::CopyFrom(const S2CLeaveTeam_126& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CLeaveTeam_126)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CLeaveTeam_126::IsInitialized() const {

  return true;
}

void S2CLeaveTeam_126::Swap(S2CLeaveTeam_126* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CLeaveTeam_126::InternalSwap(S2CLeaveTeam_126* other) {
  std::swap(rid_, other->rid_);
  std::swap(captainrid_, other->captainrid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CLeaveTeam_126::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CLeaveTeam_126_descriptor_;
  metadata.reflection = S2CLeaveTeam_126_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CLeaveTeam_126

// optional uint64 Rid = 1;
void S2CLeaveTeam_126::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CLeaveTeam_126::rid() const {
  // @@protoc_insertion_point(field_get:pb.S2CLeaveTeam_126.Rid)
  return rid_;
}
 void S2CLeaveTeam_126::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CLeaveTeam_126.Rid)
}

// optional uint64 CaptainRid = 2;
void S2CLeaveTeam_126::clear_captainrid() {
  captainrid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CLeaveTeam_126::captainrid() const {
  // @@protoc_insertion_point(field_get:pb.S2CLeaveTeam_126.CaptainRid)
  return captainrid_;
}
 void S2CLeaveTeam_126::set_captainrid(::google::protobuf::uint64 value) {
  
  captainrid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CLeaveTeam_126.CaptainRid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CCancelInvite_127::kTeamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CCancelInvite_127::S2CCancelInvite_127()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CCancelInvite_127)
}

void S2CCancelInvite_127::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CCancelInvite_127::S2CCancelInvite_127(const S2CCancelInvite_127& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CCancelInvite_127)
}

void S2CCancelInvite_127::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  teamid_ = GOOGLE_ULONGLONG(0);
}

S2CCancelInvite_127::~S2CCancelInvite_127() {
  // @@protoc_insertion_point(destructor:pb.S2CCancelInvite_127)
  SharedDtor();
}

void S2CCancelInvite_127::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CCancelInvite_127::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CCancelInvite_127::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CCancelInvite_127_descriptor_;
}

const S2CCancelInvite_127& S2CCancelInvite_127::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CCancelInvite_127* S2CCancelInvite_127::default_instance_ = NULL;

S2CCancelInvite_127* S2CCancelInvite_127::New(::google::protobuf::Arena* arena) const {
  S2CCancelInvite_127* n = new S2CCancelInvite_127;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CCancelInvite_127::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CCancelInvite_127)
  teamid_ = GOOGLE_ULONGLONG(0);
}

bool S2CCancelInvite_127::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CCancelInvite_127)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 TeamId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CCancelInvite_127)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CCancelInvite_127)
  return false;
#undef DO_
}

void S2CCancelInvite_127::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CCancelInvite_127)
  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CCancelInvite_127)
}

::google::protobuf::uint8* S2CCancelInvite_127::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CCancelInvite_127)
  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CCancelInvite_127)
  return target;
}

int S2CCancelInvite_127::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CCancelInvite_127)
  int total_size = 0;

  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CCancelInvite_127::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CCancelInvite_127)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CCancelInvite_127* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CCancelInvite_127>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CCancelInvite_127)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CCancelInvite_127)
    MergeFrom(*source);
  }
}

void S2CCancelInvite_127::MergeFrom(const S2CCancelInvite_127& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CCancelInvite_127)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
}

void S2CCancelInvite_127::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CCancelInvite_127)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CCancelInvite_127::CopyFrom(const S2CCancelInvite_127& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CCancelInvite_127)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CCancelInvite_127::IsInitialized() const {

  return true;
}

void S2CCancelInvite_127::Swap(S2CCancelInvite_127* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CCancelInvite_127::InternalSwap(S2CCancelInvite_127* other) {
  std::swap(teamid_, other->teamid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CCancelInvite_127::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CCancelInvite_127_descriptor_;
  metadata.reflection = S2CCancelInvite_127_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CCancelInvite_127

// optional uint64 TeamId = 1;
void S2CCancelInvite_127::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CCancelInvite_127::teamid() const {
  // @@protoc_insertion_point(field_get:pb.S2CCancelInvite_127.TeamId)
  return teamid_;
}
 void S2CCancelInvite_127::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CCancelInvite_127.TeamId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CPlayerBatState_128::kRidFieldNumber;
const int S2CPlayerBatState_128::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CPlayerBatState_128::S2CPlayerBatState_128()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CPlayerBatState_128)
}

void S2CPlayerBatState_128::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CPlayerBatState_128::S2CPlayerBatState_128(const S2CPlayerBatState_128& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CPlayerBatState_128)
}

void S2CPlayerBatState_128::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
  state_ = 0u;
}

S2CPlayerBatState_128::~S2CPlayerBatState_128() {
  // @@protoc_insertion_point(destructor:pb.S2CPlayerBatState_128)
  SharedDtor();
}

void S2CPlayerBatState_128::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CPlayerBatState_128::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CPlayerBatState_128::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CPlayerBatState_128_descriptor_;
}

const S2CPlayerBatState_128& S2CPlayerBatState_128::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CPlayerBatState_128* S2CPlayerBatState_128::default_instance_ = NULL;

S2CPlayerBatState_128* S2CPlayerBatState_128::New(::google::protobuf::Arena* arena) const {
  S2CPlayerBatState_128* n = new S2CPlayerBatState_128;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CPlayerBatState_128::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CPlayerBatState_128)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CPlayerBatState_128, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CPlayerBatState_128*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rid_, state_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2CPlayerBatState_128::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CPlayerBatState_128)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_State;
        break;
      }

      // optional uint32 State = 2;
      case 2: {
        if (tag == 16) {
         parse_State:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CPlayerBatState_128)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CPlayerBatState_128)
  return false;
#undef DO_
}

void S2CPlayerBatState_128::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CPlayerBatState_128)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // optional uint32 State = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->state(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CPlayerBatState_128)
}

::google::protobuf::uint8* S2CPlayerBatState_128::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CPlayerBatState_128)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // optional uint32 State = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->state(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CPlayerBatState_128)
  return target;
}

int S2CPlayerBatState_128::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CPlayerBatState_128)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  // optional uint32 State = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CPlayerBatState_128::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CPlayerBatState_128)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CPlayerBatState_128* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CPlayerBatState_128>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CPlayerBatState_128)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CPlayerBatState_128)
    MergeFrom(*source);
  }
}

void S2CPlayerBatState_128::MergeFrom(const S2CPlayerBatState_128& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CPlayerBatState_128)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void S2CPlayerBatState_128::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CPlayerBatState_128)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CPlayerBatState_128::CopyFrom(const S2CPlayerBatState_128& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CPlayerBatState_128)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CPlayerBatState_128::IsInitialized() const {

  return true;
}

void S2CPlayerBatState_128::Swap(S2CPlayerBatState_128* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CPlayerBatState_128::InternalSwap(S2CPlayerBatState_128* other) {
  std::swap(rid_, other->rid_);
  std::swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CPlayerBatState_128::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CPlayerBatState_128_descriptor_;
  metadata.reflection = S2CPlayerBatState_128_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CPlayerBatState_128

// optional uint64 Rid = 1;
void S2CPlayerBatState_128::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CPlayerBatState_128::rid() const {
  // @@protoc_insertion_point(field_get:pb.S2CPlayerBatState_128.Rid)
  return rid_;
}
 void S2CPlayerBatState_128::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CPlayerBatState_128.Rid)
}

// optional uint32 State = 2;
void S2CPlayerBatState_128::clear_state() {
  state_ = 0u;
}
 ::google::protobuf::uint32 S2CPlayerBatState_128::state() const {
  // @@protoc_insertion_point(field_get:pb.S2CPlayerBatState_128.State)
  return state_;
}
 void S2CPlayerBatState_128::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CPlayerBatState_128.State)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SGetTeamAvaList_129::kSearchPatternFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetTeamAvaList_129::C2SGetTeamAvaList_129()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetTeamAvaList_129)
}

void C2SGetTeamAvaList_129::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetTeamAvaList_129::C2SGetTeamAvaList_129(const C2SGetTeamAvaList_129& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetTeamAvaList_129)
}

void C2SGetTeamAvaList_129::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  searchpattern_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2SGetTeamAvaList_129::~C2SGetTeamAvaList_129() {
  // @@protoc_insertion_point(destructor:pb.C2SGetTeamAvaList_129)
  SharedDtor();
}

void C2SGetTeamAvaList_129::SharedDtor() {
  searchpattern_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2SGetTeamAvaList_129::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetTeamAvaList_129::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetTeamAvaList_129_descriptor_;
}

const C2SGetTeamAvaList_129& C2SGetTeamAvaList_129::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetTeamAvaList_129* C2SGetTeamAvaList_129::default_instance_ = NULL;

C2SGetTeamAvaList_129* C2SGetTeamAvaList_129::New(::google::protobuf::Arena* arena) const {
  C2SGetTeamAvaList_129* n = new C2SGetTeamAvaList_129;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetTeamAvaList_129::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetTeamAvaList_129)
  searchpattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2SGetTeamAvaList_129::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetTeamAvaList_129)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string SearchPattern = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_searchpattern()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->searchpattern().data(), this->searchpattern().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SGetTeamAvaList_129.SearchPattern"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetTeamAvaList_129)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetTeamAvaList_129)
  return false;
#undef DO_
}

void C2SGetTeamAvaList_129::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetTeamAvaList_129)
  // optional string SearchPattern = 1;
  if (this->searchpattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->searchpattern().data(), this->searchpattern().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SGetTeamAvaList_129.SearchPattern");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->searchpattern(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SGetTeamAvaList_129)
}

::google::protobuf::uint8* C2SGetTeamAvaList_129::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetTeamAvaList_129)
  // optional string SearchPattern = 1;
  if (this->searchpattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->searchpattern().data(), this->searchpattern().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SGetTeamAvaList_129.SearchPattern");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->searchpattern(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetTeamAvaList_129)
  return target;
}

int C2SGetTeamAvaList_129::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetTeamAvaList_129)
  int total_size = 0;

  // optional string SearchPattern = 1;
  if (this->searchpattern().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->searchpattern());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetTeamAvaList_129::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetTeamAvaList_129)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetTeamAvaList_129* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetTeamAvaList_129>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetTeamAvaList_129)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetTeamAvaList_129)
    MergeFrom(*source);
  }
}

void C2SGetTeamAvaList_129::MergeFrom(const C2SGetTeamAvaList_129& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetTeamAvaList_129)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.searchpattern().size() > 0) {

    searchpattern_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.searchpattern_);
  }
}

void C2SGetTeamAvaList_129::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetTeamAvaList_129)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetTeamAvaList_129::CopyFrom(const C2SGetTeamAvaList_129& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetTeamAvaList_129)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetTeamAvaList_129::IsInitialized() const {

  return true;
}

void C2SGetTeamAvaList_129::Swap(C2SGetTeamAvaList_129* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetTeamAvaList_129::InternalSwap(C2SGetTeamAvaList_129* other) {
  searchpattern_.Swap(&other->searchpattern_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetTeamAvaList_129::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetTeamAvaList_129_descriptor_;
  metadata.reflection = C2SGetTeamAvaList_129_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetTeamAvaList_129

// optional string SearchPattern = 1;
void C2SGetTeamAvaList_129::clear_searchpattern() {
  searchpattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SGetTeamAvaList_129::searchpattern() const {
  // @@protoc_insertion_point(field_get:pb.C2SGetTeamAvaList_129.SearchPattern)
  return searchpattern_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SGetTeamAvaList_129::set_searchpattern(const ::std::string& value) {
  
  searchpattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SGetTeamAvaList_129.SearchPattern)
}
 void C2SGetTeamAvaList_129::set_searchpattern(const char* value) {
  
  searchpattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SGetTeamAvaList_129.SearchPattern)
}
 void C2SGetTeamAvaList_129::set_searchpattern(const char* value, size_t size) {
  
  searchpattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SGetTeamAvaList_129.SearchPattern)
}
 ::std::string* C2SGetTeamAvaList_129::mutable_searchpattern() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SGetTeamAvaList_129.SearchPattern)
  return searchpattern_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SGetTeamAvaList_129::release_searchpattern() {
  // @@protoc_insertion_point(field_release:pb.C2SGetTeamAvaList_129.SearchPattern)
  
  return searchpattern_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SGetTeamAvaList_129::set_allocated_searchpattern(::std::string* searchpattern) {
  if (searchpattern != NULL) {
    
  } else {
    
  }
  searchpattern_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), searchpattern);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SGetTeamAvaList_129.SearchPattern)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetTeamAvaList_129::kTeammateListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetTeamAvaList_129::S2CGetTeamAvaList_129()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetTeamAvaList_129)
}

void S2CGetTeamAvaList_129::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetTeamAvaList_129::S2CGetTeamAvaList_129(const S2CGetTeamAvaList_129& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetTeamAvaList_129)
}

void S2CGetTeamAvaList_129::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CGetTeamAvaList_129::~S2CGetTeamAvaList_129() {
  // @@protoc_insertion_point(destructor:pb.S2CGetTeamAvaList_129)
  SharedDtor();
}

void S2CGetTeamAvaList_129::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetTeamAvaList_129::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetTeamAvaList_129::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetTeamAvaList_129_descriptor_;
}

const S2CGetTeamAvaList_129& S2CGetTeamAvaList_129::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetTeamAvaList_129* S2CGetTeamAvaList_129::default_instance_ = NULL;

S2CGetTeamAvaList_129* S2CGetTeamAvaList_129::New(::google::protobuf::Arena* arena) const {
  S2CGetTeamAvaList_129* n = new S2CGetTeamAvaList_129;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetTeamAvaList_129::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetTeamAvaList_129)
  teammatelist_.Clear();
}

bool S2CGetTeamAvaList_129::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetTeamAvaList_129)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.PTeammateInfo TeammateList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_TeammateList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_teammatelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_TeammateList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetTeamAvaList_129)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetTeamAvaList_129)
  return false;
#undef DO_
}

void S2CGetTeamAvaList_129::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetTeamAvaList_129)
  // repeated .pb.PTeammateInfo TeammateList = 1;
  for (unsigned int i = 0, n = this->teammatelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->teammatelist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetTeamAvaList_129)
}

::google::protobuf::uint8* S2CGetTeamAvaList_129::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetTeamAvaList_129)
  // repeated .pb.PTeammateInfo TeammateList = 1;
  for (unsigned int i = 0, n = this->teammatelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->teammatelist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetTeamAvaList_129)
  return target;
}

int S2CGetTeamAvaList_129::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetTeamAvaList_129)
  int total_size = 0;

  // repeated .pb.PTeammateInfo TeammateList = 1;
  total_size += 1 * this->teammatelist_size();
  for (int i = 0; i < this->teammatelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->teammatelist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetTeamAvaList_129::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetTeamAvaList_129)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetTeamAvaList_129* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetTeamAvaList_129>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetTeamAvaList_129)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetTeamAvaList_129)
    MergeFrom(*source);
  }
}

void S2CGetTeamAvaList_129::MergeFrom(const S2CGetTeamAvaList_129& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetTeamAvaList_129)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  teammatelist_.MergeFrom(from.teammatelist_);
}

void S2CGetTeamAvaList_129::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetTeamAvaList_129)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetTeamAvaList_129::CopyFrom(const S2CGetTeamAvaList_129& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetTeamAvaList_129)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetTeamAvaList_129::IsInitialized() const {

  return true;
}

void S2CGetTeamAvaList_129::Swap(S2CGetTeamAvaList_129* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetTeamAvaList_129::InternalSwap(S2CGetTeamAvaList_129* other) {
  teammatelist_.UnsafeArenaSwap(&other->teammatelist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetTeamAvaList_129::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetTeamAvaList_129_descriptor_;
  metadata.reflection = S2CGetTeamAvaList_129_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetTeamAvaList_129

// repeated .pb.PTeammateInfo TeammateList = 1;
int S2CGetTeamAvaList_129::teammatelist_size() const {
  return teammatelist_.size();
}
void S2CGetTeamAvaList_129::clear_teammatelist() {
  teammatelist_.Clear();
}
const ::pb::PTeammateInfo& S2CGetTeamAvaList_129::teammatelist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetTeamAvaList_129.TeammateList)
  return teammatelist_.Get(index);
}
::pb::PTeammateInfo* S2CGetTeamAvaList_129::mutable_teammatelist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetTeamAvaList_129.TeammateList)
  return teammatelist_.Mutable(index);
}
::pb::PTeammateInfo* S2CGetTeamAvaList_129::add_teammatelist() {
  // @@protoc_insertion_point(field_add:pb.S2CGetTeamAvaList_129.TeammateList)
  return teammatelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::PTeammateInfo >*
S2CGetTeamAvaList_129::mutable_teammatelist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetTeamAvaList_129.TeammateList)
  return &teammatelist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::PTeammateInfo >&
S2CGetTeamAvaList_129::teammatelist() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetTeamAvaList_129.TeammateList)
  return teammatelist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SToTopTeam_131::kIsTopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SToTopTeam_131::C2SToTopTeam_131()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SToTopTeam_131)
}

void C2SToTopTeam_131::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SToTopTeam_131::C2SToTopTeam_131(const C2SToTopTeam_131& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SToTopTeam_131)
}

void C2SToTopTeam_131::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  istop_ = false;
}

C2SToTopTeam_131::~C2SToTopTeam_131() {
  // @@protoc_insertion_point(destructor:pb.C2SToTopTeam_131)
  SharedDtor();
}

void C2SToTopTeam_131::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SToTopTeam_131::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SToTopTeam_131::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SToTopTeam_131_descriptor_;
}

const C2SToTopTeam_131& C2SToTopTeam_131::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SToTopTeam_131* C2SToTopTeam_131::default_instance_ = NULL;

C2SToTopTeam_131* C2SToTopTeam_131::New(::google::protobuf::Arena* arena) const {
  C2SToTopTeam_131* n = new C2SToTopTeam_131;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SToTopTeam_131::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SToTopTeam_131)
  istop_ = false;
}

bool C2SToTopTeam_131::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SToTopTeam_131)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool IsTop = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &istop_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SToTopTeam_131)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SToTopTeam_131)
  return false;
#undef DO_
}

void C2SToTopTeam_131::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SToTopTeam_131)
  // optional bool IsTop = 1;
  if (this->istop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->istop(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SToTopTeam_131)
}

::google::protobuf::uint8* C2SToTopTeam_131::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SToTopTeam_131)
  // optional bool IsTop = 1;
  if (this->istop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->istop(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SToTopTeam_131)
  return target;
}

int C2SToTopTeam_131::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SToTopTeam_131)
  int total_size = 0;

  // optional bool IsTop = 1;
  if (this->istop() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SToTopTeam_131::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SToTopTeam_131)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SToTopTeam_131* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SToTopTeam_131>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SToTopTeam_131)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SToTopTeam_131)
    MergeFrom(*source);
  }
}

void C2SToTopTeam_131::MergeFrom(const C2SToTopTeam_131& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SToTopTeam_131)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.istop() != 0) {
    set_istop(from.istop());
  }
}

void C2SToTopTeam_131::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SToTopTeam_131)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SToTopTeam_131::CopyFrom(const C2SToTopTeam_131& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SToTopTeam_131)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SToTopTeam_131::IsInitialized() const {

  return true;
}

void C2SToTopTeam_131::Swap(C2SToTopTeam_131* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SToTopTeam_131::InternalSwap(C2SToTopTeam_131* other) {
  std::swap(istop_, other->istop_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SToTopTeam_131::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SToTopTeam_131_descriptor_;
  metadata.reflection = C2SToTopTeam_131_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SToTopTeam_131

// optional bool IsTop = 1;
void C2SToTopTeam_131::clear_istop() {
  istop_ = false;
}
 bool C2SToTopTeam_131::istop() const {
  // @@protoc_insertion_point(field_get:pb.C2SToTopTeam_131.IsTop)
  return istop_;
}
 void C2SToTopTeam_131::set_istop(bool value) {
  
  istop_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SToTopTeam_131.IsTop)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CToTopTeam_131::kIsTopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CToTopTeam_131::S2CToTopTeam_131()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CToTopTeam_131)
}

void S2CToTopTeam_131::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CToTopTeam_131::S2CToTopTeam_131(const S2CToTopTeam_131& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CToTopTeam_131)
}

void S2CToTopTeam_131::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  istop_ = false;
}

S2CToTopTeam_131::~S2CToTopTeam_131() {
  // @@protoc_insertion_point(destructor:pb.S2CToTopTeam_131)
  SharedDtor();
}

void S2CToTopTeam_131::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CToTopTeam_131::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CToTopTeam_131::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CToTopTeam_131_descriptor_;
}

const S2CToTopTeam_131& S2CToTopTeam_131::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CToTopTeam_131* S2CToTopTeam_131::default_instance_ = NULL;

S2CToTopTeam_131* S2CToTopTeam_131::New(::google::protobuf::Arena* arena) const {
  S2CToTopTeam_131* n = new S2CToTopTeam_131;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CToTopTeam_131::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CToTopTeam_131)
  istop_ = false;
}

bool S2CToTopTeam_131::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CToTopTeam_131)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool IsTop = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &istop_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CToTopTeam_131)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CToTopTeam_131)
  return false;
#undef DO_
}

void S2CToTopTeam_131::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CToTopTeam_131)
  // optional bool IsTop = 1;
  if (this->istop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->istop(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CToTopTeam_131)
}

::google::protobuf::uint8* S2CToTopTeam_131::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CToTopTeam_131)
  // optional bool IsTop = 1;
  if (this->istop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->istop(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CToTopTeam_131)
  return target;
}

int S2CToTopTeam_131::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CToTopTeam_131)
  int total_size = 0;

  // optional bool IsTop = 1;
  if (this->istop() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CToTopTeam_131::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CToTopTeam_131)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CToTopTeam_131* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CToTopTeam_131>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CToTopTeam_131)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CToTopTeam_131)
    MergeFrom(*source);
  }
}

void S2CToTopTeam_131::MergeFrom(const S2CToTopTeam_131& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CToTopTeam_131)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.istop() != 0) {
    set_istop(from.istop());
  }
}

void S2CToTopTeam_131::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CToTopTeam_131)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CToTopTeam_131::CopyFrom(const S2CToTopTeam_131& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CToTopTeam_131)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CToTopTeam_131::IsInitialized() const {

  return true;
}

void S2CToTopTeam_131::Swap(S2CToTopTeam_131* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CToTopTeam_131::InternalSwap(S2CToTopTeam_131* other) {
  std::swap(istop_, other->istop_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CToTopTeam_131::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CToTopTeam_131_descriptor_;
  metadata.reflection = S2CToTopTeam_131_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CToTopTeam_131

// optional bool IsTop = 1;
void S2CToTopTeam_131::clear_istop() {
  istop_ = false;
}
 bool S2CToTopTeam_131::istop() const {
  // @@protoc_insertion_point(field_get:pb.S2CToTopTeam_131.IsTop)
  return istop_;
}
 void S2CToTopTeam_131::set_istop(bool value) {
  
  istop_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CToTopTeam_131.IsTop)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SHandoverLeader_132::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SHandoverLeader_132::C2SHandoverLeader_132()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SHandoverLeader_132)
}

void C2SHandoverLeader_132::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SHandoverLeader_132::C2SHandoverLeader_132(const C2SHandoverLeader_132& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SHandoverLeader_132)
}

void C2SHandoverLeader_132::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
}

C2SHandoverLeader_132::~C2SHandoverLeader_132() {
  // @@protoc_insertion_point(destructor:pb.C2SHandoverLeader_132)
  SharedDtor();
}

void C2SHandoverLeader_132::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SHandoverLeader_132::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SHandoverLeader_132::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SHandoverLeader_132_descriptor_;
}

const C2SHandoverLeader_132& C2SHandoverLeader_132::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SHandoverLeader_132* C2SHandoverLeader_132::default_instance_ = NULL;

C2SHandoverLeader_132* C2SHandoverLeader_132::New(::google::protobuf::Arena* arena) const {
  C2SHandoverLeader_132* n = new C2SHandoverLeader_132;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SHandoverLeader_132::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SHandoverLeader_132)
  rid_ = GOOGLE_ULONGLONG(0);
}

bool C2SHandoverLeader_132::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SHandoverLeader_132)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SHandoverLeader_132)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SHandoverLeader_132)
  return false;
#undef DO_
}

void C2SHandoverLeader_132::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SHandoverLeader_132)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SHandoverLeader_132)
}

::google::protobuf::uint8* C2SHandoverLeader_132::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SHandoverLeader_132)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SHandoverLeader_132)
  return target;
}

int C2SHandoverLeader_132::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SHandoverLeader_132)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SHandoverLeader_132::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SHandoverLeader_132)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SHandoverLeader_132* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SHandoverLeader_132>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SHandoverLeader_132)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SHandoverLeader_132)
    MergeFrom(*source);
  }
}

void C2SHandoverLeader_132::MergeFrom(const C2SHandoverLeader_132& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SHandoverLeader_132)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void C2SHandoverLeader_132::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SHandoverLeader_132)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SHandoverLeader_132::CopyFrom(const C2SHandoverLeader_132& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SHandoverLeader_132)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SHandoverLeader_132::IsInitialized() const {

  return true;
}

void C2SHandoverLeader_132::Swap(C2SHandoverLeader_132* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SHandoverLeader_132::InternalSwap(C2SHandoverLeader_132* other) {
  std::swap(rid_, other->rid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SHandoverLeader_132::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SHandoverLeader_132_descriptor_;
  metadata.reflection = C2SHandoverLeader_132_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SHandoverLeader_132

// optional uint64 Rid = 1;
void C2SHandoverLeader_132::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 C2SHandoverLeader_132::rid() const {
  // @@protoc_insertion_point(field_get:pb.C2SHandoverLeader_132.Rid)
  return rid_;
}
 void C2SHandoverLeader_132::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SHandoverLeader_132.Rid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CHandoverLeader_132::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CHandoverLeader_132::S2CHandoverLeader_132()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CHandoverLeader_132)
}

void S2CHandoverLeader_132::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CHandoverLeader_132::S2CHandoverLeader_132(const S2CHandoverLeader_132& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CHandoverLeader_132)
}

void S2CHandoverLeader_132::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
}

S2CHandoverLeader_132::~S2CHandoverLeader_132() {
  // @@protoc_insertion_point(destructor:pb.S2CHandoverLeader_132)
  SharedDtor();
}

void S2CHandoverLeader_132::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CHandoverLeader_132::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CHandoverLeader_132::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CHandoverLeader_132_descriptor_;
}

const S2CHandoverLeader_132& S2CHandoverLeader_132::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CHandoverLeader_132* S2CHandoverLeader_132::default_instance_ = NULL;

S2CHandoverLeader_132* S2CHandoverLeader_132::New(::google::protobuf::Arena* arena) const {
  S2CHandoverLeader_132* n = new S2CHandoverLeader_132;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CHandoverLeader_132::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CHandoverLeader_132)
  rid_ = GOOGLE_ULONGLONG(0);
}

bool S2CHandoverLeader_132::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CHandoverLeader_132)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CHandoverLeader_132)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CHandoverLeader_132)
  return false;
#undef DO_
}

void S2CHandoverLeader_132::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CHandoverLeader_132)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CHandoverLeader_132)
}

::google::protobuf::uint8* S2CHandoverLeader_132::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CHandoverLeader_132)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CHandoverLeader_132)
  return target;
}

int S2CHandoverLeader_132::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CHandoverLeader_132)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CHandoverLeader_132::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CHandoverLeader_132)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CHandoverLeader_132* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CHandoverLeader_132>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CHandoverLeader_132)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CHandoverLeader_132)
    MergeFrom(*source);
  }
}

void S2CHandoverLeader_132::MergeFrom(const S2CHandoverLeader_132& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CHandoverLeader_132)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void S2CHandoverLeader_132::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CHandoverLeader_132)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CHandoverLeader_132::CopyFrom(const S2CHandoverLeader_132& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CHandoverLeader_132)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CHandoverLeader_132::IsInitialized() const {

  return true;
}

void S2CHandoverLeader_132::Swap(S2CHandoverLeader_132* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CHandoverLeader_132::InternalSwap(S2CHandoverLeader_132* other) {
  std::swap(rid_, other->rid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CHandoverLeader_132::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CHandoverLeader_132_descriptor_;
  metadata.reflection = S2CHandoverLeader_132_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CHandoverLeader_132

// optional uint64 Rid = 1;
void S2CHandoverLeader_132::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CHandoverLeader_132::rid() const {
  // @@protoc_insertion_point(field_get:pb.S2CHandoverLeader_132.Rid)
  return rid_;
}
 void S2CHandoverLeader_132::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CHandoverLeader_132.Rid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SApplyPlayer_133::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SApplyPlayer_133::C2SApplyPlayer_133()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SApplyPlayer_133)
}

void C2SApplyPlayer_133::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SApplyPlayer_133::C2SApplyPlayer_133(const C2SApplyPlayer_133& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SApplyPlayer_133)
}

void C2SApplyPlayer_133::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2SApplyPlayer_133::~C2SApplyPlayer_133() {
  // @@protoc_insertion_point(destructor:pb.C2SApplyPlayer_133)
  SharedDtor();
}

void C2SApplyPlayer_133::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2SApplyPlayer_133::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SApplyPlayer_133::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SApplyPlayer_133_descriptor_;
}

const C2SApplyPlayer_133& C2SApplyPlayer_133::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SApplyPlayer_133* C2SApplyPlayer_133::default_instance_ = NULL;

C2SApplyPlayer_133* C2SApplyPlayer_133::New(::google::protobuf::Arena* arena) const {
  C2SApplyPlayer_133* n = new C2SApplyPlayer_133;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SApplyPlayer_133::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SApplyPlayer_133)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2SApplyPlayer_133::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SApplyPlayer_133)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SApplyPlayer_133.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SApplyPlayer_133)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SApplyPlayer_133)
  return false;
#undef DO_
}

void C2SApplyPlayer_133::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SApplyPlayer_133)
  // optional string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SApplyPlayer_133.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SApplyPlayer_133)
}

::google::protobuf::uint8* C2SApplyPlayer_133::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SApplyPlayer_133)
  // optional string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SApplyPlayer_133.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SApplyPlayer_133)
  return target;
}

int C2SApplyPlayer_133::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SApplyPlayer_133)
  int total_size = 0;

  // optional string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SApplyPlayer_133::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SApplyPlayer_133)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SApplyPlayer_133* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SApplyPlayer_133>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SApplyPlayer_133)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SApplyPlayer_133)
    MergeFrom(*source);
  }
}

void C2SApplyPlayer_133::MergeFrom(const C2SApplyPlayer_133& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SApplyPlayer_133)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void C2SApplyPlayer_133::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SApplyPlayer_133)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SApplyPlayer_133::CopyFrom(const C2SApplyPlayer_133& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SApplyPlayer_133)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SApplyPlayer_133::IsInitialized() const {

  return true;
}

void C2SApplyPlayer_133::Swap(C2SApplyPlayer_133* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SApplyPlayer_133::InternalSwap(C2SApplyPlayer_133* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SApplyPlayer_133::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SApplyPlayer_133_descriptor_;
  metadata.reflection = C2SApplyPlayer_133_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SApplyPlayer_133

// optional string Name = 1;
void C2SApplyPlayer_133::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SApplyPlayer_133::name() const {
  // @@protoc_insertion_point(field_get:pb.C2SApplyPlayer_133.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SApplyPlayer_133::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SApplyPlayer_133.Name)
}
 void C2SApplyPlayer_133::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SApplyPlayer_133.Name)
}
 void C2SApplyPlayer_133::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SApplyPlayer_133.Name)
}
 ::std::string* C2SApplyPlayer_133::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SApplyPlayer_133.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SApplyPlayer_133::release_name() {
  // @@protoc_insertion_point(field_release:pb.C2SApplyPlayer_133.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SApplyPlayer_133::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SApplyPlayer_133.Name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CApplyPlayer_133::kTeamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CApplyPlayer_133::S2CApplyPlayer_133()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CApplyPlayer_133)
}

void S2CApplyPlayer_133::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CApplyPlayer_133::S2CApplyPlayer_133(const S2CApplyPlayer_133& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CApplyPlayer_133)
}

void S2CApplyPlayer_133::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  teamid_ = GOOGLE_ULONGLONG(0);
}

S2CApplyPlayer_133::~S2CApplyPlayer_133() {
  // @@protoc_insertion_point(destructor:pb.S2CApplyPlayer_133)
  SharedDtor();
}

void S2CApplyPlayer_133::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CApplyPlayer_133::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CApplyPlayer_133::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CApplyPlayer_133_descriptor_;
}

const S2CApplyPlayer_133& S2CApplyPlayer_133::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CApplyPlayer_133* S2CApplyPlayer_133::default_instance_ = NULL;

S2CApplyPlayer_133* S2CApplyPlayer_133::New(::google::protobuf::Arena* arena) const {
  S2CApplyPlayer_133* n = new S2CApplyPlayer_133;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CApplyPlayer_133::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CApplyPlayer_133)
  teamid_ = GOOGLE_ULONGLONG(0);
}

bool S2CApplyPlayer_133::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CApplyPlayer_133)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 TeamId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CApplyPlayer_133)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CApplyPlayer_133)
  return false;
#undef DO_
}

void S2CApplyPlayer_133::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CApplyPlayer_133)
  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CApplyPlayer_133)
}

::google::protobuf::uint8* S2CApplyPlayer_133::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CApplyPlayer_133)
  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CApplyPlayer_133)
  return target;
}

int S2CApplyPlayer_133::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CApplyPlayer_133)
  int total_size = 0;

  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CApplyPlayer_133::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CApplyPlayer_133)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CApplyPlayer_133* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CApplyPlayer_133>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CApplyPlayer_133)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CApplyPlayer_133)
    MergeFrom(*source);
  }
}

void S2CApplyPlayer_133::MergeFrom(const S2CApplyPlayer_133& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CApplyPlayer_133)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
}

void S2CApplyPlayer_133::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CApplyPlayer_133)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CApplyPlayer_133::CopyFrom(const S2CApplyPlayer_133& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CApplyPlayer_133)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CApplyPlayer_133::IsInitialized() const {

  return true;
}

void S2CApplyPlayer_133::Swap(S2CApplyPlayer_133* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CApplyPlayer_133::InternalSwap(S2CApplyPlayer_133* other) {
  std::swap(teamid_, other->teamid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CApplyPlayer_133::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CApplyPlayer_133_descriptor_;
  metadata.reflection = S2CApplyPlayer_133_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CApplyPlayer_133

// optional uint64 TeamId = 1;
void S2CApplyPlayer_133::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CApplyPlayer_133::teamid() const {
  // @@protoc_insertion_point(field_get:pb.S2CApplyPlayer_133.TeamId)
  return teamid_;
}
 void S2CApplyPlayer_133::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CApplyPlayer_133.TeamId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CReceiveApply_134::kRidFieldNumber;
const int S2CReceiveApply_134::kFromNameFieldNumber;
const int S2CReceiveApply_134::kExpiresInFieldNumber;
const int S2CReceiveApply_134::kMountFieldNumber;
const int S2CReceiveApply_134::kLvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CReceiveApply_134::S2CReceiveApply_134()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CReceiveApply_134)
}

void S2CReceiveApply_134::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CReceiveApply_134::S2CReceiveApply_134(const S2CReceiveApply_134& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CReceiveApply_134)
}

void S2CReceiveApply_134::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
  fromname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiresin_ = 0u;
  mount_ = 0u;
  lv_ = 0u;
}

S2CReceiveApply_134::~S2CReceiveApply_134() {
  // @@protoc_insertion_point(destructor:pb.S2CReceiveApply_134)
  SharedDtor();
}

void S2CReceiveApply_134::SharedDtor() {
  fromname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void S2CReceiveApply_134::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CReceiveApply_134::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CReceiveApply_134_descriptor_;
}

const S2CReceiveApply_134& S2CReceiveApply_134::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CReceiveApply_134* S2CReceiveApply_134::default_instance_ = NULL;

S2CReceiveApply_134* S2CReceiveApply_134::New(::google::protobuf::Arena* arena) const {
  S2CReceiveApply_134* n = new S2CReceiveApply_134;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CReceiveApply_134::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CReceiveApply_134)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CReceiveApply_134, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CReceiveApply_134*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(expiresin_, lv_);
  rid_ = GOOGLE_ULONGLONG(0);
  fromname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool S2CReceiveApply_134::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CReceiveApply_134)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_FromName;
        break;
      }

      // optional string FromName = 2;
      case 2: {
        if (tag == 18) {
         parse_FromName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fromname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fromname().data(), this->fromname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CReceiveApply_134.FromName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ExpiresIn;
        break;
      }

      // optional uint32 ExpiresIn = 3;
      case 3: {
        if (tag == 24) {
         parse_ExpiresIn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expiresin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Mount;
        break;
      }

      // optional uint32 Mount = 4;
      case 4: {
        if (tag == 32) {
         parse_Mount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Lv;
        break;
      }

      // optional uint32 Lv = 5;
      case 5: {
        if (tag == 40) {
         parse_Lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lv_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CReceiveApply_134)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CReceiveApply_134)
  return false;
#undef DO_
}

void S2CReceiveApply_134::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CReceiveApply_134)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // optional string FromName = 2;
  if (this->fromname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fromname().data(), this->fromname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CReceiveApply_134.FromName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->fromname(), output);
  }

  // optional uint32 ExpiresIn = 3;
  if (this->expiresin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->expiresin(), output);
  }

  // optional uint32 Mount = 4;
  if (this->mount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->mount(), output);
  }

  // optional uint32 Lv = 5;
  if (this->lv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->lv(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CReceiveApply_134)
}

::google::protobuf::uint8* S2CReceiveApply_134::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CReceiveApply_134)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // optional string FromName = 2;
  if (this->fromname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fromname().data(), this->fromname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CReceiveApply_134.FromName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->fromname(), target);
  }

  // optional uint32 ExpiresIn = 3;
  if (this->expiresin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->expiresin(), target);
  }

  // optional uint32 Mount = 4;
  if (this->mount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->mount(), target);
  }

  // optional uint32 Lv = 5;
  if (this->lv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->lv(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CReceiveApply_134)
  return target;
}

int S2CReceiveApply_134::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CReceiveApply_134)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  // optional string FromName = 2;
  if (this->fromname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fromname());
  }

  // optional uint32 ExpiresIn = 3;
  if (this->expiresin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->expiresin());
  }

  // optional uint32 Mount = 4;
  if (this->mount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mount());
  }

  // optional uint32 Lv = 5;
  if (this->lv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lv());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CReceiveApply_134::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CReceiveApply_134)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CReceiveApply_134* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CReceiveApply_134>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CReceiveApply_134)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CReceiveApply_134)
    MergeFrom(*source);
  }
}

void S2CReceiveApply_134::MergeFrom(const S2CReceiveApply_134& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CReceiveApply_134)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.fromname().size() > 0) {

    fromname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromname_);
  }
  if (from.expiresin() != 0) {
    set_expiresin(from.expiresin());
  }
  if (from.mount() != 0) {
    set_mount(from.mount());
  }
  if (from.lv() != 0) {
    set_lv(from.lv());
  }
}

void S2CReceiveApply_134::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CReceiveApply_134)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CReceiveApply_134::CopyFrom(const S2CReceiveApply_134& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CReceiveApply_134)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CReceiveApply_134::IsInitialized() const {

  return true;
}

void S2CReceiveApply_134::Swap(S2CReceiveApply_134* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CReceiveApply_134::InternalSwap(S2CReceiveApply_134* other) {
  std::swap(rid_, other->rid_);
  fromname_.Swap(&other->fromname_);
  std::swap(expiresin_, other->expiresin_);
  std::swap(mount_, other->mount_);
  std::swap(lv_, other->lv_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CReceiveApply_134::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CReceiveApply_134_descriptor_;
  metadata.reflection = S2CReceiveApply_134_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CReceiveApply_134

// optional uint64 Rid = 1;
void S2CReceiveApply_134::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CReceiveApply_134::rid() const {
  // @@protoc_insertion_point(field_get:pb.S2CReceiveApply_134.Rid)
  return rid_;
}
 void S2CReceiveApply_134::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CReceiveApply_134.Rid)
}

// optional string FromName = 2;
void S2CReceiveApply_134::clear_fromname() {
  fromname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CReceiveApply_134::fromname() const {
  // @@protoc_insertion_point(field_get:pb.S2CReceiveApply_134.FromName)
  return fromname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CReceiveApply_134::set_fromname(const ::std::string& value) {
  
  fromname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CReceiveApply_134.FromName)
}
 void S2CReceiveApply_134::set_fromname(const char* value) {
  
  fromname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CReceiveApply_134.FromName)
}
 void S2CReceiveApply_134::set_fromname(const char* value, size_t size) {
  
  fromname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CReceiveApply_134.FromName)
}
 ::std::string* S2CReceiveApply_134::mutable_fromname() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CReceiveApply_134.FromName)
  return fromname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CReceiveApply_134::release_fromname() {
  // @@protoc_insertion_point(field_release:pb.S2CReceiveApply_134.FromName)
  
  return fromname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CReceiveApply_134::set_allocated_fromname(::std::string* fromname) {
  if (fromname != NULL) {
    
  } else {
    
  }
  fromname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromname);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CReceiveApply_134.FromName)
}

// optional uint32 ExpiresIn = 3;
void S2CReceiveApply_134::clear_expiresin() {
  expiresin_ = 0u;
}
 ::google::protobuf::uint32 S2CReceiveApply_134::expiresin() const {
  // @@protoc_insertion_point(field_get:pb.S2CReceiveApply_134.ExpiresIn)
  return expiresin_;
}
 void S2CReceiveApply_134::set_expiresin(::google::protobuf::uint32 value) {
  
  expiresin_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CReceiveApply_134.ExpiresIn)
}

// optional uint32 Mount = 4;
void S2CReceiveApply_134::clear_mount() {
  mount_ = 0u;
}
 ::google::protobuf::uint32 S2CReceiveApply_134::mount() const {
  // @@protoc_insertion_point(field_get:pb.S2CReceiveApply_134.Mount)
  return mount_;
}
 void S2CReceiveApply_134::set_mount(::google::protobuf::uint32 value) {
  
  mount_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CReceiveApply_134.Mount)
}

// optional uint32 Lv = 5;
void S2CReceiveApply_134::clear_lv() {
  lv_ = 0u;
}
 ::google::protobuf::uint32 S2CReceiveApply_134::lv() const {
  // @@protoc_insertion_point(field_get:pb.S2CReceiveApply_134.Lv)
  return lv_;
}
 void S2CReceiveApply_134::set_lv(::google::protobuf::uint32 value) {
  
  lv_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CReceiveApply_134.Lv)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SAgreeApply_135::kRidFieldNumber;
const int C2SAgreeApply_135::kOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SAgreeApply_135::C2SAgreeApply_135()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SAgreeApply_135)
}

void C2SAgreeApply_135::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SAgreeApply_135::C2SAgreeApply_135(const C2SAgreeApply_135& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SAgreeApply_135)
}

void C2SAgreeApply_135::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
  op_ = 0u;
}

C2SAgreeApply_135::~C2SAgreeApply_135() {
  // @@protoc_insertion_point(destructor:pb.C2SAgreeApply_135)
  SharedDtor();
}

void C2SAgreeApply_135::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SAgreeApply_135::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SAgreeApply_135::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SAgreeApply_135_descriptor_;
}

const C2SAgreeApply_135& C2SAgreeApply_135::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SAgreeApply_135* C2SAgreeApply_135::default_instance_ = NULL;

C2SAgreeApply_135* C2SAgreeApply_135::New(::google::protobuf::Arena* arena) const {
  C2SAgreeApply_135* n = new C2SAgreeApply_135;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SAgreeApply_135::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SAgreeApply_135)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(C2SAgreeApply_135, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<C2SAgreeApply_135*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rid_, op_);

#undef ZR_HELPER_
#undef ZR_

}

bool C2SAgreeApply_135::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SAgreeApply_135)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Op;
        break;
      }

      // optional uint32 Op = 2;
      case 2: {
        if (tag == 16) {
         parse_Op:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &op_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SAgreeApply_135)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SAgreeApply_135)
  return false;
#undef DO_
}

void C2SAgreeApply_135::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SAgreeApply_135)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // optional uint32 Op = 2;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->op(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SAgreeApply_135)
}

::google::protobuf::uint8* C2SAgreeApply_135::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SAgreeApply_135)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // optional uint32 Op = 2;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->op(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SAgreeApply_135)
  return target;
}

int C2SAgreeApply_135::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SAgreeApply_135)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  // optional uint32 Op = 2;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->op());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SAgreeApply_135::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SAgreeApply_135)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SAgreeApply_135* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SAgreeApply_135>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SAgreeApply_135)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SAgreeApply_135)
    MergeFrom(*source);
  }
}

void C2SAgreeApply_135::MergeFrom(const C2SAgreeApply_135& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SAgreeApply_135)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
}

void C2SAgreeApply_135::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SAgreeApply_135)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SAgreeApply_135::CopyFrom(const C2SAgreeApply_135& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SAgreeApply_135)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SAgreeApply_135::IsInitialized() const {

  return true;
}

void C2SAgreeApply_135::Swap(C2SAgreeApply_135* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SAgreeApply_135::InternalSwap(C2SAgreeApply_135* other) {
  std::swap(rid_, other->rid_);
  std::swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SAgreeApply_135::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SAgreeApply_135_descriptor_;
  metadata.reflection = C2SAgreeApply_135_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SAgreeApply_135

// optional uint64 Rid = 1;
void C2SAgreeApply_135::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 C2SAgreeApply_135::rid() const {
  // @@protoc_insertion_point(field_get:pb.C2SAgreeApply_135.Rid)
  return rid_;
}
 void C2SAgreeApply_135::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SAgreeApply_135.Rid)
}

// optional uint32 Op = 2;
void C2SAgreeApply_135::clear_op() {
  op_ = 0u;
}
 ::google::protobuf::uint32 C2SAgreeApply_135::op() const {
  // @@protoc_insertion_point(field_get:pb.C2SAgreeApply_135.Op)
  return op_;
}
 void C2SAgreeApply_135::set_op(::google::protobuf::uint32 value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SAgreeApply_135.Op)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CAgreeApply_135::kTeamIdFieldNumber;
const int S2CAgreeApply_135::kOpFieldNumber;
const int S2CAgreeApply_135::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CAgreeApply_135::S2CAgreeApply_135()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CAgreeApply_135)
}

void S2CAgreeApply_135::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  info_ = const_cast< ::pb::PTeammateInfo*>(&::pb::PTeammateInfo::default_instance());
}

S2CAgreeApply_135::S2CAgreeApply_135(const S2CAgreeApply_135& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CAgreeApply_135)
}

void S2CAgreeApply_135::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  teamid_ = GOOGLE_ULONGLONG(0);
  op_ = 0u;
  info_ = NULL;
}

S2CAgreeApply_135::~S2CAgreeApply_135() {
  // @@protoc_insertion_point(destructor:pb.S2CAgreeApply_135)
  SharedDtor();
}

void S2CAgreeApply_135::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void S2CAgreeApply_135::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CAgreeApply_135::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CAgreeApply_135_descriptor_;
}

const S2CAgreeApply_135& S2CAgreeApply_135::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CAgreeApply_135* S2CAgreeApply_135::default_instance_ = NULL;

S2CAgreeApply_135* S2CAgreeApply_135::New(::google::protobuf::Arena* arena) const {
  S2CAgreeApply_135* n = new S2CAgreeApply_135;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CAgreeApply_135::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CAgreeApply_135)
  teamid_ = GOOGLE_ULONGLONG(0);
  op_ = 0u;
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}

bool S2CAgreeApply_135::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CAgreeApply_135)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 TeamId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Op;
        break;
      }

      // optional uint32 Op = 2;
      case 2: {
        if (tag == 16) {
         parse_Op:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &op_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Info;
        break;
      }

      // optional .pb.PTeammateInfo Info = 3;
      case 3: {
        if (tag == 26) {
         parse_Info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CAgreeApply_135)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CAgreeApply_135)
  return false;
#undef DO_
}

void S2CAgreeApply_135::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CAgreeApply_135)
  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamid(), output);
  }

  // optional uint32 Op = 2;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->op(), output);
  }

  // optional .pb.PTeammateInfo Info = 3;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CAgreeApply_135)
}

::google::protobuf::uint8* S2CAgreeApply_135::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CAgreeApply_135)
  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamid(), target);
  }

  // optional uint32 Op = 2;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->op(), target);
  }

  // optional .pb.PTeammateInfo Info = 3;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->info_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CAgreeApply_135)
  return target;
}

int S2CAgreeApply_135::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CAgreeApply_135)
  int total_size = 0;

  // optional uint64 TeamId = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamid());
  }

  // optional uint32 Op = 2;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->op());
  }

  // optional .pb.PTeammateInfo Info = 3;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CAgreeApply_135::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CAgreeApply_135)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CAgreeApply_135* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CAgreeApply_135>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CAgreeApply_135)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CAgreeApply_135)
    MergeFrom(*source);
  }
}

void S2CAgreeApply_135::MergeFrom(const S2CAgreeApply_135& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CAgreeApply_135)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
  if (from.has_info()) {
    mutable_info()->::pb::PTeammateInfo::MergeFrom(from.info());
  }
}

void S2CAgreeApply_135::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CAgreeApply_135)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CAgreeApply_135::CopyFrom(const S2CAgreeApply_135& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CAgreeApply_135)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CAgreeApply_135::IsInitialized() const {

  return true;
}

void S2CAgreeApply_135::Swap(S2CAgreeApply_135* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CAgreeApply_135::InternalSwap(S2CAgreeApply_135* other) {
  std::swap(teamid_, other->teamid_);
  std::swap(op_, other->op_);
  std::swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CAgreeApply_135::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CAgreeApply_135_descriptor_;
  metadata.reflection = S2CAgreeApply_135_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CAgreeApply_135

// optional uint64 TeamId = 1;
void S2CAgreeApply_135::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CAgreeApply_135::teamid() const {
  // @@protoc_insertion_point(field_get:pb.S2CAgreeApply_135.TeamId)
  return teamid_;
}
 void S2CAgreeApply_135::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CAgreeApply_135.TeamId)
}

// optional uint32 Op = 2;
void S2CAgreeApply_135::clear_op() {
  op_ = 0u;
}
 ::google::protobuf::uint32 S2CAgreeApply_135::op() const {
  // @@protoc_insertion_point(field_get:pb.S2CAgreeApply_135.Op)
  return op_;
}
 void S2CAgreeApply_135::set_op(::google::protobuf::uint32 value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CAgreeApply_135.Op)
}

// optional .pb.PTeammateInfo Info = 3;
bool S2CAgreeApply_135::has_info() const {
  return !_is_default_instance_ && info_ != NULL;
}
void S2CAgreeApply_135::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::pb::PTeammateInfo& S2CAgreeApply_135::info() const {
  // @@protoc_insertion_point(field_get:pb.S2CAgreeApply_135.Info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
::pb::PTeammateInfo* S2CAgreeApply_135::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::pb::PTeammateInfo;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CAgreeApply_135.Info)
  return info_;
}
::pb::PTeammateInfo* S2CAgreeApply_135::release_info() {
  // @@protoc_insertion_point(field_release:pb.S2CAgreeApply_135.Info)
  
  ::pb::PTeammateInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void S2CAgreeApply_135::set_allocated_info(::pb::PTeammateInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CAgreeApply_135.Info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MallBagItemData::kItemIdFieldNumber;
const int MallBagItemData::kItemNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MallBagItemData::MallBagItemData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.MallBagItemData)
}

void MallBagItemData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MallBagItemData::MallBagItemData(const MallBagItemData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.MallBagItemData)
}

void MallBagItemData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  itemid_ = 0u;
  itemnum_ = 0u;
}

MallBagItemData::~MallBagItemData() {
  // @@protoc_insertion_point(destructor:pb.MallBagItemData)
  SharedDtor();
}

void MallBagItemData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MallBagItemData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MallBagItemData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MallBagItemData_descriptor_;
}

const MallBagItemData& MallBagItemData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

MallBagItemData* MallBagItemData::default_instance_ = NULL;

MallBagItemData* MallBagItemData::New(::google::protobuf::Arena* arena) const {
  MallBagItemData* n = new MallBagItemData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MallBagItemData::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.MallBagItemData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MallBagItemData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MallBagItemData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(itemid_, itemnum_);

#undef ZR_HELPER_
#undef ZR_

}

bool MallBagItemData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.MallBagItemData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ItemNum;
        break;
      }

      // optional uint32 ItemNum = 2;
      case 2: {
        if (tag == 16) {
         parse_ItemNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.MallBagItemData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.MallBagItemData)
  return false;
#undef DO_
}

void MallBagItemData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.MallBagItemData)
  // optional uint32 ItemId = 1;
  if (this->itemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 ItemNum = 2;
  if (this->itemnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->itemnum(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.MallBagItemData)
}

::google::protobuf::uint8* MallBagItemData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.MallBagItemData)
  // optional uint32 ItemId = 1;
  if (this->itemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 ItemNum = 2;
  if (this->itemnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->itemnum(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.MallBagItemData)
  return target;
}

int MallBagItemData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.MallBagItemData)
  int total_size = 0;

  // optional uint32 ItemId = 1;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemid());
  }

  // optional uint32 ItemNum = 2;
  if (this->itemnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemnum());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MallBagItemData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.MallBagItemData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MallBagItemData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MallBagItemData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.MallBagItemData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.MallBagItemData)
    MergeFrom(*source);
  }
}

void MallBagItemData::MergeFrom(const MallBagItemData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.MallBagItemData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.itemid() != 0) {
    set_itemid(from.itemid());
  }
  if (from.itemnum() != 0) {
    set_itemnum(from.itemnum());
  }
}

void MallBagItemData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.MallBagItemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MallBagItemData::CopyFrom(const MallBagItemData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.MallBagItemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MallBagItemData::IsInitialized() const {

  return true;
}

void MallBagItemData::Swap(MallBagItemData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MallBagItemData::InternalSwap(MallBagItemData* other) {
  std::swap(itemid_, other->itemid_);
  std::swap(itemnum_, other->itemnum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MallBagItemData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MallBagItemData_descriptor_;
  metadata.reflection = MallBagItemData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MallBagItemData

// optional uint32 ItemId = 1;
void MallBagItemData::clear_itemid() {
  itemid_ = 0u;
}
 ::google::protobuf::uint32 MallBagItemData::itemid() const {
  // @@protoc_insertion_point(field_get:pb.MallBagItemData.ItemId)
  return itemid_;
}
 void MallBagItemData::set_itemid(::google::protobuf::uint32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:pb.MallBagItemData.ItemId)
}

// optional uint32 ItemNum = 2;
void MallBagItemData::clear_itemnum() {
  itemnum_ = 0u;
}
 ::google::protobuf::uint32 MallBagItemData::itemnum() const {
  // @@protoc_insertion_point(field_get:pb.MallBagItemData.ItemNum)
  return itemnum_;
}
 void MallBagItemData::set_itemnum(::google::protobuf::uint32 value) {
  
  itemnum_ = value;
  // @@protoc_insertion_point(field_set:pb.MallBagItemData.ItemNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetChestNum_140::C2SGetChestNum_140()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetChestNum_140)
}

void C2SGetChestNum_140::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetChestNum_140::C2SGetChestNum_140(const C2SGetChestNum_140& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetChestNum_140)
}

void C2SGetChestNum_140::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGetChestNum_140::~C2SGetChestNum_140() {
  // @@protoc_insertion_point(destructor:pb.C2SGetChestNum_140)
  SharedDtor();
}

void C2SGetChestNum_140::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetChestNum_140::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetChestNum_140::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetChestNum_140_descriptor_;
}

const C2SGetChestNum_140& C2SGetChestNum_140::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetChestNum_140* C2SGetChestNum_140::default_instance_ = NULL;

C2SGetChestNum_140* C2SGetChestNum_140::New(::google::protobuf::Arena* arena) const {
  C2SGetChestNum_140* n = new C2SGetChestNum_140;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetChestNum_140::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetChestNum_140)
}

bool C2SGetChestNum_140::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetChestNum_140)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetChestNum_140)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetChestNum_140)
  return false;
#undef DO_
}

void C2SGetChestNum_140::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetChestNum_140)
  // @@protoc_insertion_point(serialize_end:pb.C2SGetChestNum_140)
}

::google::protobuf::uint8* C2SGetChestNum_140::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetChestNum_140)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetChestNum_140)
  return target;
}

int C2SGetChestNum_140::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetChestNum_140)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetChestNum_140::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetChestNum_140)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetChestNum_140* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetChestNum_140>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetChestNum_140)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetChestNum_140)
    MergeFrom(*source);
  }
}

void C2SGetChestNum_140::MergeFrom(const C2SGetChestNum_140& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetChestNum_140)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SGetChestNum_140::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetChestNum_140)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetChestNum_140::CopyFrom(const C2SGetChestNum_140& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetChestNum_140)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetChestNum_140::IsInitialized() const {

  return true;
}

void C2SGetChestNum_140::Swap(C2SGetChestNum_140* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetChestNum_140::InternalSwap(C2SGetChestNum_140* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetChestNum_140::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetChestNum_140_descriptor_;
  metadata.reflection = C2SGetChestNum_140_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetChestNum_140

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetChestNum_140::kChestNumFieldNumber;
const int S2CGetChestNum_140::kWeaponFullFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetChestNum_140::S2CGetChestNum_140()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetChestNum_140)
}

void S2CGetChestNum_140::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetChestNum_140::S2CGetChestNum_140(const S2CGetChestNum_140& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetChestNum_140)
}

void S2CGetChestNum_140::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  chestnum_ = 0u;
  weaponfull_ = false;
}

S2CGetChestNum_140::~S2CGetChestNum_140() {
  // @@protoc_insertion_point(destructor:pb.S2CGetChestNum_140)
  SharedDtor();
}

void S2CGetChestNum_140::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetChestNum_140::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetChestNum_140::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetChestNum_140_descriptor_;
}

const S2CGetChestNum_140& S2CGetChestNum_140::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetChestNum_140* S2CGetChestNum_140::default_instance_ = NULL;

S2CGetChestNum_140* S2CGetChestNum_140::New(::google::protobuf::Arena* arena) const {
  S2CGetChestNum_140* n = new S2CGetChestNum_140;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetChestNum_140::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetChestNum_140)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CGetChestNum_140, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CGetChestNum_140*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(chestnum_, weaponfull_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2CGetChestNum_140::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetChestNum_140)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ChestNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chestnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_WeaponFull;
        break;
      }

      // optional bool WeaponFull = 2;
      case 2: {
        if (tag == 16) {
         parse_WeaponFull:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &weaponfull_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetChestNum_140)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetChestNum_140)
  return false;
#undef DO_
}

void S2CGetChestNum_140::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetChestNum_140)
  // optional uint32 ChestNum = 1;
  if (this->chestnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chestnum(), output);
  }

  // optional bool WeaponFull = 2;
  if (this->weaponfull() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->weaponfull(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetChestNum_140)
}

::google::protobuf::uint8* S2CGetChestNum_140::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetChestNum_140)
  // optional uint32 ChestNum = 1;
  if (this->chestnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chestnum(), target);
  }

  // optional bool WeaponFull = 2;
  if (this->weaponfull() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->weaponfull(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetChestNum_140)
  return target;
}

int S2CGetChestNum_140::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetChestNum_140)
  int total_size = 0;

  // optional uint32 ChestNum = 1;
  if (this->chestnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chestnum());
  }

  // optional bool WeaponFull = 2;
  if (this->weaponfull() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetChestNum_140::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetChestNum_140)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetChestNum_140* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetChestNum_140>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetChestNum_140)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetChestNum_140)
    MergeFrom(*source);
  }
}

void S2CGetChestNum_140::MergeFrom(const S2CGetChestNum_140& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetChestNum_140)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.chestnum() != 0) {
    set_chestnum(from.chestnum());
  }
  if (from.weaponfull() != 0) {
    set_weaponfull(from.weaponfull());
  }
}

void S2CGetChestNum_140::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetChestNum_140)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetChestNum_140::CopyFrom(const S2CGetChestNum_140& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetChestNum_140)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetChestNum_140::IsInitialized() const {

  return true;
}

void S2CGetChestNum_140::Swap(S2CGetChestNum_140* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetChestNum_140::InternalSwap(S2CGetChestNum_140* other) {
  std::swap(chestnum_, other->chestnum_);
  std::swap(weaponfull_, other->weaponfull_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetChestNum_140::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetChestNum_140_descriptor_;
  metadata.reflection = S2CGetChestNum_140_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetChestNum_140

// optional uint32 ChestNum = 1;
void S2CGetChestNum_140::clear_chestnum() {
  chestnum_ = 0u;
}
 ::google::protobuf::uint32 S2CGetChestNum_140::chestnum() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetChestNum_140.ChestNum)
  return chestnum_;
}
 void S2CGetChestNum_140::set_chestnum(::google::protobuf::uint32 value) {
  
  chestnum_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetChestNum_140.ChestNum)
}

// optional bool WeaponFull = 2;
void S2CGetChestNum_140::clear_weaponfull() {
  weaponfull_ = false;
}
 bool S2CGetChestNum_140::weaponfull() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetChestNum_140.WeaponFull)
  return weaponfull_;
}
 void S2CGetChestNum_140::set_weaponfull(bool value) {
  
  weaponfull_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetChestNum_140.WeaponFull)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SOpenChest_141::C2SOpenChest_141()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SOpenChest_141)
}

void C2SOpenChest_141::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SOpenChest_141::C2SOpenChest_141(const C2SOpenChest_141& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SOpenChest_141)
}

void C2SOpenChest_141::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SOpenChest_141::~C2SOpenChest_141() {
  // @@protoc_insertion_point(destructor:pb.C2SOpenChest_141)
  SharedDtor();
}

void C2SOpenChest_141::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SOpenChest_141::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SOpenChest_141::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SOpenChest_141_descriptor_;
}

const C2SOpenChest_141& C2SOpenChest_141::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SOpenChest_141* C2SOpenChest_141::default_instance_ = NULL;

C2SOpenChest_141* C2SOpenChest_141::New(::google::protobuf::Arena* arena) const {
  C2SOpenChest_141* n = new C2SOpenChest_141;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SOpenChest_141::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SOpenChest_141)
}

bool C2SOpenChest_141::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SOpenChest_141)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SOpenChest_141)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SOpenChest_141)
  return false;
#undef DO_
}

void C2SOpenChest_141::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SOpenChest_141)
  // @@protoc_insertion_point(serialize_end:pb.C2SOpenChest_141)
}

::google::protobuf::uint8* C2SOpenChest_141::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SOpenChest_141)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SOpenChest_141)
  return target;
}

int C2SOpenChest_141::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SOpenChest_141)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SOpenChest_141::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SOpenChest_141)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SOpenChest_141* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SOpenChest_141>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SOpenChest_141)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SOpenChest_141)
    MergeFrom(*source);
  }
}

void C2SOpenChest_141::MergeFrom(const C2SOpenChest_141& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SOpenChest_141)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SOpenChest_141::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SOpenChest_141)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SOpenChest_141::CopyFrom(const C2SOpenChest_141& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SOpenChest_141)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SOpenChest_141::IsInitialized() const {

  return true;
}

void C2SOpenChest_141::Swap(C2SOpenChest_141* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SOpenChest_141::InternalSwap(C2SOpenChest_141* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SOpenChest_141::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SOpenChest_141_descriptor_;
  metadata.reflection = C2SOpenChest_141_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SOpenChest_141

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChestReward::kItemIdFieldNumber;
const int ChestReward::kItemNumFieldNumber;
const int ChestReward::kMoneyFieldNumber;
const int ChestReward::kWeaponIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChestReward::ChestReward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ChestReward)
}

void ChestReward::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ChestReward::ChestReward(const ChestReward& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.ChestReward)
}

void ChestReward::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  itemid_ = 0u;
  itemnum_ = 0u;
  money_ = 0u;
  weaponid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ChestReward::~ChestReward() {
  // @@protoc_insertion_point(destructor:pb.ChestReward)
  SharedDtor();
}

void ChestReward::SharedDtor() {
  weaponid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ChestReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChestReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChestReward_descriptor_;
}

const ChestReward& ChestReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

ChestReward* ChestReward::default_instance_ = NULL;

ChestReward* ChestReward::New(::google::protobuf::Arena* arena) const {
  ChestReward* n = new ChestReward;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChestReward::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ChestReward)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ChestReward, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ChestReward*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(itemid_, itemnum_);
  money_ = 0u;
  weaponid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ChestReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ChestReward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ItemNum;
        break;
      }

      // optional uint32 ItemNum = 2;
      case 2: {
        if (tag == 16) {
         parse_ItemNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Money;
        break;
      }

      // optional uint32 Money = 3;
      case 3: {
        if (tag == 24) {
         parse_Money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &money_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_WeaponId;
        break;
      }

      // optional string WeaponId = 4;
      case 4: {
        if (tag == 34) {
         parse_WeaponId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_weaponid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->weaponid().data(), this->weaponid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ChestReward.WeaponId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ChestReward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ChestReward)
  return false;
#undef DO_
}

void ChestReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ChestReward)
  // optional uint32 ItemId = 1;
  if (this->itemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 ItemNum = 2;
  if (this->itemnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->itemnum(), output);
  }

  // optional uint32 Money = 3;
  if (this->money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->money(), output);
  }

  // optional string WeaponId = 4;
  if (this->weaponid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->weaponid().data(), this->weaponid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChestReward.WeaponId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->weaponid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.ChestReward)
}

::google::protobuf::uint8* ChestReward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ChestReward)
  // optional uint32 ItemId = 1;
  if (this->itemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 ItemNum = 2;
  if (this->itemnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->itemnum(), target);
  }

  // optional uint32 Money = 3;
  if (this->money() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->money(), target);
  }

  // optional string WeaponId = 4;
  if (this->weaponid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->weaponid().data(), this->weaponid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ChestReward.WeaponId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->weaponid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.ChestReward)
  return target;
}

int ChestReward::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ChestReward)
  int total_size = 0;

  // optional uint32 ItemId = 1;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemid());
  }

  // optional uint32 ItemNum = 2;
  if (this->itemnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemnum());
  }

  // optional uint32 Money = 3;
  if (this->money() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->money());
  }

  // optional string WeaponId = 4;
  if (this->weaponid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->weaponid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChestReward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ChestReward)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ChestReward* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ChestReward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ChestReward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ChestReward)
    MergeFrom(*source);
  }
}

void ChestReward::MergeFrom(const ChestReward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ChestReward)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.itemid() != 0) {
    set_itemid(from.itemid());
  }
  if (from.itemnum() != 0) {
    set_itemnum(from.itemnum());
  }
  if (from.money() != 0) {
    set_money(from.money());
  }
  if (from.weaponid().size() > 0) {

    weaponid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.weaponid_);
  }
}

void ChestReward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ChestReward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChestReward::CopyFrom(const ChestReward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ChestReward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChestReward::IsInitialized() const {

  return true;
}

void ChestReward::Swap(ChestReward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChestReward::InternalSwap(ChestReward* other) {
  std::swap(itemid_, other->itemid_);
  std::swap(itemnum_, other->itemnum_);
  std::swap(money_, other->money_);
  weaponid_.Swap(&other->weaponid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChestReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChestReward_descriptor_;
  metadata.reflection = ChestReward_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChestReward

// optional uint32 ItemId = 1;
void ChestReward::clear_itemid() {
  itemid_ = 0u;
}
 ::google::protobuf::uint32 ChestReward::itemid() const {
  // @@protoc_insertion_point(field_get:pb.ChestReward.ItemId)
  return itemid_;
}
 void ChestReward::set_itemid(::google::protobuf::uint32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:pb.ChestReward.ItemId)
}

// optional uint32 ItemNum = 2;
void ChestReward::clear_itemnum() {
  itemnum_ = 0u;
}
 ::google::protobuf::uint32 ChestReward::itemnum() const {
  // @@protoc_insertion_point(field_get:pb.ChestReward.ItemNum)
  return itemnum_;
}
 void ChestReward::set_itemnum(::google::protobuf::uint32 value) {
  
  itemnum_ = value;
  // @@protoc_insertion_point(field_set:pb.ChestReward.ItemNum)
}

// optional uint32 Money = 3;
void ChestReward::clear_money() {
  money_ = 0u;
}
 ::google::protobuf::uint32 ChestReward::money() const {
  // @@protoc_insertion_point(field_get:pb.ChestReward.Money)
  return money_;
}
 void ChestReward::set_money(::google::protobuf::uint32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:pb.ChestReward.Money)
}

// optional string WeaponId = 4;
void ChestReward::clear_weaponid() {
  weaponid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ChestReward::weaponid() const {
  // @@protoc_insertion_point(field_get:pb.ChestReward.WeaponId)
  return weaponid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChestReward::set_weaponid(const ::std::string& value) {
  
  weaponid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.ChestReward.WeaponId)
}
 void ChestReward::set_weaponid(const char* value) {
  
  weaponid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.ChestReward.WeaponId)
}
 void ChestReward::set_weaponid(const char* value, size_t size) {
  
  weaponid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.ChestReward.WeaponId)
}
 ::std::string* ChestReward::mutable_weaponid() {
  
  // @@protoc_insertion_point(field_mutable:pb.ChestReward.WeaponId)
  return weaponid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ChestReward::release_weaponid() {
  // @@protoc_insertion_point(field_release:pb.ChestReward.WeaponId)
  
  return weaponid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChestReward::set_allocated_weaponid(::std::string* weaponid) {
  if (weaponid != NULL) {
    
  } else {
    
  }
  weaponid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weaponid);
  // @@protoc_insertion_point(field_set_allocated:pb.ChestReward.WeaponId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2COpenChest_141::kRewardListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2COpenChest_141::S2COpenChest_141()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2COpenChest_141)
}

void S2COpenChest_141::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2COpenChest_141::S2COpenChest_141(const S2COpenChest_141& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2COpenChest_141)
}

void S2COpenChest_141::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2COpenChest_141::~S2COpenChest_141() {
  // @@protoc_insertion_point(destructor:pb.S2COpenChest_141)
  SharedDtor();
}

void S2COpenChest_141::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2COpenChest_141::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2COpenChest_141::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2COpenChest_141_descriptor_;
}

const S2COpenChest_141& S2COpenChest_141::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2COpenChest_141* S2COpenChest_141::default_instance_ = NULL;

S2COpenChest_141* S2COpenChest_141::New(::google::protobuf::Arena* arena) const {
  S2COpenChest_141* n = new S2COpenChest_141;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2COpenChest_141::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2COpenChest_141)
  rewardlist_.Clear();
}

bool S2COpenChest_141::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2COpenChest_141)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.ChestReward RewardList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_RewardList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rewardlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_RewardList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2COpenChest_141)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2COpenChest_141)
  return false;
#undef DO_
}

void S2COpenChest_141::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2COpenChest_141)
  // repeated .pb.ChestReward RewardList = 1;
  for (unsigned int i = 0, n = this->rewardlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewardlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2COpenChest_141)
}

::google::protobuf::uint8* S2COpenChest_141::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2COpenChest_141)
  // repeated .pb.ChestReward RewardList = 1;
  for (unsigned int i = 0, n = this->rewardlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->rewardlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2COpenChest_141)
  return target;
}

int S2COpenChest_141::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2COpenChest_141)
  int total_size = 0;

  // repeated .pb.ChestReward RewardList = 1;
  total_size += 1 * this->rewardlist_size();
  for (int i = 0; i < this->rewardlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewardlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2COpenChest_141::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2COpenChest_141)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2COpenChest_141* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2COpenChest_141>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2COpenChest_141)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2COpenChest_141)
    MergeFrom(*source);
  }
}

void S2COpenChest_141::MergeFrom(const S2COpenChest_141& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2COpenChest_141)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  rewardlist_.MergeFrom(from.rewardlist_);
}

void S2COpenChest_141::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2COpenChest_141)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2COpenChest_141::CopyFrom(const S2COpenChest_141& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2COpenChest_141)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2COpenChest_141::IsInitialized() const {

  return true;
}

void S2COpenChest_141::Swap(S2COpenChest_141* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2COpenChest_141::InternalSwap(S2COpenChest_141* other) {
  rewardlist_.UnsafeArenaSwap(&other->rewardlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2COpenChest_141::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2COpenChest_141_descriptor_;
  metadata.reflection = S2COpenChest_141_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2COpenChest_141

// repeated .pb.ChestReward RewardList = 1;
int S2COpenChest_141::rewardlist_size() const {
  return rewardlist_.size();
}
void S2COpenChest_141::clear_rewardlist() {
  rewardlist_.Clear();
}
const ::pb::ChestReward& S2COpenChest_141::rewardlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2COpenChest_141.RewardList)
  return rewardlist_.Get(index);
}
::pb::ChestReward* S2COpenChest_141::mutable_rewardlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2COpenChest_141.RewardList)
  return rewardlist_.Mutable(index);
}
::pb::ChestReward* S2COpenChest_141::add_rewardlist() {
  // @@protoc_insertion_point(field_add:pb.S2COpenChest_141.RewardList)
  return rewardlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::ChestReward >*
S2COpenChest_141::mutable_rewardlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2COpenChest_141.RewardList)
  return &rewardlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::ChestReward >&
S2COpenChest_141::rewardlist() const {
  // @@protoc_insertion_point(field_list:pb.S2COpenChest_141.RewardList)
  return rewardlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SBuyChest_142::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SBuyChest_142::C2SBuyChest_142()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SBuyChest_142)
}

void C2SBuyChest_142::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SBuyChest_142::C2SBuyChest_142(const C2SBuyChest_142& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SBuyChest_142)
}

void C2SBuyChest_142::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  num_ = 0u;
}

C2SBuyChest_142::~C2SBuyChest_142() {
  // @@protoc_insertion_point(destructor:pb.C2SBuyChest_142)
  SharedDtor();
}

void C2SBuyChest_142::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SBuyChest_142::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SBuyChest_142::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SBuyChest_142_descriptor_;
}

const C2SBuyChest_142& C2SBuyChest_142::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SBuyChest_142* C2SBuyChest_142::default_instance_ = NULL;

C2SBuyChest_142* C2SBuyChest_142::New(::google::protobuf::Arena* arena) const {
  C2SBuyChest_142* n = new C2SBuyChest_142;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SBuyChest_142::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SBuyChest_142)
  num_ = 0u;
}

bool C2SBuyChest_142::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SBuyChest_142)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Num = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SBuyChest_142)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SBuyChest_142)
  return false;
#undef DO_
}

void C2SBuyChest_142::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SBuyChest_142)
  // optional uint32 Num = 1;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SBuyChest_142)
}

::google::protobuf::uint8* C2SBuyChest_142::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SBuyChest_142)
  // optional uint32 Num = 1;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SBuyChest_142)
  return target;
}

int C2SBuyChest_142::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SBuyChest_142)
  int total_size = 0;

  // optional uint32 Num = 1;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SBuyChest_142::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SBuyChest_142)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SBuyChest_142* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SBuyChest_142>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SBuyChest_142)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SBuyChest_142)
    MergeFrom(*source);
  }
}

void C2SBuyChest_142::MergeFrom(const C2SBuyChest_142& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SBuyChest_142)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void C2SBuyChest_142::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SBuyChest_142)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SBuyChest_142::CopyFrom(const C2SBuyChest_142& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SBuyChest_142)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SBuyChest_142::IsInitialized() const {

  return true;
}

void C2SBuyChest_142::Swap(C2SBuyChest_142* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SBuyChest_142::InternalSwap(C2SBuyChest_142* other) {
  std::swap(num_, other->num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SBuyChest_142::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SBuyChest_142_descriptor_;
  metadata.reflection = C2SBuyChest_142_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SBuyChest_142

// optional uint32 Num = 1;
void C2SBuyChest_142::clear_num() {
  num_ = 0u;
}
 ::google::protobuf::uint32 C2SBuyChest_142::num() const {
  // @@protoc_insertion_point(field_get:pb.C2SBuyChest_142.Num)
  return num_;
}
 void C2SBuyChest_142::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SBuyChest_142.Num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_BuyItemList_150::kItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_BuyItemList_150::C2S_BuyItemList_150()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_BuyItemList_150)
}

void C2S_BuyItemList_150::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_BuyItemList_150::C2S_BuyItemList_150(const C2S_BuyItemList_150& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_BuyItemList_150)
}

void C2S_BuyItemList_150::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2S_BuyItemList_150::~C2S_BuyItemList_150() {
  // @@protoc_insertion_point(destructor:pb.C2S_BuyItemList_150)
  SharedDtor();
}

void C2S_BuyItemList_150::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_BuyItemList_150::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_BuyItemList_150::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_BuyItemList_150_descriptor_;
}

const C2S_BuyItemList_150& C2S_BuyItemList_150::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_BuyItemList_150* C2S_BuyItemList_150::default_instance_ = NULL;

C2S_BuyItemList_150* C2S_BuyItemList_150::New(::google::protobuf::Arena* arena) const {
  C2S_BuyItemList_150* n = new C2S_BuyItemList_150;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_BuyItemList_150::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_BuyItemList_150)
  itemlist_.Clear();
}

bool C2S_BuyItemList_150::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_BuyItemList_150)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.MallBagItemData ItemList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ItemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_itemlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_ItemList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_BuyItemList_150)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_BuyItemList_150)
  return false;
#undef DO_
}

void C2S_BuyItemList_150::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_BuyItemList_150)
  // repeated .pb.MallBagItemData ItemList = 1;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->itemlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_BuyItemList_150)
}

::google::protobuf::uint8* C2S_BuyItemList_150::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_BuyItemList_150)
  // repeated .pb.MallBagItemData ItemList = 1;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->itemlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_BuyItemList_150)
  return target;
}

int C2S_BuyItemList_150::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_BuyItemList_150)
  int total_size = 0;

  // repeated .pb.MallBagItemData ItemList = 1;
  total_size += 1 * this->itemlist_size();
  for (int i = 0; i < this->itemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_BuyItemList_150::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_BuyItemList_150)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_BuyItemList_150* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_BuyItemList_150>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_BuyItemList_150)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_BuyItemList_150)
    MergeFrom(*source);
  }
}

void C2S_BuyItemList_150::MergeFrom(const C2S_BuyItemList_150& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_BuyItemList_150)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  itemlist_.MergeFrom(from.itemlist_);
}

void C2S_BuyItemList_150::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_BuyItemList_150)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_BuyItemList_150::CopyFrom(const C2S_BuyItemList_150& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_BuyItemList_150)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_BuyItemList_150::IsInitialized() const {

  return true;
}

void C2S_BuyItemList_150::Swap(C2S_BuyItemList_150* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_BuyItemList_150::InternalSwap(C2S_BuyItemList_150* other) {
  itemlist_.UnsafeArenaSwap(&other->itemlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_BuyItemList_150::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_BuyItemList_150_descriptor_;
  metadata.reflection = C2S_BuyItemList_150_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_BuyItemList_150

// repeated .pb.MallBagItemData ItemList = 1;
int C2S_BuyItemList_150::itemlist_size() const {
  return itemlist_.size();
}
void C2S_BuyItemList_150::clear_itemlist() {
  itemlist_.Clear();
}
const ::pb::MallBagItemData& C2S_BuyItemList_150::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.C2S_BuyItemList_150.ItemList)
  return itemlist_.Get(index);
}
::pb::MallBagItemData* C2S_BuyItemList_150::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.C2S_BuyItemList_150.ItemList)
  return itemlist_.Mutable(index);
}
::pb::MallBagItemData* C2S_BuyItemList_150::add_itemlist() {
  // @@protoc_insertion_point(field_add:pb.C2S_BuyItemList_150.ItemList)
  return itemlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::MallBagItemData >*
C2S_BuyItemList_150::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.C2S_BuyItemList_150.ItemList)
  return &itemlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::MallBagItemData >&
C2S_BuyItemList_150::itemlist() const {
  // @@protoc_insertion_point(field_list:pb.C2S_BuyItemList_150.ItemList)
  return itemlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_ReqBagItemList_151::C2S_ReqBagItemList_151()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_ReqBagItemList_151)
}

void C2S_ReqBagItemList_151::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_ReqBagItemList_151::C2S_ReqBagItemList_151(const C2S_ReqBagItemList_151& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_ReqBagItemList_151)
}

void C2S_ReqBagItemList_151::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2S_ReqBagItemList_151::~C2S_ReqBagItemList_151() {
  // @@protoc_insertion_point(destructor:pb.C2S_ReqBagItemList_151)
  SharedDtor();
}

void C2S_ReqBagItemList_151::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_ReqBagItemList_151::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_ReqBagItemList_151::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_ReqBagItemList_151_descriptor_;
}

const C2S_ReqBagItemList_151& C2S_ReqBagItemList_151::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_ReqBagItemList_151* C2S_ReqBagItemList_151::default_instance_ = NULL;

C2S_ReqBagItemList_151* C2S_ReqBagItemList_151::New(::google::protobuf::Arena* arena) const {
  C2S_ReqBagItemList_151* n = new C2S_ReqBagItemList_151;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_ReqBagItemList_151::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_ReqBagItemList_151)
}

bool C2S_ReqBagItemList_151::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_ReqBagItemList_151)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_ReqBagItemList_151)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_ReqBagItemList_151)
  return false;
#undef DO_
}

void C2S_ReqBagItemList_151::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_ReqBagItemList_151)
  // @@protoc_insertion_point(serialize_end:pb.C2S_ReqBagItemList_151)
}

::google::protobuf::uint8* C2S_ReqBagItemList_151::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_ReqBagItemList_151)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_ReqBagItemList_151)
  return target;
}

int C2S_ReqBagItemList_151::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_ReqBagItemList_151)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_ReqBagItemList_151::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_ReqBagItemList_151)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_ReqBagItemList_151* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_ReqBagItemList_151>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_ReqBagItemList_151)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_ReqBagItemList_151)
    MergeFrom(*source);
  }
}

void C2S_ReqBagItemList_151::MergeFrom(const C2S_ReqBagItemList_151& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_ReqBagItemList_151)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2S_ReqBagItemList_151::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_ReqBagItemList_151)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_ReqBagItemList_151::CopyFrom(const C2S_ReqBagItemList_151& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_ReqBagItemList_151)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_ReqBagItemList_151::IsInitialized() const {

  return true;
}

void C2S_ReqBagItemList_151::Swap(C2S_ReqBagItemList_151* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_ReqBagItemList_151::InternalSwap(C2S_ReqBagItemList_151* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_ReqBagItemList_151::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_ReqBagItemList_151_descriptor_;
  metadata.reflection = C2S_ReqBagItemList_151_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_ReqBagItemList_151

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_ReqBagItemList_151::kItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_ReqBagItemList_151::S2C_ReqBagItemList_151()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_ReqBagItemList_151)
}

void S2C_ReqBagItemList_151::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2C_ReqBagItemList_151::S2C_ReqBagItemList_151(const S2C_ReqBagItemList_151& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2C_ReqBagItemList_151)
}

void S2C_ReqBagItemList_151::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2C_ReqBagItemList_151::~S2C_ReqBagItemList_151() {
  // @@protoc_insertion_point(destructor:pb.S2C_ReqBagItemList_151)
  SharedDtor();
}

void S2C_ReqBagItemList_151::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2C_ReqBagItemList_151::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_ReqBagItemList_151::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2C_ReqBagItemList_151_descriptor_;
}

const S2C_ReqBagItemList_151& S2C_ReqBagItemList_151::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2C_ReqBagItemList_151* S2C_ReqBagItemList_151::default_instance_ = NULL;

S2C_ReqBagItemList_151* S2C_ReqBagItemList_151::New(::google::protobuf::Arena* arena) const {
  S2C_ReqBagItemList_151* n = new S2C_ReqBagItemList_151;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_ReqBagItemList_151::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_ReqBagItemList_151)
  itemlist_.Clear();
}

bool S2C_ReqBagItemList_151::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_ReqBagItemList_151)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.MallBagItemData ItemList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ItemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_itemlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_ItemList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_ReqBagItemList_151)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_ReqBagItemList_151)
  return false;
#undef DO_
}

void S2C_ReqBagItemList_151::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_ReqBagItemList_151)
  // repeated .pb.MallBagItemData ItemList = 1;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->itemlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_ReqBagItemList_151)
}

::google::protobuf::uint8* S2C_ReqBagItemList_151::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_ReqBagItemList_151)
  // repeated .pb.MallBagItemData ItemList = 1;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->itemlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_ReqBagItemList_151)
  return target;
}

int S2C_ReqBagItemList_151::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_ReqBagItemList_151)
  int total_size = 0;

  // repeated .pb.MallBagItemData ItemList = 1;
  total_size += 1 * this->itemlist_size();
  for (int i = 0; i < this->itemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_ReqBagItemList_151::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_ReqBagItemList_151)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2C_ReqBagItemList_151* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_ReqBagItemList_151>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_ReqBagItemList_151)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_ReqBagItemList_151)
    MergeFrom(*source);
  }
}

void S2C_ReqBagItemList_151::MergeFrom(const S2C_ReqBagItemList_151& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_ReqBagItemList_151)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  itemlist_.MergeFrom(from.itemlist_);
}

void S2C_ReqBagItemList_151::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_ReqBagItemList_151)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_ReqBagItemList_151::CopyFrom(const S2C_ReqBagItemList_151& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_ReqBagItemList_151)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_ReqBagItemList_151::IsInitialized() const {

  return true;
}

void S2C_ReqBagItemList_151::Swap(S2C_ReqBagItemList_151* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_ReqBagItemList_151::InternalSwap(S2C_ReqBagItemList_151* other) {
  itemlist_.UnsafeArenaSwap(&other->itemlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_ReqBagItemList_151::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2C_ReqBagItemList_151_descriptor_;
  metadata.reflection = S2C_ReqBagItemList_151_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_ReqBagItemList_151

// repeated .pb.MallBagItemData ItemList = 1;
int S2C_ReqBagItemList_151::itemlist_size() const {
  return itemlist_.size();
}
void S2C_ReqBagItemList_151::clear_itemlist() {
  itemlist_.Clear();
}
const ::pb::MallBagItemData& S2C_ReqBagItemList_151::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2C_ReqBagItemList_151.ItemList)
  return itemlist_.Get(index);
}
::pb::MallBagItemData* S2C_ReqBagItemList_151::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2C_ReqBagItemList_151.ItemList)
  return itemlist_.Mutable(index);
}
::pb::MallBagItemData* S2C_ReqBagItemList_151::add_itemlist() {
  // @@protoc_insertion_point(field_add:pb.S2C_ReqBagItemList_151.ItemList)
  return itemlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::MallBagItemData >*
S2C_ReqBagItemList_151::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2C_ReqBagItemList_151.ItemList)
  return &itemlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::MallBagItemData >&
S2C_ReqBagItemList_151::itemlist() const {
  // @@protoc_insertion_point(field_list:pb.S2C_ReqBagItemList_151.ItemList)
  return itemlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_UseItem_153::kItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_UseItem_153::C2S_UseItem_153()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_UseItem_153)
}

void C2S_UseItem_153::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_UseItem_153::C2S_UseItem_153(const C2S_UseItem_153& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_UseItem_153)
}

void C2S_UseItem_153::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2S_UseItem_153::~C2S_UseItem_153() {
  // @@protoc_insertion_point(destructor:pb.C2S_UseItem_153)
  SharedDtor();
}

void C2S_UseItem_153::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_UseItem_153::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_UseItem_153::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_UseItem_153_descriptor_;
}

const C2S_UseItem_153& C2S_UseItem_153::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_UseItem_153* C2S_UseItem_153::default_instance_ = NULL;

C2S_UseItem_153* C2S_UseItem_153::New(::google::protobuf::Arena* arena) const {
  C2S_UseItem_153* n = new C2S_UseItem_153;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_UseItem_153::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_UseItem_153)
  itemids_.Clear();
}

bool C2S_UseItem_153::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_UseItem_153)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ItemIds = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_itemids())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_itemids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_UseItem_153)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_UseItem_153)
  return false;
#undef DO_
}

void C2S_UseItem_153::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_UseItem_153)
  // repeated uint32 ItemIds = 1;
  if (this->itemids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_itemids_cached_byte_size_);
  }
  for (int i = 0; i < this->itemids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->itemids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_UseItem_153)
}

::google::protobuf::uint8* C2S_UseItem_153::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_UseItem_153)
  // repeated uint32 ItemIds = 1;
  if (this->itemids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _itemids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->itemids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->itemids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_UseItem_153)
  return target;
}

int C2S_UseItem_153::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_UseItem_153)
  int total_size = 0;

  // repeated uint32 ItemIds = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->itemids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->itemids(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _itemids_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_UseItem_153::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_UseItem_153)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_UseItem_153* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_UseItem_153>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_UseItem_153)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_UseItem_153)
    MergeFrom(*source);
  }
}

void C2S_UseItem_153::MergeFrom(const C2S_UseItem_153& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_UseItem_153)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  itemids_.MergeFrom(from.itemids_);
}

void C2S_UseItem_153::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_UseItem_153)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_UseItem_153::CopyFrom(const C2S_UseItem_153& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_UseItem_153)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_UseItem_153::IsInitialized() const {

  return true;
}

void C2S_UseItem_153::Swap(C2S_UseItem_153* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_UseItem_153::InternalSwap(C2S_UseItem_153* other) {
  itemids_.UnsafeArenaSwap(&other->itemids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_UseItem_153::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_UseItem_153_descriptor_;
  metadata.reflection = C2S_UseItem_153_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_UseItem_153

// repeated uint32 ItemIds = 1;
int C2S_UseItem_153::itemids_size() const {
  return itemids_.size();
}
void C2S_UseItem_153::clear_itemids() {
  itemids_.Clear();
}
 ::google::protobuf::uint32 C2S_UseItem_153::itemids(int index) const {
  // @@protoc_insertion_point(field_get:pb.C2S_UseItem_153.ItemIds)
  return itemids_.Get(index);
}
 void C2S_UseItem_153::set_itemids(int index, ::google::protobuf::uint32 value) {
  itemids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.C2S_UseItem_153.ItemIds)
}
 void C2S_UseItem_153::add_itemids(::google::protobuf::uint32 value) {
  itemids_.Add(value);
  // @@protoc_insertion_point(field_add:pb.C2S_UseItem_153.ItemIds)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
C2S_UseItem_153::itemids() const {
  // @@protoc_insertion_point(field_list:pb.C2S_UseItem_153.ItemIds)
  return itemids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
C2S_UseItem_153::mutable_itemids() {
  // @@protoc_insertion_point(field_mutable_list:pb.C2S_UseItem_153.ItemIds)
  return &itemids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_RefreshStore_154::kStoreItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_RefreshStore_154::C2S_RefreshStore_154()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_RefreshStore_154)
}

void C2S_RefreshStore_154::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_RefreshStore_154::C2S_RefreshStore_154(const C2S_RefreshStore_154& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_RefreshStore_154)
}

void C2S_RefreshStore_154::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2S_RefreshStore_154::~C2S_RefreshStore_154() {
  // @@protoc_insertion_point(destructor:pb.C2S_RefreshStore_154)
  SharedDtor();
}

void C2S_RefreshStore_154::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_RefreshStore_154::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_RefreshStore_154::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_RefreshStore_154_descriptor_;
}

const C2S_RefreshStore_154& C2S_RefreshStore_154::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_RefreshStore_154* C2S_RefreshStore_154::default_instance_ = NULL;

C2S_RefreshStore_154* C2S_RefreshStore_154::New(::google::protobuf::Arena* arena) const {
  C2S_RefreshStore_154* n = new C2S_RefreshStore_154;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_RefreshStore_154::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_RefreshStore_154)
  storeitemids_.Clear();
}

bool C2S_RefreshStore_154::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_RefreshStore_154)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 StoreItemIds = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_storeitemids())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_storeitemids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_RefreshStore_154)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_RefreshStore_154)
  return false;
#undef DO_
}

void C2S_RefreshStore_154::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_RefreshStore_154)
  // repeated uint32 StoreItemIds = 1;
  if (this->storeitemids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_storeitemids_cached_byte_size_);
  }
  for (int i = 0; i < this->storeitemids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->storeitemids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_RefreshStore_154)
}

::google::protobuf::uint8* C2S_RefreshStore_154::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_RefreshStore_154)
  // repeated uint32 StoreItemIds = 1;
  if (this->storeitemids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _storeitemids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->storeitemids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->storeitemids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_RefreshStore_154)
  return target;
}

int C2S_RefreshStore_154::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_RefreshStore_154)
  int total_size = 0;

  // repeated uint32 StoreItemIds = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->storeitemids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->storeitemids(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _storeitemids_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_RefreshStore_154::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_RefreshStore_154)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_RefreshStore_154* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_RefreshStore_154>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_RefreshStore_154)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_RefreshStore_154)
    MergeFrom(*source);
  }
}

void C2S_RefreshStore_154::MergeFrom(const C2S_RefreshStore_154& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_RefreshStore_154)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  storeitemids_.MergeFrom(from.storeitemids_);
}

void C2S_RefreshStore_154::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_RefreshStore_154)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_RefreshStore_154::CopyFrom(const C2S_RefreshStore_154& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_RefreshStore_154)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_RefreshStore_154::IsInitialized() const {

  return true;
}

void C2S_RefreshStore_154::Swap(C2S_RefreshStore_154* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_RefreshStore_154::InternalSwap(C2S_RefreshStore_154* other) {
  storeitemids_.UnsafeArenaSwap(&other->storeitemids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_RefreshStore_154::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_RefreshStore_154_descriptor_;
  metadata.reflection = C2S_RefreshStore_154_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_RefreshStore_154

// repeated uint32 StoreItemIds = 1;
int C2S_RefreshStore_154::storeitemids_size() const {
  return storeitemids_.size();
}
void C2S_RefreshStore_154::clear_storeitemids() {
  storeitemids_.Clear();
}
 ::google::protobuf::uint32 C2S_RefreshStore_154::storeitemids(int index) const {
  // @@protoc_insertion_point(field_get:pb.C2S_RefreshStore_154.StoreItemIds)
  return storeitemids_.Get(index);
}
 void C2S_RefreshStore_154::set_storeitemids(int index, ::google::protobuf::uint32 value) {
  storeitemids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.C2S_RefreshStore_154.StoreItemIds)
}
 void C2S_RefreshStore_154::add_storeitemids(::google::protobuf::uint32 value) {
  storeitemids_.Add(value);
  // @@protoc_insertion_point(field_add:pb.C2S_RefreshStore_154.StoreItemIds)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
C2S_RefreshStore_154::storeitemids() const {
  // @@protoc_insertion_point(field_list:pb.C2S_RefreshStore_154.StoreItemIds)
  return storeitemids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
C2S_RefreshStore_154::mutable_storeitemids() {
  // @@protoc_insertion_point(field_mutable_list:pb.C2S_RefreshStore_154.StoreItemIds)
  return &storeitemids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_RefreshStore_154::kNextRefreshSecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_RefreshStore_154::S2C_RefreshStore_154()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_RefreshStore_154)
}

void S2C_RefreshStore_154::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2C_RefreshStore_154::S2C_RefreshStore_154(const S2C_RefreshStore_154& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2C_RefreshStore_154)
}

void S2C_RefreshStore_154::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  nextrefreshsec_ = 0u;
}

S2C_RefreshStore_154::~S2C_RefreshStore_154() {
  // @@protoc_insertion_point(destructor:pb.S2C_RefreshStore_154)
  SharedDtor();
}

void S2C_RefreshStore_154::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2C_RefreshStore_154::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_RefreshStore_154::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2C_RefreshStore_154_descriptor_;
}

const S2C_RefreshStore_154& S2C_RefreshStore_154::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2C_RefreshStore_154* S2C_RefreshStore_154::default_instance_ = NULL;

S2C_RefreshStore_154* S2C_RefreshStore_154::New(::google::protobuf::Arena* arena) const {
  S2C_RefreshStore_154* n = new S2C_RefreshStore_154;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_RefreshStore_154::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_RefreshStore_154)
  nextrefreshsec_ = 0u;
}

bool S2C_RefreshStore_154::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_RefreshStore_154)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 NextRefreshSec = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nextrefreshsec_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_RefreshStore_154)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_RefreshStore_154)
  return false;
#undef DO_
}

void S2C_RefreshStore_154::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_RefreshStore_154)
  // optional uint32 NextRefreshSec = 1;
  if (this->nextrefreshsec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nextrefreshsec(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_RefreshStore_154)
}

::google::protobuf::uint8* S2C_RefreshStore_154::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_RefreshStore_154)
  // optional uint32 NextRefreshSec = 1;
  if (this->nextrefreshsec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nextrefreshsec(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_RefreshStore_154)
  return target;
}

int S2C_RefreshStore_154::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_RefreshStore_154)
  int total_size = 0;

  // optional uint32 NextRefreshSec = 1;
  if (this->nextrefreshsec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nextrefreshsec());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_RefreshStore_154::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_RefreshStore_154)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2C_RefreshStore_154* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_RefreshStore_154>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_RefreshStore_154)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_RefreshStore_154)
    MergeFrom(*source);
  }
}

void S2C_RefreshStore_154::MergeFrom(const S2C_RefreshStore_154& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_RefreshStore_154)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.nextrefreshsec() != 0) {
    set_nextrefreshsec(from.nextrefreshsec());
  }
}

void S2C_RefreshStore_154::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_RefreshStore_154)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_RefreshStore_154::CopyFrom(const S2C_RefreshStore_154& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_RefreshStore_154)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_RefreshStore_154::IsInitialized() const {

  return true;
}

void S2C_RefreshStore_154::Swap(S2C_RefreshStore_154* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_RefreshStore_154::InternalSwap(S2C_RefreshStore_154* other) {
  std::swap(nextrefreshsec_, other->nextrefreshsec_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_RefreshStore_154::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2C_RefreshStore_154_descriptor_;
  metadata.reflection = S2C_RefreshStore_154_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_RefreshStore_154

// optional uint32 NextRefreshSec = 1;
void S2C_RefreshStore_154::clear_nextrefreshsec() {
  nextrefreshsec_ = 0u;
}
 ::google::protobuf::uint32 S2C_RefreshStore_154::nextrefreshsec() const {
  // @@protoc_insertion_point(field_get:pb.S2C_RefreshStore_154.NextRefreshSec)
  return nextrefreshsec_;
}
 void S2C_RefreshStore_154::set_nextrefreshsec(::google::protobuf::uint32 value) {
  
  nextrefreshsec_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_RefreshStore_154.NextRefreshSec)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_ReqLastStoreItem_155::C2S_ReqLastStoreItem_155()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_ReqLastStoreItem_155)
}

void C2S_ReqLastStoreItem_155::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_ReqLastStoreItem_155::C2S_ReqLastStoreItem_155(const C2S_ReqLastStoreItem_155& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_ReqLastStoreItem_155)
}

void C2S_ReqLastStoreItem_155::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2S_ReqLastStoreItem_155::~C2S_ReqLastStoreItem_155() {
  // @@protoc_insertion_point(destructor:pb.C2S_ReqLastStoreItem_155)
  SharedDtor();
}

void C2S_ReqLastStoreItem_155::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_ReqLastStoreItem_155::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_ReqLastStoreItem_155::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_ReqLastStoreItem_155_descriptor_;
}

const C2S_ReqLastStoreItem_155& C2S_ReqLastStoreItem_155::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_ReqLastStoreItem_155* C2S_ReqLastStoreItem_155::default_instance_ = NULL;

C2S_ReqLastStoreItem_155* C2S_ReqLastStoreItem_155::New(::google::protobuf::Arena* arena) const {
  C2S_ReqLastStoreItem_155* n = new C2S_ReqLastStoreItem_155;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_ReqLastStoreItem_155::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_ReqLastStoreItem_155)
}

bool C2S_ReqLastStoreItem_155::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_ReqLastStoreItem_155)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_ReqLastStoreItem_155)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_ReqLastStoreItem_155)
  return false;
#undef DO_
}

void C2S_ReqLastStoreItem_155::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_ReqLastStoreItem_155)
  // @@protoc_insertion_point(serialize_end:pb.C2S_ReqLastStoreItem_155)
}

::google::protobuf::uint8* C2S_ReqLastStoreItem_155::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_ReqLastStoreItem_155)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_ReqLastStoreItem_155)
  return target;
}

int C2S_ReqLastStoreItem_155::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_ReqLastStoreItem_155)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_ReqLastStoreItem_155::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_ReqLastStoreItem_155)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_ReqLastStoreItem_155* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_ReqLastStoreItem_155>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_ReqLastStoreItem_155)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_ReqLastStoreItem_155)
    MergeFrom(*source);
  }
}

void C2S_ReqLastStoreItem_155::MergeFrom(const C2S_ReqLastStoreItem_155& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_ReqLastStoreItem_155)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2S_ReqLastStoreItem_155::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_ReqLastStoreItem_155)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_ReqLastStoreItem_155::CopyFrom(const C2S_ReqLastStoreItem_155& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_ReqLastStoreItem_155)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_ReqLastStoreItem_155::IsInitialized() const {

  return true;
}

void C2S_ReqLastStoreItem_155::Swap(C2S_ReqLastStoreItem_155* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_ReqLastStoreItem_155::InternalSwap(C2S_ReqLastStoreItem_155* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_ReqLastStoreItem_155::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_ReqLastStoreItem_155_descriptor_;
  metadata.reflection = C2S_ReqLastStoreItem_155_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_ReqLastStoreItem_155

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_ReqLastStoreItem_155::kNextRefreshSecFieldNumber;
const int S2C_ReqLastStoreItem_155::kStoreItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_ReqLastStoreItem_155::S2C_ReqLastStoreItem_155()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_ReqLastStoreItem_155)
}

void S2C_ReqLastStoreItem_155::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2C_ReqLastStoreItem_155::S2C_ReqLastStoreItem_155(const S2C_ReqLastStoreItem_155& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2C_ReqLastStoreItem_155)
}

void S2C_ReqLastStoreItem_155::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  nextrefreshsec_ = 0u;
}

S2C_ReqLastStoreItem_155::~S2C_ReqLastStoreItem_155() {
  // @@protoc_insertion_point(destructor:pb.S2C_ReqLastStoreItem_155)
  SharedDtor();
}

void S2C_ReqLastStoreItem_155::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2C_ReqLastStoreItem_155::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_ReqLastStoreItem_155::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2C_ReqLastStoreItem_155_descriptor_;
}

const S2C_ReqLastStoreItem_155& S2C_ReqLastStoreItem_155::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2C_ReqLastStoreItem_155* S2C_ReqLastStoreItem_155::default_instance_ = NULL;

S2C_ReqLastStoreItem_155* S2C_ReqLastStoreItem_155::New(::google::protobuf::Arena* arena) const {
  S2C_ReqLastStoreItem_155* n = new S2C_ReqLastStoreItem_155;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_ReqLastStoreItem_155::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_ReqLastStoreItem_155)
  nextrefreshsec_ = 0u;
  storeitemids_.Clear();
}

bool S2C_ReqLastStoreItem_155::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_ReqLastStoreItem_155)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 NextRefreshSec = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nextrefreshsec_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_StoreItemIds;
        break;
      }

      // repeated uint32 StoreItemIds = 2;
      case 2: {
        if (tag == 18) {
         parse_StoreItemIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_storeitemids())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_storeitemids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_ReqLastStoreItem_155)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_ReqLastStoreItem_155)
  return false;
#undef DO_
}

void S2C_ReqLastStoreItem_155::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_ReqLastStoreItem_155)
  // optional uint32 NextRefreshSec = 1;
  if (this->nextrefreshsec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nextrefreshsec(), output);
  }

  // repeated uint32 StoreItemIds = 2;
  if (this->storeitemids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_storeitemids_cached_byte_size_);
  }
  for (int i = 0; i < this->storeitemids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->storeitemids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_ReqLastStoreItem_155)
}

::google::protobuf::uint8* S2C_ReqLastStoreItem_155::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_ReqLastStoreItem_155)
  // optional uint32 NextRefreshSec = 1;
  if (this->nextrefreshsec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nextrefreshsec(), target);
  }

  // repeated uint32 StoreItemIds = 2;
  if (this->storeitemids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _storeitemids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->storeitemids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->storeitemids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_ReqLastStoreItem_155)
  return target;
}

int S2C_ReqLastStoreItem_155::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_ReqLastStoreItem_155)
  int total_size = 0;

  // optional uint32 NextRefreshSec = 1;
  if (this->nextrefreshsec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nextrefreshsec());
  }

  // repeated uint32 StoreItemIds = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->storeitemids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->storeitemids(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _storeitemids_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_ReqLastStoreItem_155::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_ReqLastStoreItem_155)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2C_ReqLastStoreItem_155* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_ReqLastStoreItem_155>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_ReqLastStoreItem_155)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_ReqLastStoreItem_155)
    MergeFrom(*source);
  }
}

void S2C_ReqLastStoreItem_155::MergeFrom(const S2C_ReqLastStoreItem_155& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_ReqLastStoreItem_155)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  storeitemids_.MergeFrom(from.storeitemids_);
  if (from.nextrefreshsec() != 0) {
    set_nextrefreshsec(from.nextrefreshsec());
  }
}

void S2C_ReqLastStoreItem_155::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_ReqLastStoreItem_155)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_ReqLastStoreItem_155::CopyFrom(const S2C_ReqLastStoreItem_155& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_ReqLastStoreItem_155)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_ReqLastStoreItem_155::IsInitialized() const {

  return true;
}

void S2C_ReqLastStoreItem_155::Swap(S2C_ReqLastStoreItem_155* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_ReqLastStoreItem_155::InternalSwap(S2C_ReqLastStoreItem_155* other) {
  std::swap(nextrefreshsec_, other->nextrefreshsec_);
  storeitemids_.UnsafeArenaSwap(&other->storeitemids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_ReqLastStoreItem_155::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2C_ReqLastStoreItem_155_descriptor_;
  metadata.reflection = S2C_ReqLastStoreItem_155_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_ReqLastStoreItem_155

// optional uint32 NextRefreshSec = 1;
void S2C_ReqLastStoreItem_155::clear_nextrefreshsec() {
  nextrefreshsec_ = 0u;
}
 ::google::protobuf::uint32 S2C_ReqLastStoreItem_155::nextrefreshsec() const {
  // @@protoc_insertion_point(field_get:pb.S2C_ReqLastStoreItem_155.NextRefreshSec)
  return nextrefreshsec_;
}
 void S2C_ReqLastStoreItem_155::set_nextrefreshsec(::google::protobuf::uint32 value) {
  
  nextrefreshsec_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_ReqLastStoreItem_155.NextRefreshSec)
}

// repeated uint32 StoreItemIds = 2;
int S2C_ReqLastStoreItem_155::storeitemids_size() const {
  return storeitemids_.size();
}
void S2C_ReqLastStoreItem_155::clear_storeitemids() {
  storeitemids_.Clear();
}
 ::google::protobuf::uint32 S2C_ReqLastStoreItem_155::storeitemids(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2C_ReqLastStoreItem_155.StoreItemIds)
  return storeitemids_.Get(index);
}
 void S2C_ReqLastStoreItem_155::set_storeitemids(int index, ::google::protobuf::uint32 value) {
  storeitemids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.S2C_ReqLastStoreItem_155.StoreItemIds)
}
 void S2C_ReqLastStoreItem_155::add_storeitemids(::google::protobuf::uint32 value) {
  storeitemids_.Add(value);
  // @@protoc_insertion_point(field_add:pb.S2C_ReqLastStoreItem_155.StoreItemIds)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
S2C_ReqLastStoreItem_155::storeitemids() const {
  // @@protoc_insertion_point(field_list:pb.S2C_ReqLastStoreItem_155.StoreItemIds)
  return storeitemids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
S2C_ReqLastStoreItem_155::mutable_storeitemids() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2C_ReqLastStoreItem_155.StoreItemIds)
  return &storeitemids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_ReqUnLockCharList_156::C2S_ReqUnLockCharList_156()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_ReqUnLockCharList_156)
}

void C2S_ReqUnLockCharList_156::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_ReqUnLockCharList_156::C2S_ReqUnLockCharList_156(const C2S_ReqUnLockCharList_156& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_ReqUnLockCharList_156)
}

void C2S_ReqUnLockCharList_156::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2S_ReqUnLockCharList_156::~C2S_ReqUnLockCharList_156() {
  // @@protoc_insertion_point(destructor:pb.C2S_ReqUnLockCharList_156)
  SharedDtor();
}

void C2S_ReqUnLockCharList_156::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_ReqUnLockCharList_156::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_ReqUnLockCharList_156::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_ReqUnLockCharList_156_descriptor_;
}

const C2S_ReqUnLockCharList_156& C2S_ReqUnLockCharList_156::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_ReqUnLockCharList_156* C2S_ReqUnLockCharList_156::default_instance_ = NULL;

C2S_ReqUnLockCharList_156* C2S_ReqUnLockCharList_156::New(::google::protobuf::Arena* arena) const {
  C2S_ReqUnLockCharList_156* n = new C2S_ReqUnLockCharList_156;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_ReqUnLockCharList_156::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_ReqUnLockCharList_156)
}

bool C2S_ReqUnLockCharList_156::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_ReqUnLockCharList_156)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_ReqUnLockCharList_156)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_ReqUnLockCharList_156)
  return false;
#undef DO_
}

void C2S_ReqUnLockCharList_156::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_ReqUnLockCharList_156)
  // @@protoc_insertion_point(serialize_end:pb.C2S_ReqUnLockCharList_156)
}

::google::protobuf::uint8* C2S_ReqUnLockCharList_156::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_ReqUnLockCharList_156)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_ReqUnLockCharList_156)
  return target;
}

int C2S_ReqUnLockCharList_156::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_ReqUnLockCharList_156)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_ReqUnLockCharList_156::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_ReqUnLockCharList_156)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_ReqUnLockCharList_156* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_ReqUnLockCharList_156>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_ReqUnLockCharList_156)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_ReqUnLockCharList_156)
    MergeFrom(*source);
  }
}

void C2S_ReqUnLockCharList_156::MergeFrom(const C2S_ReqUnLockCharList_156& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_ReqUnLockCharList_156)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2S_ReqUnLockCharList_156::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_ReqUnLockCharList_156)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_ReqUnLockCharList_156::CopyFrom(const C2S_ReqUnLockCharList_156& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_ReqUnLockCharList_156)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_ReqUnLockCharList_156::IsInitialized() const {

  return true;
}

void C2S_ReqUnLockCharList_156::Swap(C2S_ReqUnLockCharList_156* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_ReqUnLockCharList_156::InternalSwap(C2S_ReqUnLockCharList_156* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_ReqUnLockCharList_156::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_ReqUnLockCharList_156_descriptor_;
  metadata.reflection = C2S_ReqUnLockCharList_156_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_ReqUnLockCharList_156

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_UnlockCharList_156::kMountidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_UnlockCharList_156::S2C_UnlockCharList_156()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_UnlockCharList_156)
}

void S2C_UnlockCharList_156::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2C_UnlockCharList_156::S2C_UnlockCharList_156(const S2C_UnlockCharList_156& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2C_UnlockCharList_156)
}

void S2C_UnlockCharList_156::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2C_UnlockCharList_156::~S2C_UnlockCharList_156() {
  // @@protoc_insertion_point(destructor:pb.S2C_UnlockCharList_156)
  SharedDtor();
}

void S2C_UnlockCharList_156::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2C_UnlockCharList_156::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_UnlockCharList_156::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2C_UnlockCharList_156_descriptor_;
}

const S2C_UnlockCharList_156& S2C_UnlockCharList_156::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2C_UnlockCharList_156* S2C_UnlockCharList_156::default_instance_ = NULL;

S2C_UnlockCharList_156* S2C_UnlockCharList_156::New(::google::protobuf::Arena* arena) const {
  S2C_UnlockCharList_156* n = new S2C_UnlockCharList_156;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_UnlockCharList_156::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_UnlockCharList_156)
  mountids_.Clear();
}

bool S2C_UnlockCharList_156::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_UnlockCharList_156)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 Mountids = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_mountids())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_mountids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_UnlockCharList_156)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_UnlockCharList_156)
  return false;
#undef DO_
}

void S2C_UnlockCharList_156::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_UnlockCharList_156)
  // repeated uint32 Mountids = 1;
  if (this->mountids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_mountids_cached_byte_size_);
  }
  for (int i = 0; i < this->mountids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->mountids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_UnlockCharList_156)
}

::google::protobuf::uint8* S2C_UnlockCharList_156::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_UnlockCharList_156)
  // repeated uint32 Mountids = 1;
  if (this->mountids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _mountids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->mountids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->mountids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_UnlockCharList_156)
  return target;
}

int S2C_UnlockCharList_156::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_UnlockCharList_156)
  int total_size = 0;

  // repeated uint32 Mountids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->mountids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->mountids(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mountids_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_UnlockCharList_156::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_UnlockCharList_156)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2C_UnlockCharList_156* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_UnlockCharList_156>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_UnlockCharList_156)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_UnlockCharList_156)
    MergeFrom(*source);
  }
}

void S2C_UnlockCharList_156::MergeFrom(const S2C_UnlockCharList_156& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_UnlockCharList_156)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  mountids_.MergeFrom(from.mountids_);
}

void S2C_UnlockCharList_156::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_UnlockCharList_156)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_UnlockCharList_156::CopyFrom(const S2C_UnlockCharList_156& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_UnlockCharList_156)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_UnlockCharList_156::IsInitialized() const {

  return true;
}

void S2C_UnlockCharList_156::Swap(S2C_UnlockCharList_156* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_UnlockCharList_156::InternalSwap(S2C_UnlockCharList_156* other) {
  mountids_.UnsafeArenaSwap(&other->mountids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_UnlockCharList_156::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2C_UnlockCharList_156_descriptor_;
  metadata.reflection = S2C_UnlockCharList_156_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_UnlockCharList_156

// repeated uint32 Mountids = 1;
int S2C_UnlockCharList_156::mountids_size() const {
  return mountids_.size();
}
void S2C_UnlockCharList_156::clear_mountids() {
  mountids_.Clear();
}
 ::google::protobuf::uint32 S2C_UnlockCharList_156::mountids(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2C_UnlockCharList_156.Mountids)
  return mountids_.Get(index);
}
 void S2C_UnlockCharList_156::set_mountids(int index, ::google::protobuf::uint32 value) {
  mountids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.S2C_UnlockCharList_156.Mountids)
}
 void S2C_UnlockCharList_156::add_mountids(::google::protobuf::uint32 value) {
  mountids_.Add(value);
  // @@protoc_insertion_point(field_add:pb.S2C_UnlockCharList_156.Mountids)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
S2C_UnlockCharList_156::mountids() const {
  // @@protoc_insertion_point(field_list:pb.S2C_UnlockCharList_156.Mountids)
  return mountids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
S2C_UnlockCharList_156::mutable_mountids() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2C_UnlockCharList_156.Mountids)
  return &mountids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_ReqAlreadyBuyList_157::C2S_ReqAlreadyBuyList_157()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_ReqAlreadyBuyList_157)
}

void C2S_ReqAlreadyBuyList_157::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_ReqAlreadyBuyList_157::C2S_ReqAlreadyBuyList_157(const C2S_ReqAlreadyBuyList_157& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_ReqAlreadyBuyList_157)
}

void C2S_ReqAlreadyBuyList_157::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2S_ReqAlreadyBuyList_157::~C2S_ReqAlreadyBuyList_157() {
  // @@protoc_insertion_point(destructor:pb.C2S_ReqAlreadyBuyList_157)
  SharedDtor();
}

void C2S_ReqAlreadyBuyList_157::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_ReqAlreadyBuyList_157::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_ReqAlreadyBuyList_157::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_ReqAlreadyBuyList_157_descriptor_;
}

const C2S_ReqAlreadyBuyList_157& C2S_ReqAlreadyBuyList_157::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_ReqAlreadyBuyList_157* C2S_ReqAlreadyBuyList_157::default_instance_ = NULL;

C2S_ReqAlreadyBuyList_157* C2S_ReqAlreadyBuyList_157::New(::google::protobuf::Arena* arena) const {
  C2S_ReqAlreadyBuyList_157* n = new C2S_ReqAlreadyBuyList_157;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_ReqAlreadyBuyList_157::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_ReqAlreadyBuyList_157)
}

bool C2S_ReqAlreadyBuyList_157::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_ReqAlreadyBuyList_157)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_ReqAlreadyBuyList_157)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_ReqAlreadyBuyList_157)
  return false;
#undef DO_
}

void C2S_ReqAlreadyBuyList_157::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_ReqAlreadyBuyList_157)
  // @@protoc_insertion_point(serialize_end:pb.C2S_ReqAlreadyBuyList_157)
}

::google::protobuf::uint8* C2S_ReqAlreadyBuyList_157::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_ReqAlreadyBuyList_157)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_ReqAlreadyBuyList_157)
  return target;
}

int C2S_ReqAlreadyBuyList_157::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_ReqAlreadyBuyList_157)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_ReqAlreadyBuyList_157::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_ReqAlreadyBuyList_157)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_ReqAlreadyBuyList_157* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_ReqAlreadyBuyList_157>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_ReqAlreadyBuyList_157)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_ReqAlreadyBuyList_157)
    MergeFrom(*source);
  }
}

void C2S_ReqAlreadyBuyList_157::MergeFrom(const C2S_ReqAlreadyBuyList_157& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_ReqAlreadyBuyList_157)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2S_ReqAlreadyBuyList_157::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_ReqAlreadyBuyList_157)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_ReqAlreadyBuyList_157::CopyFrom(const C2S_ReqAlreadyBuyList_157& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_ReqAlreadyBuyList_157)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_ReqAlreadyBuyList_157::IsInitialized() const {

  return true;
}

void C2S_ReqAlreadyBuyList_157::Swap(C2S_ReqAlreadyBuyList_157* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_ReqAlreadyBuyList_157::InternalSwap(C2S_ReqAlreadyBuyList_157* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_ReqAlreadyBuyList_157::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_ReqAlreadyBuyList_157_descriptor_;
  metadata.reflection = C2S_ReqAlreadyBuyList_157_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_ReqAlreadyBuyList_157

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_AlreadyBuyList_157::kItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_AlreadyBuyList_157::S2C_AlreadyBuyList_157()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_AlreadyBuyList_157)
}

void S2C_AlreadyBuyList_157::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2C_AlreadyBuyList_157::S2C_AlreadyBuyList_157(const S2C_AlreadyBuyList_157& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2C_AlreadyBuyList_157)
}

void S2C_AlreadyBuyList_157::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2C_AlreadyBuyList_157::~S2C_AlreadyBuyList_157() {
  // @@protoc_insertion_point(destructor:pb.S2C_AlreadyBuyList_157)
  SharedDtor();
}

void S2C_AlreadyBuyList_157::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2C_AlreadyBuyList_157::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_AlreadyBuyList_157::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2C_AlreadyBuyList_157_descriptor_;
}

const S2C_AlreadyBuyList_157& S2C_AlreadyBuyList_157::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2C_AlreadyBuyList_157* S2C_AlreadyBuyList_157::default_instance_ = NULL;

S2C_AlreadyBuyList_157* S2C_AlreadyBuyList_157::New(::google::protobuf::Arena* arena) const {
  S2C_AlreadyBuyList_157* n = new S2C_AlreadyBuyList_157;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_AlreadyBuyList_157::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_AlreadyBuyList_157)
  itemlist_.Clear();
}

bool S2C_AlreadyBuyList_157::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_AlreadyBuyList_157)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.MallBagItemData ItemList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ItemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_itemlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_ItemList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_AlreadyBuyList_157)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_AlreadyBuyList_157)
  return false;
#undef DO_
}

void S2C_AlreadyBuyList_157::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_AlreadyBuyList_157)
  // repeated .pb.MallBagItemData ItemList = 1;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->itemlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_AlreadyBuyList_157)
}

::google::protobuf::uint8* S2C_AlreadyBuyList_157::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_AlreadyBuyList_157)
  // repeated .pb.MallBagItemData ItemList = 1;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->itemlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_AlreadyBuyList_157)
  return target;
}

int S2C_AlreadyBuyList_157::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_AlreadyBuyList_157)
  int total_size = 0;

  // repeated .pb.MallBagItemData ItemList = 1;
  total_size += 1 * this->itemlist_size();
  for (int i = 0; i < this->itemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_AlreadyBuyList_157::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_AlreadyBuyList_157)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2C_AlreadyBuyList_157* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_AlreadyBuyList_157>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_AlreadyBuyList_157)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_AlreadyBuyList_157)
    MergeFrom(*source);
  }
}

void S2C_AlreadyBuyList_157::MergeFrom(const S2C_AlreadyBuyList_157& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_AlreadyBuyList_157)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  itemlist_.MergeFrom(from.itemlist_);
}

void S2C_AlreadyBuyList_157::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_AlreadyBuyList_157)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_AlreadyBuyList_157::CopyFrom(const S2C_AlreadyBuyList_157& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_AlreadyBuyList_157)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_AlreadyBuyList_157::IsInitialized() const {

  return true;
}

void S2C_AlreadyBuyList_157::Swap(S2C_AlreadyBuyList_157* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_AlreadyBuyList_157::InternalSwap(S2C_AlreadyBuyList_157* other) {
  itemlist_.UnsafeArenaSwap(&other->itemlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_AlreadyBuyList_157::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2C_AlreadyBuyList_157_descriptor_;
  metadata.reflection = S2C_AlreadyBuyList_157_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_AlreadyBuyList_157

// repeated .pb.MallBagItemData ItemList = 1;
int S2C_AlreadyBuyList_157::itemlist_size() const {
  return itemlist_.size();
}
void S2C_AlreadyBuyList_157::clear_itemlist() {
  itemlist_.Clear();
}
const ::pb::MallBagItemData& S2C_AlreadyBuyList_157::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2C_AlreadyBuyList_157.ItemList)
  return itemlist_.Get(index);
}
::pb::MallBagItemData* S2C_AlreadyBuyList_157::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2C_AlreadyBuyList_157.ItemList)
  return itemlist_.Mutable(index);
}
::pb::MallBagItemData* S2C_AlreadyBuyList_157::add_itemlist() {
  // @@protoc_insertion_point(field_add:pb.S2C_AlreadyBuyList_157.ItemList)
  return itemlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::MallBagItemData >*
S2C_AlreadyBuyList_157::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2C_AlreadyBuyList_157.ItemList)
  return &itemlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::MallBagItemData >&
S2C_AlreadyBuyList_157::itemlist() const {
  // @@protoc_insertion_point(field_list:pb.S2C_AlreadyBuyList_157.ItemList)
  return itemlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_AddItem_158::kItemListFieldNumber;
const int S2C_AddItem_158::kPtidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_AddItem_158::S2C_AddItem_158()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_AddItem_158)
}

void S2C_AddItem_158::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2C_AddItem_158::S2C_AddItem_158(const S2C_AddItem_158& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2C_AddItem_158)
}

void S2C_AddItem_158::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  ptid_ = 0u;
}

S2C_AddItem_158::~S2C_AddItem_158() {
  // @@protoc_insertion_point(destructor:pb.S2C_AddItem_158)
  SharedDtor();
}

void S2C_AddItem_158::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2C_AddItem_158::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_AddItem_158::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2C_AddItem_158_descriptor_;
}

const S2C_AddItem_158& S2C_AddItem_158::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2C_AddItem_158* S2C_AddItem_158::default_instance_ = NULL;

S2C_AddItem_158* S2C_AddItem_158::New(::google::protobuf::Arena* arena) const {
  S2C_AddItem_158* n = new S2C_AddItem_158;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_AddItem_158::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_AddItem_158)
  ptid_ = 0u;
  itemlist_.Clear();
}

bool S2C_AddItem_158::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_AddItem_158)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.MallBagItemData ItemList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ItemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_itemlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_ItemList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_Ptid;
        break;
      }

      // optional uint32 Ptid = 2;
      case 2: {
        if (tag == 16) {
         parse_Ptid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ptid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_AddItem_158)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_AddItem_158)
  return false;
#undef DO_
}

void S2C_AddItem_158::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_AddItem_158)
  // repeated .pb.MallBagItemData ItemList = 1;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->itemlist(i), output);
  }

  // optional uint32 Ptid = 2;
  if (this->ptid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ptid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_AddItem_158)
}

::google::protobuf::uint8* S2C_AddItem_158::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_AddItem_158)
  // repeated .pb.MallBagItemData ItemList = 1;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->itemlist(i), false, target);
  }

  // optional uint32 Ptid = 2;
  if (this->ptid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ptid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_AddItem_158)
  return target;
}

int S2C_AddItem_158::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_AddItem_158)
  int total_size = 0;

  // optional uint32 Ptid = 2;
  if (this->ptid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ptid());
  }

  // repeated .pb.MallBagItemData ItemList = 1;
  total_size += 1 * this->itemlist_size();
  for (int i = 0; i < this->itemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_AddItem_158::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_AddItem_158)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2C_AddItem_158* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_AddItem_158>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_AddItem_158)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_AddItem_158)
    MergeFrom(*source);
  }
}

void S2C_AddItem_158::MergeFrom(const S2C_AddItem_158& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_AddItem_158)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  itemlist_.MergeFrom(from.itemlist_);
  if (from.ptid() != 0) {
    set_ptid(from.ptid());
  }
}

void S2C_AddItem_158::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_AddItem_158)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_AddItem_158::CopyFrom(const S2C_AddItem_158& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_AddItem_158)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_AddItem_158::IsInitialized() const {

  return true;
}

void S2C_AddItem_158::Swap(S2C_AddItem_158* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_AddItem_158::InternalSwap(S2C_AddItem_158* other) {
  itemlist_.UnsafeArenaSwap(&other->itemlist_);
  std::swap(ptid_, other->ptid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_AddItem_158::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2C_AddItem_158_descriptor_;
  metadata.reflection = S2C_AddItem_158_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_AddItem_158

// repeated .pb.MallBagItemData ItemList = 1;
int S2C_AddItem_158::itemlist_size() const {
  return itemlist_.size();
}
void S2C_AddItem_158::clear_itemlist() {
  itemlist_.Clear();
}
const ::pb::MallBagItemData& S2C_AddItem_158::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2C_AddItem_158.ItemList)
  return itemlist_.Get(index);
}
::pb::MallBagItemData* S2C_AddItem_158::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2C_AddItem_158.ItemList)
  return itemlist_.Mutable(index);
}
::pb::MallBagItemData* S2C_AddItem_158::add_itemlist() {
  // @@protoc_insertion_point(field_add:pb.S2C_AddItem_158.ItemList)
  return itemlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::MallBagItemData >*
S2C_AddItem_158::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2C_AddItem_158.ItemList)
  return &itemlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::MallBagItemData >&
S2C_AddItem_158::itemlist() const {
  // @@protoc_insertion_point(field_list:pb.S2C_AddItem_158.ItemList)
  return itemlist_;
}

// optional uint32 Ptid = 2;
void S2C_AddItem_158::clear_ptid() {
  ptid_ = 0u;
}
 ::google::protobuf::uint32 S2C_AddItem_158::ptid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_AddItem_158.Ptid)
  return ptid_;
}
 void S2C_AddItem_158::set_ptid(::google::protobuf::uint32 value) {
  
  ptid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_AddItem_158.Ptid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SuitData::kIdxFieldNumber;
const int SuitData::kNameFieldNumber;
const int SuitData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SuitData::SuitData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.SuitData)
}

void SuitData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SuitData::SuitData(const SuitData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.SuitData)
}

void SuitData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  idx_ = 0u;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SuitData::~SuitData() {
  // @@protoc_insertion_point(destructor:pb.SuitData)
  SharedDtor();
}

void SuitData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SuitData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SuitData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SuitData_descriptor_;
}

const SuitData& SuitData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

SuitData* SuitData::default_instance_ = NULL;

SuitData* SuitData::New(::google::protobuf::Arena* arena) const {
  SuitData* n = new SuitData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SuitData::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SuitData)
  idx_ = 0u;
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.Clear();
}

bool SuitData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.SuitData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Name;
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (tag == 18) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.SuitData.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Data;
        break;
      }

      // repeated uint32 Data = 3;
      case 3: {
        if (tag == 26) {
         parse_Data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_data())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26, input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.SuitData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.SuitData)
  return false;
#undef DO_
}

void SuitData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.SuitData)
  // optional uint32 Idx = 1;
  if (this->idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->idx(), output);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SuitData.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated uint32 Data = 3;
  if (this->data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_data_cached_byte_size_);
  }
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.SuitData)
}

::google::protobuf::uint8* SuitData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SuitData)
  // optional uint32 Idx = 1;
  if (this->idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->idx(), target);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SuitData.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated uint32 Data = 3;
  if (this->data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _data_cached_byte_size_, target);
  }
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->data(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.SuitData)
  return target;
}

int SuitData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SuitData)
  int total_size = 0;

  // optional uint32 Idx = 1;
  if (this->idx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->idx());
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // repeated uint32 Data = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->data_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->data(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _data_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SuitData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SuitData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SuitData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SuitData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SuitData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SuitData)
    MergeFrom(*source);
  }
}

void SuitData::MergeFrom(const SuitData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SuitData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
  if (from.idx() != 0) {
    set_idx(from.idx());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void SuitData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SuitData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SuitData::CopyFrom(const SuitData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SuitData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SuitData::IsInitialized() const {

  return true;
}

void SuitData::Swap(SuitData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SuitData::InternalSwap(SuitData* other) {
  std::swap(idx_, other->idx_);
  name_.Swap(&other->name_);
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SuitData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SuitData_descriptor_;
  metadata.reflection = SuitData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SuitData

// optional uint32 Idx = 1;
void SuitData::clear_idx() {
  idx_ = 0u;
}
 ::google::protobuf::uint32 SuitData::idx() const {
  // @@protoc_insertion_point(field_get:pb.SuitData.Idx)
  return idx_;
}
 void SuitData::set_idx(::google::protobuf::uint32 value) {
  
  idx_ = value;
  // @@protoc_insertion_point(field_set:pb.SuitData.Idx)
}

// optional string Name = 2;
void SuitData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SuitData::name() const {
  // @@protoc_insertion_point(field_get:pb.SuitData.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SuitData::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.SuitData.Name)
}
 void SuitData::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.SuitData.Name)
}
 void SuitData::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.SuitData.Name)
}
 ::std::string* SuitData::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.SuitData.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SuitData::release_name() {
  // @@protoc_insertion_point(field_release:pb.SuitData.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SuitData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.SuitData.Name)
}

// repeated uint32 Data = 3;
int SuitData::data_size() const {
  return data_.size();
}
void SuitData::clear_data() {
  data_.Clear();
}
 ::google::protobuf::uint32 SuitData::data(int index) const {
  // @@protoc_insertion_point(field_get:pb.SuitData.Data)
  return data_.Get(index);
}
 void SuitData::set_data(int index, ::google::protobuf::uint32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.SuitData.Data)
}
 void SuitData::add_data(::google::protobuf::uint32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:pb.SuitData.Data)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SuitData::data() const {
  // @@protoc_insertion_point(field_list:pb.SuitData.Data)
  return data_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SuitData::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb.SuitData.Data)
  return &data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_UpdateSuitName_160::kIdxFieldNumber;
const int C2S_UpdateSuitName_160::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_UpdateSuitName_160::C2S_UpdateSuitName_160()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_UpdateSuitName_160)
}

void C2S_UpdateSuitName_160::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_UpdateSuitName_160::C2S_UpdateSuitName_160(const C2S_UpdateSuitName_160& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_UpdateSuitName_160)
}

void C2S_UpdateSuitName_160::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  idx_ = 0u;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2S_UpdateSuitName_160::~C2S_UpdateSuitName_160() {
  // @@protoc_insertion_point(destructor:pb.C2S_UpdateSuitName_160)
  SharedDtor();
}

void C2S_UpdateSuitName_160::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2S_UpdateSuitName_160::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_UpdateSuitName_160::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_UpdateSuitName_160_descriptor_;
}

const C2S_UpdateSuitName_160& C2S_UpdateSuitName_160::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_UpdateSuitName_160* C2S_UpdateSuitName_160::default_instance_ = NULL;

C2S_UpdateSuitName_160* C2S_UpdateSuitName_160::New(::google::protobuf::Arena* arena) const {
  C2S_UpdateSuitName_160* n = new C2S_UpdateSuitName_160;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_UpdateSuitName_160::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_UpdateSuitName_160)
  idx_ = 0u;
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2S_UpdateSuitName_160::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_UpdateSuitName_160)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Name;
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (tag == 18) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_UpdateSuitName_160.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_UpdateSuitName_160)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_UpdateSuitName_160)
  return false;
#undef DO_
}

void C2S_UpdateSuitName_160::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_UpdateSuitName_160)
  // optional uint32 Idx = 1;
  if (this->idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->idx(), output);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_UpdateSuitName_160.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_UpdateSuitName_160)
}

::google::protobuf::uint8* C2S_UpdateSuitName_160::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_UpdateSuitName_160)
  // optional uint32 Idx = 1;
  if (this->idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->idx(), target);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_UpdateSuitName_160.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_UpdateSuitName_160)
  return target;
}

int C2S_UpdateSuitName_160::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_UpdateSuitName_160)
  int total_size = 0;

  // optional uint32 Idx = 1;
  if (this->idx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->idx());
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_UpdateSuitName_160::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_UpdateSuitName_160)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_UpdateSuitName_160* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_UpdateSuitName_160>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_UpdateSuitName_160)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_UpdateSuitName_160)
    MergeFrom(*source);
  }
}

void C2S_UpdateSuitName_160::MergeFrom(const C2S_UpdateSuitName_160& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_UpdateSuitName_160)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.idx() != 0) {
    set_idx(from.idx());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void C2S_UpdateSuitName_160::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_UpdateSuitName_160)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_UpdateSuitName_160::CopyFrom(const C2S_UpdateSuitName_160& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_UpdateSuitName_160)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_UpdateSuitName_160::IsInitialized() const {

  return true;
}

void C2S_UpdateSuitName_160::Swap(C2S_UpdateSuitName_160* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_UpdateSuitName_160::InternalSwap(C2S_UpdateSuitName_160* other) {
  std::swap(idx_, other->idx_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_UpdateSuitName_160::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_UpdateSuitName_160_descriptor_;
  metadata.reflection = C2S_UpdateSuitName_160_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_UpdateSuitName_160

// optional uint32 Idx = 1;
void C2S_UpdateSuitName_160::clear_idx() {
  idx_ = 0u;
}
 ::google::protobuf::uint32 C2S_UpdateSuitName_160::idx() const {
  // @@protoc_insertion_point(field_get:pb.C2S_UpdateSuitName_160.Idx)
  return idx_;
}
 void C2S_UpdateSuitName_160::set_idx(::google::protobuf::uint32 value) {
  
  idx_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_UpdateSuitName_160.Idx)
}

// optional string Name = 2;
void C2S_UpdateSuitName_160::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2S_UpdateSuitName_160::name() const {
  // @@protoc_insertion_point(field_get:pb.C2S_UpdateSuitName_160.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_UpdateSuitName_160::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_UpdateSuitName_160.Name)
}
 void C2S_UpdateSuitName_160::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_UpdateSuitName_160.Name)
}
 void C2S_UpdateSuitName_160::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_UpdateSuitName_160.Name)
}
 ::std::string* C2S_UpdateSuitName_160::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_UpdateSuitName_160.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2S_UpdateSuitName_160::release_name() {
  // @@protoc_insertion_point(field_release:pb.C2S_UpdateSuitName_160.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_UpdateSuitName_160::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_UpdateSuitName_160.Name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_UpdateSex_161::kSexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_UpdateSex_161::C2S_UpdateSex_161()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_UpdateSex_161)
}

void C2S_UpdateSex_161::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_UpdateSex_161::C2S_UpdateSex_161(const C2S_UpdateSex_161& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_UpdateSex_161)
}

void C2S_UpdateSex_161::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  sex_ = false;
}

C2S_UpdateSex_161::~C2S_UpdateSex_161() {
  // @@protoc_insertion_point(destructor:pb.C2S_UpdateSex_161)
  SharedDtor();
}

void C2S_UpdateSex_161::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_UpdateSex_161::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_UpdateSex_161::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_UpdateSex_161_descriptor_;
}

const C2S_UpdateSex_161& C2S_UpdateSex_161::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_UpdateSex_161* C2S_UpdateSex_161::default_instance_ = NULL;

C2S_UpdateSex_161* C2S_UpdateSex_161::New(::google::protobuf::Arena* arena) const {
  C2S_UpdateSex_161* n = new C2S_UpdateSex_161;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_UpdateSex_161::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_UpdateSex_161)
  sex_ = false;
}

bool C2S_UpdateSex_161::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_UpdateSex_161)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Sex = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_UpdateSex_161)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_UpdateSex_161)
  return false;
#undef DO_
}

void C2S_UpdateSex_161::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_UpdateSex_161)
  // optional bool Sex = 1;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->sex(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_UpdateSex_161)
}

::google::protobuf::uint8* C2S_UpdateSex_161::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_UpdateSex_161)
  // optional bool Sex = 1;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->sex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_UpdateSex_161)
  return target;
}

int C2S_UpdateSex_161::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_UpdateSex_161)
  int total_size = 0;

  // optional bool Sex = 1;
  if (this->sex() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_UpdateSex_161::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_UpdateSex_161)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_UpdateSex_161* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_UpdateSex_161>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_UpdateSex_161)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_UpdateSex_161)
    MergeFrom(*source);
  }
}

void C2S_UpdateSex_161::MergeFrom(const C2S_UpdateSex_161& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_UpdateSex_161)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
}

void C2S_UpdateSex_161::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_UpdateSex_161)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_UpdateSex_161::CopyFrom(const C2S_UpdateSex_161& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_UpdateSex_161)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_UpdateSex_161::IsInitialized() const {

  return true;
}

void C2S_UpdateSex_161::Swap(C2S_UpdateSex_161* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_UpdateSex_161::InternalSwap(C2S_UpdateSex_161* other) {
  std::swap(sex_, other->sex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_UpdateSex_161::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_UpdateSex_161_descriptor_;
  metadata.reflection = C2S_UpdateSex_161_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_UpdateSex_161

// optional bool Sex = 1;
void C2S_UpdateSex_161::clear_sex() {
  sex_ = false;
}
 bool C2S_UpdateSex_161::sex() const {
  // @@protoc_insertion_point(field_get:pb.C2S_UpdateSex_161.Sex)
  return sex_;
}
 void C2S_UpdateSex_161::set_sex(bool value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_UpdateSex_161.Sex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_UpdateSuit_162::kIdxFieldNumber;
const int C2S_UpdateSuit_162::kItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_UpdateSuit_162::C2S_UpdateSuit_162()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_UpdateSuit_162)
}

void C2S_UpdateSuit_162::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_UpdateSuit_162::C2S_UpdateSuit_162(const C2S_UpdateSuit_162& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_UpdateSuit_162)
}

void C2S_UpdateSuit_162::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  idx_ = 0u;
}

C2S_UpdateSuit_162::~C2S_UpdateSuit_162() {
  // @@protoc_insertion_point(destructor:pb.C2S_UpdateSuit_162)
  SharedDtor();
}

void C2S_UpdateSuit_162::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_UpdateSuit_162::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_UpdateSuit_162::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_UpdateSuit_162_descriptor_;
}

const C2S_UpdateSuit_162& C2S_UpdateSuit_162::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_UpdateSuit_162* C2S_UpdateSuit_162::default_instance_ = NULL;

C2S_UpdateSuit_162* C2S_UpdateSuit_162::New(::google::protobuf::Arena* arena) const {
  C2S_UpdateSuit_162* n = new C2S_UpdateSuit_162;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_UpdateSuit_162::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_UpdateSuit_162)
  idx_ = 0u;
  itemids_.Clear();
}

bool C2S_UpdateSuit_162::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_UpdateSuit_162)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ItemIds;
        break;
      }

      // repeated uint32 ItemIds = 2;
      case 2: {
        if (tag == 18) {
         parse_ItemIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_itemids())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_itemids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_UpdateSuit_162)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_UpdateSuit_162)
  return false;
#undef DO_
}

void C2S_UpdateSuit_162::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_UpdateSuit_162)
  // optional uint32 Idx = 1;
  if (this->idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->idx(), output);
  }

  // repeated uint32 ItemIds = 2;
  if (this->itemids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_itemids_cached_byte_size_);
  }
  for (int i = 0; i < this->itemids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->itemids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_UpdateSuit_162)
}

::google::protobuf::uint8* C2S_UpdateSuit_162::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_UpdateSuit_162)
  // optional uint32 Idx = 1;
  if (this->idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->idx(), target);
  }

  // repeated uint32 ItemIds = 2;
  if (this->itemids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _itemids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->itemids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->itemids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_UpdateSuit_162)
  return target;
}

int C2S_UpdateSuit_162::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_UpdateSuit_162)
  int total_size = 0;

  // optional uint32 Idx = 1;
  if (this->idx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->idx());
  }

  // repeated uint32 ItemIds = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->itemids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->itemids(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _itemids_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_UpdateSuit_162::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_UpdateSuit_162)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_UpdateSuit_162* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_UpdateSuit_162>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_UpdateSuit_162)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_UpdateSuit_162)
    MergeFrom(*source);
  }
}

void C2S_UpdateSuit_162::MergeFrom(const C2S_UpdateSuit_162& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_UpdateSuit_162)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  itemids_.MergeFrom(from.itemids_);
  if (from.idx() != 0) {
    set_idx(from.idx());
  }
}

void C2S_UpdateSuit_162::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_UpdateSuit_162)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_UpdateSuit_162::CopyFrom(const C2S_UpdateSuit_162& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_UpdateSuit_162)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_UpdateSuit_162::IsInitialized() const {

  return true;
}

void C2S_UpdateSuit_162::Swap(C2S_UpdateSuit_162* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_UpdateSuit_162::InternalSwap(C2S_UpdateSuit_162* other) {
  std::swap(idx_, other->idx_);
  itemids_.UnsafeArenaSwap(&other->itemids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_UpdateSuit_162::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_UpdateSuit_162_descriptor_;
  metadata.reflection = C2S_UpdateSuit_162_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_UpdateSuit_162

// optional uint32 Idx = 1;
void C2S_UpdateSuit_162::clear_idx() {
  idx_ = 0u;
}
 ::google::protobuf::uint32 C2S_UpdateSuit_162::idx() const {
  // @@protoc_insertion_point(field_get:pb.C2S_UpdateSuit_162.Idx)
  return idx_;
}
 void C2S_UpdateSuit_162::set_idx(::google::protobuf::uint32 value) {
  
  idx_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_UpdateSuit_162.Idx)
}

// repeated uint32 ItemIds = 2;
int C2S_UpdateSuit_162::itemids_size() const {
  return itemids_.size();
}
void C2S_UpdateSuit_162::clear_itemids() {
  itemids_.Clear();
}
 ::google::protobuf::uint32 C2S_UpdateSuit_162::itemids(int index) const {
  // @@protoc_insertion_point(field_get:pb.C2S_UpdateSuit_162.ItemIds)
  return itemids_.Get(index);
}
 void C2S_UpdateSuit_162::set_itemids(int index, ::google::protobuf::uint32 value) {
  itemids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.C2S_UpdateSuit_162.ItemIds)
}
 void C2S_UpdateSuit_162::add_itemids(::google::protobuf::uint32 value) {
  itemids_.Add(value);
  // @@protoc_insertion_point(field_add:pb.C2S_UpdateSuit_162.ItemIds)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
C2S_UpdateSuit_162::itemids() const {
  // @@protoc_insertion_point(field_list:pb.C2S_UpdateSuit_162.ItemIds)
  return itemids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
C2S_UpdateSuit_162::mutable_itemids() {
  // @@protoc_insertion_point(field_mutable_list:pb.C2S_UpdateSuit_162.ItemIds)
  return &itemids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_GetAllSuits_163::C2S_GetAllSuits_163()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_GetAllSuits_163)
}

void C2S_GetAllSuits_163::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_GetAllSuits_163::C2S_GetAllSuits_163(const C2S_GetAllSuits_163& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_GetAllSuits_163)
}

void C2S_GetAllSuits_163::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2S_GetAllSuits_163::~C2S_GetAllSuits_163() {
  // @@protoc_insertion_point(destructor:pb.C2S_GetAllSuits_163)
  SharedDtor();
}

void C2S_GetAllSuits_163::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_GetAllSuits_163::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_GetAllSuits_163::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_GetAllSuits_163_descriptor_;
}

const C2S_GetAllSuits_163& C2S_GetAllSuits_163::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_GetAllSuits_163* C2S_GetAllSuits_163::default_instance_ = NULL;

C2S_GetAllSuits_163* C2S_GetAllSuits_163::New(::google::protobuf::Arena* arena) const {
  C2S_GetAllSuits_163* n = new C2S_GetAllSuits_163;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_GetAllSuits_163::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_GetAllSuits_163)
}

bool C2S_GetAllSuits_163::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_GetAllSuits_163)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_GetAllSuits_163)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_GetAllSuits_163)
  return false;
#undef DO_
}

void C2S_GetAllSuits_163::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_GetAllSuits_163)
  // @@protoc_insertion_point(serialize_end:pb.C2S_GetAllSuits_163)
}

::google::protobuf::uint8* C2S_GetAllSuits_163::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_GetAllSuits_163)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_GetAllSuits_163)
  return target;
}

int C2S_GetAllSuits_163::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_GetAllSuits_163)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_GetAllSuits_163::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_GetAllSuits_163)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_GetAllSuits_163* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_GetAllSuits_163>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_GetAllSuits_163)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_GetAllSuits_163)
    MergeFrom(*source);
  }
}

void C2S_GetAllSuits_163::MergeFrom(const C2S_GetAllSuits_163& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_GetAllSuits_163)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2S_GetAllSuits_163::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_GetAllSuits_163)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_GetAllSuits_163::CopyFrom(const C2S_GetAllSuits_163& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_GetAllSuits_163)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_GetAllSuits_163::IsInitialized() const {

  return true;
}

void C2S_GetAllSuits_163::Swap(C2S_GetAllSuits_163* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_GetAllSuits_163::InternalSwap(C2S_GetAllSuits_163* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_GetAllSuits_163::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_GetAllSuits_163_descriptor_;
  metadata.reflection = C2S_GetAllSuits_163_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_GetAllSuits_163

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_GetAllSuits_163::kSelIdxFieldNumber;
const int S2C_GetAllSuits_163::kSelIdxFFieldNumber;
const int S2C_GetAllSuits_163::kSuitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_GetAllSuits_163::S2C_GetAllSuits_163()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_GetAllSuits_163)
}

void S2C_GetAllSuits_163::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2C_GetAllSuits_163::S2C_GetAllSuits_163(const S2C_GetAllSuits_163& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2C_GetAllSuits_163)
}

void S2C_GetAllSuits_163::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  selidx_ = 0u;
  selidxf_ = 0u;
}

S2C_GetAllSuits_163::~S2C_GetAllSuits_163() {
  // @@protoc_insertion_point(destructor:pb.S2C_GetAllSuits_163)
  SharedDtor();
}

void S2C_GetAllSuits_163::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2C_GetAllSuits_163::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_GetAllSuits_163::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2C_GetAllSuits_163_descriptor_;
}

const S2C_GetAllSuits_163& S2C_GetAllSuits_163::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2C_GetAllSuits_163* S2C_GetAllSuits_163::default_instance_ = NULL;

S2C_GetAllSuits_163* S2C_GetAllSuits_163::New(::google::protobuf::Arena* arena) const {
  S2C_GetAllSuits_163* n = new S2C_GetAllSuits_163;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_GetAllSuits_163::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_GetAllSuits_163)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2C_GetAllSuits_163, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2C_GetAllSuits_163*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(selidx_, selidxf_);

#undef ZR_HELPER_
#undef ZR_

  suit_.Clear();
}

bool S2C_GetAllSuits_163::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_GetAllSuits_163)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 SelIdx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &selidx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SelIdxF;
        break;
      }

      // optional uint32 SelIdxF = 2;
      case 2: {
        if (tag == 16) {
         parse_SelIdxF:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &selidxf_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Suit;
        break;
      }

      // repeated .pb.SuitData Suit = 3;
      case 3: {
        if (tag == 26) {
         parse_Suit:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Suit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_suit()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_Suit;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_GetAllSuits_163)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_GetAllSuits_163)
  return false;
#undef DO_
}

void S2C_GetAllSuits_163::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_GetAllSuits_163)
  // optional uint32 SelIdx = 1;
  if (this->selidx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->selidx(), output);
  }

  // optional uint32 SelIdxF = 2;
  if (this->selidxf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->selidxf(), output);
  }

  // repeated .pb.SuitData Suit = 3;
  for (unsigned int i = 0, n = this->suit_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->suit(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_GetAllSuits_163)
}

::google::protobuf::uint8* S2C_GetAllSuits_163::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_GetAllSuits_163)
  // optional uint32 SelIdx = 1;
  if (this->selidx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->selidx(), target);
  }

  // optional uint32 SelIdxF = 2;
  if (this->selidxf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->selidxf(), target);
  }

  // repeated .pb.SuitData Suit = 3;
  for (unsigned int i = 0, n = this->suit_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->suit(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_GetAllSuits_163)
  return target;
}

int S2C_GetAllSuits_163::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_GetAllSuits_163)
  int total_size = 0;

  // optional uint32 SelIdx = 1;
  if (this->selidx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->selidx());
  }

  // optional uint32 SelIdxF = 2;
  if (this->selidxf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->selidxf());
  }

  // repeated .pb.SuitData Suit = 3;
  total_size += 1 * this->suit_size();
  for (int i = 0; i < this->suit_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->suit(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_GetAllSuits_163::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_GetAllSuits_163)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2C_GetAllSuits_163* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_GetAllSuits_163>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_GetAllSuits_163)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_GetAllSuits_163)
    MergeFrom(*source);
  }
}

void S2C_GetAllSuits_163::MergeFrom(const S2C_GetAllSuits_163& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_GetAllSuits_163)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  suit_.MergeFrom(from.suit_);
  if (from.selidx() != 0) {
    set_selidx(from.selidx());
  }
  if (from.selidxf() != 0) {
    set_selidxf(from.selidxf());
  }
}

void S2C_GetAllSuits_163::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_GetAllSuits_163)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_GetAllSuits_163::CopyFrom(const S2C_GetAllSuits_163& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_GetAllSuits_163)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_GetAllSuits_163::IsInitialized() const {

  return true;
}

void S2C_GetAllSuits_163::Swap(S2C_GetAllSuits_163* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_GetAllSuits_163::InternalSwap(S2C_GetAllSuits_163* other) {
  std::swap(selidx_, other->selidx_);
  std::swap(selidxf_, other->selidxf_);
  suit_.UnsafeArenaSwap(&other->suit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_GetAllSuits_163::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2C_GetAllSuits_163_descriptor_;
  metadata.reflection = S2C_GetAllSuits_163_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_GetAllSuits_163

// optional uint32 SelIdx = 1;
void S2C_GetAllSuits_163::clear_selidx() {
  selidx_ = 0u;
}
 ::google::protobuf::uint32 S2C_GetAllSuits_163::selidx() const {
  // @@protoc_insertion_point(field_get:pb.S2C_GetAllSuits_163.SelIdx)
  return selidx_;
}
 void S2C_GetAllSuits_163::set_selidx(::google::protobuf::uint32 value) {
  
  selidx_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_GetAllSuits_163.SelIdx)
}

// optional uint32 SelIdxF = 2;
void S2C_GetAllSuits_163::clear_selidxf() {
  selidxf_ = 0u;
}
 ::google::protobuf::uint32 S2C_GetAllSuits_163::selidxf() const {
  // @@protoc_insertion_point(field_get:pb.S2C_GetAllSuits_163.SelIdxF)
  return selidxf_;
}
 void S2C_GetAllSuits_163::set_selidxf(::google::protobuf::uint32 value) {
  
  selidxf_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_GetAllSuits_163.SelIdxF)
}

// repeated .pb.SuitData Suit = 3;
int S2C_GetAllSuits_163::suit_size() const {
  return suit_.size();
}
void S2C_GetAllSuits_163::clear_suit() {
  suit_.Clear();
}
const ::pb::SuitData& S2C_GetAllSuits_163::suit(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2C_GetAllSuits_163.Suit)
  return suit_.Get(index);
}
::pb::SuitData* S2C_GetAllSuits_163::mutable_suit(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2C_GetAllSuits_163.Suit)
  return suit_.Mutable(index);
}
::pb::SuitData* S2C_GetAllSuits_163::add_suit() {
  // @@protoc_insertion_point(field_add:pb.S2C_GetAllSuits_163.Suit)
  return suit_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::SuitData >*
S2C_GetAllSuits_163::mutable_suit() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2C_GetAllSuits_163.Suit)
  return &suit_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::SuitData >&
S2C_GetAllSuits_163::suit() const {
  // @@protoc_insertion_point(field_list:pb.S2C_GetAllSuits_163.Suit)
  return suit_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_SelSuit_164::kSelIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_SelSuit_164::C2S_SelSuit_164()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_SelSuit_164)
}

void C2S_SelSuit_164::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_SelSuit_164::C2S_SelSuit_164(const C2S_SelSuit_164& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_SelSuit_164)
}

void C2S_SelSuit_164::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  selidx_ = 0u;
}

C2S_SelSuit_164::~C2S_SelSuit_164() {
  // @@protoc_insertion_point(destructor:pb.C2S_SelSuit_164)
  SharedDtor();
}

void C2S_SelSuit_164::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_SelSuit_164::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_SelSuit_164::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_SelSuit_164_descriptor_;
}

const C2S_SelSuit_164& C2S_SelSuit_164::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_SelSuit_164* C2S_SelSuit_164::default_instance_ = NULL;

C2S_SelSuit_164* C2S_SelSuit_164::New(::google::protobuf::Arena* arena) const {
  C2S_SelSuit_164* n = new C2S_SelSuit_164;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_SelSuit_164::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_SelSuit_164)
  selidx_ = 0u;
}

bool C2S_SelSuit_164::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_SelSuit_164)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 SelIdx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &selidx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_SelSuit_164)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_SelSuit_164)
  return false;
#undef DO_
}

void C2S_SelSuit_164::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_SelSuit_164)
  // optional uint32 SelIdx = 1;
  if (this->selidx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->selidx(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_SelSuit_164)
}

::google::protobuf::uint8* C2S_SelSuit_164::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_SelSuit_164)
  // optional uint32 SelIdx = 1;
  if (this->selidx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->selidx(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_SelSuit_164)
  return target;
}

int C2S_SelSuit_164::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_SelSuit_164)
  int total_size = 0;

  // optional uint32 SelIdx = 1;
  if (this->selidx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->selidx());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_SelSuit_164::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_SelSuit_164)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_SelSuit_164* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_SelSuit_164>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_SelSuit_164)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_SelSuit_164)
    MergeFrom(*source);
  }
}

void C2S_SelSuit_164::MergeFrom(const C2S_SelSuit_164& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_SelSuit_164)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.selidx() != 0) {
    set_selidx(from.selidx());
  }
}

void C2S_SelSuit_164::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_SelSuit_164)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_SelSuit_164::CopyFrom(const C2S_SelSuit_164& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_SelSuit_164)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_SelSuit_164::IsInitialized() const {

  return true;
}

void C2S_SelSuit_164::Swap(C2S_SelSuit_164* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_SelSuit_164::InternalSwap(C2S_SelSuit_164* other) {
  std::swap(selidx_, other->selidx_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_SelSuit_164::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_SelSuit_164_descriptor_;
  metadata.reflection = C2S_SelSuit_164_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_SelSuit_164

// optional uint32 SelIdx = 1;
void C2S_SelSuit_164::clear_selidx() {
  selidx_ = 0u;
}
 ::google::protobuf::uint32 C2S_SelSuit_164::selidx() const {
  // @@protoc_insertion_point(field_get:pb.C2S_SelSuit_164.SelIdx)
  return selidx_;
}
 void C2S_SelSuit_164::set_selidx(::google::protobuf::uint32 value) {
  
  selidx_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_SelSuit_164.SelIdx)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MountClass::kMountIdFieldNumber;
const int MountClass::kMountUseSkinFieldNumber;
const int MountClass::kThisMountSkinsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MountClass::MountClass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.MountClass)
}

void MountClass::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MountClass::MountClass(const MountClass& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.MountClass)
}

void MountClass::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  mountid_ = 0u;
  mountuseskin_ = 0u;
}

MountClass::~MountClass() {
  // @@protoc_insertion_point(destructor:pb.MountClass)
  SharedDtor();
}

void MountClass::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MountClass::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MountClass::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MountClass_descriptor_;
}

const MountClass& MountClass::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

MountClass* MountClass::default_instance_ = NULL;

MountClass* MountClass::New(::google::protobuf::Arena* arena) const {
  MountClass* n = new MountClass;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MountClass::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.MountClass)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MountClass, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MountClass*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mountid_, mountuseskin_);

#undef ZR_HELPER_
#undef ZR_

  thismountskins_.Clear();
}

bool MountClass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.MountClass)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MountId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MountUseSkin;
        break;
      }

      // optional uint32 MountUseSkin = 2;
      case 2: {
        if (tag == 16) {
         parse_MountUseSkin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mountuseskin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ThisMountSkins;
        break;
      }

      // repeated uint32 ThisMountSkins = 3;
      case 3: {
        if (tag == 26) {
         parse_ThisMountSkins:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_thismountskins())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26, input, this->mutable_thismountskins())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.MountClass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.MountClass)
  return false;
#undef DO_
}

void MountClass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.MountClass)
  // optional uint32 MountId = 1;
  if (this->mountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mountid(), output);
  }

  // optional uint32 MountUseSkin = 2;
  if (this->mountuseskin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mountuseskin(), output);
  }

  // repeated uint32 ThisMountSkins = 3;
  if (this->thismountskins_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_thismountskins_cached_byte_size_);
  }
  for (int i = 0; i < this->thismountskins_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->thismountskins(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.MountClass)
}

::google::protobuf::uint8* MountClass::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.MountClass)
  // optional uint32 MountId = 1;
  if (this->mountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mountid(), target);
  }

  // optional uint32 MountUseSkin = 2;
  if (this->mountuseskin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mountuseskin(), target);
  }

  // repeated uint32 ThisMountSkins = 3;
  if (this->thismountskins_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _thismountskins_cached_byte_size_, target);
  }
  for (int i = 0; i < this->thismountskins_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->thismountskins(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.MountClass)
  return target;
}

int MountClass::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.MountClass)
  int total_size = 0;

  // optional uint32 MountId = 1;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mountid());
  }

  // optional uint32 MountUseSkin = 2;
  if (this->mountuseskin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mountuseskin());
  }

  // repeated uint32 ThisMountSkins = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->thismountskins_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->thismountskins(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _thismountskins_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MountClass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.MountClass)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MountClass* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MountClass>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.MountClass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.MountClass)
    MergeFrom(*source);
  }
}

void MountClass::MergeFrom(const MountClass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.MountClass)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  thismountskins_.MergeFrom(from.thismountskins_);
  if (from.mountid() != 0) {
    set_mountid(from.mountid());
  }
  if (from.mountuseskin() != 0) {
    set_mountuseskin(from.mountuseskin());
  }
}

void MountClass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.MountClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MountClass::CopyFrom(const MountClass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.MountClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MountClass::IsInitialized() const {

  return true;
}

void MountClass::Swap(MountClass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MountClass::InternalSwap(MountClass* other) {
  std::swap(mountid_, other->mountid_);
  std::swap(mountuseskin_, other->mountuseskin_);
  thismountskins_.UnsafeArenaSwap(&other->thismountskins_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MountClass::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MountClass_descriptor_;
  metadata.reflection = MountClass_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MountClass

// optional uint32 MountId = 1;
void MountClass::clear_mountid() {
  mountid_ = 0u;
}
 ::google::protobuf::uint32 MountClass::mountid() const {
  // @@protoc_insertion_point(field_get:pb.MountClass.MountId)
  return mountid_;
}
 void MountClass::set_mountid(::google::protobuf::uint32 value) {
  
  mountid_ = value;
  // @@protoc_insertion_point(field_set:pb.MountClass.MountId)
}

// optional uint32 MountUseSkin = 2;
void MountClass::clear_mountuseskin() {
  mountuseskin_ = 0u;
}
 ::google::protobuf::uint32 MountClass::mountuseskin() const {
  // @@protoc_insertion_point(field_get:pb.MountClass.MountUseSkin)
  return mountuseskin_;
}
 void MountClass::set_mountuseskin(::google::protobuf::uint32 value) {
  
  mountuseskin_ = value;
  // @@protoc_insertion_point(field_set:pb.MountClass.MountUseSkin)
}

// repeated uint32 ThisMountSkins = 3;
int MountClass::thismountskins_size() const {
  return thismountskins_.size();
}
void MountClass::clear_thismountskins() {
  thismountskins_.Clear();
}
 ::google::protobuf::uint32 MountClass::thismountskins(int index) const {
  // @@protoc_insertion_point(field_get:pb.MountClass.ThisMountSkins)
  return thismountskins_.Get(index);
}
 void MountClass::set_thismountskins(int index, ::google::protobuf::uint32 value) {
  thismountskins_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.MountClass.ThisMountSkins)
}
 void MountClass::add_thismountskins(::google::protobuf::uint32 value) {
  thismountskins_.Add(value);
  // @@protoc_insertion_point(field_add:pb.MountClass.ThisMountSkins)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MountClass::thismountskins() const {
  // @@protoc_insertion_point(field_list:pb.MountClass.ThisMountSkins)
  return thismountskins_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MountClass::mutable_thismountskins() {
  // @@protoc_insertion_point(field_mutable_list:pb.MountClass.ThisMountSkins)
  return &thismountskins_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_GetAllUnlockMount_170::C2S_GetAllUnlockMount_170()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_GetAllUnlockMount_170)
}

void C2S_GetAllUnlockMount_170::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_GetAllUnlockMount_170::C2S_GetAllUnlockMount_170(const C2S_GetAllUnlockMount_170& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_GetAllUnlockMount_170)
}

void C2S_GetAllUnlockMount_170::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2S_GetAllUnlockMount_170::~C2S_GetAllUnlockMount_170() {
  // @@protoc_insertion_point(destructor:pb.C2S_GetAllUnlockMount_170)
  SharedDtor();
}

void C2S_GetAllUnlockMount_170::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_GetAllUnlockMount_170::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_GetAllUnlockMount_170::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_GetAllUnlockMount_170_descriptor_;
}

const C2S_GetAllUnlockMount_170& C2S_GetAllUnlockMount_170::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_GetAllUnlockMount_170* C2S_GetAllUnlockMount_170::default_instance_ = NULL;

C2S_GetAllUnlockMount_170* C2S_GetAllUnlockMount_170::New(::google::protobuf::Arena* arena) const {
  C2S_GetAllUnlockMount_170* n = new C2S_GetAllUnlockMount_170;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_GetAllUnlockMount_170::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_GetAllUnlockMount_170)
}

bool C2S_GetAllUnlockMount_170::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_GetAllUnlockMount_170)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_GetAllUnlockMount_170)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_GetAllUnlockMount_170)
  return false;
#undef DO_
}

void C2S_GetAllUnlockMount_170::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_GetAllUnlockMount_170)
  // @@protoc_insertion_point(serialize_end:pb.C2S_GetAllUnlockMount_170)
}

::google::protobuf::uint8* C2S_GetAllUnlockMount_170::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_GetAllUnlockMount_170)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_GetAllUnlockMount_170)
  return target;
}

int C2S_GetAllUnlockMount_170::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_GetAllUnlockMount_170)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_GetAllUnlockMount_170::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_GetAllUnlockMount_170)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_GetAllUnlockMount_170* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_GetAllUnlockMount_170>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_GetAllUnlockMount_170)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_GetAllUnlockMount_170)
    MergeFrom(*source);
  }
}

void C2S_GetAllUnlockMount_170::MergeFrom(const C2S_GetAllUnlockMount_170& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_GetAllUnlockMount_170)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2S_GetAllUnlockMount_170::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_GetAllUnlockMount_170)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_GetAllUnlockMount_170::CopyFrom(const C2S_GetAllUnlockMount_170& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_GetAllUnlockMount_170)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_GetAllUnlockMount_170::IsInitialized() const {

  return true;
}

void C2S_GetAllUnlockMount_170::Swap(C2S_GetAllUnlockMount_170* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_GetAllUnlockMount_170::InternalSwap(C2S_GetAllUnlockMount_170* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_GetAllUnlockMount_170::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_GetAllUnlockMount_170_descriptor_;
  metadata.reflection = C2S_GetAllUnlockMount_170_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_GetAllUnlockMount_170

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_GetAllUnlockMount_170::kMountDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_GetAllUnlockMount_170::S2C_GetAllUnlockMount_170()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_GetAllUnlockMount_170)
}

void S2C_GetAllUnlockMount_170::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2C_GetAllUnlockMount_170::S2C_GetAllUnlockMount_170(const S2C_GetAllUnlockMount_170& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2C_GetAllUnlockMount_170)
}

void S2C_GetAllUnlockMount_170::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2C_GetAllUnlockMount_170::~S2C_GetAllUnlockMount_170() {
  // @@protoc_insertion_point(destructor:pb.S2C_GetAllUnlockMount_170)
  SharedDtor();
}

void S2C_GetAllUnlockMount_170::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2C_GetAllUnlockMount_170::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_GetAllUnlockMount_170::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2C_GetAllUnlockMount_170_descriptor_;
}

const S2C_GetAllUnlockMount_170& S2C_GetAllUnlockMount_170::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2C_GetAllUnlockMount_170* S2C_GetAllUnlockMount_170::default_instance_ = NULL;

S2C_GetAllUnlockMount_170* S2C_GetAllUnlockMount_170::New(::google::protobuf::Arena* arena) const {
  S2C_GetAllUnlockMount_170* n = new S2C_GetAllUnlockMount_170;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_GetAllUnlockMount_170::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_GetAllUnlockMount_170)
  mountdata_.Clear();
}

bool S2C_GetAllUnlockMount_170::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_GetAllUnlockMount_170)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.MountClass MountData = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_MountData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_mountdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_MountData;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_GetAllUnlockMount_170)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_GetAllUnlockMount_170)
  return false;
#undef DO_
}

void S2C_GetAllUnlockMount_170::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_GetAllUnlockMount_170)
  // repeated .pb.MountClass MountData = 1;
  for (unsigned int i = 0, n = this->mountdata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->mountdata(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_GetAllUnlockMount_170)
}

::google::protobuf::uint8* S2C_GetAllUnlockMount_170::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_GetAllUnlockMount_170)
  // repeated .pb.MountClass MountData = 1;
  for (unsigned int i = 0, n = this->mountdata_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->mountdata(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_GetAllUnlockMount_170)
  return target;
}

int S2C_GetAllUnlockMount_170::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_GetAllUnlockMount_170)
  int total_size = 0;

  // repeated .pb.MountClass MountData = 1;
  total_size += 1 * this->mountdata_size();
  for (int i = 0; i < this->mountdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mountdata(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_GetAllUnlockMount_170::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_GetAllUnlockMount_170)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2C_GetAllUnlockMount_170* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_GetAllUnlockMount_170>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_GetAllUnlockMount_170)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_GetAllUnlockMount_170)
    MergeFrom(*source);
  }
}

void S2C_GetAllUnlockMount_170::MergeFrom(const S2C_GetAllUnlockMount_170& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_GetAllUnlockMount_170)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  mountdata_.MergeFrom(from.mountdata_);
}

void S2C_GetAllUnlockMount_170::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_GetAllUnlockMount_170)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_GetAllUnlockMount_170::CopyFrom(const S2C_GetAllUnlockMount_170& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_GetAllUnlockMount_170)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_GetAllUnlockMount_170::IsInitialized() const {

  return true;
}

void S2C_GetAllUnlockMount_170::Swap(S2C_GetAllUnlockMount_170* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_GetAllUnlockMount_170::InternalSwap(S2C_GetAllUnlockMount_170* other) {
  mountdata_.UnsafeArenaSwap(&other->mountdata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_GetAllUnlockMount_170::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2C_GetAllUnlockMount_170_descriptor_;
  metadata.reflection = S2C_GetAllUnlockMount_170_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_GetAllUnlockMount_170

// repeated .pb.MountClass MountData = 1;
int S2C_GetAllUnlockMount_170::mountdata_size() const {
  return mountdata_.size();
}
void S2C_GetAllUnlockMount_170::clear_mountdata() {
  mountdata_.Clear();
}
const ::pb::MountClass& S2C_GetAllUnlockMount_170::mountdata(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2C_GetAllUnlockMount_170.MountData)
  return mountdata_.Get(index);
}
::pb::MountClass* S2C_GetAllUnlockMount_170::mutable_mountdata(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2C_GetAllUnlockMount_170.MountData)
  return mountdata_.Mutable(index);
}
::pb::MountClass* S2C_GetAllUnlockMount_170::add_mountdata() {
  // @@protoc_insertion_point(field_add:pb.S2C_GetAllUnlockMount_170.MountData)
  return mountdata_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::MountClass >*
S2C_GetAllUnlockMount_170::mutable_mountdata() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2C_GetAllUnlockMount_170.MountData)
  return &mountdata_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::MountClass >&
S2C_GetAllUnlockMount_170::mountdata() const {
  // @@protoc_insertion_point(field_list:pb.S2C_GetAllUnlockMount_170.MountData)
  return mountdata_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_UpdateMount_171::kMountIdFieldNumber;
const int C2S_UpdateMount_171::kUseSkinIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_UpdateMount_171::C2S_UpdateMount_171()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_UpdateMount_171)
}

void C2S_UpdateMount_171::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_UpdateMount_171::C2S_UpdateMount_171(const C2S_UpdateMount_171& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_UpdateMount_171)
}

void C2S_UpdateMount_171::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  mountid_ = 0u;
  useskinid_ = 0u;
}

C2S_UpdateMount_171::~C2S_UpdateMount_171() {
  // @@protoc_insertion_point(destructor:pb.C2S_UpdateMount_171)
  SharedDtor();
}

void C2S_UpdateMount_171::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_UpdateMount_171::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_UpdateMount_171::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_UpdateMount_171_descriptor_;
}

const C2S_UpdateMount_171& C2S_UpdateMount_171::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_UpdateMount_171* C2S_UpdateMount_171::default_instance_ = NULL;

C2S_UpdateMount_171* C2S_UpdateMount_171::New(::google::protobuf::Arena* arena) const {
  C2S_UpdateMount_171* n = new C2S_UpdateMount_171;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_UpdateMount_171::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_UpdateMount_171)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(C2S_UpdateMount_171, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<C2S_UpdateMount_171*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mountid_, useskinid_);

#undef ZR_HELPER_
#undef ZR_

}

bool C2S_UpdateMount_171::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_UpdateMount_171)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MountId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_UseSkinId;
        break;
      }

      // optional uint32 UseSkinId = 2;
      case 2: {
        if (tag == 16) {
         parse_UseSkinId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &useskinid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_UpdateMount_171)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_UpdateMount_171)
  return false;
#undef DO_
}

void C2S_UpdateMount_171::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_UpdateMount_171)
  // optional uint32 MountId = 1;
  if (this->mountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mountid(), output);
  }

  // optional uint32 UseSkinId = 2;
  if (this->useskinid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->useskinid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_UpdateMount_171)
}

::google::protobuf::uint8* C2S_UpdateMount_171::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_UpdateMount_171)
  // optional uint32 MountId = 1;
  if (this->mountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mountid(), target);
  }

  // optional uint32 UseSkinId = 2;
  if (this->useskinid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->useskinid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_UpdateMount_171)
  return target;
}

int C2S_UpdateMount_171::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_UpdateMount_171)
  int total_size = 0;

  // optional uint32 MountId = 1;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mountid());
  }

  // optional uint32 UseSkinId = 2;
  if (this->useskinid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->useskinid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_UpdateMount_171::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_UpdateMount_171)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_UpdateMount_171* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_UpdateMount_171>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_UpdateMount_171)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_UpdateMount_171)
    MergeFrom(*source);
  }
}

void C2S_UpdateMount_171::MergeFrom(const C2S_UpdateMount_171& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_UpdateMount_171)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.mountid() != 0) {
    set_mountid(from.mountid());
  }
  if (from.useskinid() != 0) {
    set_useskinid(from.useskinid());
  }
}

void C2S_UpdateMount_171::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_UpdateMount_171)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_UpdateMount_171::CopyFrom(const C2S_UpdateMount_171& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_UpdateMount_171)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_UpdateMount_171::IsInitialized() const {

  return true;
}

void C2S_UpdateMount_171::Swap(C2S_UpdateMount_171* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_UpdateMount_171::InternalSwap(C2S_UpdateMount_171* other) {
  std::swap(mountid_, other->mountid_);
  std::swap(useskinid_, other->useskinid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_UpdateMount_171::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_UpdateMount_171_descriptor_;
  metadata.reflection = C2S_UpdateMount_171_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_UpdateMount_171

// optional uint32 MountId = 1;
void C2S_UpdateMount_171::clear_mountid() {
  mountid_ = 0u;
}
 ::google::protobuf::uint32 C2S_UpdateMount_171::mountid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_UpdateMount_171.MountId)
  return mountid_;
}
 void C2S_UpdateMount_171::set_mountid(::google::protobuf::uint32 value) {
  
  mountid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_UpdateMount_171.MountId)
}

// optional uint32 UseSkinId = 2;
void C2S_UpdateMount_171::clear_useskinid() {
  useskinid_ = 0u;
}
 ::google::protobuf::uint32 C2S_UpdateMount_171::useskinid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_UpdateMount_171.UseSkinId)
  return useskinid_;
}
 void C2S_UpdateMount_171::set_useskinid(::google::protobuf::uint32 value) {
  
  useskinid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_UpdateMount_171.UseSkinId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_UpdateMount_171::kRidFieldNumber;
const int S2C_UpdateMount_171::kMountidFieldNumber;
const int S2C_UpdateMount_171::kUseSkinIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_UpdateMount_171::S2C_UpdateMount_171()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_UpdateMount_171)
}

void S2C_UpdateMount_171::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2C_UpdateMount_171::S2C_UpdateMount_171(const S2C_UpdateMount_171& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2C_UpdateMount_171)
}

void S2C_UpdateMount_171::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
  mountid_ = 0u;
  useskinid_ = 0u;
}

S2C_UpdateMount_171::~S2C_UpdateMount_171() {
  // @@protoc_insertion_point(destructor:pb.S2C_UpdateMount_171)
  SharedDtor();
}

void S2C_UpdateMount_171::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2C_UpdateMount_171::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_UpdateMount_171::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2C_UpdateMount_171_descriptor_;
}

const S2C_UpdateMount_171& S2C_UpdateMount_171::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2C_UpdateMount_171* S2C_UpdateMount_171::default_instance_ = NULL;

S2C_UpdateMount_171* S2C_UpdateMount_171::New(::google::protobuf::Arena* arena) const {
  S2C_UpdateMount_171* n = new S2C_UpdateMount_171;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_UpdateMount_171::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_UpdateMount_171)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2C_UpdateMount_171, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2C_UpdateMount_171*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rid_, useskinid_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2C_UpdateMount_171::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_UpdateMount_171)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Mountid;
        break;
      }

      // optional uint32 Mountid = 2;
      case 2: {
        if (tag == 16) {
         parse_Mountid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_UseSkinId;
        break;
      }

      // optional uint32 UseSkinId = 3;
      case 3: {
        if (tag == 24) {
         parse_UseSkinId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &useskinid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_UpdateMount_171)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_UpdateMount_171)
  return false;
#undef DO_
}

void S2C_UpdateMount_171::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_UpdateMount_171)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // optional uint32 Mountid = 2;
  if (this->mountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mountid(), output);
  }

  // optional uint32 UseSkinId = 3;
  if (this->useskinid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->useskinid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_UpdateMount_171)
}

::google::protobuf::uint8* S2C_UpdateMount_171::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_UpdateMount_171)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // optional uint32 Mountid = 2;
  if (this->mountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mountid(), target);
  }

  // optional uint32 UseSkinId = 3;
  if (this->useskinid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->useskinid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_UpdateMount_171)
  return target;
}

int S2C_UpdateMount_171::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_UpdateMount_171)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  // optional uint32 Mountid = 2;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mountid());
  }

  // optional uint32 UseSkinId = 3;
  if (this->useskinid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->useskinid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_UpdateMount_171::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_UpdateMount_171)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2C_UpdateMount_171* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_UpdateMount_171>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_UpdateMount_171)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_UpdateMount_171)
    MergeFrom(*source);
  }
}

void S2C_UpdateMount_171::MergeFrom(const S2C_UpdateMount_171& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_UpdateMount_171)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.mountid() != 0) {
    set_mountid(from.mountid());
  }
  if (from.useskinid() != 0) {
    set_useskinid(from.useskinid());
  }
}

void S2C_UpdateMount_171::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_UpdateMount_171)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_UpdateMount_171::CopyFrom(const S2C_UpdateMount_171& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_UpdateMount_171)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_UpdateMount_171::IsInitialized() const {

  return true;
}

void S2C_UpdateMount_171::Swap(S2C_UpdateMount_171* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_UpdateMount_171::InternalSwap(S2C_UpdateMount_171* other) {
  std::swap(rid_, other->rid_);
  std::swap(mountid_, other->mountid_);
  std::swap(useskinid_, other->useskinid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_UpdateMount_171::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2C_UpdateMount_171_descriptor_;
  metadata.reflection = S2C_UpdateMount_171_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_UpdateMount_171

// optional uint64 Rid = 1;
void S2C_UpdateMount_171::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2C_UpdateMount_171::rid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_UpdateMount_171.Rid)
  return rid_;
}
 void S2C_UpdateMount_171::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_UpdateMount_171.Rid)
}

// optional uint32 Mountid = 2;
void S2C_UpdateMount_171::clear_mountid() {
  mountid_ = 0u;
}
 ::google::protobuf::uint32 S2C_UpdateMount_171::mountid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_UpdateMount_171.Mountid)
  return mountid_;
}
 void S2C_UpdateMount_171::set_mountid(::google::protobuf::uint32 value) {
  
  mountid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_UpdateMount_171.Mountid)
}

// optional uint32 UseSkinId = 3;
void S2C_UpdateMount_171::clear_useskinid() {
  useskinid_ = 0u;
}
 ::google::protobuf::uint32 S2C_UpdateMount_171::useskinid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_UpdateMount_171.UseSkinId)
  return useskinid_;
}
 void S2C_UpdateMount_171::set_useskinid(::google::protobuf::uint32 value) {
  
  useskinid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_UpdateMount_171.UseSkinId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_MountAddOneSkin_173::kAddOneSkinIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_MountAddOneSkin_173::S2C_MountAddOneSkin_173()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_MountAddOneSkin_173)
}

void S2C_MountAddOneSkin_173::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2C_MountAddOneSkin_173::S2C_MountAddOneSkin_173(const S2C_MountAddOneSkin_173& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2C_MountAddOneSkin_173)
}

void S2C_MountAddOneSkin_173::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  addoneskinid_ = 0u;
}

S2C_MountAddOneSkin_173::~S2C_MountAddOneSkin_173() {
  // @@protoc_insertion_point(destructor:pb.S2C_MountAddOneSkin_173)
  SharedDtor();
}

void S2C_MountAddOneSkin_173::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2C_MountAddOneSkin_173::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_MountAddOneSkin_173::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2C_MountAddOneSkin_173_descriptor_;
}

const S2C_MountAddOneSkin_173& S2C_MountAddOneSkin_173::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2C_MountAddOneSkin_173* S2C_MountAddOneSkin_173::default_instance_ = NULL;

S2C_MountAddOneSkin_173* S2C_MountAddOneSkin_173::New(::google::protobuf::Arena* arena) const {
  S2C_MountAddOneSkin_173* n = new S2C_MountAddOneSkin_173;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_MountAddOneSkin_173::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_MountAddOneSkin_173)
  addoneskinid_ = 0u;
}

bool S2C_MountAddOneSkin_173::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_MountAddOneSkin_173)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 AddOneSkinId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &addoneskinid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_MountAddOneSkin_173)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_MountAddOneSkin_173)
  return false;
#undef DO_
}

void S2C_MountAddOneSkin_173::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_MountAddOneSkin_173)
  // optional uint32 AddOneSkinId = 1;
  if (this->addoneskinid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->addoneskinid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_MountAddOneSkin_173)
}

::google::protobuf::uint8* S2C_MountAddOneSkin_173::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_MountAddOneSkin_173)
  // optional uint32 AddOneSkinId = 1;
  if (this->addoneskinid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->addoneskinid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_MountAddOneSkin_173)
  return target;
}

int S2C_MountAddOneSkin_173::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_MountAddOneSkin_173)
  int total_size = 0;

  // optional uint32 AddOneSkinId = 1;
  if (this->addoneskinid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->addoneskinid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_MountAddOneSkin_173::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_MountAddOneSkin_173)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2C_MountAddOneSkin_173* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_MountAddOneSkin_173>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_MountAddOneSkin_173)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_MountAddOneSkin_173)
    MergeFrom(*source);
  }
}

void S2C_MountAddOneSkin_173::MergeFrom(const S2C_MountAddOneSkin_173& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_MountAddOneSkin_173)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.addoneskinid() != 0) {
    set_addoneskinid(from.addoneskinid());
  }
}

void S2C_MountAddOneSkin_173::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_MountAddOneSkin_173)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_MountAddOneSkin_173::CopyFrom(const S2C_MountAddOneSkin_173& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_MountAddOneSkin_173)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_MountAddOneSkin_173::IsInitialized() const {

  return true;
}

void S2C_MountAddOneSkin_173::Swap(S2C_MountAddOneSkin_173* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_MountAddOneSkin_173::InternalSwap(S2C_MountAddOneSkin_173* other) {
  std::swap(addoneskinid_, other->addoneskinid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_MountAddOneSkin_173::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2C_MountAddOneSkin_173_descriptor_;
  metadata.reflection = S2C_MountAddOneSkin_173_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_MountAddOneSkin_173

// optional uint32 AddOneSkinId = 1;
void S2C_MountAddOneSkin_173::clear_addoneskinid() {
  addoneskinid_ = 0u;
}
 ::google::protobuf::uint32 S2C_MountAddOneSkin_173::addoneskinid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_MountAddOneSkin_173.AddOneSkinId)
  return addoneskinid_;
}
 void S2C_MountAddOneSkin_173::set_addoneskinid(::google::protobuf::uint32 value) {
  
  addoneskinid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_MountAddOneSkin_173.AddOneSkinId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_GetAllRune_180::C2S_GetAllRune_180()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_GetAllRune_180)
}

void C2S_GetAllRune_180::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_GetAllRune_180::C2S_GetAllRune_180(const C2S_GetAllRune_180& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_GetAllRune_180)
}

void C2S_GetAllRune_180::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2S_GetAllRune_180::~C2S_GetAllRune_180() {
  // @@protoc_insertion_point(destructor:pb.C2S_GetAllRune_180)
  SharedDtor();
}

void C2S_GetAllRune_180::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_GetAllRune_180::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_GetAllRune_180::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_GetAllRune_180_descriptor_;
}

const C2S_GetAllRune_180& C2S_GetAllRune_180::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_GetAllRune_180* C2S_GetAllRune_180::default_instance_ = NULL;

C2S_GetAllRune_180* C2S_GetAllRune_180::New(::google::protobuf::Arena* arena) const {
  C2S_GetAllRune_180* n = new C2S_GetAllRune_180;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_GetAllRune_180::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_GetAllRune_180)
}

bool C2S_GetAllRune_180::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_GetAllRune_180)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_GetAllRune_180)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_GetAllRune_180)
  return false;
#undef DO_
}

void C2S_GetAllRune_180::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_GetAllRune_180)
  // @@protoc_insertion_point(serialize_end:pb.C2S_GetAllRune_180)
}

::google::protobuf::uint8* C2S_GetAllRune_180::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_GetAllRune_180)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_GetAllRune_180)
  return target;
}

int C2S_GetAllRune_180::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_GetAllRune_180)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_GetAllRune_180::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_GetAllRune_180)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_GetAllRune_180* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_GetAllRune_180>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_GetAllRune_180)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_GetAllRune_180)
    MergeFrom(*source);
  }
}

void C2S_GetAllRune_180::MergeFrom(const C2S_GetAllRune_180& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_GetAllRune_180)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2S_GetAllRune_180::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_GetAllRune_180)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_GetAllRune_180::CopyFrom(const C2S_GetAllRune_180& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_GetAllRune_180)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_GetAllRune_180::IsInitialized() const {

  return true;
}

void C2S_GetAllRune_180::Swap(C2S_GetAllRune_180* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_GetAllRune_180::InternalSwap(C2S_GetAllRune_180* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_GetAllRune_180::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_GetAllRune_180_descriptor_;
  metadata.reflection = C2S_GetAllRune_180_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_GetAllRune_180

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rune::kIdFieldNumber;
const int Rune::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rune::Rune()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Rune)
}

void Rune::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Rune::Rune(const Rune& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.Rune)
}

void Rune::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0u;
  count_ = 0u;
}

Rune::~Rune() {
  // @@protoc_insertion_point(destructor:pb.Rune)
  SharedDtor();
}

void Rune::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Rune::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Rune::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Rune_descriptor_;
}

const Rune& Rune::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

Rune* Rune::default_instance_ = NULL;

Rune* Rune::New(::google::protobuf::Arena* arena) const {
  Rune* n = new Rune;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Rune::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Rune)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Rune, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Rune*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, count_);

#undef ZR_HELPER_
#undef ZR_

}

bool Rune::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Rune)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Count;
        break;
      }

      // optional uint32 Count = 2;
      case 2: {
        if (tag == 16) {
         parse_Count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Rune)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Rune)
  return false;
#undef DO_
}

void Rune::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Rune)
  // optional uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.Rune)
}

::google::protobuf::uint8* Rune::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.Rune)
  // optional uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.Rune)
  return target;
}

int Rune::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Rune)
  int total_size = 0;

  // optional uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // optional uint32 Count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Rune::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Rune)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Rune* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Rune>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Rune)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Rune)
    MergeFrom(*source);
  }
}

void Rune::MergeFrom(const Rune& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Rune)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Rune::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Rune)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rune::CopyFrom(const Rune& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Rune)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rune::IsInitialized() const {

  return true;
}

void Rune::Swap(Rune* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rune::InternalSwap(Rune* other) {
  std::swap(id_, other->id_);
  std::swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Rune::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Rune_descriptor_;
  metadata.reflection = Rune_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Rune

// optional uint32 Id = 1;
void Rune::clear_id() {
  id_ = 0u;
}
 ::google::protobuf::uint32 Rune::id() const {
  // @@protoc_insertion_point(field_get:pb.Rune.Id)
  return id_;
}
 void Rune::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.Rune.Id)
}

// optional uint32 Count = 2;
void Rune::clear_count() {
  count_ = 0u;
}
 ::google::protobuf::uint32 Rune::count() const {
  // @@protoc_insertion_point(field_get:pb.Rune.Count)
  return count_;
}
 void Rune::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.Rune.Count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_GetAllRune_180::kRuneListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_GetAllRune_180::S2C_GetAllRune_180()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_GetAllRune_180)
}

void S2C_GetAllRune_180::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2C_GetAllRune_180::S2C_GetAllRune_180(const S2C_GetAllRune_180& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2C_GetAllRune_180)
}

void S2C_GetAllRune_180::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2C_GetAllRune_180::~S2C_GetAllRune_180() {
  // @@protoc_insertion_point(destructor:pb.S2C_GetAllRune_180)
  SharedDtor();
}

void S2C_GetAllRune_180::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2C_GetAllRune_180::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_GetAllRune_180::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2C_GetAllRune_180_descriptor_;
}

const S2C_GetAllRune_180& S2C_GetAllRune_180::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2C_GetAllRune_180* S2C_GetAllRune_180::default_instance_ = NULL;

S2C_GetAllRune_180* S2C_GetAllRune_180::New(::google::protobuf::Arena* arena) const {
  S2C_GetAllRune_180* n = new S2C_GetAllRune_180;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_GetAllRune_180::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_GetAllRune_180)
  runelist_.Clear();
}

bool S2C_GetAllRune_180::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_GetAllRune_180)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.Rune RuneList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_RuneList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_runelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_RuneList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_GetAllRune_180)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_GetAllRune_180)
  return false;
#undef DO_
}

void S2C_GetAllRune_180::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_GetAllRune_180)
  // repeated .pb.Rune RuneList = 1;
  for (unsigned int i = 0, n = this->runelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->runelist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_GetAllRune_180)
}

::google::protobuf::uint8* S2C_GetAllRune_180::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_GetAllRune_180)
  // repeated .pb.Rune RuneList = 1;
  for (unsigned int i = 0, n = this->runelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->runelist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_GetAllRune_180)
  return target;
}

int S2C_GetAllRune_180::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_GetAllRune_180)
  int total_size = 0;

  // repeated .pb.Rune RuneList = 1;
  total_size += 1 * this->runelist_size();
  for (int i = 0; i < this->runelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->runelist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_GetAllRune_180::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_GetAllRune_180)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2C_GetAllRune_180* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_GetAllRune_180>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_GetAllRune_180)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_GetAllRune_180)
    MergeFrom(*source);
  }
}

void S2C_GetAllRune_180::MergeFrom(const S2C_GetAllRune_180& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_GetAllRune_180)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  runelist_.MergeFrom(from.runelist_);
}

void S2C_GetAllRune_180::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_GetAllRune_180)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_GetAllRune_180::CopyFrom(const S2C_GetAllRune_180& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_GetAllRune_180)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_GetAllRune_180::IsInitialized() const {

  return true;
}

void S2C_GetAllRune_180::Swap(S2C_GetAllRune_180* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_GetAllRune_180::InternalSwap(S2C_GetAllRune_180* other) {
  runelist_.UnsafeArenaSwap(&other->runelist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_GetAllRune_180::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2C_GetAllRune_180_descriptor_;
  metadata.reflection = S2C_GetAllRune_180_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_GetAllRune_180

// repeated .pb.Rune RuneList = 1;
int S2C_GetAllRune_180::runelist_size() const {
  return runelist_.size();
}
void S2C_GetAllRune_180::clear_runelist() {
  runelist_.Clear();
}
const ::pb::Rune& S2C_GetAllRune_180::runelist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2C_GetAllRune_180.RuneList)
  return runelist_.Get(index);
}
::pb::Rune* S2C_GetAllRune_180::mutable_runelist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2C_GetAllRune_180.RuneList)
  return runelist_.Mutable(index);
}
::pb::Rune* S2C_GetAllRune_180::add_runelist() {
  // @@protoc_insertion_point(field_add:pb.S2C_GetAllRune_180.RuneList)
  return runelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::Rune >*
S2C_GetAllRune_180::mutable_runelist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2C_GetAllRune_180.RuneList)
  return &runelist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::Rune >&
S2C_GetAllRune_180::runelist() const {
  // @@protoc_insertion_point(field_list:pb.S2C_GetAllRune_180.RuneList)
  return runelist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_BuyRune_181::kRuneIdFieldNumber;
const int C2S_BuyRune_181::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_BuyRune_181::C2S_BuyRune_181()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_BuyRune_181)
}

void C2S_BuyRune_181::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_BuyRune_181::C2S_BuyRune_181(const C2S_BuyRune_181& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_BuyRune_181)
}

void C2S_BuyRune_181::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  runeid_ = 0u;
  count_ = 0u;
}

C2S_BuyRune_181::~C2S_BuyRune_181() {
  // @@protoc_insertion_point(destructor:pb.C2S_BuyRune_181)
  SharedDtor();
}

void C2S_BuyRune_181::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_BuyRune_181::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_BuyRune_181::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_BuyRune_181_descriptor_;
}

const C2S_BuyRune_181& C2S_BuyRune_181::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_BuyRune_181* C2S_BuyRune_181::default_instance_ = NULL;

C2S_BuyRune_181* C2S_BuyRune_181::New(::google::protobuf::Arena* arena) const {
  C2S_BuyRune_181* n = new C2S_BuyRune_181;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_BuyRune_181::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_BuyRune_181)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(C2S_BuyRune_181, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<C2S_BuyRune_181*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(runeid_, count_);

#undef ZR_HELPER_
#undef ZR_

}

bool C2S_BuyRune_181::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_BuyRune_181)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RuneId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &runeid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Count;
        break;
      }

      // optional uint32 Count = 2;
      case 2: {
        if (tag == 16) {
         parse_Count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_BuyRune_181)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_BuyRune_181)
  return false;
#undef DO_
}

void C2S_BuyRune_181::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_BuyRune_181)
  // optional uint32 RuneId = 1;
  if (this->runeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->runeid(), output);
  }

  // optional uint32 Count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_BuyRune_181)
}

::google::protobuf::uint8* C2S_BuyRune_181::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_BuyRune_181)
  // optional uint32 RuneId = 1;
  if (this->runeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->runeid(), target);
  }

  // optional uint32 Count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_BuyRune_181)
  return target;
}

int C2S_BuyRune_181::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_BuyRune_181)
  int total_size = 0;

  // optional uint32 RuneId = 1;
  if (this->runeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->runeid());
  }

  // optional uint32 Count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_BuyRune_181::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_BuyRune_181)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_BuyRune_181* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_BuyRune_181>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_BuyRune_181)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_BuyRune_181)
    MergeFrom(*source);
  }
}

void C2S_BuyRune_181::MergeFrom(const C2S_BuyRune_181& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_BuyRune_181)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.runeid() != 0) {
    set_runeid(from.runeid());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void C2S_BuyRune_181::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_BuyRune_181)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_BuyRune_181::CopyFrom(const C2S_BuyRune_181& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_BuyRune_181)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_BuyRune_181::IsInitialized() const {

  return true;
}

void C2S_BuyRune_181::Swap(C2S_BuyRune_181* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_BuyRune_181::InternalSwap(C2S_BuyRune_181* other) {
  std::swap(runeid_, other->runeid_);
  std::swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_BuyRune_181::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_BuyRune_181_descriptor_;
  metadata.reflection = C2S_BuyRune_181_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_BuyRune_181

// optional uint32 RuneId = 1;
void C2S_BuyRune_181::clear_runeid() {
  runeid_ = 0u;
}
 ::google::protobuf::uint32 C2S_BuyRune_181::runeid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_BuyRune_181.RuneId)
  return runeid_;
}
 void C2S_BuyRune_181::set_runeid(::google::protobuf::uint32 value) {
  
  runeid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_BuyRune_181.RuneId)
}

// optional uint32 Count = 2;
void C2S_BuyRune_181::clear_count() {
  count_ = 0u;
}
 ::google::protobuf::uint32 C2S_BuyRune_181::count() const {
  // @@protoc_insertion_point(field_get:pb.C2S_BuyRune_181.Count)
  return count_;
}
 void C2S_BuyRune_181::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_BuyRune_181.Count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_DecomposeRune_182::kRuneIdFieldNumber;
const int C2S_DecomposeRune_182::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_DecomposeRune_182::C2S_DecomposeRune_182()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_DecomposeRune_182)
}

void C2S_DecomposeRune_182::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_DecomposeRune_182::C2S_DecomposeRune_182(const C2S_DecomposeRune_182& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_DecomposeRune_182)
}

void C2S_DecomposeRune_182::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  runeid_ = 0u;
  count_ = 0u;
}

C2S_DecomposeRune_182::~C2S_DecomposeRune_182() {
  // @@protoc_insertion_point(destructor:pb.C2S_DecomposeRune_182)
  SharedDtor();
}

void C2S_DecomposeRune_182::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_DecomposeRune_182::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_DecomposeRune_182::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_DecomposeRune_182_descriptor_;
}

const C2S_DecomposeRune_182& C2S_DecomposeRune_182::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_DecomposeRune_182* C2S_DecomposeRune_182::default_instance_ = NULL;

C2S_DecomposeRune_182* C2S_DecomposeRune_182::New(::google::protobuf::Arena* arena) const {
  C2S_DecomposeRune_182* n = new C2S_DecomposeRune_182;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_DecomposeRune_182::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_DecomposeRune_182)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(C2S_DecomposeRune_182, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<C2S_DecomposeRune_182*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(runeid_, count_);

#undef ZR_HELPER_
#undef ZR_

}

bool C2S_DecomposeRune_182::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_DecomposeRune_182)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RuneId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &runeid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Count;
        break;
      }

      // optional uint32 Count = 2;
      case 2: {
        if (tag == 16) {
         parse_Count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_DecomposeRune_182)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_DecomposeRune_182)
  return false;
#undef DO_
}

void C2S_DecomposeRune_182::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_DecomposeRune_182)
  // optional uint32 RuneId = 1;
  if (this->runeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->runeid(), output);
  }

  // optional uint32 Count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_DecomposeRune_182)
}

::google::protobuf::uint8* C2S_DecomposeRune_182::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_DecomposeRune_182)
  // optional uint32 RuneId = 1;
  if (this->runeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->runeid(), target);
  }

  // optional uint32 Count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_DecomposeRune_182)
  return target;
}

int C2S_DecomposeRune_182::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_DecomposeRune_182)
  int total_size = 0;

  // optional uint32 RuneId = 1;
  if (this->runeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->runeid());
  }

  // optional uint32 Count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_DecomposeRune_182::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_DecomposeRune_182)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_DecomposeRune_182* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_DecomposeRune_182>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_DecomposeRune_182)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_DecomposeRune_182)
    MergeFrom(*source);
  }
}

void C2S_DecomposeRune_182::MergeFrom(const C2S_DecomposeRune_182& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_DecomposeRune_182)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.runeid() != 0) {
    set_runeid(from.runeid());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void C2S_DecomposeRune_182::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_DecomposeRune_182)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_DecomposeRune_182::CopyFrom(const C2S_DecomposeRune_182& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_DecomposeRune_182)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_DecomposeRune_182::IsInitialized() const {

  return true;
}

void C2S_DecomposeRune_182::Swap(C2S_DecomposeRune_182* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_DecomposeRune_182::InternalSwap(C2S_DecomposeRune_182* other) {
  std::swap(runeid_, other->runeid_);
  std::swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_DecomposeRune_182::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_DecomposeRune_182_descriptor_;
  metadata.reflection = C2S_DecomposeRune_182_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_DecomposeRune_182

// optional uint32 RuneId = 1;
void C2S_DecomposeRune_182::clear_runeid() {
  runeid_ = 0u;
}
 ::google::protobuf::uint32 C2S_DecomposeRune_182::runeid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_DecomposeRune_182.RuneId)
  return runeid_;
}
 void C2S_DecomposeRune_182::set_runeid(::google::protobuf::uint32 value) {
  
  runeid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_DecomposeRune_182.RuneId)
}

// optional uint32 Count = 2;
void C2S_DecomposeRune_182::clear_count() {
  count_ = 0u;
}
 ::google::protobuf::uint32 C2S_DecomposeRune_182::count() const {
  // @@protoc_insertion_point(field_get:pb.C2S_DecomposeRune_182.Count)
  return count_;
}
 void C2S_DecomposeRune_182::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_DecomposeRune_182.Count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_BatchDecomposeRune_183::kQualityListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_BatchDecomposeRune_183::C2S_BatchDecomposeRune_183()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_BatchDecomposeRune_183)
}

void C2S_BatchDecomposeRune_183::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_BatchDecomposeRune_183::C2S_BatchDecomposeRune_183(const C2S_BatchDecomposeRune_183& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_BatchDecomposeRune_183)
}

void C2S_BatchDecomposeRune_183::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2S_BatchDecomposeRune_183::~C2S_BatchDecomposeRune_183() {
  // @@protoc_insertion_point(destructor:pb.C2S_BatchDecomposeRune_183)
  SharedDtor();
}

void C2S_BatchDecomposeRune_183::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_BatchDecomposeRune_183::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_BatchDecomposeRune_183::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_BatchDecomposeRune_183_descriptor_;
}

const C2S_BatchDecomposeRune_183& C2S_BatchDecomposeRune_183::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_BatchDecomposeRune_183* C2S_BatchDecomposeRune_183::default_instance_ = NULL;

C2S_BatchDecomposeRune_183* C2S_BatchDecomposeRune_183::New(::google::protobuf::Arena* arena) const {
  C2S_BatchDecomposeRune_183* n = new C2S_BatchDecomposeRune_183;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_BatchDecomposeRune_183::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_BatchDecomposeRune_183)
  qualitylist_.Clear();
}

bool C2S_BatchDecomposeRune_183::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_BatchDecomposeRune_183)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 QualityList = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_qualitylist())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_qualitylist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_BatchDecomposeRune_183)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_BatchDecomposeRune_183)
  return false;
#undef DO_
}

void C2S_BatchDecomposeRune_183::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_BatchDecomposeRune_183)
  // repeated uint32 QualityList = 1;
  if (this->qualitylist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_qualitylist_cached_byte_size_);
  }
  for (int i = 0; i < this->qualitylist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->qualitylist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_BatchDecomposeRune_183)
}

::google::protobuf::uint8* C2S_BatchDecomposeRune_183::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_BatchDecomposeRune_183)
  // repeated uint32 QualityList = 1;
  if (this->qualitylist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _qualitylist_cached_byte_size_, target);
  }
  for (int i = 0; i < this->qualitylist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->qualitylist(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_BatchDecomposeRune_183)
  return target;
}

int C2S_BatchDecomposeRune_183::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_BatchDecomposeRune_183)
  int total_size = 0;

  // repeated uint32 QualityList = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->qualitylist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->qualitylist(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _qualitylist_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_BatchDecomposeRune_183::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_BatchDecomposeRune_183)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_BatchDecomposeRune_183* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_BatchDecomposeRune_183>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_BatchDecomposeRune_183)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_BatchDecomposeRune_183)
    MergeFrom(*source);
  }
}

void C2S_BatchDecomposeRune_183::MergeFrom(const C2S_BatchDecomposeRune_183& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_BatchDecomposeRune_183)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  qualitylist_.MergeFrom(from.qualitylist_);
}

void C2S_BatchDecomposeRune_183::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_BatchDecomposeRune_183)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_BatchDecomposeRune_183::CopyFrom(const C2S_BatchDecomposeRune_183& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_BatchDecomposeRune_183)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_BatchDecomposeRune_183::IsInitialized() const {

  return true;
}

void C2S_BatchDecomposeRune_183::Swap(C2S_BatchDecomposeRune_183* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_BatchDecomposeRune_183::InternalSwap(C2S_BatchDecomposeRune_183* other) {
  qualitylist_.UnsafeArenaSwap(&other->qualitylist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_BatchDecomposeRune_183::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_BatchDecomposeRune_183_descriptor_;
  metadata.reflection = C2S_BatchDecomposeRune_183_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_BatchDecomposeRune_183

// repeated uint32 QualityList = 1;
int C2S_BatchDecomposeRune_183::qualitylist_size() const {
  return qualitylist_.size();
}
void C2S_BatchDecomposeRune_183::clear_qualitylist() {
  qualitylist_.Clear();
}
 ::google::protobuf::uint32 C2S_BatchDecomposeRune_183::qualitylist(int index) const {
  // @@protoc_insertion_point(field_get:pb.C2S_BatchDecomposeRune_183.QualityList)
  return qualitylist_.Get(index);
}
 void C2S_BatchDecomposeRune_183::set_qualitylist(int index, ::google::protobuf::uint32 value) {
  qualitylist_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.C2S_BatchDecomposeRune_183.QualityList)
}
 void C2S_BatchDecomposeRune_183::add_qualitylist(::google::protobuf::uint32 value) {
  qualitylist_.Add(value);
  // @@protoc_insertion_point(field_add:pb.C2S_BatchDecomposeRune_183.QualityList)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
C2S_BatchDecomposeRune_183::qualitylist() const {
  // @@protoc_insertion_point(field_list:pb.C2S_BatchDecomposeRune_183.QualityList)
  return qualitylist_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
C2S_BatchDecomposeRune_183::mutable_qualitylist() {
  // @@protoc_insertion_point(field_mutable_list:pb.C2S_BatchDecomposeRune_183.QualityList)
  return &qualitylist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_BatchDecomposeRuneByItemId_184::kItemIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_BatchDecomposeRuneByItemId_184::C2S_BatchDecomposeRuneByItemId_184()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_BatchDecomposeRuneByItemId_184)
}

void C2S_BatchDecomposeRuneByItemId_184::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_BatchDecomposeRuneByItemId_184::C2S_BatchDecomposeRuneByItemId_184(const C2S_BatchDecomposeRuneByItemId_184& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_BatchDecomposeRuneByItemId_184)
}

void C2S_BatchDecomposeRuneByItemId_184::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2S_BatchDecomposeRuneByItemId_184::~C2S_BatchDecomposeRuneByItemId_184() {
  // @@protoc_insertion_point(destructor:pb.C2S_BatchDecomposeRuneByItemId_184)
  SharedDtor();
}

void C2S_BatchDecomposeRuneByItemId_184::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_BatchDecomposeRuneByItemId_184::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_BatchDecomposeRuneByItemId_184::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_BatchDecomposeRuneByItemId_184_descriptor_;
}

const C2S_BatchDecomposeRuneByItemId_184& C2S_BatchDecomposeRuneByItemId_184::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_BatchDecomposeRuneByItemId_184* C2S_BatchDecomposeRuneByItemId_184::default_instance_ = NULL;

C2S_BatchDecomposeRuneByItemId_184* C2S_BatchDecomposeRuneByItemId_184::New(::google::protobuf::Arena* arena) const {
  C2S_BatchDecomposeRuneByItemId_184* n = new C2S_BatchDecomposeRuneByItemId_184;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_BatchDecomposeRuneByItemId_184::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_BatchDecomposeRuneByItemId_184)
  itemidlist_.Clear();
}

bool C2S_BatchDecomposeRuneByItemId_184::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_BatchDecomposeRuneByItemId_184)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ItemIdList = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_itemidlist())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_itemidlist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_BatchDecomposeRuneByItemId_184)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_BatchDecomposeRuneByItemId_184)
  return false;
#undef DO_
}

void C2S_BatchDecomposeRuneByItemId_184::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_BatchDecomposeRuneByItemId_184)
  // repeated uint32 ItemIdList = 1;
  if (this->itemidlist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_itemidlist_cached_byte_size_);
  }
  for (int i = 0; i < this->itemidlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->itemidlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_BatchDecomposeRuneByItemId_184)
}

::google::protobuf::uint8* C2S_BatchDecomposeRuneByItemId_184::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_BatchDecomposeRuneByItemId_184)
  // repeated uint32 ItemIdList = 1;
  if (this->itemidlist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _itemidlist_cached_byte_size_, target);
  }
  for (int i = 0; i < this->itemidlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->itemidlist(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_BatchDecomposeRuneByItemId_184)
  return target;
}

int C2S_BatchDecomposeRuneByItemId_184::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_BatchDecomposeRuneByItemId_184)
  int total_size = 0;

  // repeated uint32 ItemIdList = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->itemidlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->itemidlist(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _itemidlist_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_BatchDecomposeRuneByItemId_184::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_BatchDecomposeRuneByItemId_184)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_BatchDecomposeRuneByItemId_184* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_BatchDecomposeRuneByItemId_184>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_BatchDecomposeRuneByItemId_184)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_BatchDecomposeRuneByItemId_184)
    MergeFrom(*source);
  }
}

void C2S_BatchDecomposeRuneByItemId_184::MergeFrom(const C2S_BatchDecomposeRuneByItemId_184& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_BatchDecomposeRuneByItemId_184)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  itemidlist_.MergeFrom(from.itemidlist_);
}

void C2S_BatchDecomposeRuneByItemId_184::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_BatchDecomposeRuneByItemId_184)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_BatchDecomposeRuneByItemId_184::CopyFrom(const C2S_BatchDecomposeRuneByItemId_184& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_BatchDecomposeRuneByItemId_184)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_BatchDecomposeRuneByItemId_184::IsInitialized() const {

  return true;
}

void C2S_BatchDecomposeRuneByItemId_184::Swap(C2S_BatchDecomposeRuneByItemId_184* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_BatchDecomposeRuneByItemId_184::InternalSwap(C2S_BatchDecomposeRuneByItemId_184* other) {
  itemidlist_.UnsafeArenaSwap(&other->itemidlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_BatchDecomposeRuneByItemId_184::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_BatchDecomposeRuneByItemId_184_descriptor_;
  metadata.reflection = C2S_BatchDecomposeRuneByItemId_184_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_BatchDecomposeRuneByItemId_184

// repeated uint32 ItemIdList = 1;
int C2S_BatchDecomposeRuneByItemId_184::itemidlist_size() const {
  return itemidlist_.size();
}
void C2S_BatchDecomposeRuneByItemId_184::clear_itemidlist() {
  itemidlist_.Clear();
}
 ::google::protobuf::uint32 C2S_BatchDecomposeRuneByItemId_184::itemidlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.C2S_BatchDecomposeRuneByItemId_184.ItemIdList)
  return itemidlist_.Get(index);
}
 void C2S_BatchDecomposeRuneByItemId_184::set_itemidlist(int index, ::google::protobuf::uint32 value) {
  itemidlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.C2S_BatchDecomposeRuneByItemId_184.ItemIdList)
}
 void C2S_BatchDecomposeRuneByItemId_184::add_itemidlist(::google::protobuf::uint32 value) {
  itemidlist_.Add(value);
  // @@protoc_insertion_point(field_add:pb.C2S_BatchDecomposeRuneByItemId_184.ItemIdList)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
C2S_BatchDecomposeRuneByItemId_184::itemidlist() const {
  // @@protoc_insertion_point(field_list:pb.C2S_BatchDecomposeRuneByItemId_184.ItemIdList)
  return itemidlist_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
C2S_BatchDecomposeRuneByItemId_184::mutable_itemidlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.C2S_BatchDecomposeRuneByItemId_184.ItemIdList)
  return &itemidlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_GetAllWeapon_190::C2S_GetAllWeapon_190()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_GetAllWeapon_190)
}

void C2S_GetAllWeapon_190::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_GetAllWeapon_190::C2S_GetAllWeapon_190(const C2S_GetAllWeapon_190& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_GetAllWeapon_190)
}

void C2S_GetAllWeapon_190::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2S_GetAllWeapon_190::~C2S_GetAllWeapon_190() {
  // @@protoc_insertion_point(destructor:pb.C2S_GetAllWeapon_190)
  SharedDtor();
}

void C2S_GetAllWeapon_190::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_GetAllWeapon_190::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_GetAllWeapon_190::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_GetAllWeapon_190_descriptor_;
}

const C2S_GetAllWeapon_190& C2S_GetAllWeapon_190::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_GetAllWeapon_190* C2S_GetAllWeapon_190::default_instance_ = NULL;

C2S_GetAllWeapon_190* C2S_GetAllWeapon_190::New(::google::protobuf::Arena* arena) const {
  C2S_GetAllWeapon_190* n = new C2S_GetAllWeapon_190;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_GetAllWeapon_190::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_GetAllWeapon_190)
}

bool C2S_GetAllWeapon_190::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_GetAllWeapon_190)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_GetAllWeapon_190)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_GetAllWeapon_190)
  return false;
#undef DO_
}

void C2S_GetAllWeapon_190::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_GetAllWeapon_190)
  // @@protoc_insertion_point(serialize_end:pb.C2S_GetAllWeapon_190)
}

::google::protobuf::uint8* C2S_GetAllWeapon_190::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_GetAllWeapon_190)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_GetAllWeapon_190)
  return target;
}

int C2S_GetAllWeapon_190::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_GetAllWeapon_190)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_GetAllWeapon_190::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_GetAllWeapon_190)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_GetAllWeapon_190* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_GetAllWeapon_190>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_GetAllWeapon_190)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_GetAllWeapon_190)
    MergeFrom(*source);
  }
}

void C2S_GetAllWeapon_190::MergeFrom(const C2S_GetAllWeapon_190& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_GetAllWeapon_190)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2S_GetAllWeapon_190::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_GetAllWeapon_190)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_GetAllWeapon_190::CopyFrom(const C2S_GetAllWeapon_190& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_GetAllWeapon_190)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_GetAllWeapon_190::IsInitialized() const {

  return true;
}

void C2S_GetAllWeapon_190::Swap(C2S_GetAllWeapon_190* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_GetAllWeapon_190::InternalSwap(C2S_GetAllWeapon_190* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_GetAllWeapon_190::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_GetAllWeapon_190_descriptor_;
  metadata.reflection = C2S_GetAllWeapon_190_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_GetAllWeapon_190

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Weapon::kWeaponIdFieldNumber;
const int Weapon::kItemIdFieldNumber;
const int Weapon::kWeighFieldNumber;
const int Weapon::kRuneListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Weapon::Weapon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Weapon)
}

void Weapon::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Weapon::Weapon(const Weapon& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.Weapon)
}

void Weapon::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  weaponid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  itemid_ = 0u;
  weigh_ = 0u;
}

Weapon::~Weapon() {
  // @@protoc_insertion_point(destructor:pb.Weapon)
  SharedDtor();
}

void Weapon::SharedDtor() {
  weaponid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Weapon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Weapon::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Weapon_descriptor_;
}

const Weapon& Weapon::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

Weapon* Weapon::default_instance_ = NULL;

Weapon* Weapon::New(::google::protobuf::Arena* arena) const {
  Weapon* n = new Weapon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Weapon::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Weapon)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Weapon, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Weapon*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(itemid_, weigh_);
  weaponid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  runelist_.Clear();
}

bool Weapon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Weapon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string WeaponId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_weaponid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->weaponid().data(), this->weaponid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Weapon.WeaponId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ItemId;
        break;
      }

      // optional uint32 ItemId = 2;
      case 2: {
        if (tag == 16) {
         parse_ItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Weigh;
        break;
      }

      // optional uint32 Weigh = 3;
      case 3: {
        if (tag == 24) {
         parse_Weigh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weigh_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_RuneList;
        break;
      }

      // repeated .pb.Rune RuneList = 4;
      case 4: {
        if (tag == 34) {
         parse_RuneList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_RuneList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_runelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_RuneList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Weapon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Weapon)
  return false;
#undef DO_
}

void Weapon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Weapon)
  // optional string WeaponId = 1;
  if (this->weaponid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->weaponid().data(), this->weaponid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Weapon.WeaponId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->weaponid(), output);
  }

  // optional uint32 ItemId = 2;
  if (this->itemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->itemid(), output);
  }

  // optional uint32 Weigh = 3;
  if (this->weigh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->weigh(), output);
  }

  // repeated .pb.Rune RuneList = 4;
  for (unsigned int i = 0, n = this->runelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->runelist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.Weapon)
}

::google::protobuf::uint8* Weapon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.Weapon)
  // optional string WeaponId = 1;
  if (this->weaponid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->weaponid().data(), this->weaponid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Weapon.WeaponId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->weaponid(), target);
  }

  // optional uint32 ItemId = 2;
  if (this->itemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->itemid(), target);
  }

  // optional uint32 Weigh = 3;
  if (this->weigh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->weigh(), target);
  }

  // repeated .pb.Rune RuneList = 4;
  for (unsigned int i = 0, n = this->runelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->runelist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.Weapon)
  return target;
}

int Weapon::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Weapon)
  int total_size = 0;

  // optional string WeaponId = 1;
  if (this->weaponid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->weaponid());
  }

  // optional uint32 ItemId = 2;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemid());
  }

  // optional uint32 Weigh = 3;
  if (this->weigh() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weigh());
  }

  // repeated .pb.Rune RuneList = 4;
  total_size += 1 * this->runelist_size();
  for (int i = 0; i < this->runelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->runelist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Weapon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Weapon)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Weapon* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Weapon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Weapon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Weapon)
    MergeFrom(*source);
  }
}

void Weapon::MergeFrom(const Weapon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Weapon)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  runelist_.MergeFrom(from.runelist_);
  if (from.weaponid().size() > 0) {

    weaponid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.weaponid_);
  }
  if (from.itemid() != 0) {
    set_itemid(from.itemid());
  }
  if (from.weigh() != 0) {
    set_weigh(from.weigh());
  }
}

void Weapon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Weapon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Weapon::CopyFrom(const Weapon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Weapon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Weapon::IsInitialized() const {

  return true;
}

void Weapon::Swap(Weapon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Weapon::InternalSwap(Weapon* other) {
  weaponid_.Swap(&other->weaponid_);
  std::swap(itemid_, other->itemid_);
  std::swap(weigh_, other->weigh_);
  runelist_.UnsafeArenaSwap(&other->runelist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Weapon::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Weapon_descriptor_;
  metadata.reflection = Weapon_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Weapon

// optional string WeaponId = 1;
void Weapon::clear_weaponid() {
  weaponid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Weapon::weaponid() const {
  // @@protoc_insertion_point(field_get:pb.Weapon.WeaponId)
  return weaponid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Weapon::set_weaponid(const ::std::string& value) {
  
  weaponid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Weapon.WeaponId)
}
 void Weapon::set_weaponid(const char* value) {
  
  weaponid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Weapon.WeaponId)
}
 void Weapon::set_weaponid(const char* value, size_t size) {
  
  weaponid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Weapon.WeaponId)
}
 ::std::string* Weapon::mutable_weaponid() {
  
  // @@protoc_insertion_point(field_mutable:pb.Weapon.WeaponId)
  return weaponid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Weapon::release_weaponid() {
  // @@protoc_insertion_point(field_release:pb.Weapon.WeaponId)
  
  return weaponid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Weapon::set_allocated_weaponid(::std::string* weaponid) {
  if (weaponid != NULL) {
    
  } else {
    
  }
  weaponid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weaponid);
  // @@protoc_insertion_point(field_set_allocated:pb.Weapon.WeaponId)
}

// optional uint32 ItemId = 2;
void Weapon::clear_itemid() {
  itemid_ = 0u;
}
 ::google::protobuf::uint32 Weapon::itemid() const {
  // @@protoc_insertion_point(field_get:pb.Weapon.ItemId)
  return itemid_;
}
 void Weapon::set_itemid(::google::protobuf::uint32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:pb.Weapon.ItemId)
}

// optional uint32 Weigh = 3;
void Weapon::clear_weigh() {
  weigh_ = 0u;
}
 ::google::protobuf::uint32 Weapon::weigh() const {
  // @@protoc_insertion_point(field_get:pb.Weapon.Weigh)
  return weigh_;
}
 void Weapon::set_weigh(::google::protobuf::uint32 value) {
  
  weigh_ = value;
  // @@protoc_insertion_point(field_set:pb.Weapon.Weigh)
}

// repeated .pb.Rune RuneList = 4;
int Weapon::runelist_size() const {
  return runelist_.size();
}
void Weapon::clear_runelist() {
  runelist_.Clear();
}
const ::pb::Rune& Weapon::runelist(int index) const {
  // @@protoc_insertion_point(field_get:pb.Weapon.RuneList)
  return runelist_.Get(index);
}
::pb::Rune* Weapon::mutable_runelist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.Weapon.RuneList)
  return runelist_.Mutable(index);
}
::pb::Rune* Weapon::add_runelist() {
  // @@protoc_insertion_point(field_add:pb.Weapon.RuneList)
  return runelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::Rune >*
Weapon::mutable_runelist() {
  // @@protoc_insertion_point(field_mutable_list:pb.Weapon.RuneList)
  return &runelist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::Rune >&
Weapon::runelist() const {
  // @@protoc_insertion_point(field_list:pb.Weapon.RuneList)
  return runelist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_GetAllWeapon_190::kWeaponListFieldNumber;
const int S2C_GetAllWeapon_190::kWearWeaponIdFieldNumber;
const int S2C_GetAllWeapon_190::kCapacityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_GetAllWeapon_190::S2C_GetAllWeapon_190()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_GetAllWeapon_190)
}

void S2C_GetAllWeapon_190::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2C_GetAllWeapon_190::S2C_GetAllWeapon_190(const S2C_GetAllWeapon_190& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2C_GetAllWeapon_190)
}

void S2C_GetAllWeapon_190::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  wearweaponid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  capacity_ = 0u;
}

S2C_GetAllWeapon_190::~S2C_GetAllWeapon_190() {
  // @@protoc_insertion_point(destructor:pb.S2C_GetAllWeapon_190)
  SharedDtor();
}

void S2C_GetAllWeapon_190::SharedDtor() {
  wearweaponid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void S2C_GetAllWeapon_190::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_GetAllWeapon_190::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2C_GetAllWeapon_190_descriptor_;
}

const S2C_GetAllWeapon_190& S2C_GetAllWeapon_190::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2C_GetAllWeapon_190* S2C_GetAllWeapon_190::default_instance_ = NULL;

S2C_GetAllWeapon_190* S2C_GetAllWeapon_190::New(::google::protobuf::Arena* arena) const {
  S2C_GetAllWeapon_190* n = new S2C_GetAllWeapon_190;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_GetAllWeapon_190::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_GetAllWeapon_190)
  wearweaponid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  capacity_ = 0u;
  weaponlist_.Clear();
}

bool S2C_GetAllWeapon_190::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_GetAllWeapon_190)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.Weapon WeaponList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_WeaponList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_weaponlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_WeaponList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_WearWeaponId;
        break;
      }

      // optional string WearWeaponId = 2;
      case 2: {
        if (tag == 18) {
         parse_WearWeaponId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wearweaponid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wearweaponid().data(), this->wearweaponid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2C_GetAllWeapon_190.WearWeaponId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Capacity;
        break;
      }

      // optional uint32 Capacity = 3;
      case 3: {
        if (tag == 24) {
         parse_Capacity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &capacity_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_GetAllWeapon_190)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_GetAllWeapon_190)
  return false;
#undef DO_
}

void S2C_GetAllWeapon_190::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_GetAllWeapon_190)
  // repeated .pb.Weapon WeaponList = 1;
  for (unsigned int i = 0, n = this->weaponlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->weaponlist(i), output);
  }

  // optional string WearWeaponId = 2;
  if (this->wearweaponid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wearweaponid().data(), this->wearweaponid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2C_GetAllWeapon_190.WearWeaponId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->wearweaponid(), output);
  }

  // optional uint32 Capacity = 3;
  if (this->capacity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->capacity(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_GetAllWeapon_190)
}

::google::protobuf::uint8* S2C_GetAllWeapon_190::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_GetAllWeapon_190)
  // repeated .pb.Weapon WeaponList = 1;
  for (unsigned int i = 0, n = this->weaponlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->weaponlist(i), false, target);
  }

  // optional string WearWeaponId = 2;
  if (this->wearweaponid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wearweaponid().data(), this->wearweaponid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2C_GetAllWeapon_190.WearWeaponId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->wearweaponid(), target);
  }

  // optional uint32 Capacity = 3;
  if (this->capacity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->capacity(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_GetAllWeapon_190)
  return target;
}

int S2C_GetAllWeapon_190::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_GetAllWeapon_190)
  int total_size = 0;

  // optional string WearWeaponId = 2;
  if (this->wearweaponid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wearweaponid());
  }

  // optional uint32 Capacity = 3;
  if (this->capacity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->capacity());
  }

  // repeated .pb.Weapon WeaponList = 1;
  total_size += 1 * this->weaponlist_size();
  for (int i = 0; i < this->weaponlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->weaponlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_GetAllWeapon_190::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_GetAllWeapon_190)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2C_GetAllWeapon_190* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_GetAllWeapon_190>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_GetAllWeapon_190)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_GetAllWeapon_190)
    MergeFrom(*source);
  }
}

void S2C_GetAllWeapon_190::MergeFrom(const S2C_GetAllWeapon_190& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_GetAllWeapon_190)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  weaponlist_.MergeFrom(from.weaponlist_);
  if (from.wearweaponid().size() > 0) {

    wearweaponid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wearweaponid_);
  }
  if (from.capacity() != 0) {
    set_capacity(from.capacity());
  }
}

void S2C_GetAllWeapon_190::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_GetAllWeapon_190)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_GetAllWeapon_190::CopyFrom(const S2C_GetAllWeapon_190& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_GetAllWeapon_190)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_GetAllWeapon_190::IsInitialized() const {

  return true;
}

void S2C_GetAllWeapon_190::Swap(S2C_GetAllWeapon_190* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_GetAllWeapon_190::InternalSwap(S2C_GetAllWeapon_190* other) {
  weaponlist_.UnsafeArenaSwap(&other->weaponlist_);
  wearweaponid_.Swap(&other->wearweaponid_);
  std::swap(capacity_, other->capacity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_GetAllWeapon_190::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2C_GetAllWeapon_190_descriptor_;
  metadata.reflection = S2C_GetAllWeapon_190_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_GetAllWeapon_190

// repeated .pb.Weapon WeaponList = 1;
int S2C_GetAllWeapon_190::weaponlist_size() const {
  return weaponlist_.size();
}
void S2C_GetAllWeapon_190::clear_weaponlist() {
  weaponlist_.Clear();
}
const ::pb::Weapon& S2C_GetAllWeapon_190::weaponlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2C_GetAllWeapon_190.WeaponList)
  return weaponlist_.Get(index);
}
::pb::Weapon* S2C_GetAllWeapon_190::mutable_weaponlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2C_GetAllWeapon_190.WeaponList)
  return weaponlist_.Mutable(index);
}
::pb::Weapon* S2C_GetAllWeapon_190::add_weaponlist() {
  // @@protoc_insertion_point(field_add:pb.S2C_GetAllWeapon_190.WeaponList)
  return weaponlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::Weapon >*
S2C_GetAllWeapon_190::mutable_weaponlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2C_GetAllWeapon_190.WeaponList)
  return &weaponlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::Weapon >&
S2C_GetAllWeapon_190::weaponlist() const {
  // @@protoc_insertion_point(field_list:pb.S2C_GetAllWeapon_190.WeaponList)
  return weaponlist_;
}

// optional string WearWeaponId = 2;
void S2C_GetAllWeapon_190::clear_wearweaponid() {
  wearweaponid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2C_GetAllWeapon_190::wearweaponid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_GetAllWeapon_190.WearWeaponId)
  return wearweaponid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2C_GetAllWeapon_190::set_wearweaponid(const ::std::string& value) {
  
  wearweaponid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2C_GetAllWeapon_190.WearWeaponId)
}
 void S2C_GetAllWeapon_190::set_wearweaponid(const char* value) {
  
  wearweaponid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2C_GetAllWeapon_190.WearWeaponId)
}
 void S2C_GetAllWeapon_190::set_wearweaponid(const char* value, size_t size) {
  
  wearweaponid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2C_GetAllWeapon_190.WearWeaponId)
}
 ::std::string* S2C_GetAllWeapon_190::mutable_wearweaponid() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2C_GetAllWeapon_190.WearWeaponId)
  return wearweaponid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2C_GetAllWeapon_190::release_wearweaponid() {
  // @@protoc_insertion_point(field_release:pb.S2C_GetAllWeapon_190.WearWeaponId)
  
  return wearweaponid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2C_GetAllWeapon_190::set_allocated_wearweaponid(::std::string* wearweaponid) {
  if (wearweaponid != NULL) {
    
  } else {
    
  }
  wearweaponid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wearweaponid);
  // @@protoc_insertion_point(field_set_allocated:pb.S2C_GetAllWeapon_190.WearWeaponId)
}

// optional uint32 Capacity = 3;
void S2C_GetAllWeapon_190::clear_capacity() {
  capacity_ = 0u;
}
 ::google::protobuf::uint32 S2C_GetAllWeapon_190::capacity() const {
  // @@protoc_insertion_point(field_get:pb.S2C_GetAllWeapon_190.Capacity)
  return capacity_;
}
 void S2C_GetAllWeapon_190::set_capacity(::google::protobuf::uint32 value) {
  
  capacity_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_GetAllWeapon_190.Capacity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_ActivateWeapon_191::kWeaponIdFieldNumber;
const int C2S_ActivateWeapon_191::kOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_ActivateWeapon_191::C2S_ActivateWeapon_191()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_ActivateWeapon_191)
}

void C2S_ActivateWeapon_191::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_ActivateWeapon_191::C2S_ActivateWeapon_191(const C2S_ActivateWeapon_191& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_ActivateWeapon_191)
}

void C2S_ActivateWeapon_191::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  weaponid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_ = 0u;
}

C2S_ActivateWeapon_191::~C2S_ActivateWeapon_191() {
  // @@protoc_insertion_point(destructor:pb.C2S_ActivateWeapon_191)
  SharedDtor();
}

void C2S_ActivateWeapon_191::SharedDtor() {
  weaponid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2S_ActivateWeapon_191::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_ActivateWeapon_191::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_ActivateWeapon_191_descriptor_;
}

const C2S_ActivateWeapon_191& C2S_ActivateWeapon_191::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_ActivateWeapon_191* C2S_ActivateWeapon_191::default_instance_ = NULL;

C2S_ActivateWeapon_191* C2S_ActivateWeapon_191::New(::google::protobuf::Arena* arena) const {
  C2S_ActivateWeapon_191* n = new C2S_ActivateWeapon_191;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_ActivateWeapon_191::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_ActivateWeapon_191)
  weaponid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_ = 0u;
}

bool C2S_ActivateWeapon_191::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_ActivateWeapon_191)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string WeaponId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_weaponid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->weaponid().data(), this->weaponid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_ActivateWeapon_191.WeaponId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Op;
        break;
      }

      // optional uint32 Op = 2;
      case 2: {
        if (tag == 16) {
         parse_Op:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &op_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_ActivateWeapon_191)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_ActivateWeapon_191)
  return false;
#undef DO_
}

void C2S_ActivateWeapon_191::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_ActivateWeapon_191)
  // optional string WeaponId = 1;
  if (this->weaponid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->weaponid().data(), this->weaponid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_ActivateWeapon_191.WeaponId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->weaponid(), output);
  }

  // optional uint32 Op = 2;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->op(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_ActivateWeapon_191)
}

::google::protobuf::uint8* C2S_ActivateWeapon_191::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_ActivateWeapon_191)
  // optional string WeaponId = 1;
  if (this->weaponid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->weaponid().data(), this->weaponid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_ActivateWeapon_191.WeaponId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->weaponid(), target);
  }

  // optional uint32 Op = 2;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->op(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_ActivateWeapon_191)
  return target;
}

int C2S_ActivateWeapon_191::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_ActivateWeapon_191)
  int total_size = 0;

  // optional string WeaponId = 1;
  if (this->weaponid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->weaponid());
  }

  // optional uint32 Op = 2;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->op());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_ActivateWeapon_191::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_ActivateWeapon_191)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_ActivateWeapon_191* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_ActivateWeapon_191>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_ActivateWeapon_191)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_ActivateWeapon_191)
    MergeFrom(*source);
  }
}

void C2S_ActivateWeapon_191::MergeFrom(const C2S_ActivateWeapon_191& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_ActivateWeapon_191)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.weaponid().size() > 0) {

    weaponid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.weaponid_);
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
}

void C2S_ActivateWeapon_191::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_ActivateWeapon_191)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_ActivateWeapon_191::CopyFrom(const C2S_ActivateWeapon_191& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_ActivateWeapon_191)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_ActivateWeapon_191::IsInitialized() const {

  return true;
}

void C2S_ActivateWeapon_191::Swap(C2S_ActivateWeapon_191* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_ActivateWeapon_191::InternalSwap(C2S_ActivateWeapon_191* other) {
  weaponid_.Swap(&other->weaponid_);
  std::swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_ActivateWeapon_191::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_ActivateWeapon_191_descriptor_;
  metadata.reflection = C2S_ActivateWeapon_191_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_ActivateWeapon_191

// optional string WeaponId = 1;
void C2S_ActivateWeapon_191::clear_weaponid() {
  weaponid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2S_ActivateWeapon_191::weaponid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_ActivateWeapon_191.WeaponId)
  return weaponid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_ActivateWeapon_191::set_weaponid(const ::std::string& value) {
  
  weaponid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_ActivateWeapon_191.WeaponId)
}
 void C2S_ActivateWeapon_191::set_weaponid(const char* value) {
  
  weaponid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_ActivateWeapon_191.WeaponId)
}
 void C2S_ActivateWeapon_191::set_weaponid(const char* value, size_t size) {
  
  weaponid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_ActivateWeapon_191.WeaponId)
}
 ::std::string* C2S_ActivateWeapon_191::mutable_weaponid() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_ActivateWeapon_191.WeaponId)
  return weaponid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2S_ActivateWeapon_191::release_weaponid() {
  // @@protoc_insertion_point(field_release:pb.C2S_ActivateWeapon_191.WeaponId)
  
  return weaponid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_ActivateWeapon_191::set_allocated_weaponid(::std::string* weaponid) {
  if (weaponid != NULL) {
    
  } else {
    
  }
  weaponid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weaponid);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_ActivateWeapon_191.WeaponId)
}

// optional uint32 Op = 2;
void C2S_ActivateWeapon_191::clear_op() {
  op_ = 0u;
}
 ::google::protobuf::uint32 C2S_ActivateWeapon_191::op() const {
  // @@protoc_insertion_point(field_get:pb.C2S_ActivateWeapon_191.Op)
  return op_;
}
 void C2S_ActivateWeapon_191::set_op(::google::protobuf::uint32 value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:pb.C2S_ActivateWeapon_191.Op)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_ActivateWeapon_191::kRidFieldNumber;
const int S2C_ActivateWeapon_191::kWeaponItemIdFieldNumber;
const int S2C_ActivateWeapon_191::kRuneListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_ActivateWeapon_191::S2C_ActivateWeapon_191()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2C_ActivateWeapon_191)
}

void S2C_ActivateWeapon_191::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2C_ActivateWeapon_191::S2C_ActivateWeapon_191(const S2C_ActivateWeapon_191& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2C_ActivateWeapon_191)
}

void S2C_ActivateWeapon_191::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
  weaponitemid_ = 0u;
}

S2C_ActivateWeapon_191::~S2C_ActivateWeapon_191() {
  // @@protoc_insertion_point(destructor:pb.S2C_ActivateWeapon_191)
  SharedDtor();
}

void S2C_ActivateWeapon_191::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2C_ActivateWeapon_191::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_ActivateWeapon_191::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2C_ActivateWeapon_191_descriptor_;
}

const S2C_ActivateWeapon_191& S2C_ActivateWeapon_191::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2C_ActivateWeapon_191* S2C_ActivateWeapon_191::default_instance_ = NULL;

S2C_ActivateWeapon_191* S2C_ActivateWeapon_191::New(::google::protobuf::Arena* arena) const {
  S2C_ActivateWeapon_191* n = new S2C_ActivateWeapon_191;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_ActivateWeapon_191::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2C_ActivateWeapon_191)
  rid_ = GOOGLE_ULONGLONG(0);
  weaponitemid_ = 0u;
  runelist_.Clear();
}

bool S2C_ActivateWeapon_191::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2C_ActivateWeapon_191)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_WeaponItemId;
        break;
      }

      // optional uint32 WeaponItemId = 2;
      case 2: {
        if (tag == 16) {
         parse_WeaponItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weaponitemid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RuneList;
        break;
      }

      // repeated .pb.Rune RuneList = 3;
      case 3: {
        if (tag == 26) {
         parse_RuneList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_RuneList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_runelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_RuneList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2C_ActivateWeapon_191)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2C_ActivateWeapon_191)
  return false;
#undef DO_
}

void S2C_ActivateWeapon_191::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2C_ActivateWeapon_191)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // optional uint32 WeaponItemId = 2;
  if (this->weaponitemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->weaponitemid(), output);
  }

  // repeated .pb.Rune RuneList = 3;
  for (unsigned int i = 0, n = this->runelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->runelist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2C_ActivateWeapon_191)
}

::google::protobuf::uint8* S2C_ActivateWeapon_191::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2C_ActivateWeapon_191)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // optional uint32 WeaponItemId = 2;
  if (this->weaponitemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->weaponitemid(), target);
  }

  // repeated .pb.Rune RuneList = 3;
  for (unsigned int i = 0, n = this->runelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->runelist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2C_ActivateWeapon_191)
  return target;
}

int S2C_ActivateWeapon_191::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2C_ActivateWeapon_191)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  // optional uint32 WeaponItemId = 2;
  if (this->weaponitemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weaponitemid());
  }

  // repeated .pb.Rune RuneList = 3;
  total_size += 1 * this->runelist_size();
  for (int i = 0; i < this->runelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->runelist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_ActivateWeapon_191::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2C_ActivateWeapon_191)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2C_ActivateWeapon_191* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_ActivateWeapon_191>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2C_ActivateWeapon_191)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2C_ActivateWeapon_191)
    MergeFrom(*source);
  }
}

void S2C_ActivateWeapon_191::MergeFrom(const S2C_ActivateWeapon_191& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2C_ActivateWeapon_191)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  runelist_.MergeFrom(from.runelist_);
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.weaponitemid() != 0) {
    set_weaponitemid(from.weaponitemid());
  }
}

void S2C_ActivateWeapon_191::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2C_ActivateWeapon_191)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_ActivateWeapon_191::CopyFrom(const S2C_ActivateWeapon_191& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2C_ActivateWeapon_191)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_ActivateWeapon_191::IsInitialized() const {

  return true;
}

void S2C_ActivateWeapon_191::Swap(S2C_ActivateWeapon_191* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_ActivateWeapon_191::InternalSwap(S2C_ActivateWeapon_191* other) {
  std::swap(rid_, other->rid_);
  std::swap(weaponitemid_, other->weaponitemid_);
  runelist_.UnsafeArenaSwap(&other->runelist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_ActivateWeapon_191::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2C_ActivateWeapon_191_descriptor_;
  metadata.reflection = S2C_ActivateWeapon_191_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_ActivateWeapon_191

// optional uint64 Rid = 1;
void S2C_ActivateWeapon_191::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2C_ActivateWeapon_191::rid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_ActivateWeapon_191.Rid)
  return rid_;
}
 void S2C_ActivateWeapon_191::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_ActivateWeapon_191.Rid)
}

// optional uint32 WeaponItemId = 2;
void S2C_ActivateWeapon_191::clear_weaponitemid() {
  weaponitemid_ = 0u;
}
 ::google::protobuf::uint32 S2C_ActivateWeapon_191::weaponitemid() const {
  // @@protoc_insertion_point(field_get:pb.S2C_ActivateWeapon_191.WeaponItemId)
  return weaponitemid_;
}
 void S2C_ActivateWeapon_191::set_weaponitemid(::google::protobuf::uint32 value) {
  
  weaponitemid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2C_ActivateWeapon_191.WeaponItemId)
}

// repeated .pb.Rune RuneList = 3;
int S2C_ActivateWeapon_191::runelist_size() const {
  return runelist_.size();
}
void S2C_ActivateWeapon_191::clear_runelist() {
  runelist_.Clear();
}
const ::pb::Rune& S2C_ActivateWeapon_191::runelist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2C_ActivateWeapon_191.RuneList)
  return runelist_.Get(index);
}
::pb::Rune* S2C_ActivateWeapon_191::mutable_runelist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2C_ActivateWeapon_191.RuneList)
  return runelist_.Mutable(index);
}
::pb::Rune* S2C_ActivateWeapon_191::add_runelist() {
  // @@protoc_insertion_point(field_add:pb.S2C_ActivateWeapon_191.RuneList)
  return runelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::Rune >*
S2C_ActivateWeapon_191::mutable_runelist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2C_ActivateWeapon_191.RuneList)
  return &runelist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::Rune >&
S2C_ActivateWeapon_191::runelist() const {
  // @@protoc_insertion_point(field_list:pb.S2C_ActivateWeapon_191.RuneList)
  return runelist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_SellWeapon_192::kWeaponIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_SellWeapon_192::C2S_SellWeapon_192()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_SellWeapon_192)
}

void C2S_SellWeapon_192::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_SellWeapon_192::C2S_SellWeapon_192(const C2S_SellWeapon_192& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_SellWeapon_192)
}

void C2S_SellWeapon_192::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

C2S_SellWeapon_192::~C2S_SellWeapon_192() {
  // @@protoc_insertion_point(destructor:pb.C2S_SellWeapon_192)
  SharedDtor();
}

void C2S_SellWeapon_192::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2S_SellWeapon_192::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_SellWeapon_192::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_SellWeapon_192_descriptor_;
}

const C2S_SellWeapon_192& C2S_SellWeapon_192::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_SellWeapon_192* C2S_SellWeapon_192::default_instance_ = NULL;

C2S_SellWeapon_192* C2S_SellWeapon_192::New(::google::protobuf::Arena* arena) const {
  C2S_SellWeapon_192* n = new C2S_SellWeapon_192;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_SellWeapon_192::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_SellWeapon_192)
  weaponid_.Clear();
}

bool C2S_SellWeapon_192::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_SellWeapon_192)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string WeaponId = 1;
      case 1: {
        if (tag == 10) {
         parse_WeaponId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_weaponid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->weaponid(this->weaponid_size() - 1).data(),
            this->weaponid(this->weaponid_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_SellWeapon_192.WeaponId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_WeaponId;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_SellWeapon_192)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_SellWeapon_192)
  return false;
#undef DO_
}

void C2S_SellWeapon_192::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_SellWeapon_192)
  // repeated string WeaponId = 1;
  for (int i = 0; i < this->weaponid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->weaponid(i).data(), this->weaponid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_SellWeapon_192.WeaponId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->weaponid(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_SellWeapon_192)
}

::google::protobuf::uint8* C2S_SellWeapon_192::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_SellWeapon_192)
  // repeated string WeaponId = 1;
  for (int i = 0; i < this->weaponid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->weaponid(i).data(), this->weaponid(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_SellWeapon_192.WeaponId");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->weaponid(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_SellWeapon_192)
  return target;
}

int C2S_SellWeapon_192::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_SellWeapon_192)
  int total_size = 0;

  // repeated string WeaponId = 1;
  total_size += 1 * this->weaponid_size();
  for (int i = 0; i < this->weaponid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->weaponid(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_SellWeapon_192::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_SellWeapon_192)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_SellWeapon_192* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_SellWeapon_192>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_SellWeapon_192)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_SellWeapon_192)
    MergeFrom(*source);
  }
}

void C2S_SellWeapon_192::MergeFrom(const C2S_SellWeapon_192& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_SellWeapon_192)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  weaponid_.MergeFrom(from.weaponid_);
}

void C2S_SellWeapon_192::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_SellWeapon_192)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_SellWeapon_192::CopyFrom(const C2S_SellWeapon_192& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_SellWeapon_192)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_SellWeapon_192::IsInitialized() const {

  return true;
}

void C2S_SellWeapon_192::Swap(C2S_SellWeapon_192* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_SellWeapon_192::InternalSwap(C2S_SellWeapon_192* other) {
  weaponid_.UnsafeArenaSwap(&other->weaponid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_SellWeapon_192::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_SellWeapon_192_descriptor_;
  metadata.reflection = C2S_SellWeapon_192_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_SellWeapon_192

// repeated string WeaponId = 1;
int C2S_SellWeapon_192::weaponid_size() const {
  return weaponid_.size();
}
void C2S_SellWeapon_192::clear_weaponid() {
  weaponid_.Clear();
}
 const ::std::string& C2S_SellWeapon_192::weaponid(int index) const {
  // @@protoc_insertion_point(field_get:pb.C2S_SellWeapon_192.WeaponId)
  return weaponid_.Get(index);
}
 ::std::string* C2S_SellWeapon_192::mutable_weaponid(int index) {
  // @@protoc_insertion_point(field_mutable:pb.C2S_SellWeapon_192.WeaponId)
  return weaponid_.Mutable(index);
}
 void C2S_SellWeapon_192::set_weaponid(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pb.C2S_SellWeapon_192.WeaponId)
  weaponid_.Mutable(index)->assign(value);
}
 void C2S_SellWeapon_192::set_weaponid(int index, const char* value) {
  weaponid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.C2S_SellWeapon_192.WeaponId)
}
 void C2S_SellWeapon_192::set_weaponid(int index, const char* value, size_t size) {
  weaponid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_SellWeapon_192.WeaponId)
}
 ::std::string* C2S_SellWeapon_192::add_weaponid() {
  // @@protoc_insertion_point(field_add_mutable:pb.C2S_SellWeapon_192.WeaponId)
  return weaponid_.Add();
}
 void C2S_SellWeapon_192::add_weaponid(const ::std::string& value) {
  weaponid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pb.C2S_SellWeapon_192.WeaponId)
}
 void C2S_SellWeapon_192::add_weaponid(const char* value) {
  weaponid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pb.C2S_SellWeapon_192.WeaponId)
}
 void C2S_SellWeapon_192::add_weaponid(const char* value, size_t size) {
  weaponid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pb.C2S_SellWeapon_192.WeaponId)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
C2S_SellWeapon_192::weaponid() const {
  // @@protoc_insertion_point(field_list:pb.C2S_SellWeapon_192.WeaponId)
  return weaponid_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
C2S_SellWeapon_192::mutable_weaponid() {
  // @@protoc_insertion_point(field_mutable_list:pb.C2S_SellWeapon_192.WeaponId)
  return &weaponid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_UpdateRune_193::kWeaponIdFieldNumber;
const int C2S_UpdateRune_193::kRuneListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_UpdateRune_193::C2S_UpdateRune_193()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2S_UpdateRune_193)
}

void C2S_UpdateRune_193::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2S_UpdateRune_193::C2S_UpdateRune_193(const C2S_UpdateRune_193& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2S_UpdateRune_193)
}

void C2S_UpdateRune_193::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  weaponid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2S_UpdateRune_193::~C2S_UpdateRune_193() {
  // @@protoc_insertion_point(destructor:pb.C2S_UpdateRune_193)
  SharedDtor();
}

void C2S_UpdateRune_193::SharedDtor() {
  weaponid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2S_UpdateRune_193::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_UpdateRune_193::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2S_UpdateRune_193_descriptor_;
}

const C2S_UpdateRune_193& C2S_UpdateRune_193::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2S_UpdateRune_193* C2S_UpdateRune_193::default_instance_ = NULL;

C2S_UpdateRune_193* C2S_UpdateRune_193::New(::google::protobuf::Arena* arena) const {
  C2S_UpdateRune_193* n = new C2S_UpdateRune_193;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_UpdateRune_193::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2S_UpdateRune_193)
  weaponid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runelist_.Clear();
}

bool C2S_UpdateRune_193::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2S_UpdateRune_193)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string WeaponId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_weaponid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->weaponid().data(), this->weaponid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2S_UpdateRune_193.WeaponId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RuneList;
        break;
      }

      // repeated .pb.Rune RuneList = 2;
      case 2: {
        if (tag == 18) {
         parse_RuneList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_RuneList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_runelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_RuneList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2S_UpdateRune_193)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2S_UpdateRune_193)
  return false;
#undef DO_
}

void C2S_UpdateRune_193::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2S_UpdateRune_193)
  // optional string WeaponId = 1;
  if (this->weaponid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->weaponid().data(), this->weaponid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_UpdateRune_193.WeaponId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->weaponid(), output);
  }

  // repeated .pb.Rune RuneList = 2;
  for (unsigned int i = 0, n = this->runelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->runelist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2S_UpdateRune_193)
}

::google::protobuf::uint8* C2S_UpdateRune_193::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2S_UpdateRune_193)
  // optional string WeaponId = 1;
  if (this->weaponid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->weaponid().data(), this->weaponid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2S_UpdateRune_193.WeaponId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->weaponid(), target);
  }

  // repeated .pb.Rune RuneList = 2;
  for (unsigned int i = 0, n = this->runelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->runelist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2S_UpdateRune_193)
  return target;
}

int C2S_UpdateRune_193::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2S_UpdateRune_193)
  int total_size = 0;

  // optional string WeaponId = 1;
  if (this->weaponid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->weaponid());
  }

  // repeated .pb.Rune RuneList = 2;
  total_size += 1 * this->runelist_size();
  for (int i = 0; i < this->runelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->runelist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_UpdateRune_193::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2S_UpdateRune_193)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2S_UpdateRune_193* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_UpdateRune_193>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2S_UpdateRune_193)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2S_UpdateRune_193)
    MergeFrom(*source);
  }
}

void C2S_UpdateRune_193::MergeFrom(const C2S_UpdateRune_193& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2S_UpdateRune_193)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  runelist_.MergeFrom(from.runelist_);
  if (from.weaponid().size() > 0) {

    weaponid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.weaponid_);
  }
}

void C2S_UpdateRune_193::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2S_UpdateRune_193)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_UpdateRune_193::CopyFrom(const C2S_UpdateRune_193& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2S_UpdateRune_193)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_UpdateRune_193::IsInitialized() const {

  return true;
}

void C2S_UpdateRune_193::Swap(C2S_UpdateRune_193* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_UpdateRune_193::InternalSwap(C2S_UpdateRune_193* other) {
  weaponid_.Swap(&other->weaponid_);
  runelist_.UnsafeArenaSwap(&other->runelist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_UpdateRune_193::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2S_UpdateRune_193_descriptor_;
  metadata.reflection = C2S_UpdateRune_193_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_UpdateRune_193

// optional string WeaponId = 1;
void C2S_UpdateRune_193::clear_weaponid() {
  weaponid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2S_UpdateRune_193::weaponid() const {
  // @@protoc_insertion_point(field_get:pb.C2S_UpdateRune_193.WeaponId)
  return weaponid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_UpdateRune_193::set_weaponid(const ::std::string& value) {
  
  weaponid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2S_UpdateRune_193.WeaponId)
}
 void C2S_UpdateRune_193::set_weaponid(const char* value) {
  
  weaponid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2S_UpdateRune_193.WeaponId)
}
 void C2S_UpdateRune_193::set_weaponid(const char* value, size_t size) {
  
  weaponid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2S_UpdateRune_193.WeaponId)
}
 ::std::string* C2S_UpdateRune_193::mutable_weaponid() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2S_UpdateRune_193.WeaponId)
  return weaponid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2S_UpdateRune_193::release_weaponid() {
  // @@protoc_insertion_point(field_release:pb.C2S_UpdateRune_193.WeaponId)
  
  return weaponid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2S_UpdateRune_193::set_allocated_weaponid(::std::string* weaponid) {
  if (weaponid != NULL) {
    
  } else {
    
  }
  weaponid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weaponid);
  // @@protoc_insertion_point(field_set_allocated:pb.C2S_UpdateRune_193.WeaponId)
}

// repeated .pb.Rune RuneList = 2;
int C2S_UpdateRune_193::runelist_size() const {
  return runelist_.size();
}
void C2S_UpdateRune_193::clear_runelist() {
  runelist_.Clear();
}
const ::pb::Rune& C2S_UpdateRune_193::runelist(int index) const {
  // @@protoc_insertion_point(field_get:pb.C2S_UpdateRune_193.RuneList)
  return runelist_.Get(index);
}
::pb::Rune* C2S_UpdateRune_193::mutable_runelist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.C2S_UpdateRune_193.RuneList)
  return runelist_.Mutable(index);
}
::pb::Rune* C2S_UpdateRune_193::add_runelist() {
  // @@protoc_insertion_point(field_add:pb.C2S_UpdateRune_193.RuneList)
  return runelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::Rune >*
C2S_UpdateRune_193::mutable_runelist() {
  // @@protoc_insertion_point(field_mutable_list:pb.C2S_UpdateRune_193.RuneList)
  return &runelist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::Rune >&
C2S_UpdateRune_193::runelist() const {
  // @@protoc_insertion_point(field_list:pb.C2S_UpdateRune_193.RuneList)
  return runelist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SFrameCommand_2000::kDataFieldNumber;
const int C2SFrameCommand_2000::kFrameIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SFrameCommand_2000::C2SFrameCommand_2000()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SFrameCommand_2000)
}

void C2SFrameCommand_2000::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SFrameCommand_2000::C2SFrameCommand_2000(const C2SFrameCommand_2000& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SFrameCommand_2000)
}

void C2SFrameCommand_2000::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  data_ = 0u;
  frameidx_ = 0u;
}

C2SFrameCommand_2000::~C2SFrameCommand_2000() {
  // @@protoc_insertion_point(destructor:pb.C2SFrameCommand_2000)
  SharedDtor();
}

void C2SFrameCommand_2000::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SFrameCommand_2000::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SFrameCommand_2000::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SFrameCommand_2000_descriptor_;
}

const C2SFrameCommand_2000& C2SFrameCommand_2000::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SFrameCommand_2000* C2SFrameCommand_2000::default_instance_ = NULL;

C2SFrameCommand_2000* C2SFrameCommand_2000::New(::google::protobuf::Arena* arena) const {
  C2SFrameCommand_2000* n = new C2SFrameCommand_2000;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SFrameCommand_2000::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SFrameCommand_2000)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(C2SFrameCommand_2000, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<C2SFrameCommand_2000*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(data_, frameidx_);

#undef ZR_HELPER_
#undef ZR_

}

bool C2SFrameCommand_2000::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SFrameCommand_2000)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Data = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_FrameIdx;
        break;
      }

      // optional uint32 FrameIdx = 2;
      case 2: {
        if (tag == 16) {
         parse_FrameIdx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frameidx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SFrameCommand_2000)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SFrameCommand_2000)
  return false;
#undef DO_
}

void C2SFrameCommand_2000::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SFrameCommand_2000)
  // optional uint32 Data = 1;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->data(), output);
  }

  // optional uint32 FrameIdx = 2;
  if (this->frameidx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->frameidx(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SFrameCommand_2000)
}

::google::protobuf::uint8* C2SFrameCommand_2000::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SFrameCommand_2000)
  // optional uint32 Data = 1;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->data(), target);
  }

  // optional uint32 FrameIdx = 2;
  if (this->frameidx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->frameidx(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SFrameCommand_2000)
  return target;
}

int C2SFrameCommand_2000::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SFrameCommand_2000)
  int total_size = 0;

  // optional uint32 Data = 1;
  if (this->data() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data());
  }

  // optional uint32 FrameIdx = 2;
  if (this->frameidx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frameidx());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SFrameCommand_2000::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SFrameCommand_2000)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SFrameCommand_2000* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SFrameCommand_2000>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SFrameCommand_2000)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SFrameCommand_2000)
    MergeFrom(*source);
  }
}

void C2SFrameCommand_2000::MergeFrom(const C2SFrameCommand_2000& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SFrameCommand_2000)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.data() != 0) {
    set_data(from.data());
  }
  if (from.frameidx() != 0) {
    set_frameidx(from.frameidx());
  }
}

void C2SFrameCommand_2000::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SFrameCommand_2000)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SFrameCommand_2000::CopyFrom(const C2SFrameCommand_2000& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SFrameCommand_2000)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SFrameCommand_2000::IsInitialized() const {

  return true;
}

void C2SFrameCommand_2000::Swap(C2SFrameCommand_2000* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SFrameCommand_2000::InternalSwap(C2SFrameCommand_2000* other) {
  std::swap(data_, other->data_);
  std::swap(frameidx_, other->frameidx_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SFrameCommand_2000::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SFrameCommand_2000_descriptor_;
  metadata.reflection = C2SFrameCommand_2000_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SFrameCommand_2000

// optional uint32 Data = 1;
void C2SFrameCommand_2000::clear_data() {
  data_ = 0u;
}
 ::google::protobuf::uint32 C2SFrameCommand_2000::data() const {
  // @@protoc_insertion_point(field_get:pb.C2SFrameCommand_2000.Data)
  return data_;
}
 void C2SFrameCommand_2000::set_data(::google::protobuf::uint32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SFrameCommand_2000.Data)
}

// optional uint32 FrameIdx = 2;
void C2SFrameCommand_2000::clear_frameidx() {
  frameidx_ = 0u;
}
 ::google::protobuf::uint32 C2SFrameCommand_2000::frameidx() const {
  // @@protoc_insertion_point(field_get:pb.C2SFrameCommand_2000.FrameIdx)
  return frameidx_;
}
 void C2SFrameCommand_2000::set_frameidx(::google::protobuf::uint32 value) {
  
  frameidx_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SFrameCommand_2000.FrameIdx)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CServerFrameUpdate_2001::kFrameIdFieldNumber;
const int S2CServerFrameUpdate_2001::kCmdlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CServerFrameUpdate_2001::S2CServerFrameUpdate_2001()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CServerFrameUpdate_2001)
}

void S2CServerFrameUpdate_2001::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CServerFrameUpdate_2001::S2CServerFrameUpdate_2001(const S2CServerFrameUpdate_2001& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CServerFrameUpdate_2001)
}

void S2CServerFrameUpdate_2001::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  frameid_ = 0u;
}

S2CServerFrameUpdate_2001::~S2CServerFrameUpdate_2001() {
  // @@protoc_insertion_point(destructor:pb.S2CServerFrameUpdate_2001)
  SharedDtor();
}

void S2CServerFrameUpdate_2001::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CServerFrameUpdate_2001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CServerFrameUpdate_2001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CServerFrameUpdate_2001_descriptor_;
}

const S2CServerFrameUpdate_2001& S2CServerFrameUpdate_2001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CServerFrameUpdate_2001* S2CServerFrameUpdate_2001::default_instance_ = NULL;

S2CServerFrameUpdate_2001* S2CServerFrameUpdate_2001::New(::google::protobuf::Arena* arena) const {
  S2CServerFrameUpdate_2001* n = new S2CServerFrameUpdate_2001;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CServerFrameUpdate_2001::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CServerFrameUpdate_2001)
  frameid_ = 0u;
  cmdlist_.Clear();
}

bool S2CServerFrameUpdate_2001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CServerFrameUpdate_2001)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FrameId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frameid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Cmdlist;
        break;
      }

      // repeated .pb.C2SFrameCommand_2000 Cmdlist = 2;
      case 2: {
        if (tag == 18) {
         parse_Cmdlist:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Cmdlist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_cmdlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Cmdlist;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CServerFrameUpdate_2001)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CServerFrameUpdate_2001)
  return false;
#undef DO_
}

void S2CServerFrameUpdate_2001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CServerFrameUpdate_2001)
  // optional uint32 FrameId = 1;
  if (this->frameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->frameid(), output);
  }

  // repeated .pb.C2SFrameCommand_2000 Cmdlist = 2;
  for (unsigned int i = 0, n = this->cmdlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cmdlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CServerFrameUpdate_2001)
}

::google::protobuf::uint8* S2CServerFrameUpdate_2001::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CServerFrameUpdate_2001)
  // optional uint32 FrameId = 1;
  if (this->frameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->frameid(), target);
  }

  // repeated .pb.C2SFrameCommand_2000 Cmdlist = 2;
  for (unsigned int i = 0, n = this->cmdlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->cmdlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CServerFrameUpdate_2001)
  return target;
}

int S2CServerFrameUpdate_2001::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CServerFrameUpdate_2001)
  int total_size = 0;

  // optional uint32 FrameId = 1;
  if (this->frameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frameid());
  }

  // repeated .pb.C2SFrameCommand_2000 Cmdlist = 2;
  total_size += 1 * this->cmdlist_size();
  for (int i = 0; i < this->cmdlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cmdlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CServerFrameUpdate_2001::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CServerFrameUpdate_2001)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CServerFrameUpdate_2001* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CServerFrameUpdate_2001>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CServerFrameUpdate_2001)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CServerFrameUpdate_2001)
    MergeFrom(*source);
  }
}

void S2CServerFrameUpdate_2001::MergeFrom(const S2CServerFrameUpdate_2001& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CServerFrameUpdate_2001)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  cmdlist_.MergeFrom(from.cmdlist_);
  if (from.frameid() != 0) {
    set_frameid(from.frameid());
  }
}

void S2CServerFrameUpdate_2001::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CServerFrameUpdate_2001)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CServerFrameUpdate_2001::CopyFrom(const S2CServerFrameUpdate_2001& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CServerFrameUpdate_2001)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CServerFrameUpdate_2001::IsInitialized() const {

  return true;
}

void S2CServerFrameUpdate_2001::Swap(S2CServerFrameUpdate_2001* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CServerFrameUpdate_2001::InternalSwap(S2CServerFrameUpdate_2001* other) {
  std::swap(frameid_, other->frameid_);
  cmdlist_.UnsafeArenaSwap(&other->cmdlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CServerFrameUpdate_2001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CServerFrameUpdate_2001_descriptor_;
  metadata.reflection = S2CServerFrameUpdate_2001_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CServerFrameUpdate_2001

// optional uint32 FrameId = 1;
void S2CServerFrameUpdate_2001::clear_frameid() {
  frameid_ = 0u;
}
 ::google::protobuf::uint32 S2CServerFrameUpdate_2001::frameid() const {
  // @@protoc_insertion_point(field_get:pb.S2CServerFrameUpdate_2001.FrameId)
  return frameid_;
}
 void S2CServerFrameUpdate_2001::set_frameid(::google::protobuf::uint32 value) {
  
  frameid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CServerFrameUpdate_2001.FrameId)
}

// repeated .pb.C2SFrameCommand_2000 Cmdlist = 2;
int S2CServerFrameUpdate_2001::cmdlist_size() const {
  return cmdlist_.size();
}
void S2CServerFrameUpdate_2001::clear_cmdlist() {
  cmdlist_.Clear();
}
const ::pb::C2SFrameCommand_2000& S2CServerFrameUpdate_2001::cmdlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CServerFrameUpdate_2001.Cmdlist)
  return cmdlist_.Get(index);
}
::pb::C2SFrameCommand_2000* S2CServerFrameUpdate_2001::mutable_cmdlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CServerFrameUpdate_2001.Cmdlist)
  return cmdlist_.Mutable(index);
}
::pb::C2SFrameCommand_2000* S2CServerFrameUpdate_2001::add_cmdlist() {
  // @@protoc_insertion_point(field_add:pb.S2CServerFrameUpdate_2001.Cmdlist)
  return cmdlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::C2SFrameCommand_2000 >*
S2CServerFrameUpdate_2001::mutable_cmdlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CServerFrameUpdate_2001.Cmdlist)
  return &cmdlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::C2SFrameCommand_2000 >&
S2CServerFrameUpdate_2001::cmdlist() const {
  // @@protoc_insertion_point(field_list:pb.S2CServerFrameUpdate_2001.Cmdlist)
  return cmdlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SGetRepairFrameData_2002::kFrameIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetRepairFrameData_2002::C2SGetRepairFrameData_2002()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetRepairFrameData_2002)
}

void C2SGetRepairFrameData_2002::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetRepairFrameData_2002::C2SGetRepairFrameData_2002(const C2SGetRepairFrameData_2002& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetRepairFrameData_2002)
}

void C2SGetRepairFrameData_2002::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGetRepairFrameData_2002::~C2SGetRepairFrameData_2002() {
  // @@protoc_insertion_point(destructor:pb.C2SGetRepairFrameData_2002)
  SharedDtor();
}

void C2SGetRepairFrameData_2002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetRepairFrameData_2002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetRepairFrameData_2002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetRepairFrameData_2002_descriptor_;
}

const C2SGetRepairFrameData_2002& C2SGetRepairFrameData_2002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetRepairFrameData_2002* C2SGetRepairFrameData_2002::default_instance_ = NULL;

C2SGetRepairFrameData_2002* C2SGetRepairFrameData_2002::New(::google::protobuf::Arena* arena) const {
  C2SGetRepairFrameData_2002* n = new C2SGetRepairFrameData_2002;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetRepairFrameData_2002::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetRepairFrameData_2002)
  frameids_.Clear();
}

bool C2SGetRepairFrameData_2002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetRepairFrameData_2002)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 FrameIds = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_frameids())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_frameids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetRepairFrameData_2002)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetRepairFrameData_2002)
  return false;
#undef DO_
}

void C2SGetRepairFrameData_2002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetRepairFrameData_2002)
  // repeated uint32 FrameIds = 1;
  if (this->frameids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_frameids_cached_byte_size_);
  }
  for (int i = 0; i < this->frameids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->frameids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SGetRepairFrameData_2002)
}

::google::protobuf::uint8* C2SGetRepairFrameData_2002::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetRepairFrameData_2002)
  // repeated uint32 FrameIds = 1;
  if (this->frameids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _frameids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->frameids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->frameids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetRepairFrameData_2002)
  return target;
}

int C2SGetRepairFrameData_2002::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetRepairFrameData_2002)
  int total_size = 0;

  // repeated uint32 FrameIds = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->frameids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->frameids(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _frameids_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetRepairFrameData_2002::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetRepairFrameData_2002)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetRepairFrameData_2002* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetRepairFrameData_2002>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetRepairFrameData_2002)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetRepairFrameData_2002)
    MergeFrom(*source);
  }
}

void C2SGetRepairFrameData_2002::MergeFrom(const C2SGetRepairFrameData_2002& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetRepairFrameData_2002)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frameids_.MergeFrom(from.frameids_);
}

void C2SGetRepairFrameData_2002::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetRepairFrameData_2002)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetRepairFrameData_2002::CopyFrom(const C2SGetRepairFrameData_2002& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetRepairFrameData_2002)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetRepairFrameData_2002::IsInitialized() const {

  return true;
}

void C2SGetRepairFrameData_2002::Swap(C2SGetRepairFrameData_2002* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetRepairFrameData_2002::InternalSwap(C2SGetRepairFrameData_2002* other) {
  frameids_.UnsafeArenaSwap(&other->frameids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetRepairFrameData_2002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetRepairFrameData_2002_descriptor_;
  metadata.reflection = C2SGetRepairFrameData_2002_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetRepairFrameData_2002

// repeated uint32 FrameIds = 1;
int C2SGetRepairFrameData_2002::frameids_size() const {
  return frameids_.size();
}
void C2SGetRepairFrameData_2002::clear_frameids() {
  frameids_.Clear();
}
 ::google::protobuf::uint32 C2SGetRepairFrameData_2002::frameids(int index) const {
  // @@protoc_insertion_point(field_get:pb.C2SGetRepairFrameData_2002.FrameIds)
  return frameids_.Get(index);
}
 void C2SGetRepairFrameData_2002::set_frameids(int index, ::google::protobuf::uint32 value) {
  frameids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.C2SGetRepairFrameData_2002.FrameIds)
}
 void C2SGetRepairFrameData_2002::add_frameids(::google::protobuf::uint32 value) {
  frameids_.Add(value);
  // @@protoc_insertion_point(field_add:pb.C2SGetRepairFrameData_2002.FrameIds)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
C2SGetRepairFrameData_2002::frameids() const {
  // @@protoc_insertion_point(field_list:pb.C2SGetRepairFrameData_2002.FrameIds)
  return frameids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
C2SGetRepairFrameData_2002::mutable_frameids() {
  // @@protoc_insertion_point(field_mutable_list:pb.C2SGetRepairFrameData_2002.FrameIds)
  return &frameids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetRepairFrameData_2002::kFrameDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetRepairFrameData_2002::S2CGetRepairFrameData_2002()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetRepairFrameData_2002)
}

void S2CGetRepairFrameData_2002::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetRepairFrameData_2002::S2CGetRepairFrameData_2002(const S2CGetRepairFrameData_2002& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetRepairFrameData_2002)
}

void S2CGetRepairFrameData_2002::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CGetRepairFrameData_2002::~S2CGetRepairFrameData_2002() {
  // @@protoc_insertion_point(destructor:pb.S2CGetRepairFrameData_2002)
  SharedDtor();
}

void S2CGetRepairFrameData_2002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetRepairFrameData_2002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetRepairFrameData_2002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetRepairFrameData_2002_descriptor_;
}

const S2CGetRepairFrameData_2002& S2CGetRepairFrameData_2002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetRepairFrameData_2002* S2CGetRepairFrameData_2002::default_instance_ = NULL;

S2CGetRepairFrameData_2002* S2CGetRepairFrameData_2002::New(::google::protobuf::Arena* arena) const {
  S2CGetRepairFrameData_2002* n = new S2CGetRepairFrameData_2002;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetRepairFrameData_2002::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetRepairFrameData_2002)
  framedatalist_.Clear();
}

bool S2CGetRepairFrameData_2002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetRepairFrameData_2002)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.S2CServerFrameUpdate_2001 FrameDataList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_FrameDataList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_framedatalist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_FrameDataList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetRepairFrameData_2002)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetRepairFrameData_2002)
  return false;
#undef DO_
}

void S2CGetRepairFrameData_2002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetRepairFrameData_2002)
  // repeated .pb.S2CServerFrameUpdate_2001 FrameDataList = 1;
  for (unsigned int i = 0, n = this->framedatalist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->framedatalist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetRepairFrameData_2002)
}

::google::protobuf::uint8* S2CGetRepairFrameData_2002::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetRepairFrameData_2002)
  // repeated .pb.S2CServerFrameUpdate_2001 FrameDataList = 1;
  for (unsigned int i = 0, n = this->framedatalist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->framedatalist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetRepairFrameData_2002)
  return target;
}

int S2CGetRepairFrameData_2002::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetRepairFrameData_2002)
  int total_size = 0;

  // repeated .pb.S2CServerFrameUpdate_2001 FrameDataList = 1;
  total_size += 1 * this->framedatalist_size();
  for (int i = 0; i < this->framedatalist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->framedatalist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetRepairFrameData_2002::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetRepairFrameData_2002)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetRepairFrameData_2002* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetRepairFrameData_2002>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetRepairFrameData_2002)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetRepairFrameData_2002)
    MergeFrom(*source);
  }
}

void S2CGetRepairFrameData_2002::MergeFrom(const S2CGetRepairFrameData_2002& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetRepairFrameData_2002)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  framedatalist_.MergeFrom(from.framedatalist_);
}

void S2CGetRepairFrameData_2002::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetRepairFrameData_2002)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetRepairFrameData_2002::CopyFrom(const S2CGetRepairFrameData_2002& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetRepairFrameData_2002)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetRepairFrameData_2002::IsInitialized() const {

  return true;
}

void S2CGetRepairFrameData_2002::Swap(S2CGetRepairFrameData_2002* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetRepairFrameData_2002::InternalSwap(S2CGetRepairFrameData_2002* other) {
  framedatalist_.UnsafeArenaSwap(&other->framedatalist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetRepairFrameData_2002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetRepairFrameData_2002_descriptor_;
  metadata.reflection = S2CGetRepairFrameData_2002_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetRepairFrameData_2002

// repeated .pb.S2CServerFrameUpdate_2001 FrameDataList = 1;
int S2CGetRepairFrameData_2002::framedatalist_size() const {
  return framedatalist_.size();
}
void S2CGetRepairFrameData_2002::clear_framedatalist() {
  framedatalist_.Clear();
}
const ::pb::S2CServerFrameUpdate_2001& S2CGetRepairFrameData_2002::framedatalist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetRepairFrameData_2002.FrameDataList)
  return framedatalist_.Get(index);
}
::pb::S2CServerFrameUpdate_2001* S2CGetRepairFrameData_2002::mutable_framedatalist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetRepairFrameData_2002.FrameDataList)
  return framedatalist_.Mutable(index);
}
::pb::S2CServerFrameUpdate_2001* S2CGetRepairFrameData_2002::add_framedatalist() {
  // @@protoc_insertion_point(field_add:pb.S2CGetRepairFrameData_2002.FrameDataList)
  return framedatalist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::S2CServerFrameUpdate_2001 >*
S2CGetRepairFrameData_2002::mutable_framedatalist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetRepairFrameData_2002.FrameDataList)
  return &framedatalist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::S2CServerFrameUpdate_2001 >&
S2CGetRepairFrameData_2002::framedatalist() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetRepairFrameData_2002.FrameDataList)
  return framedatalist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SGetSyncCacheFrames_2003::kBeginFrameIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetSyncCacheFrames_2003::C2SGetSyncCacheFrames_2003()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetSyncCacheFrames_2003)
}

void C2SGetSyncCacheFrames_2003::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetSyncCacheFrames_2003::C2SGetSyncCacheFrames_2003(const C2SGetSyncCacheFrames_2003& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetSyncCacheFrames_2003)
}

void C2SGetSyncCacheFrames_2003::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  beginframeid_ = 0u;
}

C2SGetSyncCacheFrames_2003::~C2SGetSyncCacheFrames_2003() {
  // @@protoc_insertion_point(destructor:pb.C2SGetSyncCacheFrames_2003)
  SharedDtor();
}

void C2SGetSyncCacheFrames_2003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetSyncCacheFrames_2003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetSyncCacheFrames_2003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetSyncCacheFrames_2003_descriptor_;
}

const C2SGetSyncCacheFrames_2003& C2SGetSyncCacheFrames_2003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetSyncCacheFrames_2003* C2SGetSyncCacheFrames_2003::default_instance_ = NULL;

C2SGetSyncCacheFrames_2003* C2SGetSyncCacheFrames_2003::New(::google::protobuf::Arena* arena) const {
  C2SGetSyncCacheFrames_2003* n = new C2SGetSyncCacheFrames_2003;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetSyncCacheFrames_2003::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetSyncCacheFrames_2003)
  beginframeid_ = 0u;
}

bool C2SGetSyncCacheFrames_2003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetSyncCacheFrames_2003)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BeginFrameId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beginframeid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetSyncCacheFrames_2003)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetSyncCacheFrames_2003)
  return false;
#undef DO_
}

void C2SGetSyncCacheFrames_2003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetSyncCacheFrames_2003)
  // optional uint32 BeginFrameId = 1;
  if (this->beginframeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->beginframeid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SGetSyncCacheFrames_2003)
}

::google::protobuf::uint8* C2SGetSyncCacheFrames_2003::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetSyncCacheFrames_2003)
  // optional uint32 BeginFrameId = 1;
  if (this->beginframeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->beginframeid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetSyncCacheFrames_2003)
  return target;
}

int C2SGetSyncCacheFrames_2003::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetSyncCacheFrames_2003)
  int total_size = 0;

  // optional uint32 BeginFrameId = 1;
  if (this->beginframeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->beginframeid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetSyncCacheFrames_2003::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetSyncCacheFrames_2003)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetSyncCacheFrames_2003* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetSyncCacheFrames_2003>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetSyncCacheFrames_2003)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetSyncCacheFrames_2003)
    MergeFrom(*source);
  }
}

void C2SGetSyncCacheFrames_2003::MergeFrom(const C2SGetSyncCacheFrames_2003& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetSyncCacheFrames_2003)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.beginframeid() != 0) {
    set_beginframeid(from.beginframeid());
  }
}

void C2SGetSyncCacheFrames_2003::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetSyncCacheFrames_2003)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetSyncCacheFrames_2003::CopyFrom(const C2SGetSyncCacheFrames_2003& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetSyncCacheFrames_2003)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetSyncCacheFrames_2003::IsInitialized() const {

  return true;
}

void C2SGetSyncCacheFrames_2003::Swap(C2SGetSyncCacheFrames_2003* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetSyncCacheFrames_2003::InternalSwap(C2SGetSyncCacheFrames_2003* other) {
  std::swap(beginframeid_, other->beginframeid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetSyncCacheFrames_2003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetSyncCacheFrames_2003_descriptor_;
  metadata.reflection = C2SGetSyncCacheFrames_2003_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetSyncCacheFrames_2003

// optional uint32 BeginFrameId = 1;
void C2SGetSyncCacheFrames_2003::clear_beginframeid() {
  beginframeid_ = 0u;
}
 ::google::protobuf::uint32 C2SGetSyncCacheFrames_2003::beginframeid() const {
  // @@protoc_insertion_point(field_get:pb.C2SGetSyncCacheFrames_2003.BeginFrameId)
  return beginframeid_;
}
 void C2SGetSyncCacheFrames_2003::set_beginframeid(::google::protobuf::uint32 value) {
  
  beginframeid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SGetSyncCacheFrames_2003.BeginFrameId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetSyncCacheFrames_2003::kFrameDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetSyncCacheFrames_2003::S2CGetSyncCacheFrames_2003()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetSyncCacheFrames_2003)
}

void S2CGetSyncCacheFrames_2003::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetSyncCacheFrames_2003::S2CGetSyncCacheFrames_2003(const S2CGetSyncCacheFrames_2003& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetSyncCacheFrames_2003)
}

void S2CGetSyncCacheFrames_2003::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CGetSyncCacheFrames_2003::~S2CGetSyncCacheFrames_2003() {
  // @@protoc_insertion_point(destructor:pb.S2CGetSyncCacheFrames_2003)
  SharedDtor();
}

void S2CGetSyncCacheFrames_2003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetSyncCacheFrames_2003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetSyncCacheFrames_2003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetSyncCacheFrames_2003_descriptor_;
}

const S2CGetSyncCacheFrames_2003& S2CGetSyncCacheFrames_2003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetSyncCacheFrames_2003* S2CGetSyncCacheFrames_2003::default_instance_ = NULL;

S2CGetSyncCacheFrames_2003* S2CGetSyncCacheFrames_2003::New(::google::protobuf::Arena* arena) const {
  S2CGetSyncCacheFrames_2003* n = new S2CGetSyncCacheFrames_2003;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetSyncCacheFrames_2003::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetSyncCacheFrames_2003)
  framedatalist_.Clear();
}

bool S2CGetSyncCacheFrames_2003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetSyncCacheFrames_2003)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.S2CServerFrameUpdate_2001 FrameDataList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_FrameDataList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_framedatalist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_FrameDataList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetSyncCacheFrames_2003)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetSyncCacheFrames_2003)
  return false;
#undef DO_
}

void S2CGetSyncCacheFrames_2003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetSyncCacheFrames_2003)
  // repeated .pb.S2CServerFrameUpdate_2001 FrameDataList = 1;
  for (unsigned int i = 0, n = this->framedatalist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->framedatalist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetSyncCacheFrames_2003)
}

::google::protobuf::uint8* S2CGetSyncCacheFrames_2003::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetSyncCacheFrames_2003)
  // repeated .pb.S2CServerFrameUpdate_2001 FrameDataList = 1;
  for (unsigned int i = 0, n = this->framedatalist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->framedatalist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetSyncCacheFrames_2003)
  return target;
}

int S2CGetSyncCacheFrames_2003::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetSyncCacheFrames_2003)
  int total_size = 0;

  // repeated .pb.S2CServerFrameUpdate_2001 FrameDataList = 1;
  total_size += 1 * this->framedatalist_size();
  for (int i = 0; i < this->framedatalist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->framedatalist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetSyncCacheFrames_2003::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetSyncCacheFrames_2003)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetSyncCacheFrames_2003* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetSyncCacheFrames_2003>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetSyncCacheFrames_2003)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetSyncCacheFrames_2003)
    MergeFrom(*source);
  }
}

void S2CGetSyncCacheFrames_2003::MergeFrom(const S2CGetSyncCacheFrames_2003& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetSyncCacheFrames_2003)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  framedatalist_.MergeFrom(from.framedatalist_);
}

void S2CGetSyncCacheFrames_2003::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetSyncCacheFrames_2003)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetSyncCacheFrames_2003::CopyFrom(const S2CGetSyncCacheFrames_2003& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetSyncCacheFrames_2003)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetSyncCacheFrames_2003::IsInitialized() const {

  return true;
}

void S2CGetSyncCacheFrames_2003::Swap(S2CGetSyncCacheFrames_2003* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetSyncCacheFrames_2003::InternalSwap(S2CGetSyncCacheFrames_2003* other) {
  framedatalist_.UnsafeArenaSwap(&other->framedatalist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetSyncCacheFrames_2003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetSyncCacheFrames_2003_descriptor_;
  metadata.reflection = S2CGetSyncCacheFrames_2003_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetSyncCacheFrames_2003

// repeated .pb.S2CServerFrameUpdate_2001 FrameDataList = 1;
int S2CGetSyncCacheFrames_2003::framedatalist_size() const {
  return framedatalist_.size();
}
void S2CGetSyncCacheFrames_2003::clear_framedatalist() {
  framedatalist_.Clear();
}
const ::pb::S2CServerFrameUpdate_2001& S2CGetSyncCacheFrames_2003::framedatalist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetSyncCacheFrames_2003.FrameDataList)
  return framedatalist_.Get(index);
}
::pb::S2CServerFrameUpdate_2001* S2CGetSyncCacheFrames_2003::mutable_framedatalist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetSyncCacheFrames_2003.FrameDataList)
  return framedatalist_.Mutable(index);
}
::pb::S2CServerFrameUpdate_2001* S2CGetSyncCacheFrames_2003::add_framedatalist() {
  // @@protoc_insertion_point(field_add:pb.S2CGetSyncCacheFrames_2003.FrameDataList)
  return framedatalist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::S2CServerFrameUpdate_2001 >*
S2CGetSyncCacheFrames_2003::mutable_framedatalist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetSyncCacheFrames_2003.FrameDataList)
  return &framedatalist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::S2CServerFrameUpdate_2001 >&
S2CGetSyncCacheFrames_2003::framedatalist() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetSyncCacheFrames_2003.FrameDataList)
  return framedatalist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SUDPReg_2004::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SUDPReg_2004::C2SUDPReg_2004()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SUDPReg_2004)
}

void C2SUDPReg_2004::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SUDPReg_2004::C2SUDPReg_2004(const C2SUDPReg_2004& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SUDPReg_2004)
}

void C2SUDPReg_2004::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
}

C2SUDPReg_2004::~C2SUDPReg_2004() {
  // @@protoc_insertion_point(destructor:pb.C2SUDPReg_2004)
  SharedDtor();
}

void C2SUDPReg_2004::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SUDPReg_2004::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SUDPReg_2004::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SUDPReg_2004_descriptor_;
}

const C2SUDPReg_2004& C2SUDPReg_2004::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SUDPReg_2004* C2SUDPReg_2004::default_instance_ = NULL;

C2SUDPReg_2004* C2SUDPReg_2004::New(::google::protobuf::Arena* arena) const {
  C2SUDPReg_2004* n = new C2SUDPReg_2004;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SUDPReg_2004::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SUDPReg_2004)
  rid_ = GOOGLE_ULONGLONG(0);
}

bool C2SUDPReg_2004::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SUDPReg_2004)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SUDPReg_2004)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SUDPReg_2004)
  return false;
#undef DO_
}

void C2SUDPReg_2004::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SUDPReg_2004)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SUDPReg_2004)
}

::google::protobuf::uint8* C2SUDPReg_2004::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SUDPReg_2004)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SUDPReg_2004)
  return target;
}

int C2SUDPReg_2004::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SUDPReg_2004)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SUDPReg_2004::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SUDPReg_2004)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SUDPReg_2004* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SUDPReg_2004>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SUDPReg_2004)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SUDPReg_2004)
    MergeFrom(*source);
  }
}

void C2SUDPReg_2004::MergeFrom(const C2SUDPReg_2004& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SUDPReg_2004)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void C2SUDPReg_2004::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SUDPReg_2004)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SUDPReg_2004::CopyFrom(const C2SUDPReg_2004& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SUDPReg_2004)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SUDPReg_2004::IsInitialized() const {

  return true;
}

void C2SUDPReg_2004::Swap(C2SUDPReg_2004* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SUDPReg_2004::InternalSwap(C2SUDPReg_2004* other) {
  std::swap(rid_, other->rid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SUDPReg_2004::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SUDPReg_2004_descriptor_;
  metadata.reflection = C2SUDPReg_2004_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SUDPReg_2004

// optional uint64 Rid = 1;
void C2SUDPReg_2004::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 C2SUDPReg_2004::rid() const {
  // @@protoc_insertion_point(field_get:pb.C2SUDPReg_2004.Rid)
  return rid_;
}
 void C2SUDPReg_2004::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SUDPReg_2004.Rid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SVerifyFrameSync_2005::kFrameIdFieldNumber;
const int C2SVerifyFrameSync_2005::kVerifyDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SVerifyFrameSync_2005::C2SVerifyFrameSync_2005()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SVerifyFrameSync_2005)
}

void C2SVerifyFrameSync_2005::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SVerifyFrameSync_2005::C2SVerifyFrameSync_2005(const C2SVerifyFrameSync_2005& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SVerifyFrameSync_2005)
}

void C2SVerifyFrameSync_2005::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  frameid_ = 0u;
  verifydata_ = 0u;
}

C2SVerifyFrameSync_2005::~C2SVerifyFrameSync_2005() {
  // @@protoc_insertion_point(destructor:pb.C2SVerifyFrameSync_2005)
  SharedDtor();
}

void C2SVerifyFrameSync_2005::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SVerifyFrameSync_2005::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SVerifyFrameSync_2005::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SVerifyFrameSync_2005_descriptor_;
}

const C2SVerifyFrameSync_2005& C2SVerifyFrameSync_2005::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SVerifyFrameSync_2005* C2SVerifyFrameSync_2005::default_instance_ = NULL;

C2SVerifyFrameSync_2005* C2SVerifyFrameSync_2005::New(::google::protobuf::Arena* arena) const {
  C2SVerifyFrameSync_2005* n = new C2SVerifyFrameSync_2005;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SVerifyFrameSync_2005::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SVerifyFrameSync_2005)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(C2SVerifyFrameSync_2005, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<C2SVerifyFrameSync_2005*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(frameid_, verifydata_);

#undef ZR_HELPER_
#undef ZR_

}

bool C2SVerifyFrameSync_2005::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SVerifyFrameSync_2005)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 FrameId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frameid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_VerifyData;
        break;
      }

      // optional uint32 VerifyData = 2;
      case 2: {
        if (tag == 16) {
         parse_VerifyData:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &verifydata_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SVerifyFrameSync_2005)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SVerifyFrameSync_2005)
  return false;
#undef DO_
}

void C2SVerifyFrameSync_2005::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SVerifyFrameSync_2005)
  // optional uint32 FrameId = 1;
  if (this->frameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->frameid(), output);
  }

  // optional uint32 VerifyData = 2;
  if (this->verifydata() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->verifydata(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SVerifyFrameSync_2005)
}

::google::protobuf::uint8* C2SVerifyFrameSync_2005::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SVerifyFrameSync_2005)
  // optional uint32 FrameId = 1;
  if (this->frameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->frameid(), target);
  }

  // optional uint32 VerifyData = 2;
  if (this->verifydata() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->verifydata(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SVerifyFrameSync_2005)
  return target;
}

int C2SVerifyFrameSync_2005::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SVerifyFrameSync_2005)
  int total_size = 0;

  // optional uint32 FrameId = 1;
  if (this->frameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frameid());
  }

  // optional uint32 VerifyData = 2;
  if (this->verifydata() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->verifydata());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SVerifyFrameSync_2005::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SVerifyFrameSync_2005)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SVerifyFrameSync_2005* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SVerifyFrameSync_2005>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SVerifyFrameSync_2005)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SVerifyFrameSync_2005)
    MergeFrom(*source);
  }
}

void C2SVerifyFrameSync_2005::MergeFrom(const C2SVerifyFrameSync_2005& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SVerifyFrameSync_2005)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.frameid() != 0) {
    set_frameid(from.frameid());
  }
  if (from.verifydata() != 0) {
    set_verifydata(from.verifydata());
  }
}

void C2SVerifyFrameSync_2005::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SVerifyFrameSync_2005)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SVerifyFrameSync_2005::CopyFrom(const C2SVerifyFrameSync_2005& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SVerifyFrameSync_2005)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SVerifyFrameSync_2005::IsInitialized() const {

  return true;
}

void C2SVerifyFrameSync_2005::Swap(C2SVerifyFrameSync_2005* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SVerifyFrameSync_2005::InternalSwap(C2SVerifyFrameSync_2005* other) {
  std::swap(frameid_, other->frameid_);
  std::swap(verifydata_, other->verifydata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SVerifyFrameSync_2005::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SVerifyFrameSync_2005_descriptor_;
  metadata.reflection = C2SVerifyFrameSync_2005_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SVerifyFrameSync_2005

// optional uint32 FrameId = 1;
void C2SVerifyFrameSync_2005::clear_frameid() {
  frameid_ = 0u;
}
 ::google::protobuf::uint32 C2SVerifyFrameSync_2005::frameid() const {
  // @@protoc_insertion_point(field_get:pb.C2SVerifyFrameSync_2005.FrameId)
  return frameid_;
}
 void C2SVerifyFrameSync_2005::set_frameid(::google::protobuf::uint32 value) {
  
  frameid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SVerifyFrameSync_2005.FrameId)
}

// optional uint32 VerifyData = 2;
void C2SVerifyFrameSync_2005::clear_verifydata() {
  verifydata_ = 0u;
}
 ::google::protobuf::uint32 C2SVerifyFrameSync_2005::verifydata() const {
  // @@protoc_insertion_point(field_get:pb.C2SVerifyFrameSync_2005.VerifyData)
  return verifydata_;
}
 void C2SVerifyFrameSync_2005::set_verifydata(::google::protobuf::uint32 value) {
  
  verifydata_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SVerifyFrameSync_2005.VerifyData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CVerifyFrameSyncFail_2005::S2CVerifyFrameSyncFail_2005()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CVerifyFrameSyncFail_2005)
}

void S2CVerifyFrameSyncFail_2005::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CVerifyFrameSyncFail_2005::S2CVerifyFrameSyncFail_2005(const S2CVerifyFrameSyncFail_2005& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CVerifyFrameSyncFail_2005)
}

void S2CVerifyFrameSyncFail_2005::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CVerifyFrameSyncFail_2005::~S2CVerifyFrameSyncFail_2005() {
  // @@protoc_insertion_point(destructor:pb.S2CVerifyFrameSyncFail_2005)
  SharedDtor();
}

void S2CVerifyFrameSyncFail_2005::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CVerifyFrameSyncFail_2005::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CVerifyFrameSyncFail_2005::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CVerifyFrameSyncFail_2005_descriptor_;
}

const S2CVerifyFrameSyncFail_2005& S2CVerifyFrameSyncFail_2005::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CVerifyFrameSyncFail_2005* S2CVerifyFrameSyncFail_2005::default_instance_ = NULL;

S2CVerifyFrameSyncFail_2005* S2CVerifyFrameSyncFail_2005::New(::google::protobuf::Arena* arena) const {
  S2CVerifyFrameSyncFail_2005* n = new S2CVerifyFrameSyncFail_2005;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CVerifyFrameSyncFail_2005::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CVerifyFrameSyncFail_2005)
}

bool S2CVerifyFrameSyncFail_2005::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CVerifyFrameSyncFail_2005)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CVerifyFrameSyncFail_2005)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CVerifyFrameSyncFail_2005)
  return false;
#undef DO_
}

void S2CVerifyFrameSyncFail_2005::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CVerifyFrameSyncFail_2005)
  // @@protoc_insertion_point(serialize_end:pb.S2CVerifyFrameSyncFail_2005)
}

::google::protobuf::uint8* S2CVerifyFrameSyncFail_2005::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CVerifyFrameSyncFail_2005)
  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CVerifyFrameSyncFail_2005)
  return target;
}

int S2CVerifyFrameSyncFail_2005::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CVerifyFrameSyncFail_2005)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CVerifyFrameSyncFail_2005::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CVerifyFrameSyncFail_2005)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CVerifyFrameSyncFail_2005* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CVerifyFrameSyncFail_2005>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CVerifyFrameSyncFail_2005)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CVerifyFrameSyncFail_2005)
    MergeFrom(*source);
  }
}

void S2CVerifyFrameSyncFail_2005::MergeFrom(const S2CVerifyFrameSyncFail_2005& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CVerifyFrameSyncFail_2005)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void S2CVerifyFrameSyncFail_2005::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CVerifyFrameSyncFail_2005)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CVerifyFrameSyncFail_2005::CopyFrom(const S2CVerifyFrameSyncFail_2005& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CVerifyFrameSyncFail_2005)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CVerifyFrameSyncFail_2005::IsInitialized() const {

  return true;
}

void S2CVerifyFrameSyncFail_2005::Swap(S2CVerifyFrameSyncFail_2005* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CVerifyFrameSyncFail_2005::InternalSwap(S2CVerifyFrameSyncFail_2005* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CVerifyFrameSyncFail_2005::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CVerifyFrameSyncFail_2005_descriptor_;
  metadata.reflection = S2CVerifyFrameSyncFail_2005_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CVerifyFrameSyncFail_2005

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SStartMatch_210::kMatchModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SStartMatch_210::C2SStartMatch_210()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SStartMatch_210)
}

void C2SStartMatch_210::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SStartMatch_210::C2SStartMatch_210(const C2SStartMatch_210& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SStartMatch_210)
}

void C2SStartMatch_210::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  matchmode_ = 0u;
}

C2SStartMatch_210::~C2SStartMatch_210() {
  // @@protoc_insertion_point(destructor:pb.C2SStartMatch_210)
  SharedDtor();
}

void C2SStartMatch_210::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SStartMatch_210::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SStartMatch_210::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SStartMatch_210_descriptor_;
}

const C2SStartMatch_210& C2SStartMatch_210::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SStartMatch_210* C2SStartMatch_210::default_instance_ = NULL;

C2SStartMatch_210* C2SStartMatch_210::New(::google::protobuf::Arena* arena) const {
  C2SStartMatch_210* n = new C2SStartMatch_210;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SStartMatch_210::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SStartMatch_210)
  matchmode_ = 0u;
}

bool C2SStartMatch_210::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SStartMatch_210)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MatchMode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchmode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SStartMatch_210)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SStartMatch_210)
  return false;
#undef DO_
}

void C2SStartMatch_210::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SStartMatch_210)
  // optional uint32 MatchMode = 1;
  if (this->matchmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->matchmode(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SStartMatch_210)
}

::google::protobuf::uint8* C2SStartMatch_210::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SStartMatch_210)
  // optional uint32 MatchMode = 1;
  if (this->matchmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->matchmode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SStartMatch_210)
  return target;
}

int C2SStartMatch_210::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SStartMatch_210)
  int total_size = 0;

  // optional uint32 MatchMode = 1;
  if (this->matchmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchmode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SStartMatch_210::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SStartMatch_210)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SStartMatch_210* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SStartMatch_210>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SStartMatch_210)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SStartMatch_210)
    MergeFrom(*source);
  }
}

void C2SStartMatch_210::MergeFrom(const C2SStartMatch_210& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SStartMatch_210)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.matchmode() != 0) {
    set_matchmode(from.matchmode());
  }
}

void C2SStartMatch_210::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SStartMatch_210)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SStartMatch_210::CopyFrom(const C2SStartMatch_210& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SStartMatch_210)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SStartMatch_210::IsInitialized() const {

  return true;
}

void C2SStartMatch_210::Swap(C2SStartMatch_210* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SStartMatch_210::InternalSwap(C2SStartMatch_210* other) {
  std::swap(matchmode_, other->matchmode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SStartMatch_210::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SStartMatch_210_descriptor_;
  metadata.reflection = C2SStartMatch_210_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SStartMatch_210

// optional uint32 MatchMode = 1;
void C2SStartMatch_210::clear_matchmode() {
  matchmode_ = 0u;
}
 ::google::protobuf::uint32 C2SStartMatch_210::matchmode() const {
  // @@protoc_insertion_point(field_get:pb.C2SStartMatch_210.MatchMode)
  return matchmode_;
}
 void C2SStartMatch_210::set_matchmode(::google::protobuf::uint32 value) {
  
  matchmode_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SStartMatch_210.MatchMode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CStartMatch_210::kMatchModeFieldNumber;
const int S2CStartMatch_210::kMatchTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CStartMatch_210::S2CStartMatch_210()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CStartMatch_210)
}

void S2CStartMatch_210::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CStartMatch_210::S2CStartMatch_210(const S2CStartMatch_210& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CStartMatch_210)
}

void S2CStartMatch_210::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  matchmode_ = 0u;
  matchtime_ = 0u;
}

S2CStartMatch_210::~S2CStartMatch_210() {
  // @@protoc_insertion_point(destructor:pb.S2CStartMatch_210)
  SharedDtor();
}

void S2CStartMatch_210::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CStartMatch_210::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CStartMatch_210::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CStartMatch_210_descriptor_;
}

const S2CStartMatch_210& S2CStartMatch_210::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CStartMatch_210* S2CStartMatch_210::default_instance_ = NULL;

S2CStartMatch_210* S2CStartMatch_210::New(::google::protobuf::Arena* arena) const {
  S2CStartMatch_210* n = new S2CStartMatch_210;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CStartMatch_210::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CStartMatch_210)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CStartMatch_210, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CStartMatch_210*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(matchmode_, matchtime_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2CStartMatch_210::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CStartMatch_210)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MatchMode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchmode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MatchTime;
        break;
      }

      // optional uint32 MatchTime = 2;
      case 2: {
        if (tag == 16) {
         parse_MatchTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CStartMatch_210)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CStartMatch_210)
  return false;
#undef DO_
}

void S2CStartMatch_210::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CStartMatch_210)
  // optional uint32 MatchMode = 1;
  if (this->matchmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->matchmode(), output);
  }

  // optional uint32 MatchTime = 2;
  if (this->matchtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->matchtime(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CStartMatch_210)
}

::google::protobuf::uint8* S2CStartMatch_210::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CStartMatch_210)
  // optional uint32 MatchMode = 1;
  if (this->matchmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->matchmode(), target);
  }

  // optional uint32 MatchTime = 2;
  if (this->matchtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->matchtime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CStartMatch_210)
  return target;
}

int S2CStartMatch_210::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CStartMatch_210)
  int total_size = 0;

  // optional uint32 MatchMode = 1;
  if (this->matchmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchmode());
  }

  // optional uint32 MatchTime = 2;
  if (this->matchtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchtime());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CStartMatch_210::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CStartMatch_210)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CStartMatch_210* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CStartMatch_210>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CStartMatch_210)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CStartMatch_210)
    MergeFrom(*source);
  }
}

void S2CStartMatch_210::MergeFrom(const S2CStartMatch_210& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CStartMatch_210)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.matchmode() != 0) {
    set_matchmode(from.matchmode());
  }
  if (from.matchtime() != 0) {
    set_matchtime(from.matchtime());
  }
}

void S2CStartMatch_210::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CStartMatch_210)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CStartMatch_210::CopyFrom(const S2CStartMatch_210& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CStartMatch_210)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CStartMatch_210::IsInitialized() const {

  return true;
}

void S2CStartMatch_210::Swap(S2CStartMatch_210* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CStartMatch_210::InternalSwap(S2CStartMatch_210* other) {
  std::swap(matchmode_, other->matchmode_);
  std::swap(matchtime_, other->matchtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CStartMatch_210::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CStartMatch_210_descriptor_;
  metadata.reflection = S2CStartMatch_210_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CStartMatch_210

// optional uint32 MatchMode = 1;
void S2CStartMatch_210::clear_matchmode() {
  matchmode_ = 0u;
}
 ::google::protobuf::uint32 S2CStartMatch_210::matchmode() const {
  // @@protoc_insertion_point(field_get:pb.S2CStartMatch_210.MatchMode)
  return matchmode_;
}
 void S2CStartMatch_210::set_matchmode(::google::protobuf::uint32 value) {
  
  matchmode_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CStartMatch_210.MatchMode)
}

// optional uint32 MatchTime = 2;
void S2CStartMatch_210::clear_matchtime() {
  matchtime_ = 0u;
}
 ::google::protobuf::uint32 S2CStartMatch_210::matchtime() const {
  // @@protoc_insertion_point(field_get:pb.S2CStartMatch_210.MatchTime)
  return matchtime_;
}
 void S2CStartMatch_210::set_matchtime(::google::protobuf::uint32 value) {
  
  matchtime_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CStartMatch_210.MatchTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CMatchSucc_217::S2CMatchSucc_217()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CMatchSucc_217)
}

void S2CMatchSucc_217::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CMatchSucc_217::S2CMatchSucc_217(const S2CMatchSucc_217& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CMatchSucc_217)
}

void S2CMatchSucc_217::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CMatchSucc_217::~S2CMatchSucc_217() {
  // @@protoc_insertion_point(destructor:pb.S2CMatchSucc_217)
  SharedDtor();
}

void S2CMatchSucc_217::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CMatchSucc_217::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CMatchSucc_217::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CMatchSucc_217_descriptor_;
}

const S2CMatchSucc_217& S2CMatchSucc_217::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CMatchSucc_217* S2CMatchSucc_217::default_instance_ = NULL;

S2CMatchSucc_217* S2CMatchSucc_217::New(::google::protobuf::Arena* arena) const {
  S2CMatchSucc_217* n = new S2CMatchSucc_217;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CMatchSucc_217::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CMatchSucc_217)
}

bool S2CMatchSucc_217::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CMatchSucc_217)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CMatchSucc_217)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CMatchSucc_217)
  return false;
#undef DO_
}

void S2CMatchSucc_217::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CMatchSucc_217)
  // @@protoc_insertion_point(serialize_end:pb.S2CMatchSucc_217)
}

::google::protobuf::uint8* S2CMatchSucc_217::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CMatchSucc_217)
  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CMatchSucc_217)
  return target;
}

int S2CMatchSucc_217::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CMatchSucc_217)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CMatchSucc_217::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CMatchSucc_217)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CMatchSucc_217* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CMatchSucc_217>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CMatchSucc_217)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CMatchSucc_217)
    MergeFrom(*source);
  }
}

void S2CMatchSucc_217::MergeFrom(const S2CMatchSucc_217& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CMatchSucc_217)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void S2CMatchSucc_217::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CMatchSucc_217)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CMatchSucc_217::CopyFrom(const S2CMatchSucc_217& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CMatchSucc_217)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CMatchSucc_217::IsInitialized() const {

  return true;
}

void S2CMatchSucc_217::Swap(S2CMatchSucc_217* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CMatchSucc_217::InternalSwap(S2CMatchSucc_217* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CMatchSucc_217::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CMatchSucc_217_descriptor_;
  metadata.reflection = S2CMatchSucc_217_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CMatchSucc_217

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SReadyMatch_218::kOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SReadyMatch_218::C2SReadyMatch_218()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SReadyMatch_218)
}

void C2SReadyMatch_218::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SReadyMatch_218::C2SReadyMatch_218(const C2SReadyMatch_218& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SReadyMatch_218)
}

void C2SReadyMatch_218::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  op_ = false;
}

C2SReadyMatch_218::~C2SReadyMatch_218() {
  // @@protoc_insertion_point(destructor:pb.C2SReadyMatch_218)
  SharedDtor();
}

void C2SReadyMatch_218::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SReadyMatch_218::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SReadyMatch_218::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SReadyMatch_218_descriptor_;
}

const C2SReadyMatch_218& C2SReadyMatch_218::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SReadyMatch_218* C2SReadyMatch_218::default_instance_ = NULL;

C2SReadyMatch_218* C2SReadyMatch_218::New(::google::protobuf::Arena* arena) const {
  C2SReadyMatch_218* n = new C2SReadyMatch_218;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SReadyMatch_218::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SReadyMatch_218)
  op_ = false;
}

bool C2SReadyMatch_218::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SReadyMatch_218)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Op = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &op_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SReadyMatch_218)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SReadyMatch_218)
  return false;
#undef DO_
}

void C2SReadyMatch_218::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SReadyMatch_218)
  // optional bool Op = 1;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->op(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SReadyMatch_218)
}

::google::protobuf::uint8* C2SReadyMatch_218::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SReadyMatch_218)
  // optional bool Op = 1;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->op(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SReadyMatch_218)
  return target;
}

int C2SReadyMatch_218::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SReadyMatch_218)
  int total_size = 0;

  // optional bool Op = 1;
  if (this->op() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SReadyMatch_218::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SReadyMatch_218)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SReadyMatch_218* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SReadyMatch_218>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SReadyMatch_218)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SReadyMatch_218)
    MergeFrom(*source);
  }
}

void C2SReadyMatch_218::MergeFrom(const C2SReadyMatch_218& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SReadyMatch_218)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
}

void C2SReadyMatch_218::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SReadyMatch_218)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SReadyMatch_218::CopyFrom(const C2SReadyMatch_218& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SReadyMatch_218)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SReadyMatch_218::IsInitialized() const {

  return true;
}

void C2SReadyMatch_218::Swap(C2SReadyMatch_218* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SReadyMatch_218::InternalSwap(C2SReadyMatch_218* other) {
  std::swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SReadyMatch_218::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SReadyMatch_218_descriptor_;
  metadata.reflection = C2SReadyMatch_218_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SReadyMatch_218

// optional bool Op = 1;
void C2SReadyMatch_218::clear_op() {
  op_ = false;
}
 bool C2SReadyMatch_218::op() const {
  // @@protoc_insertion_point(field_get:pb.C2SReadyMatch_218.Op)
  return op_;
}
 void C2SReadyMatch_218::set_op(bool value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SReadyMatch_218.Op)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CReadyMatch_218::kRidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CReadyMatch_218::S2CReadyMatch_218()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CReadyMatch_218)
}

void S2CReadyMatch_218::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CReadyMatch_218::S2CReadyMatch_218(const S2CReadyMatch_218& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CReadyMatch_218)
}

void S2CReadyMatch_218::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CReadyMatch_218::~S2CReadyMatch_218() {
  // @@protoc_insertion_point(destructor:pb.S2CReadyMatch_218)
  SharedDtor();
}

void S2CReadyMatch_218::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CReadyMatch_218::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CReadyMatch_218::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CReadyMatch_218_descriptor_;
}

const S2CReadyMatch_218& S2CReadyMatch_218::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CReadyMatch_218* S2CReadyMatch_218::default_instance_ = NULL;

S2CReadyMatch_218* S2CReadyMatch_218::New(::google::protobuf::Arena* arena) const {
  S2CReadyMatch_218* n = new S2CReadyMatch_218;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CReadyMatch_218::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CReadyMatch_218)
  rids_.Clear();
}

bool S2CReadyMatch_218::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CReadyMatch_218)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 Rids = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_rids())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10, input, this->mutable_rids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CReadyMatch_218)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CReadyMatch_218)
  return false;
#undef DO_
}

void S2CReadyMatch_218::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CReadyMatch_218)
  // repeated uint64 Rids = 1;
  if (this->rids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_rids_cached_byte_size_);
  }
  for (int i = 0; i < this->rids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->rids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CReadyMatch_218)
}

::google::protobuf::uint8* S2CReadyMatch_218::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CReadyMatch_218)
  // repeated uint64 Rids = 1;
  if (this->rids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _rids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->rids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->rids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CReadyMatch_218)
  return target;
}

int S2CReadyMatch_218::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CReadyMatch_218)
  int total_size = 0;

  // repeated uint64 Rids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->rids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->rids(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rids_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CReadyMatch_218::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CReadyMatch_218)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CReadyMatch_218* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CReadyMatch_218>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CReadyMatch_218)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CReadyMatch_218)
    MergeFrom(*source);
  }
}

void S2CReadyMatch_218::MergeFrom(const S2CReadyMatch_218& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CReadyMatch_218)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  rids_.MergeFrom(from.rids_);
}

void S2CReadyMatch_218::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CReadyMatch_218)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CReadyMatch_218::CopyFrom(const S2CReadyMatch_218& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CReadyMatch_218)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CReadyMatch_218::IsInitialized() const {

  return true;
}

void S2CReadyMatch_218::Swap(S2CReadyMatch_218* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CReadyMatch_218::InternalSwap(S2CReadyMatch_218* other) {
  rids_.UnsafeArenaSwap(&other->rids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CReadyMatch_218::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CReadyMatch_218_descriptor_;
  metadata.reflection = S2CReadyMatch_218_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CReadyMatch_218

// repeated uint64 Rids = 1;
int S2CReadyMatch_218::rids_size() const {
  return rids_.size();
}
void S2CReadyMatch_218::clear_rids() {
  rids_.Clear();
}
 ::google::protobuf::uint64 S2CReadyMatch_218::rids(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CReadyMatch_218.Rids)
  return rids_.Get(index);
}
 void S2CReadyMatch_218::set_rids(int index, ::google::protobuf::uint64 value) {
  rids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.S2CReadyMatch_218.Rids)
}
 void S2CReadyMatch_218::add_rids(::google::protobuf::uint64 value) {
  rids_.Add(value);
  // @@protoc_insertion_point(field_add:pb.S2CReadyMatch_218.Rids)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2CReadyMatch_218::rids() const {
  // @@protoc_insertion_point(field_list:pb.S2CReadyMatch_218.Rids)
  return rids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2CReadyMatch_218::mutable_rids() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CReadyMatch_218.Rids)
  return &rids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CReadyMatch_219::kTpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CReadyMatch_219::S2CReadyMatch_219()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CReadyMatch_219)
}

void S2CReadyMatch_219::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CReadyMatch_219::S2CReadyMatch_219(const S2CReadyMatch_219& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CReadyMatch_219)
}

void S2CReadyMatch_219::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  tp_ = 0u;
}

S2CReadyMatch_219::~S2CReadyMatch_219() {
  // @@protoc_insertion_point(destructor:pb.S2CReadyMatch_219)
  SharedDtor();
}

void S2CReadyMatch_219::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CReadyMatch_219::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CReadyMatch_219::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CReadyMatch_219_descriptor_;
}

const S2CReadyMatch_219& S2CReadyMatch_219::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CReadyMatch_219* S2CReadyMatch_219::default_instance_ = NULL;

S2CReadyMatch_219* S2CReadyMatch_219::New(::google::protobuf::Arena* arena) const {
  S2CReadyMatch_219* n = new S2CReadyMatch_219;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CReadyMatch_219::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CReadyMatch_219)
  tp_ = 0u;
}

bool S2CReadyMatch_219::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CReadyMatch_219)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Tp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CReadyMatch_219)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CReadyMatch_219)
  return false;
#undef DO_
}

void S2CReadyMatch_219::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CReadyMatch_219)
  // optional uint32 Tp = 1;
  if (this->tp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tp(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CReadyMatch_219)
}

::google::protobuf::uint8* S2CReadyMatch_219::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CReadyMatch_219)
  // optional uint32 Tp = 1;
  if (this->tp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CReadyMatch_219)
  return target;
}

int S2CReadyMatch_219::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CReadyMatch_219)
  int total_size = 0;

  // optional uint32 Tp = 1;
  if (this->tp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tp());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CReadyMatch_219::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CReadyMatch_219)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CReadyMatch_219* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CReadyMatch_219>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CReadyMatch_219)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CReadyMatch_219)
    MergeFrom(*source);
  }
}

void S2CReadyMatch_219::MergeFrom(const S2CReadyMatch_219& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CReadyMatch_219)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.tp() != 0) {
    set_tp(from.tp());
  }
}

void S2CReadyMatch_219::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CReadyMatch_219)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CReadyMatch_219::CopyFrom(const S2CReadyMatch_219& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CReadyMatch_219)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CReadyMatch_219::IsInitialized() const {

  return true;
}

void S2CReadyMatch_219::Swap(S2CReadyMatch_219* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CReadyMatch_219::InternalSwap(S2CReadyMatch_219* other) {
  std::swap(tp_, other->tp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CReadyMatch_219::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CReadyMatch_219_descriptor_;
  metadata.reflection = S2CReadyMatch_219_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CReadyMatch_219

// optional uint32 Tp = 1;
void S2CReadyMatch_219::clear_tp() {
  tp_ = 0u;
}
 ::google::protobuf::uint32 S2CReadyMatch_219::tp() const {
  // @@protoc_insertion_point(field_get:pb.S2CReadyMatch_219.Tp)
  return tp_;
}
 void S2CReadyMatch_219::set_tp(::google::protobuf::uint32 value) {
  
  tp_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CReadyMatch_219.Tp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SCancelMatch_211::C2SCancelMatch_211()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SCancelMatch_211)
}

void C2SCancelMatch_211::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SCancelMatch_211::C2SCancelMatch_211(const C2SCancelMatch_211& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SCancelMatch_211)
}

void C2SCancelMatch_211::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SCancelMatch_211::~C2SCancelMatch_211() {
  // @@protoc_insertion_point(destructor:pb.C2SCancelMatch_211)
  SharedDtor();
}

void C2SCancelMatch_211::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SCancelMatch_211::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SCancelMatch_211::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SCancelMatch_211_descriptor_;
}

const C2SCancelMatch_211& C2SCancelMatch_211::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SCancelMatch_211* C2SCancelMatch_211::default_instance_ = NULL;

C2SCancelMatch_211* C2SCancelMatch_211::New(::google::protobuf::Arena* arena) const {
  C2SCancelMatch_211* n = new C2SCancelMatch_211;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SCancelMatch_211::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SCancelMatch_211)
}

bool C2SCancelMatch_211::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SCancelMatch_211)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SCancelMatch_211)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SCancelMatch_211)
  return false;
#undef DO_
}

void C2SCancelMatch_211::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SCancelMatch_211)
  // @@protoc_insertion_point(serialize_end:pb.C2SCancelMatch_211)
}

::google::protobuf::uint8* C2SCancelMatch_211::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SCancelMatch_211)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SCancelMatch_211)
  return target;
}

int C2SCancelMatch_211::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SCancelMatch_211)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SCancelMatch_211::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SCancelMatch_211)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SCancelMatch_211* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SCancelMatch_211>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SCancelMatch_211)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SCancelMatch_211)
    MergeFrom(*source);
  }
}

void C2SCancelMatch_211::MergeFrom(const C2SCancelMatch_211& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SCancelMatch_211)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SCancelMatch_211::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SCancelMatch_211)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SCancelMatch_211::CopyFrom(const C2SCancelMatch_211& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SCancelMatch_211)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SCancelMatch_211::IsInitialized() const {

  return true;
}

void C2SCancelMatch_211::Swap(C2SCancelMatch_211* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SCancelMatch_211::InternalSwap(C2SCancelMatch_211* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SCancelMatch_211::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SCancelMatch_211_descriptor_;
  metadata.reflection = C2SCancelMatch_211_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SCancelMatch_211

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CCancelMatch_211::S2CCancelMatch_211()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CCancelMatch_211)
}

void S2CCancelMatch_211::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CCancelMatch_211::S2CCancelMatch_211(const S2CCancelMatch_211& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CCancelMatch_211)
}

void S2CCancelMatch_211::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CCancelMatch_211::~S2CCancelMatch_211() {
  // @@protoc_insertion_point(destructor:pb.S2CCancelMatch_211)
  SharedDtor();
}

void S2CCancelMatch_211::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CCancelMatch_211::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CCancelMatch_211::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CCancelMatch_211_descriptor_;
}

const S2CCancelMatch_211& S2CCancelMatch_211::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CCancelMatch_211* S2CCancelMatch_211::default_instance_ = NULL;

S2CCancelMatch_211* S2CCancelMatch_211::New(::google::protobuf::Arena* arena) const {
  S2CCancelMatch_211* n = new S2CCancelMatch_211;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CCancelMatch_211::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CCancelMatch_211)
}

bool S2CCancelMatch_211::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CCancelMatch_211)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CCancelMatch_211)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CCancelMatch_211)
  return false;
#undef DO_
}

void S2CCancelMatch_211::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CCancelMatch_211)
  // @@protoc_insertion_point(serialize_end:pb.S2CCancelMatch_211)
}

::google::protobuf::uint8* S2CCancelMatch_211::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CCancelMatch_211)
  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CCancelMatch_211)
  return target;
}

int S2CCancelMatch_211::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CCancelMatch_211)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CCancelMatch_211::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CCancelMatch_211)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CCancelMatch_211* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CCancelMatch_211>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CCancelMatch_211)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CCancelMatch_211)
    MergeFrom(*source);
  }
}

void S2CCancelMatch_211::MergeFrom(const S2CCancelMatch_211& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CCancelMatch_211)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void S2CCancelMatch_211::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CCancelMatch_211)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CCancelMatch_211::CopyFrom(const S2CCancelMatch_211& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CCancelMatch_211)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CCancelMatch_211::IsInitialized() const {

  return true;
}

void S2CCancelMatch_211::Swap(S2CCancelMatch_211* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CCancelMatch_211::InternalSwap(S2CCancelMatch_211* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CCancelMatch_211::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CCancelMatch_211_descriptor_;
  metadata.reflection = S2CCancelMatch_211_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CCancelMatch_211

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CMatchSucc_212::kWaitSecFieldNumber;
const int S2CMatchSucc_212::kUserlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CMatchSucc_212::S2CMatchSucc_212()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CMatchSucc_212)
}

void S2CMatchSucc_212::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CMatchSucc_212::S2CMatchSucc_212(const S2CMatchSucc_212& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CMatchSucc_212)
}

void S2CMatchSucc_212::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  waitsec_ = 0u;
}

S2CMatchSucc_212::~S2CMatchSucc_212() {
  // @@protoc_insertion_point(destructor:pb.S2CMatchSucc_212)
  SharedDtor();
}

void S2CMatchSucc_212::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CMatchSucc_212::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CMatchSucc_212::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CMatchSucc_212_descriptor_;
}

const S2CMatchSucc_212& S2CMatchSucc_212::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CMatchSucc_212* S2CMatchSucc_212::default_instance_ = NULL;

S2CMatchSucc_212* S2CMatchSucc_212::New(::google::protobuf::Arena* arena) const {
  S2CMatchSucc_212* n = new S2CMatchSucc_212;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CMatchSucc_212::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CMatchSucc_212)
  waitsec_ = 0u;
  userlist_.Clear();
}

bool S2CMatchSucc_212::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CMatchSucc_212)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 WaitSec = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &waitsec_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Userlist;
        break;
      }

      // repeated .pb.PRoomUser Userlist = 2;
      case 2: {
        if (tag == 18) {
         parse_Userlist:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Userlist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_userlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Userlist;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CMatchSucc_212)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CMatchSucc_212)
  return false;
#undef DO_
}

void S2CMatchSucc_212::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CMatchSucc_212)
  // optional uint32 WaitSec = 1;
  if (this->waitsec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->waitsec(), output);
  }

  // repeated .pb.PRoomUser Userlist = 2;
  for (unsigned int i = 0, n = this->userlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->userlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CMatchSucc_212)
}

::google::protobuf::uint8* S2CMatchSucc_212::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CMatchSucc_212)
  // optional uint32 WaitSec = 1;
  if (this->waitsec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->waitsec(), target);
  }

  // repeated .pb.PRoomUser Userlist = 2;
  for (unsigned int i = 0, n = this->userlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->userlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CMatchSucc_212)
  return target;
}

int S2CMatchSucc_212::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CMatchSucc_212)
  int total_size = 0;

  // optional uint32 WaitSec = 1;
  if (this->waitsec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->waitsec());
  }

  // repeated .pb.PRoomUser Userlist = 2;
  total_size += 1 * this->userlist_size();
  for (int i = 0; i < this->userlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CMatchSucc_212::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CMatchSucc_212)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CMatchSucc_212* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CMatchSucc_212>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CMatchSucc_212)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CMatchSucc_212)
    MergeFrom(*source);
  }
}

void S2CMatchSucc_212::MergeFrom(const S2CMatchSucc_212& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CMatchSucc_212)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  userlist_.MergeFrom(from.userlist_);
  if (from.waitsec() != 0) {
    set_waitsec(from.waitsec());
  }
}

void S2CMatchSucc_212::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CMatchSucc_212)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CMatchSucc_212::CopyFrom(const S2CMatchSucc_212& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CMatchSucc_212)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CMatchSucc_212::IsInitialized() const {

  return true;
}

void S2CMatchSucc_212::Swap(S2CMatchSucc_212* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CMatchSucc_212::InternalSwap(S2CMatchSucc_212* other) {
  std::swap(waitsec_, other->waitsec_);
  userlist_.UnsafeArenaSwap(&other->userlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CMatchSucc_212::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CMatchSucc_212_descriptor_;
  metadata.reflection = S2CMatchSucc_212_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CMatchSucc_212

// optional uint32 WaitSec = 1;
void S2CMatchSucc_212::clear_waitsec() {
  waitsec_ = 0u;
}
 ::google::protobuf::uint32 S2CMatchSucc_212::waitsec() const {
  // @@protoc_insertion_point(field_get:pb.S2CMatchSucc_212.WaitSec)
  return waitsec_;
}
 void S2CMatchSucc_212::set_waitsec(::google::protobuf::uint32 value) {
  
  waitsec_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CMatchSucc_212.WaitSec)
}

// repeated .pb.PRoomUser Userlist = 2;
int S2CMatchSucc_212::userlist_size() const {
  return userlist_.size();
}
void S2CMatchSucc_212::clear_userlist() {
  userlist_.Clear();
}
const ::pb::PRoomUser& S2CMatchSucc_212::userlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CMatchSucc_212.Userlist)
  return userlist_.Get(index);
}
::pb::PRoomUser* S2CMatchSucc_212::mutable_userlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CMatchSucc_212.Userlist)
  return userlist_.Mutable(index);
}
::pb::PRoomUser* S2CMatchSucc_212::add_userlist() {
  // @@protoc_insertion_point(field_add:pb.S2CMatchSucc_212.Userlist)
  return userlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::PRoomUser >*
S2CMatchSucc_212::mutable_userlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CMatchSucc_212.Userlist)
  return &userlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::PRoomUser >&
S2CMatchSucc_212::userlist() const {
  // @@protoc_insertion_point(field_list:pb.S2CMatchSucc_212.Userlist)
  return userlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StageBattleEnd::kUIDFieldNumber;
const int StageBattleEnd::kStageStarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StageBattleEnd::StageBattleEnd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.StageBattleEnd)
}

void StageBattleEnd::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

StageBattleEnd::StageBattleEnd(const StageBattleEnd& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.StageBattleEnd)
}

void StageBattleEnd::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  stagestar_ = 0u;
}

StageBattleEnd::~StageBattleEnd() {
  // @@protoc_insertion_point(destructor:pb.StageBattleEnd)
  SharedDtor();
}

void StageBattleEnd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StageBattleEnd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StageBattleEnd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StageBattleEnd_descriptor_;
}

const StageBattleEnd& StageBattleEnd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

StageBattleEnd* StageBattleEnd::default_instance_ = NULL;

StageBattleEnd* StageBattleEnd::New(::google::protobuf::Arena* arena) const {
  StageBattleEnd* n = new StageBattleEnd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StageBattleEnd::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.StageBattleEnd)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(StageBattleEnd, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<StageBattleEnd*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(uid_, stagestar_);

#undef ZR_HELPER_
#undef ZR_

}

bool StageBattleEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.StageBattleEnd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 UID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StageStar;
        break;
      }

      // optional uint32 StageStar = 2;
      case 2: {
        if (tag == 16) {
         parse_StageStar:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stagestar_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.StageBattleEnd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.StageBattleEnd)
  return false;
#undef DO_
}

void StageBattleEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.StageBattleEnd)
  // optional uint64 UID = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // optional uint32 StageStar = 2;
  if (this->stagestar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->stagestar(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.StageBattleEnd)
}

::google::protobuf::uint8* StageBattleEnd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.StageBattleEnd)
  // optional uint64 UID = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // optional uint32 StageStar = 2;
  if (this->stagestar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->stagestar(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.StageBattleEnd)
  return target;
}

int StageBattleEnd::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.StageBattleEnd)
  int total_size = 0;

  // optional uint64 UID = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  // optional uint32 StageStar = 2;
  if (this->stagestar() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stagestar());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StageBattleEnd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.StageBattleEnd)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StageBattleEnd* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StageBattleEnd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.StageBattleEnd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.StageBattleEnd)
    MergeFrom(*source);
  }
}

void StageBattleEnd::MergeFrom(const StageBattleEnd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.StageBattleEnd)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.stagestar() != 0) {
    set_stagestar(from.stagestar());
  }
}

void StageBattleEnd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.StageBattleEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StageBattleEnd::CopyFrom(const StageBattleEnd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.StageBattleEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StageBattleEnd::IsInitialized() const {

  return true;
}

void StageBattleEnd::Swap(StageBattleEnd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StageBattleEnd::InternalSwap(StageBattleEnd* other) {
  std::swap(uid_, other->uid_);
  std::swap(stagestar_, other->stagestar_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StageBattleEnd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StageBattleEnd_descriptor_;
  metadata.reflection = StageBattleEnd_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StageBattleEnd

// optional uint64 UID = 1;
void StageBattleEnd::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 StageBattleEnd::uid() const {
  // @@protoc_insertion_point(field_get:pb.StageBattleEnd.UID)
  return uid_;
}
 void StageBattleEnd::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:pb.StageBattleEnd.UID)
}

// optional uint32 StageStar = 2;
void StageBattleEnd::clear_stagestar() {
  stagestar_ = 0u;
}
 ::google::protobuf::uint32 StageBattleEnd::stagestar() const {
  // @@protoc_insertion_point(field_get:pb.StageBattleEnd.StageStar)
  return stagestar_;
}
 void StageBattleEnd::set_stagestar(::google::protobuf::uint32 value) {
  
  stagestar_ = value;
  // @@protoc_insertion_point(field_set:pb.StageBattleEnd.StageStar)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SMatchOver_213::C2SMatchOver_213()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SMatchOver_213)
}

void C2SMatchOver_213::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SMatchOver_213::C2SMatchOver_213(const C2SMatchOver_213& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SMatchOver_213)
}

void C2SMatchOver_213::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SMatchOver_213::~C2SMatchOver_213() {
  // @@protoc_insertion_point(destructor:pb.C2SMatchOver_213)
  SharedDtor();
}

void C2SMatchOver_213::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SMatchOver_213::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SMatchOver_213::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SMatchOver_213_descriptor_;
}

const C2SMatchOver_213& C2SMatchOver_213::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SMatchOver_213* C2SMatchOver_213::default_instance_ = NULL;

C2SMatchOver_213* C2SMatchOver_213::New(::google::protobuf::Arena* arena) const {
  C2SMatchOver_213* n = new C2SMatchOver_213;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SMatchOver_213::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SMatchOver_213)
}

bool C2SMatchOver_213::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SMatchOver_213)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SMatchOver_213)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SMatchOver_213)
  return false;
#undef DO_
}

void C2SMatchOver_213::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SMatchOver_213)
  // @@protoc_insertion_point(serialize_end:pb.C2SMatchOver_213)
}

::google::protobuf::uint8* C2SMatchOver_213::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SMatchOver_213)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SMatchOver_213)
  return target;
}

int C2SMatchOver_213::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SMatchOver_213)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SMatchOver_213::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SMatchOver_213)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SMatchOver_213* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SMatchOver_213>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SMatchOver_213)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SMatchOver_213)
    MergeFrom(*source);
  }
}

void C2SMatchOver_213::MergeFrom(const C2SMatchOver_213& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SMatchOver_213)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SMatchOver_213::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SMatchOver_213)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SMatchOver_213::CopyFrom(const C2SMatchOver_213& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SMatchOver_213)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SMatchOver_213::IsInitialized() const {

  return true;
}

void C2SMatchOver_213::Swap(C2SMatchOver_213* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SMatchOver_213::InternalSwap(C2SMatchOver_213* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SMatchOver_213::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SMatchOver_213_descriptor_;
  metadata.reflection = C2SMatchOver_213_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SMatchOver_213

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CMatchOver_213::kOverFrameIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CMatchOver_213::S2CMatchOver_213()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CMatchOver_213)
}

void S2CMatchOver_213::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CMatchOver_213::S2CMatchOver_213(const S2CMatchOver_213& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CMatchOver_213)
}

void S2CMatchOver_213::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  overframeid_ = 0u;
}

S2CMatchOver_213::~S2CMatchOver_213() {
  // @@protoc_insertion_point(destructor:pb.S2CMatchOver_213)
  SharedDtor();
}

void S2CMatchOver_213::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CMatchOver_213::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CMatchOver_213::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CMatchOver_213_descriptor_;
}

const S2CMatchOver_213& S2CMatchOver_213::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CMatchOver_213* S2CMatchOver_213::default_instance_ = NULL;

S2CMatchOver_213* S2CMatchOver_213::New(::google::protobuf::Arena* arena) const {
  S2CMatchOver_213* n = new S2CMatchOver_213;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CMatchOver_213::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CMatchOver_213)
  overframeid_ = 0u;
}

bool S2CMatchOver_213::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CMatchOver_213)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 OverFrameId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &overframeid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CMatchOver_213)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CMatchOver_213)
  return false;
#undef DO_
}

void S2CMatchOver_213::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CMatchOver_213)
  // optional uint32 OverFrameId = 1;
  if (this->overframeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->overframeid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CMatchOver_213)
}

::google::protobuf::uint8* S2CMatchOver_213::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CMatchOver_213)
  // optional uint32 OverFrameId = 1;
  if (this->overframeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->overframeid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CMatchOver_213)
  return target;
}

int S2CMatchOver_213::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CMatchOver_213)
  int total_size = 0;

  // optional uint32 OverFrameId = 1;
  if (this->overframeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->overframeid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CMatchOver_213::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CMatchOver_213)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CMatchOver_213* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CMatchOver_213>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CMatchOver_213)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CMatchOver_213)
    MergeFrom(*source);
  }
}

void S2CMatchOver_213::MergeFrom(const S2CMatchOver_213& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CMatchOver_213)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.overframeid() != 0) {
    set_overframeid(from.overframeid());
  }
}

void S2CMatchOver_213::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CMatchOver_213)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CMatchOver_213::CopyFrom(const S2CMatchOver_213& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CMatchOver_213)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CMatchOver_213::IsInitialized() const {

  return true;
}

void S2CMatchOver_213::Swap(S2CMatchOver_213* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CMatchOver_213::InternalSwap(S2CMatchOver_213* other) {
  std::swap(overframeid_, other->overframeid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CMatchOver_213::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CMatchOver_213_descriptor_;
  metadata.reflection = S2CMatchOver_213_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CMatchOver_213

// optional uint32 OverFrameId = 1;
void S2CMatchOver_213::clear_overframeid() {
  overframeid_ = 0u;
}
 ::google::protobuf::uint32 S2CMatchOver_213::overframeid() const {
  // @@protoc_insertion_point(field_get:pb.S2CMatchOver_213.OverFrameId)
  return overframeid_;
}
 void S2CMatchOver_213::set_overframeid(::google::protobuf::uint32 value) {
  
  overframeid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CMatchOver_213.OverFrameId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SLeaveBatUI_214::C2SLeaveBatUI_214()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SLeaveBatUI_214)
}

void C2SLeaveBatUI_214::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SLeaveBatUI_214::C2SLeaveBatUI_214(const C2SLeaveBatUI_214& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SLeaveBatUI_214)
}

void C2SLeaveBatUI_214::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SLeaveBatUI_214::~C2SLeaveBatUI_214() {
  // @@protoc_insertion_point(destructor:pb.C2SLeaveBatUI_214)
  SharedDtor();
}

void C2SLeaveBatUI_214::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SLeaveBatUI_214::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SLeaveBatUI_214::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SLeaveBatUI_214_descriptor_;
}

const C2SLeaveBatUI_214& C2SLeaveBatUI_214::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SLeaveBatUI_214* C2SLeaveBatUI_214::default_instance_ = NULL;

C2SLeaveBatUI_214* C2SLeaveBatUI_214::New(::google::protobuf::Arena* arena) const {
  C2SLeaveBatUI_214* n = new C2SLeaveBatUI_214;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SLeaveBatUI_214::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SLeaveBatUI_214)
}

bool C2SLeaveBatUI_214::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SLeaveBatUI_214)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SLeaveBatUI_214)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SLeaveBatUI_214)
  return false;
#undef DO_
}

void C2SLeaveBatUI_214::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SLeaveBatUI_214)
  // @@protoc_insertion_point(serialize_end:pb.C2SLeaveBatUI_214)
}

::google::protobuf::uint8* C2SLeaveBatUI_214::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SLeaveBatUI_214)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SLeaveBatUI_214)
  return target;
}

int C2SLeaveBatUI_214::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SLeaveBatUI_214)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SLeaveBatUI_214::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SLeaveBatUI_214)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SLeaveBatUI_214* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SLeaveBatUI_214>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SLeaveBatUI_214)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SLeaveBatUI_214)
    MergeFrom(*source);
  }
}

void C2SLeaveBatUI_214::MergeFrom(const C2SLeaveBatUI_214& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SLeaveBatUI_214)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SLeaveBatUI_214::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SLeaveBatUI_214)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SLeaveBatUI_214::CopyFrom(const C2SLeaveBatUI_214& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SLeaveBatUI_214)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SLeaveBatUI_214::IsInitialized() const {

  return true;
}

void C2SLeaveBatUI_214::Swap(C2SLeaveBatUI_214* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SLeaveBatUI_214::InternalSwap(C2SLeaveBatUI_214* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SLeaveBatUI_214::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SLeaveBatUI_214_descriptor_;
  metadata.reflection = C2SLeaveBatUI_214_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SLeaveBatUI_214

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SRoomKick_215::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SRoomKick_215::C2SRoomKick_215()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SRoomKick_215)
}

void C2SRoomKick_215::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SRoomKick_215::C2SRoomKick_215(const C2SRoomKick_215& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SRoomKick_215)
}

void C2SRoomKick_215::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
}

C2SRoomKick_215::~C2SRoomKick_215() {
  // @@protoc_insertion_point(destructor:pb.C2SRoomKick_215)
  SharedDtor();
}

void C2SRoomKick_215::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SRoomKick_215::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SRoomKick_215::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SRoomKick_215_descriptor_;
}

const C2SRoomKick_215& C2SRoomKick_215::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SRoomKick_215* C2SRoomKick_215::default_instance_ = NULL;

C2SRoomKick_215* C2SRoomKick_215::New(::google::protobuf::Arena* arena) const {
  C2SRoomKick_215* n = new C2SRoomKick_215;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SRoomKick_215::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SRoomKick_215)
  rid_ = GOOGLE_ULONGLONG(0);
}

bool C2SRoomKick_215::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SRoomKick_215)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SRoomKick_215)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SRoomKick_215)
  return false;
#undef DO_
}

void C2SRoomKick_215::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SRoomKick_215)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SRoomKick_215)
}

::google::protobuf::uint8* C2SRoomKick_215::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SRoomKick_215)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SRoomKick_215)
  return target;
}

int C2SRoomKick_215::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SRoomKick_215)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SRoomKick_215::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SRoomKick_215)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SRoomKick_215* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SRoomKick_215>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SRoomKick_215)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SRoomKick_215)
    MergeFrom(*source);
  }
}

void C2SRoomKick_215::MergeFrom(const C2SRoomKick_215& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SRoomKick_215)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void C2SRoomKick_215::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SRoomKick_215)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SRoomKick_215::CopyFrom(const C2SRoomKick_215& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SRoomKick_215)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SRoomKick_215::IsInitialized() const {

  return true;
}

void C2SRoomKick_215::Swap(C2SRoomKick_215* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SRoomKick_215::InternalSwap(C2SRoomKick_215* other) {
  std::swap(rid_, other->rid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SRoomKick_215::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SRoomKick_215_descriptor_;
  metadata.reflection = C2SRoomKick_215_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SRoomKick_215

// optional uint64 Rid = 1;
void C2SRoomKick_215::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 C2SRoomKick_215::rid() const {
  // @@protoc_insertion_point(field_get:pb.C2SRoomKick_215.Rid)
  return rid_;
}
 void C2SRoomKick_215::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SRoomKick_215.Rid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Msgbody216::kRewardStrFieldNumber;
const int Msgbody216::kMatchModeFieldNumber;
const int Msgbody216::kStageDatasFieldNumber;
const int Msgbody216::kWinFieldNumber;
const int Msgbody216::kLeftJudgementFieldNumber;
const int Msgbody216::kRightJudgementFieldNumber;
const int Msgbody216::kBatDataFieldNumber;
const int Msgbody216::kLeftScoreFieldNumber;
const int Msgbody216::kRightScoreFieldNumber;
const int Msgbody216::kBattleSecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Msgbody216::Msgbody216()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Msgbody216)
}

void Msgbody216::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Msgbody216::Msgbody216(const Msgbody216& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.Msgbody216)
}

void Msgbody216::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rewardstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  matchmode_ = 0u;
  win_ = 0u;
  leftjudgement_ = 0u;
  rightjudgement_ = 0u;
  batdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leftscore_ = 0u;
  rightscore_ = 0u;
  battleseconds_ = 0u;
}

Msgbody216::~Msgbody216() {
  // @@protoc_insertion_point(destructor:pb.Msgbody216)
  SharedDtor();
}

void Msgbody216::SharedDtor() {
  rewardstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  batdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Msgbody216::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msgbody216::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msgbody216_descriptor_;
}

const Msgbody216& Msgbody216::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

Msgbody216* Msgbody216::default_instance_ = NULL;

Msgbody216* Msgbody216::New(::google::protobuf::Arena* arena) const {
  Msgbody216* n = new Msgbody216;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Msgbody216::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Msgbody216)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Msgbody216, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Msgbody216*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(matchmode_, rightjudgement_);
  rewardstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  batdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leftscore_ = 0u;
  ZR_(rightscore_, battleseconds_);

#undef ZR_HELPER_
#undef ZR_

  stagedatas_.Clear();
}

bool Msgbody216::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Msgbody216)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RewardStr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rewardstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rewardstr().data(), this->rewardstr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Msgbody216.RewardStr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MatchMode;
        break;
      }

      // optional uint32 MatchMode = 2;
      case 2: {
        if (tag == 16) {
         parse_MatchMode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchmode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_StageDatas;
        break;
      }

      // repeated .pb.StageBattleEnd StageDatas = 3;
      case 3: {
        if (tag == 26) {
         parse_StageDatas:
          DO_(input->IncrementRecursionDepth());
         parse_loop_StageDatas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_stagedatas()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_StageDatas;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_Win;
        break;
      }

      // optional uint32 Win = 4;
      case 4: {
        if (tag == 32) {
         parse_Win:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &win_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_LeftJudgement;
        break;
      }

      // optional uint32 LeftJudgement = 5;
      case 5: {
        if (tag == 40) {
         parse_LeftJudgement:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftjudgement_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_RightJudgement;
        break;
      }

      // optional uint32 RightJudgement = 6;
      case 6: {
        if (tag == 48) {
         parse_RightJudgement:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightjudgement_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_BatData;
        break;
      }

      // optional string BatData = 7;
      case 7: {
        if (tag == 58) {
         parse_BatData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_batdata()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->batdata().data(), this->batdata().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Msgbody216.BatData"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_LeftScore;
        break;
      }

      // optional uint32 LeftScore = 8;
      case 8: {
        if (tag == 64) {
         parse_LeftScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftscore_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_RightScore;
        break;
      }

      // optional uint32 RightScore = 9;
      case 9: {
        if (tag == 72) {
         parse_RightScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightscore_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_BattleSeconds;
        break;
      }

      // optional uint32 BattleSeconds = 10;
      case 10: {
        if (tag == 80) {
         parse_BattleSeconds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battleseconds_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Msgbody216)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Msgbody216)
  return false;
#undef DO_
}

void Msgbody216::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Msgbody216)
  // optional string RewardStr = 1;
  if (this->rewardstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rewardstr().data(), this->rewardstr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Msgbody216.RewardStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->rewardstr(), output);
  }

  // optional uint32 MatchMode = 2;
  if (this->matchmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->matchmode(), output);
  }

  // repeated .pb.StageBattleEnd StageDatas = 3;
  for (unsigned int i = 0, n = this->stagedatas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->stagedatas(i), output);
  }

  // optional uint32 Win = 4;
  if (this->win() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->win(), output);
  }

  // optional uint32 LeftJudgement = 5;
  if (this->leftjudgement() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->leftjudgement(), output);
  }

  // optional uint32 RightJudgement = 6;
  if (this->rightjudgement() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->rightjudgement(), output);
  }

  // optional string BatData = 7;
  if (this->batdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->batdata().data(), this->batdata().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Msgbody216.BatData");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->batdata(), output);
  }

  // optional uint32 LeftScore = 8;
  if (this->leftscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->leftscore(), output);
  }

  // optional uint32 RightScore = 9;
  if (this->rightscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->rightscore(), output);
  }

  // optional uint32 BattleSeconds = 10;
  if (this->battleseconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->battleseconds(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.Msgbody216)
}

::google::protobuf::uint8* Msgbody216::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.Msgbody216)
  // optional string RewardStr = 1;
  if (this->rewardstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rewardstr().data(), this->rewardstr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Msgbody216.RewardStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rewardstr(), target);
  }

  // optional uint32 MatchMode = 2;
  if (this->matchmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->matchmode(), target);
  }

  // repeated .pb.StageBattleEnd StageDatas = 3;
  for (unsigned int i = 0, n = this->stagedatas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->stagedatas(i), false, target);
  }

  // optional uint32 Win = 4;
  if (this->win() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->win(), target);
  }

  // optional uint32 LeftJudgement = 5;
  if (this->leftjudgement() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->leftjudgement(), target);
  }

  // optional uint32 RightJudgement = 6;
  if (this->rightjudgement() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->rightjudgement(), target);
  }

  // optional string BatData = 7;
  if (this->batdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->batdata().data(), this->batdata().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Msgbody216.BatData");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->batdata(), target);
  }

  // optional uint32 LeftScore = 8;
  if (this->leftscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->leftscore(), target);
  }

  // optional uint32 RightScore = 9;
  if (this->rightscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->rightscore(), target);
  }

  // optional uint32 BattleSeconds = 10;
  if (this->battleseconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->battleseconds(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.Msgbody216)
  return target;
}

int Msgbody216::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Msgbody216)
  int total_size = 0;

  // optional string RewardStr = 1;
  if (this->rewardstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rewardstr());
  }

  // optional uint32 MatchMode = 2;
  if (this->matchmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchmode());
  }

  // optional uint32 Win = 4;
  if (this->win() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->win());
  }

  // optional uint32 LeftJudgement = 5;
  if (this->leftjudgement() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftjudgement());
  }

  // optional uint32 RightJudgement = 6;
  if (this->rightjudgement() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rightjudgement());
  }

  // optional string BatData = 7;
  if (this->batdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->batdata());
  }

  // optional uint32 LeftScore = 8;
  if (this->leftscore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftscore());
  }

  // optional uint32 RightScore = 9;
  if (this->rightscore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rightscore());
  }

  // optional uint32 BattleSeconds = 10;
  if (this->battleseconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battleseconds());
  }

  // repeated .pb.StageBattleEnd StageDatas = 3;
  total_size += 1 * this->stagedatas_size();
  for (int i = 0; i < this->stagedatas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->stagedatas(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msgbody216::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Msgbody216)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Msgbody216* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Msgbody216>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Msgbody216)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Msgbody216)
    MergeFrom(*source);
  }
}

void Msgbody216::MergeFrom(const Msgbody216& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Msgbody216)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  stagedatas_.MergeFrom(from.stagedatas_);
  if (from.rewardstr().size() > 0) {

    rewardstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rewardstr_);
  }
  if (from.matchmode() != 0) {
    set_matchmode(from.matchmode());
  }
  if (from.win() != 0) {
    set_win(from.win());
  }
  if (from.leftjudgement() != 0) {
    set_leftjudgement(from.leftjudgement());
  }
  if (from.rightjudgement() != 0) {
    set_rightjudgement(from.rightjudgement());
  }
  if (from.batdata().size() > 0) {

    batdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.batdata_);
  }
  if (from.leftscore() != 0) {
    set_leftscore(from.leftscore());
  }
  if (from.rightscore() != 0) {
    set_rightscore(from.rightscore());
  }
  if (from.battleseconds() != 0) {
    set_battleseconds(from.battleseconds());
  }
}

void Msgbody216::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Msgbody216)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msgbody216::CopyFrom(const Msgbody216& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Msgbody216)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msgbody216::IsInitialized() const {

  return true;
}

void Msgbody216::Swap(Msgbody216* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Msgbody216::InternalSwap(Msgbody216* other) {
  rewardstr_.Swap(&other->rewardstr_);
  std::swap(matchmode_, other->matchmode_);
  stagedatas_.UnsafeArenaSwap(&other->stagedatas_);
  std::swap(win_, other->win_);
  std::swap(leftjudgement_, other->leftjudgement_);
  std::swap(rightjudgement_, other->rightjudgement_);
  batdata_.Swap(&other->batdata_);
  std::swap(leftscore_, other->leftscore_);
  std::swap(rightscore_, other->rightscore_);
  std::swap(battleseconds_, other->battleseconds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Msgbody216::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msgbody216_descriptor_;
  metadata.reflection = Msgbody216_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Msgbody216

// optional string RewardStr = 1;
void Msgbody216::clear_rewardstr() {
  rewardstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Msgbody216::rewardstr() const {
  // @@protoc_insertion_point(field_get:pb.Msgbody216.RewardStr)
  return rewardstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Msgbody216::set_rewardstr(const ::std::string& value) {
  
  rewardstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Msgbody216.RewardStr)
}
 void Msgbody216::set_rewardstr(const char* value) {
  
  rewardstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Msgbody216.RewardStr)
}
 void Msgbody216::set_rewardstr(const char* value, size_t size) {
  
  rewardstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Msgbody216.RewardStr)
}
 ::std::string* Msgbody216::mutable_rewardstr() {
  
  // @@protoc_insertion_point(field_mutable:pb.Msgbody216.RewardStr)
  return rewardstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Msgbody216::release_rewardstr() {
  // @@protoc_insertion_point(field_release:pb.Msgbody216.RewardStr)
  
  return rewardstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Msgbody216::set_allocated_rewardstr(::std::string* rewardstr) {
  if (rewardstr != NULL) {
    
  } else {
    
  }
  rewardstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rewardstr);
  // @@protoc_insertion_point(field_set_allocated:pb.Msgbody216.RewardStr)
}

// optional uint32 MatchMode = 2;
void Msgbody216::clear_matchmode() {
  matchmode_ = 0u;
}
 ::google::protobuf::uint32 Msgbody216::matchmode() const {
  // @@protoc_insertion_point(field_get:pb.Msgbody216.MatchMode)
  return matchmode_;
}
 void Msgbody216::set_matchmode(::google::protobuf::uint32 value) {
  
  matchmode_ = value;
  // @@protoc_insertion_point(field_set:pb.Msgbody216.MatchMode)
}

// repeated .pb.StageBattleEnd StageDatas = 3;
int Msgbody216::stagedatas_size() const {
  return stagedatas_.size();
}
void Msgbody216::clear_stagedatas() {
  stagedatas_.Clear();
}
const ::pb::StageBattleEnd& Msgbody216::stagedatas(int index) const {
  // @@protoc_insertion_point(field_get:pb.Msgbody216.StageDatas)
  return stagedatas_.Get(index);
}
::pb::StageBattleEnd* Msgbody216::mutable_stagedatas(int index) {
  // @@protoc_insertion_point(field_mutable:pb.Msgbody216.StageDatas)
  return stagedatas_.Mutable(index);
}
::pb::StageBattleEnd* Msgbody216::add_stagedatas() {
  // @@protoc_insertion_point(field_add:pb.Msgbody216.StageDatas)
  return stagedatas_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::StageBattleEnd >*
Msgbody216::mutable_stagedatas() {
  // @@protoc_insertion_point(field_mutable_list:pb.Msgbody216.StageDatas)
  return &stagedatas_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::StageBattleEnd >&
Msgbody216::stagedatas() const {
  // @@protoc_insertion_point(field_list:pb.Msgbody216.StageDatas)
  return stagedatas_;
}

// optional uint32 Win = 4;
void Msgbody216::clear_win() {
  win_ = 0u;
}
 ::google::protobuf::uint32 Msgbody216::win() const {
  // @@protoc_insertion_point(field_get:pb.Msgbody216.Win)
  return win_;
}
 void Msgbody216::set_win(::google::protobuf::uint32 value) {
  
  win_ = value;
  // @@protoc_insertion_point(field_set:pb.Msgbody216.Win)
}

// optional uint32 LeftJudgement = 5;
void Msgbody216::clear_leftjudgement() {
  leftjudgement_ = 0u;
}
 ::google::protobuf::uint32 Msgbody216::leftjudgement() const {
  // @@protoc_insertion_point(field_get:pb.Msgbody216.LeftJudgement)
  return leftjudgement_;
}
 void Msgbody216::set_leftjudgement(::google::protobuf::uint32 value) {
  
  leftjudgement_ = value;
  // @@protoc_insertion_point(field_set:pb.Msgbody216.LeftJudgement)
}

// optional uint32 RightJudgement = 6;
void Msgbody216::clear_rightjudgement() {
  rightjudgement_ = 0u;
}
 ::google::protobuf::uint32 Msgbody216::rightjudgement() const {
  // @@protoc_insertion_point(field_get:pb.Msgbody216.RightJudgement)
  return rightjudgement_;
}
 void Msgbody216::set_rightjudgement(::google::protobuf::uint32 value) {
  
  rightjudgement_ = value;
  // @@protoc_insertion_point(field_set:pb.Msgbody216.RightJudgement)
}

// optional string BatData = 7;
void Msgbody216::clear_batdata() {
  batdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Msgbody216::batdata() const {
  // @@protoc_insertion_point(field_get:pb.Msgbody216.BatData)
  return batdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Msgbody216::set_batdata(const ::std::string& value) {
  
  batdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Msgbody216.BatData)
}
 void Msgbody216::set_batdata(const char* value) {
  
  batdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Msgbody216.BatData)
}
 void Msgbody216::set_batdata(const char* value, size_t size) {
  
  batdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Msgbody216.BatData)
}
 ::std::string* Msgbody216::mutable_batdata() {
  
  // @@protoc_insertion_point(field_mutable:pb.Msgbody216.BatData)
  return batdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Msgbody216::release_batdata() {
  // @@protoc_insertion_point(field_release:pb.Msgbody216.BatData)
  
  return batdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Msgbody216::set_allocated_batdata(::std::string* batdata) {
  if (batdata != NULL) {
    
  } else {
    
  }
  batdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), batdata);
  // @@protoc_insertion_point(field_set_allocated:pb.Msgbody216.BatData)
}

// optional uint32 LeftScore = 8;
void Msgbody216::clear_leftscore() {
  leftscore_ = 0u;
}
 ::google::protobuf::uint32 Msgbody216::leftscore() const {
  // @@protoc_insertion_point(field_get:pb.Msgbody216.LeftScore)
  return leftscore_;
}
 void Msgbody216::set_leftscore(::google::protobuf::uint32 value) {
  
  leftscore_ = value;
  // @@protoc_insertion_point(field_set:pb.Msgbody216.LeftScore)
}

// optional uint32 RightScore = 9;
void Msgbody216::clear_rightscore() {
  rightscore_ = 0u;
}
 ::google::protobuf::uint32 Msgbody216::rightscore() const {
  // @@protoc_insertion_point(field_get:pb.Msgbody216.RightScore)
  return rightscore_;
}
 void Msgbody216::set_rightscore(::google::protobuf::uint32 value) {
  
  rightscore_ = value;
  // @@protoc_insertion_point(field_set:pb.Msgbody216.RightScore)
}

// optional uint32 BattleSeconds = 10;
void Msgbody216::clear_battleseconds() {
  battleseconds_ = 0u;
}
 ::google::protobuf::uint32 Msgbody216::battleseconds() const {
  // @@protoc_insertion_point(field_get:pb.Msgbody216.BattleSeconds)
  return battleseconds_;
}
 void Msgbody216::set_battleseconds(::google::protobuf::uint32 value) {
  
  battleseconds_ = value;
  // @@protoc_insertion_point(field_set:pb.Msgbody216.BattleSeconds)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2STheBattleResult_216::kWinFieldNumber;
const int C2STheBattleResult_216::kBatDataFieldNumber;
const int C2STheBattleResult_216::kLeftJudgementFieldNumber;
const int C2STheBattleResult_216::kRightJudgementFieldNumber;
const int C2STheBattleResult_216::kLeftScoreFieldNumber;
const int C2STheBattleResult_216::kRightScoreFieldNumber;
const int C2STheBattleResult_216::kBattleSecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2STheBattleResult_216::C2STheBattleResult_216()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2STheBattleResult_216)
}

void C2STheBattleResult_216::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2STheBattleResult_216::C2STheBattleResult_216(const C2STheBattleResult_216& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2STheBattleResult_216)
}

void C2STheBattleResult_216::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  win_ = 0u;
  batdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leftjudgement_ = 0u;
  rightjudgement_ = 0u;
  leftscore_ = 0u;
  rightscore_ = 0u;
  battleseconds_ = 0u;
}

C2STheBattleResult_216::~C2STheBattleResult_216() {
  // @@protoc_insertion_point(destructor:pb.C2STheBattleResult_216)
  SharedDtor();
}

void C2STheBattleResult_216::SharedDtor() {
  batdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2STheBattleResult_216::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2STheBattleResult_216::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2STheBattleResult_216_descriptor_;
}

const C2STheBattleResult_216& C2STheBattleResult_216::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2STheBattleResult_216* C2STheBattleResult_216::default_instance_ = NULL;

C2STheBattleResult_216* C2STheBattleResult_216::New(::google::protobuf::Arena* arena) const {
  C2STheBattleResult_216* n = new C2STheBattleResult_216;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2STheBattleResult_216::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2STheBattleResult_216)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(C2STheBattleResult_216, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<C2STheBattleResult_216*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(win_, battleseconds_);
  batdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool C2STheBattleResult_216::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2STheBattleResult_216)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Win = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &win_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_BatData;
        break;
      }

      // optional string BatData = 2;
      case 2: {
        if (tag == 18) {
         parse_BatData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_batdata()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->batdata().data(), this->batdata().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2STheBattleResult_216.BatData"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_LeftJudgement;
        break;
      }

      // optional uint32 LeftJudgement = 3;
      case 3: {
        if (tag == 24) {
         parse_LeftJudgement:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftjudgement_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_RightJudgement;
        break;
      }

      // optional uint32 RightJudgement = 4;
      case 4: {
        if (tag == 32) {
         parse_RightJudgement:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightjudgement_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_LeftScore;
        break;
      }

      // optional uint32 LeftScore = 5;
      case 5: {
        if (tag == 40) {
         parse_LeftScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftscore_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_RightScore;
        break;
      }

      // optional uint32 RightScore = 6;
      case 6: {
        if (tag == 48) {
         parse_RightScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightscore_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_BattleSeconds;
        break;
      }

      // optional uint32 BattleSeconds = 7;
      case 7: {
        if (tag == 56) {
         parse_BattleSeconds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battleseconds_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2STheBattleResult_216)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2STheBattleResult_216)
  return false;
#undef DO_
}

void C2STheBattleResult_216::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2STheBattleResult_216)
  // optional uint32 Win = 1;
  if (this->win() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->win(), output);
  }

  // optional string BatData = 2;
  if (this->batdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->batdata().data(), this->batdata().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2STheBattleResult_216.BatData");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->batdata(), output);
  }

  // optional uint32 LeftJudgement = 3;
  if (this->leftjudgement() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->leftjudgement(), output);
  }

  // optional uint32 RightJudgement = 4;
  if (this->rightjudgement() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->rightjudgement(), output);
  }

  // optional uint32 LeftScore = 5;
  if (this->leftscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->leftscore(), output);
  }

  // optional uint32 RightScore = 6;
  if (this->rightscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->rightscore(), output);
  }

  // optional uint32 BattleSeconds = 7;
  if (this->battleseconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->battleseconds(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2STheBattleResult_216)
}

::google::protobuf::uint8* C2STheBattleResult_216::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2STheBattleResult_216)
  // optional uint32 Win = 1;
  if (this->win() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->win(), target);
  }

  // optional string BatData = 2;
  if (this->batdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->batdata().data(), this->batdata().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2STheBattleResult_216.BatData");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->batdata(), target);
  }

  // optional uint32 LeftJudgement = 3;
  if (this->leftjudgement() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->leftjudgement(), target);
  }

  // optional uint32 RightJudgement = 4;
  if (this->rightjudgement() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->rightjudgement(), target);
  }

  // optional uint32 LeftScore = 5;
  if (this->leftscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->leftscore(), target);
  }

  // optional uint32 RightScore = 6;
  if (this->rightscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->rightscore(), target);
  }

  // optional uint32 BattleSeconds = 7;
  if (this->battleseconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->battleseconds(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2STheBattleResult_216)
  return target;
}

int C2STheBattleResult_216::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2STheBattleResult_216)
  int total_size = 0;

  // optional uint32 Win = 1;
  if (this->win() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->win());
  }

  // optional string BatData = 2;
  if (this->batdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->batdata());
  }

  // optional uint32 LeftJudgement = 3;
  if (this->leftjudgement() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftjudgement());
  }

  // optional uint32 RightJudgement = 4;
  if (this->rightjudgement() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rightjudgement());
  }

  // optional uint32 LeftScore = 5;
  if (this->leftscore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftscore());
  }

  // optional uint32 RightScore = 6;
  if (this->rightscore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rightscore());
  }

  // optional uint32 BattleSeconds = 7;
  if (this->battleseconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battleseconds());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2STheBattleResult_216::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2STheBattleResult_216)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2STheBattleResult_216* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2STheBattleResult_216>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2STheBattleResult_216)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2STheBattleResult_216)
    MergeFrom(*source);
  }
}

void C2STheBattleResult_216::MergeFrom(const C2STheBattleResult_216& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2STheBattleResult_216)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.win() != 0) {
    set_win(from.win());
  }
  if (from.batdata().size() > 0) {

    batdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.batdata_);
  }
  if (from.leftjudgement() != 0) {
    set_leftjudgement(from.leftjudgement());
  }
  if (from.rightjudgement() != 0) {
    set_rightjudgement(from.rightjudgement());
  }
  if (from.leftscore() != 0) {
    set_leftscore(from.leftscore());
  }
  if (from.rightscore() != 0) {
    set_rightscore(from.rightscore());
  }
  if (from.battleseconds() != 0) {
    set_battleseconds(from.battleseconds());
  }
}

void C2STheBattleResult_216::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2STheBattleResult_216)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2STheBattleResult_216::CopyFrom(const C2STheBattleResult_216& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2STheBattleResult_216)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2STheBattleResult_216::IsInitialized() const {

  return true;
}

void C2STheBattleResult_216::Swap(C2STheBattleResult_216* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2STheBattleResult_216::InternalSwap(C2STheBattleResult_216* other) {
  std::swap(win_, other->win_);
  batdata_.Swap(&other->batdata_);
  std::swap(leftjudgement_, other->leftjudgement_);
  std::swap(rightjudgement_, other->rightjudgement_);
  std::swap(leftscore_, other->leftscore_);
  std::swap(rightscore_, other->rightscore_);
  std::swap(battleseconds_, other->battleseconds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2STheBattleResult_216::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2STheBattleResult_216_descriptor_;
  metadata.reflection = C2STheBattleResult_216_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2STheBattleResult_216

// optional uint32 Win = 1;
void C2STheBattleResult_216::clear_win() {
  win_ = 0u;
}
 ::google::protobuf::uint32 C2STheBattleResult_216::win() const {
  // @@protoc_insertion_point(field_get:pb.C2STheBattleResult_216.Win)
  return win_;
}
 void C2STheBattleResult_216::set_win(::google::protobuf::uint32 value) {
  
  win_ = value;
  // @@protoc_insertion_point(field_set:pb.C2STheBattleResult_216.Win)
}

// optional string BatData = 2;
void C2STheBattleResult_216::clear_batdata() {
  batdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2STheBattleResult_216::batdata() const {
  // @@protoc_insertion_point(field_get:pb.C2STheBattleResult_216.BatData)
  return batdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2STheBattleResult_216::set_batdata(const ::std::string& value) {
  
  batdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2STheBattleResult_216.BatData)
}
 void C2STheBattleResult_216::set_batdata(const char* value) {
  
  batdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2STheBattleResult_216.BatData)
}
 void C2STheBattleResult_216::set_batdata(const char* value, size_t size) {
  
  batdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2STheBattleResult_216.BatData)
}
 ::std::string* C2STheBattleResult_216::mutable_batdata() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2STheBattleResult_216.BatData)
  return batdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2STheBattleResult_216::release_batdata() {
  // @@protoc_insertion_point(field_release:pb.C2STheBattleResult_216.BatData)
  
  return batdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2STheBattleResult_216::set_allocated_batdata(::std::string* batdata) {
  if (batdata != NULL) {
    
  } else {
    
  }
  batdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), batdata);
  // @@protoc_insertion_point(field_set_allocated:pb.C2STheBattleResult_216.BatData)
}

// optional uint32 LeftJudgement = 3;
void C2STheBattleResult_216::clear_leftjudgement() {
  leftjudgement_ = 0u;
}
 ::google::protobuf::uint32 C2STheBattleResult_216::leftjudgement() const {
  // @@protoc_insertion_point(field_get:pb.C2STheBattleResult_216.LeftJudgement)
  return leftjudgement_;
}
 void C2STheBattleResult_216::set_leftjudgement(::google::protobuf::uint32 value) {
  
  leftjudgement_ = value;
  // @@protoc_insertion_point(field_set:pb.C2STheBattleResult_216.LeftJudgement)
}

// optional uint32 RightJudgement = 4;
void C2STheBattleResult_216::clear_rightjudgement() {
  rightjudgement_ = 0u;
}
 ::google::protobuf::uint32 C2STheBattleResult_216::rightjudgement() const {
  // @@protoc_insertion_point(field_get:pb.C2STheBattleResult_216.RightJudgement)
  return rightjudgement_;
}
 void C2STheBattleResult_216::set_rightjudgement(::google::protobuf::uint32 value) {
  
  rightjudgement_ = value;
  // @@protoc_insertion_point(field_set:pb.C2STheBattleResult_216.RightJudgement)
}

// optional uint32 LeftScore = 5;
void C2STheBattleResult_216::clear_leftscore() {
  leftscore_ = 0u;
}
 ::google::protobuf::uint32 C2STheBattleResult_216::leftscore() const {
  // @@protoc_insertion_point(field_get:pb.C2STheBattleResult_216.LeftScore)
  return leftscore_;
}
 void C2STheBattleResult_216::set_leftscore(::google::protobuf::uint32 value) {
  
  leftscore_ = value;
  // @@protoc_insertion_point(field_set:pb.C2STheBattleResult_216.LeftScore)
}

// optional uint32 RightScore = 6;
void C2STheBattleResult_216::clear_rightscore() {
  rightscore_ = 0u;
}
 ::google::protobuf::uint32 C2STheBattleResult_216::rightscore() const {
  // @@protoc_insertion_point(field_get:pb.C2STheBattleResult_216.RightScore)
  return rightscore_;
}
 void C2STheBattleResult_216::set_rightscore(::google::protobuf::uint32 value) {
  
  rightscore_ = value;
  // @@protoc_insertion_point(field_set:pb.C2STheBattleResult_216.RightScore)
}

// optional uint32 BattleSeconds = 7;
void C2STheBattleResult_216::clear_battleseconds() {
  battleseconds_ = 0u;
}
 ::google::protobuf::uint32 C2STheBattleResult_216::battleseconds() const {
  // @@protoc_insertion_point(field_get:pb.C2STheBattleResult_216.BattleSeconds)
  return battleseconds_;
}
 void C2STheBattleResult_216::set_battleseconds(::google::protobuf::uint32 value) {
  
  battleseconds_ = value;
  // @@protoc_insertion_point(field_set:pb.C2STheBattleResult_216.BattleSeconds)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CTheBattleResult_216::kBodyFieldNumber;
const int S2CTheBattleResult_216::kIsExpMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CTheBattleResult_216::S2CTheBattleResult_216()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CTheBattleResult_216)
}

void S2CTheBattleResult_216::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  body_ = const_cast< ::pb::Msgbody216*>(&::pb::Msgbody216::default_instance());
}

S2CTheBattleResult_216::S2CTheBattleResult_216(const S2CTheBattleResult_216& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CTheBattleResult_216)
}

void S2CTheBattleResult_216::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  body_ = NULL;
  isexpmax_ = false;
}

S2CTheBattleResult_216::~S2CTheBattleResult_216() {
  // @@protoc_insertion_point(destructor:pb.S2CTheBattleResult_216)
  SharedDtor();
}

void S2CTheBattleResult_216::SharedDtor() {
  if (this != default_instance_) {
    delete body_;
  }
}

void S2CTheBattleResult_216::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CTheBattleResult_216::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CTheBattleResult_216_descriptor_;
}

const S2CTheBattleResult_216& S2CTheBattleResult_216::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CTheBattleResult_216* S2CTheBattleResult_216::default_instance_ = NULL;

S2CTheBattleResult_216* S2CTheBattleResult_216::New(::google::protobuf::Arena* arena) const {
  S2CTheBattleResult_216* n = new S2CTheBattleResult_216;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CTheBattleResult_216::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CTheBattleResult_216)
  if (GetArenaNoVirtual() == NULL && body_ != NULL) delete body_;
  body_ = NULL;
  isexpmax_ = false;
}

bool S2CTheBattleResult_216::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CTheBattleResult_216)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.Msgbody216 Body = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_IsExpMax;
        break;
      }

      // optional bool IsExpMax = 2;
      case 2: {
        if (tag == 16) {
         parse_IsExpMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isexpmax_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CTheBattleResult_216)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CTheBattleResult_216)
  return false;
#undef DO_
}

void S2CTheBattleResult_216::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CTheBattleResult_216)
  // optional .pb.Msgbody216 Body = 1;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->body_, output);
  }

  // optional bool IsExpMax = 2;
  if (this->isexpmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isexpmax(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CTheBattleResult_216)
}

::google::protobuf::uint8* S2CTheBattleResult_216::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CTheBattleResult_216)
  // optional .pb.Msgbody216 Body = 1;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->body_, false, target);
  }

  // optional bool IsExpMax = 2;
  if (this->isexpmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isexpmax(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CTheBattleResult_216)
  return target;
}

int S2CTheBattleResult_216::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CTheBattleResult_216)
  int total_size = 0;

  // optional .pb.Msgbody216 Body = 1;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->body_);
  }

  // optional bool IsExpMax = 2;
  if (this->isexpmax() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CTheBattleResult_216::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CTheBattleResult_216)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CTheBattleResult_216* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CTheBattleResult_216>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CTheBattleResult_216)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CTheBattleResult_216)
    MergeFrom(*source);
  }
}

void S2CTheBattleResult_216::MergeFrom(const S2CTheBattleResult_216& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CTheBattleResult_216)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_body()) {
    mutable_body()->::pb::Msgbody216::MergeFrom(from.body());
  }
  if (from.isexpmax() != 0) {
    set_isexpmax(from.isexpmax());
  }
}

void S2CTheBattleResult_216::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CTheBattleResult_216)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CTheBattleResult_216::CopyFrom(const S2CTheBattleResult_216& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CTheBattleResult_216)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CTheBattleResult_216::IsInitialized() const {

  return true;
}

void S2CTheBattleResult_216::Swap(S2CTheBattleResult_216* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CTheBattleResult_216::InternalSwap(S2CTheBattleResult_216* other) {
  std::swap(body_, other->body_);
  std::swap(isexpmax_, other->isexpmax_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CTheBattleResult_216::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CTheBattleResult_216_descriptor_;
  metadata.reflection = S2CTheBattleResult_216_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CTheBattleResult_216

// optional .pb.Msgbody216 Body = 1;
bool S2CTheBattleResult_216::has_body() const {
  return !_is_default_instance_ && body_ != NULL;
}
void S2CTheBattleResult_216::clear_body() {
  if (GetArenaNoVirtual() == NULL && body_ != NULL) delete body_;
  body_ = NULL;
}
const ::pb::Msgbody216& S2CTheBattleResult_216::body() const {
  // @@protoc_insertion_point(field_get:pb.S2CTheBattleResult_216.Body)
  return body_ != NULL ? *body_ : *default_instance_->body_;
}
::pb::Msgbody216* S2CTheBattleResult_216::mutable_body() {
  
  if (body_ == NULL) {
    body_ = new ::pb::Msgbody216;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CTheBattleResult_216.Body)
  return body_;
}
::pb::Msgbody216* S2CTheBattleResult_216::release_body() {
  // @@protoc_insertion_point(field_release:pb.S2CTheBattleResult_216.Body)
  
  ::pb::Msgbody216* temp = body_;
  body_ = NULL;
  return temp;
}
void S2CTheBattleResult_216::set_allocated_body(::pb::Msgbody216* body) {
  delete body_;
  body_ = body;
  if (body) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CTheBattleResult_216.Body)
}

// optional bool IsExpMax = 2;
void S2CTheBattleResult_216::clear_isexpmax() {
  isexpmax_ = false;
}
 bool S2CTheBattleResult_216::isexpmax() const {
  // @@protoc_insertion_point(field_get:pb.S2CTheBattleResult_216.IsExpMax)
  return isexpmax_;
}
 void S2CTheBattleResult_216::set_isexpmax(bool value) {
  
  isexpmax_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CTheBattleResult_216.IsExpMax)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SBatRecordLst_220::C2SBatRecordLst_220()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SBatRecordLst_220)
}

void C2SBatRecordLst_220::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SBatRecordLst_220::C2SBatRecordLst_220(const C2SBatRecordLst_220& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SBatRecordLst_220)
}

void C2SBatRecordLst_220::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SBatRecordLst_220::~C2SBatRecordLst_220() {
  // @@protoc_insertion_point(destructor:pb.C2SBatRecordLst_220)
  SharedDtor();
}

void C2SBatRecordLst_220::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SBatRecordLst_220::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SBatRecordLst_220::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SBatRecordLst_220_descriptor_;
}

const C2SBatRecordLst_220& C2SBatRecordLst_220::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SBatRecordLst_220* C2SBatRecordLst_220::default_instance_ = NULL;

C2SBatRecordLst_220* C2SBatRecordLst_220::New(::google::protobuf::Arena* arena) const {
  C2SBatRecordLst_220* n = new C2SBatRecordLst_220;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SBatRecordLst_220::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SBatRecordLst_220)
}

bool C2SBatRecordLst_220::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SBatRecordLst_220)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SBatRecordLst_220)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SBatRecordLst_220)
  return false;
#undef DO_
}

void C2SBatRecordLst_220::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SBatRecordLst_220)
  // @@protoc_insertion_point(serialize_end:pb.C2SBatRecordLst_220)
}

::google::protobuf::uint8* C2SBatRecordLst_220::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SBatRecordLst_220)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SBatRecordLst_220)
  return target;
}

int C2SBatRecordLst_220::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SBatRecordLst_220)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SBatRecordLst_220::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SBatRecordLst_220)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SBatRecordLst_220* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SBatRecordLst_220>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SBatRecordLst_220)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SBatRecordLst_220)
    MergeFrom(*source);
  }
}

void C2SBatRecordLst_220::MergeFrom(const C2SBatRecordLst_220& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SBatRecordLst_220)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SBatRecordLst_220::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SBatRecordLst_220)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SBatRecordLst_220::CopyFrom(const C2SBatRecordLst_220& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SBatRecordLst_220)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SBatRecordLst_220::IsInitialized() const {

  return true;
}

void C2SBatRecordLst_220::Swap(C2SBatRecordLst_220* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SBatRecordLst_220::InternalSwap(C2SBatRecordLst_220* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SBatRecordLst_220::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SBatRecordLst_220_descriptor_;
  metadata.reflection = C2SBatRecordLst_220_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SBatRecordLst_220

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CBatRecordLst_220::kBatRecIdLstFieldNumber;
const int S2CBatRecordLst_220::kBatRecIdTickLstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CBatRecordLst_220::S2CBatRecordLst_220()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CBatRecordLst_220)
}

void S2CBatRecordLst_220::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CBatRecordLst_220::S2CBatRecordLst_220(const S2CBatRecordLst_220& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CBatRecordLst_220)
}

void S2CBatRecordLst_220::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CBatRecordLst_220::~S2CBatRecordLst_220() {
  // @@protoc_insertion_point(destructor:pb.S2CBatRecordLst_220)
  SharedDtor();
}

void S2CBatRecordLst_220::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CBatRecordLst_220::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CBatRecordLst_220::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CBatRecordLst_220_descriptor_;
}

const S2CBatRecordLst_220& S2CBatRecordLst_220::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CBatRecordLst_220* S2CBatRecordLst_220::default_instance_ = NULL;

S2CBatRecordLst_220* S2CBatRecordLst_220::New(::google::protobuf::Arena* arena) const {
  S2CBatRecordLst_220* n = new S2CBatRecordLst_220;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CBatRecordLst_220::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CBatRecordLst_220)
  batrecidlst_.Clear();
  batrecidticklst_.Clear();
}

bool S2CBatRecordLst_220::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CBatRecordLst_220)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 BatRecIdLst = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_batrecidlst())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10, input, this->mutable_batrecidlst())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_BatRecIdTickLst;
        break;
      }

      // repeated uint32 BatRecIdTickLst = 2;
      case 2: {
        if (tag == 18) {
         parse_BatRecIdTickLst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_batrecidticklst())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_batrecidticklst())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CBatRecordLst_220)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CBatRecordLst_220)
  return false;
#undef DO_
}

void S2CBatRecordLst_220::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CBatRecordLst_220)
  // repeated uint64 BatRecIdLst = 1;
  if (this->batrecidlst_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_batrecidlst_cached_byte_size_);
  }
  for (int i = 0; i < this->batrecidlst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->batrecidlst(i), output);
  }

  // repeated uint32 BatRecIdTickLst = 2;
  if (this->batrecidticklst_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_batrecidticklst_cached_byte_size_);
  }
  for (int i = 0; i < this->batrecidticklst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->batrecidticklst(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CBatRecordLst_220)
}

::google::protobuf::uint8* S2CBatRecordLst_220::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CBatRecordLst_220)
  // repeated uint64 BatRecIdLst = 1;
  if (this->batrecidlst_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _batrecidlst_cached_byte_size_, target);
  }
  for (int i = 0; i < this->batrecidlst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->batrecidlst(i), target);
  }

  // repeated uint32 BatRecIdTickLst = 2;
  if (this->batrecidticklst_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _batrecidticklst_cached_byte_size_, target);
  }
  for (int i = 0; i < this->batrecidticklst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->batrecidticklst(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CBatRecordLst_220)
  return target;
}

int S2CBatRecordLst_220::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CBatRecordLst_220)
  int total_size = 0;

  // repeated uint64 BatRecIdLst = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->batrecidlst_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->batrecidlst(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _batrecidlst_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 BatRecIdTickLst = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->batrecidticklst_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->batrecidticklst(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _batrecidticklst_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CBatRecordLst_220::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CBatRecordLst_220)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CBatRecordLst_220* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CBatRecordLst_220>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CBatRecordLst_220)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CBatRecordLst_220)
    MergeFrom(*source);
  }
}

void S2CBatRecordLst_220::MergeFrom(const S2CBatRecordLst_220& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CBatRecordLst_220)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  batrecidlst_.MergeFrom(from.batrecidlst_);
  batrecidticklst_.MergeFrom(from.batrecidticklst_);
}

void S2CBatRecordLst_220::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CBatRecordLst_220)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CBatRecordLst_220::CopyFrom(const S2CBatRecordLst_220& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CBatRecordLst_220)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CBatRecordLst_220::IsInitialized() const {

  return true;
}

void S2CBatRecordLst_220::Swap(S2CBatRecordLst_220* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CBatRecordLst_220::InternalSwap(S2CBatRecordLst_220* other) {
  batrecidlst_.UnsafeArenaSwap(&other->batrecidlst_);
  batrecidticklst_.UnsafeArenaSwap(&other->batrecidticklst_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CBatRecordLst_220::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CBatRecordLst_220_descriptor_;
  metadata.reflection = S2CBatRecordLst_220_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CBatRecordLst_220

// repeated uint64 BatRecIdLst = 1;
int S2CBatRecordLst_220::batrecidlst_size() const {
  return batrecidlst_.size();
}
void S2CBatRecordLst_220::clear_batrecidlst() {
  batrecidlst_.Clear();
}
 ::google::protobuf::uint64 S2CBatRecordLst_220::batrecidlst(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CBatRecordLst_220.BatRecIdLst)
  return batrecidlst_.Get(index);
}
 void S2CBatRecordLst_220::set_batrecidlst(int index, ::google::protobuf::uint64 value) {
  batrecidlst_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.S2CBatRecordLst_220.BatRecIdLst)
}
 void S2CBatRecordLst_220::add_batrecidlst(::google::protobuf::uint64 value) {
  batrecidlst_.Add(value);
  // @@protoc_insertion_point(field_add:pb.S2CBatRecordLst_220.BatRecIdLst)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2CBatRecordLst_220::batrecidlst() const {
  // @@protoc_insertion_point(field_list:pb.S2CBatRecordLst_220.BatRecIdLst)
  return batrecidlst_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2CBatRecordLst_220::mutable_batrecidlst() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CBatRecordLst_220.BatRecIdLst)
  return &batrecidlst_;
}

// repeated uint32 BatRecIdTickLst = 2;
int S2CBatRecordLst_220::batrecidticklst_size() const {
  return batrecidticklst_.size();
}
void S2CBatRecordLst_220::clear_batrecidticklst() {
  batrecidticklst_.Clear();
}
 ::google::protobuf::uint32 S2CBatRecordLst_220::batrecidticklst(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CBatRecordLst_220.BatRecIdTickLst)
  return batrecidticklst_.Get(index);
}
 void S2CBatRecordLst_220::set_batrecidticklst(int index, ::google::protobuf::uint32 value) {
  batrecidticklst_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.S2CBatRecordLst_220.BatRecIdTickLst)
}
 void S2CBatRecordLst_220::add_batrecidticklst(::google::protobuf::uint32 value) {
  batrecidticklst_.Add(value);
  // @@protoc_insertion_point(field_add:pb.S2CBatRecordLst_220.BatRecIdTickLst)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
S2CBatRecordLst_220::batrecidticklst() const {
  // @@protoc_insertion_point(field_list:pb.S2CBatRecordLst_220.BatRecIdTickLst)
  return batrecidticklst_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
S2CBatRecordLst_220::mutable_batrecidticklst() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CBatRecordLst_220.BatRecIdTickLst)
  return &batrecidticklst_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SBatRecord_221::kBatRecordIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SBatRecord_221::C2SBatRecord_221()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SBatRecord_221)
}

void C2SBatRecord_221::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SBatRecord_221::C2SBatRecord_221(const C2SBatRecord_221& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SBatRecord_221)
}

void C2SBatRecord_221::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  batrecordid_ = GOOGLE_ULONGLONG(0);
}

C2SBatRecord_221::~C2SBatRecord_221() {
  // @@protoc_insertion_point(destructor:pb.C2SBatRecord_221)
  SharedDtor();
}

void C2SBatRecord_221::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SBatRecord_221::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SBatRecord_221::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SBatRecord_221_descriptor_;
}

const C2SBatRecord_221& C2SBatRecord_221::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SBatRecord_221* C2SBatRecord_221::default_instance_ = NULL;

C2SBatRecord_221* C2SBatRecord_221::New(::google::protobuf::Arena* arena) const {
  C2SBatRecord_221* n = new C2SBatRecord_221;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SBatRecord_221::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SBatRecord_221)
  batrecordid_ = GOOGLE_ULONGLONG(0);
}

bool C2SBatRecord_221::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SBatRecord_221)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 BatRecordId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &batrecordid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SBatRecord_221)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SBatRecord_221)
  return false;
#undef DO_
}

void C2SBatRecord_221::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SBatRecord_221)
  // optional uint64 BatRecordId = 1;
  if (this->batrecordid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->batrecordid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SBatRecord_221)
}

::google::protobuf::uint8* C2SBatRecord_221::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SBatRecord_221)
  // optional uint64 BatRecordId = 1;
  if (this->batrecordid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->batrecordid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SBatRecord_221)
  return target;
}

int C2SBatRecord_221::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SBatRecord_221)
  int total_size = 0;

  // optional uint64 BatRecordId = 1;
  if (this->batrecordid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->batrecordid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SBatRecord_221::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SBatRecord_221)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SBatRecord_221* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SBatRecord_221>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SBatRecord_221)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SBatRecord_221)
    MergeFrom(*source);
  }
}

void C2SBatRecord_221::MergeFrom(const C2SBatRecord_221& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SBatRecord_221)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.batrecordid() != 0) {
    set_batrecordid(from.batrecordid());
  }
}

void C2SBatRecord_221::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SBatRecord_221)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SBatRecord_221::CopyFrom(const C2SBatRecord_221& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SBatRecord_221)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SBatRecord_221::IsInitialized() const {

  return true;
}

void C2SBatRecord_221::Swap(C2SBatRecord_221* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SBatRecord_221::InternalSwap(C2SBatRecord_221* other) {
  std::swap(batrecordid_, other->batrecordid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SBatRecord_221::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SBatRecord_221_descriptor_;
  metadata.reflection = C2SBatRecord_221_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SBatRecord_221

// optional uint64 BatRecordId = 1;
void C2SBatRecord_221::clear_batrecordid() {
  batrecordid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 C2SBatRecord_221::batrecordid() const {
  // @@protoc_insertion_point(field_get:pb.C2SBatRecord_221.BatRecordId)
  return batrecordid_;
}
 void C2SBatRecord_221::set_batrecordid(::google::protobuf::uint64 value) {
  
  batrecordid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SBatRecord_221.BatRecordId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CBatRecord_221::kBatRecordIdFieldNumber;
const int S2CBatRecord_221::kTickFieldNumber;
const int S2CBatRecord_221::kRandomSeedFieldNumber;
const int S2CBatRecord_221::kUserlistFieldNumber;
const int S2CBatRecord_221::kFrameDataListFieldNumber;
const int S2CBatRecord_221::kBadge1FieldNumber;
const int S2CBatRecord_221::kBadge2FieldNumber;
const int S2CBatRecord_221::kSceneIdFieldNumber;
const int S2CBatRecord_221::kCfgstringFieldNumber;
const int S2CBatRecord_221::kBodyFieldNumber;
const int S2CBatRecord_221::kGiveupRidsFieldNumber;
const int S2CBatRecord_221::kSvrFrameDeltaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CBatRecord_221::S2CBatRecord_221()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CBatRecord_221)
}

void S2CBatRecord_221::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  body_ = const_cast< ::pb::Msgbody216*>(&::pb::Msgbody216::default_instance());
}

S2CBatRecord_221::S2CBatRecord_221(const S2CBatRecord_221& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CBatRecord_221)
}

void S2CBatRecord_221::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  batrecordid_ = GOOGLE_ULONGLONG(0);
  tick_ = 0u;
  randomseed_ = 0u;
  badge1_ = 0u;
  badge2_ = 0u;
  sceneid_ = 0u;
  cfgstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_ = NULL;
  giveuprids_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  svrframedelta_ = 0u;
}

S2CBatRecord_221::~S2CBatRecord_221() {
  // @@protoc_insertion_point(destructor:pb.S2CBatRecord_221)
  SharedDtor();
}

void S2CBatRecord_221::SharedDtor() {
  cfgstring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  giveuprids_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete body_;
  }
}

void S2CBatRecord_221::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CBatRecord_221::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CBatRecord_221_descriptor_;
}

const S2CBatRecord_221& S2CBatRecord_221::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CBatRecord_221* S2CBatRecord_221::default_instance_ = NULL;

S2CBatRecord_221* S2CBatRecord_221::New(::google::protobuf::Arena* arena) const {
  S2CBatRecord_221* n = new S2CBatRecord_221;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CBatRecord_221::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CBatRecord_221)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CBatRecord_221, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CBatRecord_221*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(batrecordid_, randomseed_);
  ZR_(badge1_, badge2_);
  sceneid_ = 0u;
  cfgstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && body_ != NULL) delete body_;
  body_ = NULL;
  giveuprids_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  svrframedelta_ = 0u;

#undef ZR_HELPER_
#undef ZR_

  userlist_.Clear();
  framedatalist_.Clear();
}

bool S2CBatRecord_221::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CBatRecord_221)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 BatRecordId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &batrecordid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Tick;
        break;
      }

      // optional uint32 Tick = 2;
      case 2: {
        if (tag == 16) {
         parse_Tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tick_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RandomSeed;
        break;
      }

      // optional uint32 RandomSeed = 3;
      case 3: {
        if (tag == 24) {
         parse_RandomSeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &randomseed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Userlist;
        break;
      }

      // repeated .pb.PRoomUser Userlist = 4;
      case 4: {
        if (tag == 34) {
         parse_Userlist:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Userlist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_userlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_Userlist;
        if (input->ExpectTag(42)) goto parse_loop_FrameDataList;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .pb.S2CServerFrameUpdate_2001 FrameDataList = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_FrameDataList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_framedatalist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_FrameDataList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(48)) goto parse_Badge1;
        break;
      }

      // optional uint32 Badge1 = 6;
      case 6: {
        if (tag == 48) {
         parse_Badge1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &badge1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Badge2;
        break;
      }

      // optional uint32 Badge2 = 7;
      case 7: {
        if (tag == 56) {
         parse_Badge2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &badge2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_SceneId;
        break;
      }

      // optional uint32 SceneId = 8;
      case 8: {
        if (tag == 64) {
         parse_SceneId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sceneid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_Cfgstring;
        break;
      }

      // optional string Cfgstring = 9;
      case 9: {
        if (tag == 74) {
         parse_Cfgstring:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cfgstring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cfgstring().data(), this->cfgstring().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CBatRecord_221.Cfgstring"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_Body;
        break;
      }

      // optional .pb.Msgbody216 Body = 10;
      case 10: {
        if (tag == 82) {
         parse_Body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_GiveupRids;
        break;
      }

      // optional string GiveupRids = 11;
      case 11: {
        if (tag == 90) {
         parse_GiveupRids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_giveuprids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->giveuprids().data(), this->giveuprids().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CBatRecord_221.GiveupRids"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_SvrFrameDelta;
        break;
      }

      // optional uint32 SvrFrameDelta = 12;
      case 12: {
        if (tag == 96) {
         parse_SvrFrameDelta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &svrframedelta_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CBatRecord_221)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CBatRecord_221)
  return false;
#undef DO_
}

void S2CBatRecord_221::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CBatRecord_221)
  // optional uint64 BatRecordId = 1;
  if (this->batrecordid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->batrecordid(), output);
  }

  // optional uint32 Tick = 2;
  if (this->tick() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tick(), output);
  }

  // optional uint32 RandomSeed = 3;
  if (this->randomseed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->randomseed(), output);
  }

  // repeated .pb.PRoomUser Userlist = 4;
  for (unsigned int i = 0, n = this->userlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->userlist(i), output);
  }

  // repeated .pb.S2CServerFrameUpdate_2001 FrameDataList = 5;
  for (unsigned int i = 0, n = this->framedatalist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->framedatalist(i), output);
  }

  // optional uint32 Badge1 = 6;
  if (this->badge1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->badge1(), output);
  }

  // optional uint32 Badge2 = 7;
  if (this->badge2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->badge2(), output);
  }

  // optional uint32 SceneId = 8;
  if (this->sceneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->sceneid(), output);
  }

  // optional string Cfgstring = 9;
  if (this->cfgstring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cfgstring().data(), this->cfgstring().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CBatRecord_221.Cfgstring");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->cfgstring(), output);
  }

  // optional .pb.Msgbody216 Body = 10;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->body_, output);
  }

  // optional string GiveupRids = 11;
  if (this->giveuprids().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->giveuprids().data(), this->giveuprids().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CBatRecord_221.GiveupRids");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->giveuprids(), output);
  }

  // optional uint32 SvrFrameDelta = 12;
  if (this->svrframedelta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->svrframedelta(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CBatRecord_221)
}

::google::protobuf::uint8* S2CBatRecord_221::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CBatRecord_221)
  // optional uint64 BatRecordId = 1;
  if (this->batrecordid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->batrecordid(), target);
  }

  // optional uint32 Tick = 2;
  if (this->tick() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tick(), target);
  }

  // optional uint32 RandomSeed = 3;
  if (this->randomseed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->randomseed(), target);
  }

  // repeated .pb.PRoomUser Userlist = 4;
  for (unsigned int i = 0, n = this->userlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->userlist(i), false, target);
  }

  // repeated .pb.S2CServerFrameUpdate_2001 FrameDataList = 5;
  for (unsigned int i = 0, n = this->framedatalist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->framedatalist(i), false, target);
  }

  // optional uint32 Badge1 = 6;
  if (this->badge1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->badge1(), target);
  }

  // optional uint32 Badge2 = 7;
  if (this->badge2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->badge2(), target);
  }

  // optional uint32 SceneId = 8;
  if (this->sceneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->sceneid(), target);
  }

  // optional string Cfgstring = 9;
  if (this->cfgstring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cfgstring().data(), this->cfgstring().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CBatRecord_221.Cfgstring");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->cfgstring(), target);
  }

  // optional .pb.Msgbody216 Body = 10;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->body_, false, target);
  }

  // optional string GiveupRids = 11;
  if (this->giveuprids().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->giveuprids().data(), this->giveuprids().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CBatRecord_221.GiveupRids");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->giveuprids(), target);
  }

  // optional uint32 SvrFrameDelta = 12;
  if (this->svrframedelta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->svrframedelta(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CBatRecord_221)
  return target;
}

int S2CBatRecord_221::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CBatRecord_221)
  int total_size = 0;

  // optional uint64 BatRecordId = 1;
  if (this->batrecordid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->batrecordid());
  }

  // optional uint32 Tick = 2;
  if (this->tick() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tick());
  }

  // optional uint32 RandomSeed = 3;
  if (this->randomseed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->randomseed());
  }

  // optional uint32 Badge1 = 6;
  if (this->badge1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->badge1());
  }

  // optional uint32 Badge2 = 7;
  if (this->badge2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->badge2());
  }

  // optional uint32 SceneId = 8;
  if (this->sceneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sceneid());
  }

  // optional string Cfgstring = 9;
  if (this->cfgstring().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cfgstring());
  }

  // optional .pb.Msgbody216 Body = 10;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->body_);
  }

  // optional string GiveupRids = 11;
  if (this->giveuprids().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->giveuprids());
  }

  // optional uint32 SvrFrameDelta = 12;
  if (this->svrframedelta() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->svrframedelta());
  }

  // repeated .pb.PRoomUser Userlist = 4;
  total_size += 1 * this->userlist_size();
  for (int i = 0; i < this->userlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userlist(i));
  }

  // repeated .pb.S2CServerFrameUpdate_2001 FrameDataList = 5;
  total_size += 1 * this->framedatalist_size();
  for (int i = 0; i < this->framedatalist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->framedatalist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CBatRecord_221::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CBatRecord_221)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CBatRecord_221* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CBatRecord_221>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CBatRecord_221)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CBatRecord_221)
    MergeFrom(*source);
  }
}

void S2CBatRecord_221::MergeFrom(const S2CBatRecord_221& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CBatRecord_221)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  userlist_.MergeFrom(from.userlist_);
  framedatalist_.MergeFrom(from.framedatalist_);
  if (from.batrecordid() != 0) {
    set_batrecordid(from.batrecordid());
  }
  if (from.tick() != 0) {
    set_tick(from.tick());
  }
  if (from.randomseed() != 0) {
    set_randomseed(from.randomseed());
  }
  if (from.badge1() != 0) {
    set_badge1(from.badge1());
  }
  if (from.badge2() != 0) {
    set_badge2(from.badge2());
  }
  if (from.sceneid() != 0) {
    set_sceneid(from.sceneid());
  }
  if (from.cfgstring().size() > 0) {

    cfgstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cfgstring_);
  }
  if (from.has_body()) {
    mutable_body()->::pb::Msgbody216::MergeFrom(from.body());
  }
  if (from.giveuprids().size() > 0) {

    giveuprids_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.giveuprids_);
  }
  if (from.svrframedelta() != 0) {
    set_svrframedelta(from.svrframedelta());
  }
}

void S2CBatRecord_221::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CBatRecord_221)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CBatRecord_221::CopyFrom(const S2CBatRecord_221& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CBatRecord_221)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CBatRecord_221::IsInitialized() const {

  return true;
}

void S2CBatRecord_221::Swap(S2CBatRecord_221* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CBatRecord_221::InternalSwap(S2CBatRecord_221* other) {
  std::swap(batrecordid_, other->batrecordid_);
  std::swap(tick_, other->tick_);
  std::swap(randomseed_, other->randomseed_);
  userlist_.UnsafeArenaSwap(&other->userlist_);
  framedatalist_.UnsafeArenaSwap(&other->framedatalist_);
  std::swap(badge1_, other->badge1_);
  std::swap(badge2_, other->badge2_);
  std::swap(sceneid_, other->sceneid_);
  cfgstring_.Swap(&other->cfgstring_);
  std::swap(body_, other->body_);
  giveuprids_.Swap(&other->giveuprids_);
  std::swap(svrframedelta_, other->svrframedelta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CBatRecord_221::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CBatRecord_221_descriptor_;
  metadata.reflection = S2CBatRecord_221_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CBatRecord_221

// optional uint64 BatRecordId = 1;
void S2CBatRecord_221::clear_batrecordid() {
  batrecordid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CBatRecord_221::batrecordid() const {
  // @@protoc_insertion_point(field_get:pb.S2CBatRecord_221.BatRecordId)
  return batrecordid_;
}
 void S2CBatRecord_221::set_batrecordid(::google::protobuf::uint64 value) {
  
  batrecordid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CBatRecord_221.BatRecordId)
}

// optional uint32 Tick = 2;
void S2CBatRecord_221::clear_tick() {
  tick_ = 0u;
}
 ::google::protobuf::uint32 S2CBatRecord_221::tick() const {
  // @@protoc_insertion_point(field_get:pb.S2CBatRecord_221.Tick)
  return tick_;
}
 void S2CBatRecord_221::set_tick(::google::protobuf::uint32 value) {
  
  tick_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CBatRecord_221.Tick)
}

// optional uint32 RandomSeed = 3;
void S2CBatRecord_221::clear_randomseed() {
  randomseed_ = 0u;
}
 ::google::protobuf::uint32 S2CBatRecord_221::randomseed() const {
  // @@protoc_insertion_point(field_get:pb.S2CBatRecord_221.RandomSeed)
  return randomseed_;
}
 void S2CBatRecord_221::set_randomseed(::google::protobuf::uint32 value) {
  
  randomseed_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CBatRecord_221.RandomSeed)
}

// repeated .pb.PRoomUser Userlist = 4;
int S2CBatRecord_221::userlist_size() const {
  return userlist_.size();
}
void S2CBatRecord_221::clear_userlist() {
  userlist_.Clear();
}
const ::pb::PRoomUser& S2CBatRecord_221::userlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CBatRecord_221.Userlist)
  return userlist_.Get(index);
}
::pb::PRoomUser* S2CBatRecord_221::mutable_userlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CBatRecord_221.Userlist)
  return userlist_.Mutable(index);
}
::pb::PRoomUser* S2CBatRecord_221::add_userlist() {
  // @@protoc_insertion_point(field_add:pb.S2CBatRecord_221.Userlist)
  return userlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::PRoomUser >*
S2CBatRecord_221::mutable_userlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CBatRecord_221.Userlist)
  return &userlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::PRoomUser >&
S2CBatRecord_221::userlist() const {
  // @@protoc_insertion_point(field_list:pb.S2CBatRecord_221.Userlist)
  return userlist_;
}

// repeated .pb.S2CServerFrameUpdate_2001 FrameDataList = 5;
int S2CBatRecord_221::framedatalist_size() const {
  return framedatalist_.size();
}
void S2CBatRecord_221::clear_framedatalist() {
  framedatalist_.Clear();
}
const ::pb::S2CServerFrameUpdate_2001& S2CBatRecord_221::framedatalist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CBatRecord_221.FrameDataList)
  return framedatalist_.Get(index);
}
::pb::S2CServerFrameUpdate_2001* S2CBatRecord_221::mutable_framedatalist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CBatRecord_221.FrameDataList)
  return framedatalist_.Mutable(index);
}
::pb::S2CServerFrameUpdate_2001* S2CBatRecord_221::add_framedatalist() {
  // @@protoc_insertion_point(field_add:pb.S2CBatRecord_221.FrameDataList)
  return framedatalist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::S2CServerFrameUpdate_2001 >*
S2CBatRecord_221::mutable_framedatalist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CBatRecord_221.FrameDataList)
  return &framedatalist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::S2CServerFrameUpdate_2001 >&
S2CBatRecord_221::framedatalist() const {
  // @@protoc_insertion_point(field_list:pb.S2CBatRecord_221.FrameDataList)
  return framedatalist_;
}

// optional uint32 Badge1 = 6;
void S2CBatRecord_221::clear_badge1() {
  badge1_ = 0u;
}
 ::google::protobuf::uint32 S2CBatRecord_221::badge1() const {
  // @@protoc_insertion_point(field_get:pb.S2CBatRecord_221.Badge1)
  return badge1_;
}
 void S2CBatRecord_221::set_badge1(::google::protobuf::uint32 value) {
  
  badge1_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CBatRecord_221.Badge1)
}

// optional uint32 Badge2 = 7;
void S2CBatRecord_221::clear_badge2() {
  badge2_ = 0u;
}
 ::google::protobuf::uint32 S2CBatRecord_221::badge2() const {
  // @@protoc_insertion_point(field_get:pb.S2CBatRecord_221.Badge2)
  return badge2_;
}
 void S2CBatRecord_221::set_badge2(::google::protobuf::uint32 value) {
  
  badge2_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CBatRecord_221.Badge2)
}

// optional uint32 SceneId = 8;
void S2CBatRecord_221::clear_sceneid() {
  sceneid_ = 0u;
}
 ::google::protobuf::uint32 S2CBatRecord_221::sceneid() const {
  // @@protoc_insertion_point(field_get:pb.S2CBatRecord_221.SceneId)
  return sceneid_;
}
 void S2CBatRecord_221::set_sceneid(::google::protobuf::uint32 value) {
  
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CBatRecord_221.SceneId)
}

// optional string Cfgstring = 9;
void S2CBatRecord_221::clear_cfgstring() {
  cfgstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CBatRecord_221::cfgstring() const {
  // @@protoc_insertion_point(field_get:pb.S2CBatRecord_221.Cfgstring)
  return cfgstring_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CBatRecord_221::set_cfgstring(const ::std::string& value) {
  
  cfgstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CBatRecord_221.Cfgstring)
}
 void S2CBatRecord_221::set_cfgstring(const char* value) {
  
  cfgstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CBatRecord_221.Cfgstring)
}
 void S2CBatRecord_221::set_cfgstring(const char* value, size_t size) {
  
  cfgstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CBatRecord_221.Cfgstring)
}
 ::std::string* S2CBatRecord_221::mutable_cfgstring() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CBatRecord_221.Cfgstring)
  return cfgstring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CBatRecord_221::release_cfgstring() {
  // @@protoc_insertion_point(field_release:pb.S2CBatRecord_221.Cfgstring)
  
  return cfgstring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CBatRecord_221::set_allocated_cfgstring(::std::string* cfgstring) {
  if (cfgstring != NULL) {
    
  } else {
    
  }
  cfgstring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cfgstring);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CBatRecord_221.Cfgstring)
}

// optional .pb.Msgbody216 Body = 10;
bool S2CBatRecord_221::has_body() const {
  return !_is_default_instance_ && body_ != NULL;
}
void S2CBatRecord_221::clear_body() {
  if (GetArenaNoVirtual() == NULL && body_ != NULL) delete body_;
  body_ = NULL;
}
const ::pb::Msgbody216& S2CBatRecord_221::body() const {
  // @@protoc_insertion_point(field_get:pb.S2CBatRecord_221.Body)
  return body_ != NULL ? *body_ : *default_instance_->body_;
}
::pb::Msgbody216* S2CBatRecord_221::mutable_body() {
  
  if (body_ == NULL) {
    body_ = new ::pb::Msgbody216;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CBatRecord_221.Body)
  return body_;
}
::pb::Msgbody216* S2CBatRecord_221::release_body() {
  // @@protoc_insertion_point(field_release:pb.S2CBatRecord_221.Body)
  
  ::pb::Msgbody216* temp = body_;
  body_ = NULL;
  return temp;
}
void S2CBatRecord_221::set_allocated_body(::pb::Msgbody216* body) {
  delete body_;
  body_ = body;
  if (body) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CBatRecord_221.Body)
}

// optional string GiveupRids = 11;
void S2CBatRecord_221::clear_giveuprids() {
  giveuprids_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CBatRecord_221::giveuprids() const {
  // @@protoc_insertion_point(field_get:pb.S2CBatRecord_221.GiveupRids)
  return giveuprids_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CBatRecord_221::set_giveuprids(const ::std::string& value) {
  
  giveuprids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CBatRecord_221.GiveupRids)
}
 void S2CBatRecord_221::set_giveuprids(const char* value) {
  
  giveuprids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CBatRecord_221.GiveupRids)
}
 void S2CBatRecord_221::set_giveuprids(const char* value, size_t size) {
  
  giveuprids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CBatRecord_221.GiveupRids)
}
 ::std::string* S2CBatRecord_221::mutable_giveuprids() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CBatRecord_221.GiveupRids)
  return giveuprids_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CBatRecord_221::release_giveuprids() {
  // @@protoc_insertion_point(field_release:pb.S2CBatRecord_221.GiveupRids)
  
  return giveuprids_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CBatRecord_221::set_allocated_giveuprids(::std::string* giveuprids) {
  if (giveuprids != NULL) {
    
  } else {
    
  }
  giveuprids_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), giveuprids);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CBatRecord_221.GiveupRids)
}

// optional uint32 SvrFrameDelta = 12;
void S2CBatRecord_221::clear_svrframedelta() {
  svrframedelta_ = 0u;
}
 ::google::protobuf::uint32 S2CBatRecord_221::svrframedelta() const {
  // @@protoc_insertion_point(field_get:pb.S2CBatRecord_221.SvrFrameDelta)
  return svrframedelta_;
}
 void S2CBatRecord_221::set_svrframedelta(::google::protobuf::uint32 value) {
  
  svrframedelta_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CBatRecord_221.SvrFrameDelta)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SSingleBattleResult_222::kLtParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SSingleBattleResult_222::C2SSingleBattleResult_222()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SSingleBattleResult_222)
}

void C2SSingleBattleResult_222::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SSingleBattleResult_222::C2SSingleBattleResult_222(const C2SSingleBattleResult_222& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SSingleBattleResult_222)
}

void C2SSingleBattleResult_222::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ltparam_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2SSingleBattleResult_222::~C2SSingleBattleResult_222() {
  // @@protoc_insertion_point(destructor:pb.C2SSingleBattleResult_222)
  SharedDtor();
}

void C2SSingleBattleResult_222::SharedDtor() {
  ltparam_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2SSingleBattleResult_222::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SSingleBattleResult_222::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SSingleBattleResult_222_descriptor_;
}

const C2SSingleBattleResult_222& C2SSingleBattleResult_222::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SSingleBattleResult_222* C2SSingleBattleResult_222::default_instance_ = NULL;

C2SSingleBattleResult_222* C2SSingleBattleResult_222::New(::google::protobuf::Arena* arena) const {
  C2SSingleBattleResult_222* n = new C2SSingleBattleResult_222;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SSingleBattleResult_222::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SSingleBattleResult_222)
  ltparam_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2SSingleBattleResult_222::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SSingleBattleResult_222)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string LtParam = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ltparam()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ltparam().data(), this->ltparam().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SSingleBattleResult_222.LtParam"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SSingleBattleResult_222)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SSingleBattleResult_222)
  return false;
#undef DO_
}

void C2SSingleBattleResult_222::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SSingleBattleResult_222)
  // optional string LtParam = 1;
  if (this->ltparam().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ltparam().data(), this->ltparam().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SSingleBattleResult_222.LtParam");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ltparam(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SSingleBattleResult_222)
}

::google::protobuf::uint8* C2SSingleBattleResult_222::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SSingleBattleResult_222)
  // optional string LtParam = 1;
  if (this->ltparam().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ltparam().data(), this->ltparam().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SSingleBattleResult_222.LtParam");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ltparam(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SSingleBattleResult_222)
  return target;
}

int C2SSingleBattleResult_222::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SSingleBattleResult_222)
  int total_size = 0;

  // optional string LtParam = 1;
  if (this->ltparam().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ltparam());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SSingleBattleResult_222::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SSingleBattleResult_222)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SSingleBattleResult_222* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SSingleBattleResult_222>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SSingleBattleResult_222)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SSingleBattleResult_222)
    MergeFrom(*source);
  }
}

void C2SSingleBattleResult_222::MergeFrom(const C2SSingleBattleResult_222& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SSingleBattleResult_222)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.ltparam().size() > 0) {

    ltparam_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ltparam_);
  }
}

void C2SSingleBattleResult_222::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SSingleBattleResult_222)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SSingleBattleResult_222::CopyFrom(const C2SSingleBattleResult_222& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SSingleBattleResult_222)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SSingleBattleResult_222::IsInitialized() const {

  return true;
}

void C2SSingleBattleResult_222::Swap(C2SSingleBattleResult_222* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SSingleBattleResult_222::InternalSwap(C2SSingleBattleResult_222* other) {
  ltparam_.Swap(&other->ltparam_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SSingleBattleResult_222::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SSingleBattleResult_222_descriptor_;
  metadata.reflection = C2SSingleBattleResult_222_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SSingleBattleResult_222

// optional string LtParam = 1;
void C2SSingleBattleResult_222::clear_ltparam() {
  ltparam_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SSingleBattleResult_222::ltparam() const {
  // @@protoc_insertion_point(field_get:pb.C2SSingleBattleResult_222.LtParam)
  return ltparam_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SSingleBattleResult_222::set_ltparam(const ::std::string& value) {
  
  ltparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SSingleBattleResult_222.LtParam)
}
 void C2SSingleBattleResult_222::set_ltparam(const char* value) {
  
  ltparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SSingleBattleResult_222.LtParam)
}
 void C2SSingleBattleResult_222::set_ltparam(const char* value, size_t size) {
  
  ltparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SSingleBattleResult_222.LtParam)
}
 ::std::string* C2SSingleBattleResult_222::mutable_ltparam() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SSingleBattleResult_222.LtParam)
  return ltparam_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SSingleBattleResult_222::release_ltparam() {
  // @@protoc_insertion_point(field_release:pb.C2SSingleBattleResult_222.LtParam)
  
  return ltparam_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SSingleBattleResult_222::set_allocated_ltparam(::std::string* ltparam) {
  if (ltparam != NULL) {
    
  } else {
    
  }
  ltparam_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ltparam);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SSingleBattleResult_222.LtParam)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetMatchUserNum_223::C2SGetMatchUserNum_223()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetMatchUserNum_223)
}

void C2SGetMatchUserNum_223::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetMatchUserNum_223::C2SGetMatchUserNum_223(const C2SGetMatchUserNum_223& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetMatchUserNum_223)
}

void C2SGetMatchUserNum_223::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGetMatchUserNum_223::~C2SGetMatchUserNum_223() {
  // @@protoc_insertion_point(destructor:pb.C2SGetMatchUserNum_223)
  SharedDtor();
}

void C2SGetMatchUserNum_223::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetMatchUserNum_223::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetMatchUserNum_223::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetMatchUserNum_223_descriptor_;
}

const C2SGetMatchUserNum_223& C2SGetMatchUserNum_223::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetMatchUserNum_223* C2SGetMatchUserNum_223::default_instance_ = NULL;

C2SGetMatchUserNum_223* C2SGetMatchUserNum_223::New(::google::protobuf::Arena* arena) const {
  C2SGetMatchUserNum_223* n = new C2SGetMatchUserNum_223;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetMatchUserNum_223::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetMatchUserNum_223)
}

bool C2SGetMatchUserNum_223::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetMatchUserNum_223)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetMatchUserNum_223)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetMatchUserNum_223)
  return false;
#undef DO_
}

void C2SGetMatchUserNum_223::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetMatchUserNum_223)
  // @@protoc_insertion_point(serialize_end:pb.C2SGetMatchUserNum_223)
}

::google::protobuf::uint8* C2SGetMatchUserNum_223::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetMatchUserNum_223)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetMatchUserNum_223)
  return target;
}

int C2SGetMatchUserNum_223::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetMatchUserNum_223)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetMatchUserNum_223::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetMatchUserNum_223)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetMatchUserNum_223* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetMatchUserNum_223>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetMatchUserNum_223)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetMatchUserNum_223)
    MergeFrom(*source);
  }
}

void C2SGetMatchUserNum_223::MergeFrom(const C2SGetMatchUserNum_223& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetMatchUserNum_223)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SGetMatchUserNum_223::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetMatchUserNum_223)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetMatchUserNum_223::CopyFrom(const C2SGetMatchUserNum_223& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetMatchUserNum_223)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetMatchUserNum_223::IsInitialized() const {

  return true;
}

void C2SGetMatchUserNum_223::Swap(C2SGetMatchUserNum_223* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetMatchUserNum_223::InternalSwap(C2SGetMatchUserNum_223* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetMatchUserNum_223::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetMatchUserNum_223_descriptor_;
  metadata.reflection = C2SGetMatchUserNum_223_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetMatchUserNum_223

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetMatchUserNum_223::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetMatchUserNum_223::S2CGetMatchUserNum_223()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetMatchUserNum_223)
}

void S2CGetMatchUserNum_223::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetMatchUserNum_223::S2CGetMatchUserNum_223(const S2CGetMatchUserNum_223& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetMatchUserNum_223)
}

void S2CGetMatchUserNum_223::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  num_ = 0u;
}

S2CGetMatchUserNum_223::~S2CGetMatchUserNum_223() {
  // @@protoc_insertion_point(destructor:pb.S2CGetMatchUserNum_223)
  SharedDtor();
}

void S2CGetMatchUserNum_223::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetMatchUserNum_223::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetMatchUserNum_223::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetMatchUserNum_223_descriptor_;
}

const S2CGetMatchUserNum_223& S2CGetMatchUserNum_223::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetMatchUserNum_223* S2CGetMatchUserNum_223::default_instance_ = NULL;

S2CGetMatchUserNum_223* S2CGetMatchUserNum_223::New(::google::protobuf::Arena* arena) const {
  S2CGetMatchUserNum_223* n = new S2CGetMatchUserNum_223;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetMatchUserNum_223::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetMatchUserNum_223)
  num_ = 0u;
}

bool S2CGetMatchUserNum_223::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetMatchUserNum_223)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Num = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetMatchUserNum_223)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetMatchUserNum_223)
  return false;
#undef DO_
}

void S2CGetMatchUserNum_223::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetMatchUserNum_223)
  // optional uint32 Num = 1;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetMatchUserNum_223)
}

::google::protobuf::uint8* S2CGetMatchUserNum_223::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetMatchUserNum_223)
  // optional uint32 Num = 1;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetMatchUserNum_223)
  return target;
}

int S2CGetMatchUserNum_223::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetMatchUserNum_223)
  int total_size = 0;

  // optional uint32 Num = 1;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetMatchUserNum_223::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetMatchUserNum_223)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetMatchUserNum_223* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetMatchUserNum_223>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetMatchUserNum_223)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetMatchUserNum_223)
    MergeFrom(*source);
  }
}

void S2CGetMatchUserNum_223::MergeFrom(const S2CGetMatchUserNum_223& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetMatchUserNum_223)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void S2CGetMatchUserNum_223::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetMatchUserNum_223)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetMatchUserNum_223::CopyFrom(const S2CGetMatchUserNum_223& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetMatchUserNum_223)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetMatchUserNum_223::IsInitialized() const {

  return true;
}

void S2CGetMatchUserNum_223::Swap(S2CGetMatchUserNum_223* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetMatchUserNum_223::InternalSwap(S2CGetMatchUserNum_223* other) {
  std::swap(num_, other->num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetMatchUserNum_223::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetMatchUserNum_223_descriptor_;
  metadata.reflection = S2CGetMatchUserNum_223_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetMatchUserNum_223

// optional uint32 Num = 1;
void S2CGetMatchUserNum_223::clear_num() {
  num_ = 0u;
}
 ::google::protobuf::uint32 S2CGetMatchUserNum_223::num() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetMatchUserNum_223.Num)
  return num_;
}
 void S2CGetMatchUserNum_223::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetMatchUserNum_223.Num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SBroadcast_250::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SBroadcast_250::C2SBroadcast_250()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SBroadcast_250)
}

void C2SBroadcast_250::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SBroadcast_250::C2SBroadcast_250(const C2SBroadcast_250& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SBroadcast_250)
}

void C2SBroadcast_250::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2SBroadcast_250::~C2SBroadcast_250() {
  // @@protoc_insertion_point(destructor:pb.C2SBroadcast_250)
  SharedDtor();
}

void C2SBroadcast_250::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2SBroadcast_250::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SBroadcast_250::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SBroadcast_250_descriptor_;
}

const C2SBroadcast_250& C2SBroadcast_250::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SBroadcast_250* C2SBroadcast_250::default_instance_ = NULL;

C2SBroadcast_250* C2SBroadcast_250::New(::google::protobuf::Arena* arena) const {
  C2SBroadcast_250* n = new C2SBroadcast_250;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SBroadcast_250::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SBroadcast_250)
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2SBroadcast_250::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SBroadcast_250)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Content = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SBroadcast_250.Content"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SBroadcast_250)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SBroadcast_250)
  return false;
#undef DO_
}

void C2SBroadcast_250::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SBroadcast_250)
  // optional string Content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SBroadcast_250.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SBroadcast_250)
}

::google::protobuf::uint8* C2SBroadcast_250::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SBroadcast_250)
  // optional string Content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SBroadcast_250.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SBroadcast_250)
  return target;
}

int C2SBroadcast_250::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SBroadcast_250)
  int total_size = 0;

  // optional string Content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SBroadcast_250::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SBroadcast_250)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SBroadcast_250* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SBroadcast_250>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SBroadcast_250)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SBroadcast_250)
    MergeFrom(*source);
  }
}

void C2SBroadcast_250::MergeFrom(const C2SBroadcast_250& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SBroadcast_250)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void C2SBroadcast_250::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SBroadcast_250)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SBroadcast_250::CopyFrom(const C2SBroadcast_250& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SBroadcast_250)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SBroadcast_250::IsInitialized() const {

  return true;
}

void C2SBroadcast_250::Swap(C2SBroadcast_250* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SBroadcast_250::InternalSwap(C2SBroadcast_250* other) {
  content_.Swap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SBroadcast_250::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SBroadcast_250_descriptor_;
  metadata.reflection = C2SBroadcast_250_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SBroadcast_250

// optional string Content = 1;
void C2SBroadcast_250::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SBroadcast_250::content() const {
  // @@protoc_insertion_point(field_get:pb.C2SBroadcast_250.Content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SBroadcast_250::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SBroadcast_250.Content)
}
 void C2SBroadcast_250::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SBroadcast_250.Content)
}
 void C2SBroadcast_250::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SBroadcast_250.Content)
}
 ::std::string* C2SBroadcast_250::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SBroadcast_250.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SBroadcast_250::release_content() {
  // @@protoc_insertion_point(field_release:pb.C2SBroadcast_250.Content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SBroadcast_250::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SBroadcast_250.Content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CBroadcast_250::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CBroadcast_250::S2CBroadcast_250()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CBroadcast_250)
}

void S2CBroadcast_250::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CBroadcast_250::S2CBroadcast_250(const S2CBroadcast_250& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CBroadcast_250)
}

void S2CBroadcast_250::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

S2CBroadcast_250::~S2CBroadcast_250() {
  // @@protoc_insertion_point(destructor:pb.S2CBroadcast_250)
  SharedDtor();
}

void S2CBroadcast_250::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void S2CBroadcast_250::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CBroadcast_250::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CBroadcast_250_descriptor_;
}

const S2CBroadcast_250& S2CBroadcast_250::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CBroadcast_250* S2CBroadcast_250::default_instance_ = NULL;

S2CBroadcast_250* S2CBroadcast_250::New(::google::protobuf::Arena* arena) const {
  S2CBroadcast_250* n = new S2CBroadcast_250;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CBroadcast_250::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CBroadcast_250)
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool S2CBroadcast_250::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CBroadcast_250)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Content = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CBroadcast_250.Content"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CBroadcast_250)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CBroadcast_250)
  return false;
#undef DO_
}

void S2CBroadcast_250::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CBroadcast_250)
  // optional string Content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CBroadcast_250.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CBroadcast_250)
}

::google::protobuf::uint8* S2CBroadcast_250::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CBroadcast_250)
  // optional string Content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CBroadcast_250.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CBroadcast_250)
  return target;
}

int S2CBroadcast_250::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CBroadcast_250)
  int total_size = 0;

  // optional string Content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CBroadcast_250::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CBroadcast_250)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CBroadcast_250* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CBroadcast_250>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CBroadcast_250)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CBroadcast_250)
    MergeFrom(*source);
  }
}

void S2CBroadcast_250::MergeFrom(const S2CBroadcast_250& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CBroadcast_250)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void S2CBroadcast_250::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CBroadcast_250)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CBroadcast_250::CopyFrom(const S2CBroadcast_250& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CBroadcast_250)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CBroadcast_250::IsInitialized() const {

  return true;
}

void S2CBroadcast_250::Swap(S2CBroadcast_250* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CBroadcast_250::InternalSwap(S2CBroadcast_250* other) {
  content_.Swap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CBroadcast_250::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CBroadcast_250_descriptor_;
  metadata.reflection = S2CBroadcast_250_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CBroadcast_250

// optional string Content = 1;
void S2CBroadcast_250::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CBroadcast_250::content() const {
  // @@protoc_insertion_point(field_get:pb.S2CBroadcast_250.Content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CBroadcast_250::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CBroadcast_250.Content)
}
 void S2CBroadcast_250::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CBroadcast_250.Content)
}
 void S2CBroadcast_250::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CBroadcast_250.Content)
}
 ::std::string* S2CBroadcast_250::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CBroadcast_250.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CBroadcast_250::release_content() {
  // @@protoc_insertion_point(field_release:pb.S2CBroadcast_250.Content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CBroadcast_250::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CBroadcast_250.Content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CBroadcastProp_251::kIdxFieldNumber;
const int S2CBroadcastProp_251::kValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CBroadcastProp_251::S2CBroadcastProp_251()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CBroadcastProp_251)
}

void S2CBroadcastProp_251::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CBroadcastProp_251::S2CBroadcastProp_251(const S2CBroadcastProp_251& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CBroadcastProp_251)
}

void S2CBroadcastProp_251::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  idx_ = 0u;
  val_ = 0u;
}

S2CBroadcastProp_251::~S2CBroadcastProp_251() {
  // @@protoc_insertion_point(destructor:pb.S2CBroadcastProp_251)
  SharedDtor();
}

void S2CBroadcastProp_251::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CBroadcastProp_251::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CBroadcastProp_251::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CBroadcastProp_251_descriptor_;
}

const S2CBroadcastProp_251& S2CBroadcastProp_251::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CBroadcastProp_251* S2CBroadcastProp_251::default_instance_ = NULL;

S2CBroadcastProp_251* S2CBroadcastProp_251::New(::google::protobuf::Arena* arena) const {
  S2CBroadcastProp_251* n = new S2CBroadcastProp_251;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CBroadcastProp_251::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CBroadcastProp_251)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CBroadcastProp_251, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CBroadcastProp_251*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(idx_, val_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2CBroadcastProp_251::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CBroadcastProp_251)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Val;
        break;
      }

      // optional uint32 Val = 2;
      case 2: {
        if (tag == 16) {
         parse_Val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &val_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CBroadcastProp_251)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CBroadcastProp_251)
  return false;
#undef DO_
}

void S2CBroadcastProp_251::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CBroadcastProp_251)
  // optional uint32 Idx = 1;
  if (this->idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->idx(), output);
  }

  // optional uint32 Val = 2;
  if (this->val() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->val(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CBroadcastProp_251)
}

::google::protobuf::uint8* S2CBroadcastProp_251::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CBroadcastProp_251)
  // optional uint32 Idx = 1;
  if (this->idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->idx(), target);
  }

  // optional uint32 Val = 2;
  if (this->val() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->val(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CBroadcastProp_251)
  return target;
}

int S2CBroadcastProp_251::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CBroadcastProp_251)
  int total_size = 0;

  // optional uint32 Idx = 1;
  if (this->idx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->idx());
  }

  // optional uint32 Val = 2;
  if (this->val() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->val());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CBroadcastProp_251::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CBroadcastProp_251)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CBroadcastProp_251* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CBroadcastProp_251>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CBroadcastProp_251)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CBroadcastProp_251)
    MergeFrom(*source);
  }
}

void S2CBroadcastProp_251::MergeFrom(const S2CBroadcastProp_251& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CBroadcastProp_251)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.idx() != 0) {
    set_idx(from.idx());
  }
  if (from.val() != 0) {
    set_val(from.val());
  }
}

void S2CBroadcastProp_251::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CBroadcastProp_251)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CBroadcastProp_251::CopyFrom(const S2CBroadcastProp_251& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CBroadcastProp_251)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CBroadcastProp_251::IsInitialized() const {

  return true;
}

void S2CBroadcastProp_251::Swap(S2CBroadcastProp_251* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CBroadcastProp_251::InternalSwap(S2CBroadcastProp_251* other) {
  std::swap(idx_, other->idx_);
  std::swap(val_, other->val_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CBroadcastProp_251::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CBroadcastProp_251_descriptor_;
  metadata.reflection = S2CBroadcastProp_251_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CBroadcastProp_251

// optional uint32 Idx = 1;
void S2CBroadcastProp_251::clear_idx() {
  idx_ = 0u;
}
 ::google::protobuf::uint32 S2CBroadcastProp_251::idx() const {
  // @@protoc_insertion_point(field_get:pb.S2CBroadcastProp_251.Idx)
  return idx_;
}
 void S2CBroadcastProp_251::set_idx(::google::protobuf::uint32 value) {
  
  idx_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CBroadcastProp_251.Idx)
}

// optional uint32 Val = 2;
void S2CBroadcastProp_251::clear_val() {
  val_ = 0u;
}
 ::google::protobuf::uint32 S2CBroadcastProp_251::val() const {
  // @@protoc_insertion_point(field_get:pb.S2CBroadcastProp_251.Val)
  return val_;
}
 void S2CBroadcastProp_251::set_val(::google::protobuf::uint32 value) {
  
  val_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CBroadcastProp_251.Val)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SChatContent_252::kChannelFieldNumber;
const int C2SChatContent_252::kContentFieldNumber;
const int C2SChatContent_252::kUseridFieldNumber;
const int C2SChatContent_252::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SChatContent_252::C2SChatContent_252()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SChatContent_252)
}

void C2SChatContent_252::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SChatContent_252::C2SChatContent_252(const C2SChatContent_252& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SChatContent_252)
}

void C2SChatContent_252::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  channel_ = 0u;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = GOOGLE_ULONGLONG(0);
  param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2SChatContent_252::~C2SChatContent_252() {
  // @@protoc_insertion_point(destructor:pb.C2SChatContent_252)
  SharedDtor();
}

void C2SChatContent_252::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2SChatContent_252::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SChatContent_252::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SChatContent_252_descriptor_;
}

const C2SChatContent_252& C2SChatContent_252::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SChatContent_252* C2SChatContent_252::default_instance_ = NULL;

C2SChatContent_252* C2SChatContent_252::New(::google::protobuf::Arena* arena) const {
  C2SChatContent_252* n = new C2SChatContent_252;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SChatContent_252::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SChatContent_252)
  channel_ = 0u;
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = GOOGLE_ULONGLONG(0);
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2SChatContent_252::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SChatContent_252)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Channel = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Content;
        break;
      }

      // optional string Content = 2;
      case 2: {
        if (tag == 18) {
         parse_Content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SChatContent_252.Content"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Userid;
        break;
      }

      // optional uint64 Userid = 3;
      case 3: {
        if (tag == 24) {
         parse_Userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Param;
        break;
      }

      // optional string Param = 4;
      case 4: {
        if (tag == 34) {
         parse_Param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->param().data(), this->param().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SChatContent_252.Param"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SChatContent_252)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SChatContent_252)
  return false;
#undef DO_
}

void C2SChatContent_252::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SChatContent_252)
  // optional uint32 Channel = 1;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->channel(), output);
  }

  // optional string Content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SChatContent_252.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->content(), output);
  }

  // optional uint64 Userid = 3;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->userid(), output);
  }

  // optional string Param = 4;
  if (this->param().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param().data(), this->param().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SChatContent_252.Param");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->param(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SChatContent_252)
}

::google::protobuf::uint8* C2SChatContent_252::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SChatContent_252)
  // optional uint32 Channel = 1;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->channel(), target);
  }

  // optional string Content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SChatContent_252.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }

  // optional uint64 Userid = 3;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->userid(), target);
  }

  // optional string Param = 4;
  if (this->param().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param().data(), this->param().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SChatContent_252.Param");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->param(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SChatContent_252)
  return target;
}

int C2SChatContent_252::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SChatContent_252)
  int total_size = 0;

  // optional uint32 Channel = 1;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel());
  }

  // optional string Content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // optional uint64 Userid = 3;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // optional string Param = 4;
  if (this->param().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->param());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SChatContent_252::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SChatContent_252)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SChatContent_252* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SChatContent_252>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SChatContent_252)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SChatContent_252)
    MergeFrom(*source);
  }
}

void C2SChatContent_252::MergeFrom(const C2SChatContent_252& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SChatContent_252)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.param().size() > 0) {

    param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_);
  }
}

void C2SChatContent_252::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SChatContent_252)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SChatContent_252::CopyFrom(const C2SChatContent_252& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SChatContent_252)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SChatContent_252::IsInitialized() const {

  return true;
}

void C2SChatContent_252::Swap(C2SChatContent_252* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SChatContent_252::InternalSwap(C2SChatContent_252* other) {
  std::swap(channel_, other->channel_);
  content_.Swap(&other->content_);
  std::swap(userid_, other->userid_);
  param_.Swap(&other->param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SChatContent_252::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SChatContent_252_descriptor_;
  metadata.reflection = C2SChatContent_252_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SChatContent_252

// optional uint32 Channel = 1;
void C2SChatContent_252::clear_channel() {
  channel_ = 0u;
}
 ::google::protobuf::uint32 C2SChatContent_252::channel() const {
  // @@protoc_insertion_point(field_get:pb.C2SChatContent_252.Channel)
  return channel_;
}
 void C2SChatContent_252::set_channel(::google::protobuf::uint32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SChatContent_252.Channel)
}

// optional string Content = 2;
void C2SChatContent_252::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SChatContent_252::content() const {
  // @@protoc_insertion_point(field_get:pb.C2SChatContent_252.Content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SChatContent_252::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SChatContent_252.Content)
}
 void C2SChatContent_252::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SChatContent_252.Content)
}
 void C2SChatContent_252::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SChatContent_252.Content)
}
 ::std::string* C2SChatContent_252::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SChatContent_252.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SChatContent_252::release_content() {
  // @@protoc_insertion_point(field_release:pb.C2SChatContent_252.Content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SChatContent_252::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SChatContent_252.Content)
}

// optional uint64 Userid = 3;
void C2SChatContent_252::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 C2SChatContent_252::userid() const {
  // @@protoc_insertion_point(field_get:pb.C2SChatContent_252.Userid)
  return userid_;
}
 void C2SChatContent_252::set_userid(::google::protobuf::uint64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SChatContent_252.Userid)
}

// optional string Param = 4;
void C2SChatContent_252::clear_param() {
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SChatContent_252::param() const {
  // @@protoc_insertion_point(field_get:pb.C2SChatContent_252.Param)
  return param_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SChatContent_252::set_param(const ::std::string& value) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SChatContent_252.Param)
}
 void C2SChatContent_252::set_param(const char* value) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SChatContent_252.Param)
}
 void C2SChatContent_252::set_param(const char* value, size_t size) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SChatContent_252.Param)
}
 ::std::string* C2SChatContent_252::mutable_param() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SChatContent_252.Param)
  return param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SChatContent_252::release_param() {
  // @@protoc_insertion_point(field_release:pb.C2SChatContent_252.Param)
  
  return param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SChatContent_252::set_allocated_param(::std::string* param) {
  if (param != NULL) {
    
  } else {
    
  }
  param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SChatContent_252.Param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CChatContent_252::kChannelFieldNumber;
const int S2CChatContent_252::kNameFieldNumber;
const int S2CChatContent_252::kContentFieldNumber;
const int S2CChatContent_252::kUseridFieldNumber;
const int S2CChatContent_252::kLevelFieldNumber;
const int S2CChatContent_252::kSexFieldNumber;
const int S2CChatContent_252::kStarFieldNumber;
const int S2CChatContent_252::kParamFieldNumber;
const int S2CChatContent_252::kMountidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CChatContent_252::S2CChatContent_252()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CChatContent_252)
}

void S2CChatContent_252::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CChatContent_252::S2CChatContent_252(const S2CChatContent_252& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CChatContent_252)
}

void S2CChatContent_252::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  channel_ = 0u;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = GOOGLE_ULONGLONG(0);
  level_ = 0u;
  sex_ = 0u;
  star_ = 0u;
  param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mountid_ = 0u;
}

S2CChatContent_252::~S2CChatContent_252() {
  // @@protoc_insertion_point(destructor:pb.S2CChatContent_252)
  SharedDtor();
}

void S2CChatContent_252::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void S2CChatContent_252::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CChatContent_252::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CChatContent_252_descriptor_;
}

const S2CChatContent_252& S2CChatContent_252::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CChatContent_252* S2CChatContent_252::default_instance_ = NULL;

S2CChatContent_252* S2CChatContent_252::New(::google::protobuf::Arena* arena) const {
  S2CChatContent_252* n = new S2CChatContent_252;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CChatContent_252::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CChatContent_252)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CChatContent_252, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CChatContent_252*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(channel_, star_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mountid_ = 0u;

#undef ZR_HELPER_
#undef ZR_

}

bool S2CChatContent_252::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CChatContent_252)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Channel = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Name;
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (tag == 18) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CChatContent_252.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Content;
        break;
      }

      // optional string Content = 3;
      case 3: {
        if (tag == 26) {
         parse_Content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CChatContent_252.Content"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Userid;
        break;
      }

      // optional uint64 Userid = 4;
      case 4: {
        if (tag == 32) {
         parse_Userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Level;
        break;
      }

      // optional uint32 Level = 5;
      case 5: {
        if (tag == 40) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Sex;
        break;
      }

      // optional uint32 Sex = 6;
      case 6: {
        if (tag == 48) {
         parse_Sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Star;
        break;
      }

      // optional uint32 Star = 7;
      case 7: {
        if (tag == 56) {
         parse_Star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &star_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Param;
        break;
      }

      // optional string Param = 8;
      case 8: {
        if (tag == 66) {
         parse_Param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->param().data(), this->param().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CChatContent_252.Param"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_Mountid;
        break;
      }

      // optional uint32 Mountid = 9;
      case 9: {
        if (tag == 72) {
         parse_Mountid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CChatContent_252)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CChatContent_252)
  return false;
#undef DO_
}

void S2CChatContent_252::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CChatContent_252)
  // optional uint32 Channel = 1;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->channel(), output);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CChatContent_252.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string Content = 3;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CChatContent_252.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->content(), output);
  }

  // optional uint64 Userid = 4;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->userid(), output);
  }

  // optional uint32 Level = 5;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->level(), output);
  }

  // optional uint32 Sex = 6;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->sex(), output);
  }

  // optional uint32 Star = 7;
  if (this->star() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->star(), output);
  }

  // optional string Param = 8;
  if (this->param().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param().data(), this->param().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CChatContent_252.Param");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->param(), output);
  }

  // optional uint32 Mountid = 9;
  if (this->mountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->mountid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CChatContent_252)
}

::google::protobuf::uint8* S2CChatContent_252::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CChatContent_252)
  // optional uint32 Channel = 1;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->channel(), target);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CChatContent_252.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string Content = 3;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CChatContent_252.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->content(), target);
  }

  // optional uint64 Userid = 4;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->userid(), target);
  }

  // optional uint32 Level = 5;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->level(), target);
  }

  // optional uint32 Sex = 6;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->sex(), target);
  }

  // optional uint32 Star = 7;
  if (this->star() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->star(), target);
  }

  // optional string Param = 8;
  if (this->param().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->param().data(), this->param().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CChatContent_252.Param");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->param(), target);
  }

  // optional uint32 Mountid = 9;
  if (this->mountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->mountid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CChatContent_252)
  return target;
}

int S2CChatContent_252::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CChatContent_252)
  int total_size = 0;

  // optional uint32 Channel = 1;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel());
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string Content = 3;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // optional uint64 Userid = 4;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // optional uint32 Level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // optional uint32 Sex = 6;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sex());
  }

  // optional uint32 Star = 7;
  if (this->star() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->star());
  }

  // optional string Param = 8;
  if (this->param().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->param());
  }

  // optional uint32 Mountid = 9;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mountid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CChatContent_252::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CChatContent_252)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CChatContent_252* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CChatContent_252>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CChatContent_252)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CChatContent_252)
    MergeFrom(*source);
  }
}

void S2CChatContent_252::MergeFrom(const S2CChatContent_252& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CChatContent_252)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.star() != 0) {
    set_star(from.star());
  }
  if (from.param().size() > 0) {

    param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_);
  }
  if (from.mountid() != 0) {
    set_mountid(from.mountid());
  }
}

void S2CChatContent_252::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CChatContent_252)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CChatContent_252::CopyFrom(const S2CChatContent_252& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CChatContent_252)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CChatContent_252::IsInitialized() const {

  return true;
}

void S2CChatContent_252::Swap(S2CChatContent_252* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CChatContent_252::InternalSwap(S2CChatContent_252* other) {
  std::swap(channel_, other->channel_);
  name_.Swap(&other->name_);
  content_.Swap(&other->content_);
  std::swap(userid_, other->userid_);
  std::swap(level_, other->level_);
  std::swap(sex_, other->sex_);
  std::swap(star_, other->star_);
  param_.Swap(&other->param_);
  std::swap(mountid_, other->mountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CChatContent_252::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CChatContent_252_descriptor_;
  metadata.reflection = S2CChatContent_252_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CChatContent_252

// optional uint32 Channel = 1;
void S2CChatContent_252::clear_channel() {
  channel_ = 0u;
}
 ::google::protobuf::uint32 S2CChatContent_252::channel() const {
  // @@protoc_insertion_point(field_get:pb.S2CChatContent_252.Channel)
  return channel_;
}
 void S2CChatContent_252::set_channel(::google::protobuf::uint32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CChatContent_252.Channel)
}

// optional string Name = 2;
void S2CChatContent_252::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CChatContent_252::name() const {
  // @@protoc_insertion_point(field_get:pb.S2CChatContent_252.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CChatContent_252::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CChatContent_252.Name)
}
 void S2CChatContent_252::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CChatContent_252.Name)
}
 void S2CChatContent_252::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CChatContent_252.Name)
}
 ::std::string* S2CChatContent_252::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CChatContent_252.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CChatContent_252::release_name() {
  // @@protoc_insertion_point(field_release:pb.S2CChatContent_252.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CChatContent_252::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CChatContent_252.Name)
}

// optional string Content = 3;
void S2CChatContent_252::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CChatContent_252::content() const {
  // @@protoc_insertion_point(field_get:pb.S2CChatContent_252.Content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CChatContent_252::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CChatContent_252.Content)
}
 void S2CChatContent_252::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CChatContent_252.Content)
}
 void S2CChatContent_252::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CChatContent_252.Content)
}
 ::std::string* S2CChatContent_252::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CChatContent_252.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CChatContent_252::release_content() {
  // @@protoc_insertion_point(field_release:pb.S2CChatContent_252.Content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CChatContent_252::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CChatContent_252.Content)
}

// optional uint64 Userid = 4;
void S2CChatContent_252::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CChatContent_252::userid() const {
  // @@protoc_insertion_point(field_get:pb.S2CChatContent_252.Userid)
  return userid_;
}
 void S2CChatContent_252::set_userid(::google::protobuf::uint64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CChatContent_252.Userid)
}

// optional uint32 Level = 5;
void S2CChatContent_252::clear_level() {
  level_ = 0u;
}
 ::google::protobuf::uint32 S2CChatContent_252::level() const {
  // @@protoc_insertion_point(field_get:pb.S2CChatContent_252.Level)
  return level_;
}
 void S2CChatContent_252::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CChatContent_252.Level)
}

// optional uint32 Sex = 6;
void S2CChatContent_252::clear_sex() {
  sex_ = 0u;
}
 ::google::protobuf::uint32 S2CChatContent_252::sex() const {
  // @@protoc_insertion_point(field_get:pb.S2CChatContent_252.Sex)
  return sex_;
}
 void S2CChatContent_252::set_sex(::google::protobuf::uint32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CChatContent_252.Sex)
}

// optional uint32 Star = 7;
void S2CChatContent_252::clear_star() {
  star_ = 0u;
}
 ::google::protobuf::uint32 S2CChatContent_252::star() const {
  // @@protoc_insertion_point(field_get:pb.S2CChatContent_252.Star)
  return star_;
}
 void S2CChatContent_252::set_star(::google::protobuf::uint32 value) {
  
  star_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CChatContent_252.Star)
}

// optional string Param = 8;
void S2CChatContent_252::clear_param() {
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CChatContent_252::param() const {
  // @@protoc_insertion_point(field_get:pb.S2CChatContent_252.Param)
  return param_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CChatContent_252::set_param(const ::std::string& value) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CChatContent_252.Param)
}
 void S2CChatContent_252::set_param(const char* value) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CChatContent_252.Param)
}
 void S2CChatContent_252::set_param(const char* value, size_t size) {
  
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CChatContent_252.Param)
}
 ::std::string* S2CChatContent_252::mutable_param() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CChatContent_252.Param)
  return param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CChatContent_252::release_param() {
  // @@protoc_insertion_point(field_release:pb.S2CChatContent_252.Param)
  
  return param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CChatContent_252::set_allocated_param(::std::string* param) {
  if (param != NULL) {
    
  } else {
    
  }
  param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CChatContent_252.Param)
}

// optional uint32 Mountid = 9;
void S2CChatContent_252::clear_mountid() {
  mountid_ = 0u;
}
 ::google::protobuf::uint32 S2CChatContent_252::mountid() const {
  // @@protoc_insertion_point(field_get:pb.S2CChatContent_252.Mountid)
  return mountid_;
}
 void S2CChatContent_252::set_mountid(::google::protobuf::uint32 value) {
  
  mountid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CChatContent_252.Mountid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailGift::kItemIdFieldNumber;
const int MailGift::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailGift::MailGift()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.MailGift)
}

void MailGift::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MailGift::MailGift(const MailGift& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.MailGift)
}

void MailGift::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  itemid_ = 0u;
  count_ = 0u;
}

MailGift::~MailGift() {
  // @@protoc_insertion_point(destructor:pb.MailGift)
  SharedDtor();
}

void MailGift::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MailGift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailGift::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailGift_descriptor_;
}

const MailGift& MailGift::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

MailGift* MailGift::default_instance_ = NULL;

MailGift* MailGift::New(::google::protobuf::Arena* arena) const {
  MailGift* n = new MailGift;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailGift::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.MailGift)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MailGift, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MailGift*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(itemid_, count_);

#undef ZR_HELPER_
#undef ZR_

}

bool MailGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.MailGift)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Count;
        break;
      }

      // optional uint32 Count = 2;
      case 2: {
        if (tag == 16) {
         parse_Count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.MailGift)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.MailGift)
  return false;
#undef DO_
}

void MailGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.MailGift)
  // optional uint32 ItemId = 1;
  if (this->itemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 Count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.MailGift)
}

::google::protobuf::uint8* MailGift::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.MailGift)
  // optional uint32 ItemId = 1;
  if (this->itemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 Count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.MailGift)
  return target;
}

int MailGift::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.MailGift)
  int total_size = 0;

  // optional uint32 ItemId = 1;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemid());
  }

  // optional uint32 Count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailGift::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.MailGift)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MailGift* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MailGift>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.MailGift)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.MailGift)
    MergeFrom(*source);
  }
}

void MailGift::MergeFrom(const MailGift& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.MailGift)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.itemid() != 0) {
    set_itemid(from.itemid());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void MailGift::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.MailGift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailGift::CopyFrom(const MailGift& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.MailGift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailGift::IsInitialized() const {

  return true;
}

void MailGift::Swap(MailGift* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailGift::InternalSwap(MailGift* other) {
  std::swap(itemid_, other->itemid_);
  std::swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailGift::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailGift_descriptor_;
  metadata.reflection = MailGift_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailGift

// optional uint32 ItemId = 1;
void MailGift::clear_itemid() {
  itemid_ = 0u;
}
 ::google::protobuf::uint32 MailGift::itemid() const {
  // @@protoc_insertion_point(field_get:pb.MailGift.ItemId)
  return itemid_;
}
 void MailGift::set_itemid(::google::protobuf::uint32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:pb.MailGift.ItemId)
}

// optional uint32 Count = 2;
void MailGift::clear_count() {
  count_ = 0u;
}
 ::google::protobuf::uint32 MailGift::count() const {
  // @@protoc_insertion_point(field_get:pb.MailGift.Count)
  return count_;
}
 void MailGift::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:pb.MailGift.Count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mail::kIdFieldNumber;
const int Mail::kTitleFieldNumber;
const int Mail::kSenderFieldNumber;
const int Mail::kSendtimeFieldNumber;
const int Mail::kContentFieldNumber;
const int Mail::kGiftListFieldNumber;
const int Mail::kIsReadFieldNumber;
const int Mail::kIsReceivedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mail::Mail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Mail)
}

void Mail::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Mail::Mail(const Mail& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.Mail)
}

void Mail::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0u;
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendtime_ = 0u;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isread_ = false;
  isreceived_ = false;
}

Mail::~Mail() {
  // @@protoc_insertion_point(destructor:pb.Mail)
  SharedDtor();
}

void Mail::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Mail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Mail_descriptor_;
}

const Mail& Mail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

Mail* Mail::default_instance_ = NULL;

Mail* Mail::New(::google::protobuf::Arena* arena) const {
  Mail* n = new Mail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Mail::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Mail)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Mail, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Mail*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, sendtime_);
  ZR_(isread_, isreceived_);
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  giftlist_.Clear();
}

bool Mail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Mail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Title;
        break;
      }

      // optional string Title = 2;
      case 2: {
        if (tag == 18) {
         parse_Title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Mail.Title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Sender;
        break;
      }

      // optional string Sender = 3;
      case 3: {
        if (tag == 26) {
         parse_Sender:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sender().data(), this->sender().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Mail.Sender"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Sendtime;
        break;
      }

      // optional uint32 Sendtime = 4;
      case 4: {
        if (tag == 32) {
         parse_Sendtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sendtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Content;
        break;
      }

      // optional string Content = 5;
      case 5: {
        if (tag == 42) {
         parse_Content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Mail.Content"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_GiftList;
        break;
      }

      // repeated .pb.MailGift GiftList = 6;
      case 6: {
        if (tag == 50) {
         parse_GiftList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_GiftList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_giftlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_GiftList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(56)) goto parse_IsRead;
        break;
      }

      // optional bool IsRead = 7;
      case 7: {
        if (tag == 56) {
         parse_IsRead:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isread_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_IsReceived;
        break;
      }

      // optional bool IsReceived = 8;
      case 8: {
        if (tag == 64) {
         parse_IsReceived:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isreceived_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Mail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Mail)
  return false;
#undef DO_
}

void Mail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Mail)
  // optional uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional string Title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Mail.Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // optional string Sender = 3;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Mail.Sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sender(), output);
  }

  // optional uint32 Sendtime = 4;
  if (this->sendtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->sendtime(), output);
  }

  // optional string Content = 5;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Mail.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->content(), output);
  }

  // repeated .pb.MailGift GiftList = 6;
  for (unsigned int i = 0, n = this->giftlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->giftlist(i), output);
  }

  // optional bool IsRead = 7;
  if (this->isread() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isread(), output);
  }

  // optional bool IsReceived = 8;
  if (this->isreceived() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->isreceived(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.Mail)
}

::google::protobuf::uint8* Mail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.Mail)
  // optional uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional string Title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Mail.Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // optional string Sender = 3;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Mail.Sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sender(), target);
  }

  // optional uint32 Sendtime = 4;
  if (this->sendtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->sendtime(), target);
  }

  // optional string Content = 5;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Mail.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->content(), target);
  }

  // repeated .pb.MailGift GiftList = 6;
  for (unsigned int i = 0, n = this->giftlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->giftlist(i), false, target);
  }

  // optional bool IsRead = 7;
  if (this->isread() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isread(), target);
  }

  // optional bool IsReceived = 8;
  if (this->isreceived() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->isreceived(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.Mail)
  return target;
}

int Mail::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Mail)
  int total_size = 0;

  // optional uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // optional string Title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // optional string Sender = 3;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sender());
  }

  // optional uint32 Sendtime = 4;
  if (this->sendtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sendtime());
  }

  // optional string Content = 5;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // optional bool IsRead = 7;
  if (this->isread() != 0) {
    total_size += 1 + 1;
  }

  // optional bool IsReceived = 8;
  if (this->isreceived() != 0) {
    total_size += 1 + 1;
  }

  // repeated .pb.MailGift GiftList = 6;
  total_size += 1 * this->giftlist_size();
  for (int i = 0; i < this->giftlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->giftlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Mail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Mail* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Mail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Mail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Mail)
    MergeFrom(*source);
  }
}

void Mail::MergeFrom(const Mail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Mail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  giftlist_.MergeFrom(from.giftlist_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.sender().size() > 0) {

    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  if (from.sendtime() != 0) {
    set_sendtime(from.sendtime());
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.isread() != 0) {
    set_isread(from.isread());
  }
  if (from.isreceived() != 0) {
    set_isreceived(from.isreceived());
  }
}

void Mail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Mail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mail::CopyFrom(const Mail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Mail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mail::IsInitialized() const {

  return true;
}

void Mail::Swap(Mail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mail::InternalSwap(Mail* other) {
  std::swap(id_, other->id_);
  title_.Swap(&other->title_);
  sender_.Swap(&other->sender_);
  std::swap(sendtime_, other->sendtime_);
  content_.Swap(&other->content_);
  giftlist_.UnsafeArenaSwap(&other->giftlist_);
  std::swap(isread_, other->isread_);
  std::swap(isreceived_, other->isreceived_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Mail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Mail_descriptor_;
  metadata.reflection = Mail_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Mail

// optional uint32 Id = 1;
void Mail::clear_id() {
  id_ = 0u;
}
 ::google::protobuf::uint32 Mail::id() const {
  // @@protoc_insertion_point(field_get:pb.Mail.Id)
  return id_;
}
 void Mail::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.Mail.Id)
}

// optional string Title = 2;
void Mail::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Mail::title() const {
  // @@protoc_insertion_point(field_get:pb.Mail.Title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Mail::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Mail.Title)
}
 void Mail::set_title(const char* value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Mail.Title)
}
 void Mail::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Mail.Title)
}
 ::std::string* Mail::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:pb.Mail.Title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Mail::release_title() {
  // @@protoc_insertion_point(field_release:pb.Mail.Title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Mail::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:pb.Mail.Title)
}

// optional string Sender = 3;
void Mail::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Mail::sender() const {
  // @@protoc_insertion_point(field_get:pb.Mail.Sender)
  return sender_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Mail::set_sender(const ::std::string& value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Mail.Sender)
}
 void Mail::set_sender(const char* value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Mail.Sender)
}
 void Mail::set_sender(const char* value, size_t size) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Mail.Sender)
}
 ::std::string* Mail::mutable_sender() {
  
  // @@protoc_insertion_point(field_mutable:pb.Mail.Sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Mail::release_sender() {
  // @@protoc_insertion_point(field_release:pb.Mail.Sender)
  
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Mail::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:pb.Mail.Sender)
}

// optional uint32 Sendtime = 4;
void Mail::clear_sendtime() {
  sendtime_ = 0u;
}
 ::google::protobuf::uint32 Mail::sendtime() const {
  // @@protoc_insertion_point(field_get:pb.Mail.Sendtime)
  return sendtime_;
}
 void Mail::set_sendtime(::google::protobuf::uint32 value) {
  
  sendtime_ = value;
  // @@protoc_insertion_point(field_set:pb.Mail.Sendtime)
}

// optional string Content = 5;
void Mail::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Mail::content() const {
  // @@protoc_insertion_point(field_get:pb.Mail.Content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Mail::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Mail.Content)
}
 void Mail::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Mail.Content)
}
 void Mail::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Mail.Content)
}
 ::std::string* Mail::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:pb.Mail.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Mail::release_content() {
  // @@protoc_insertion_point(field_release:pb.Mail.Content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Mail::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:pb.Mail.Content)
}

// repeated .pb.MailGift GiftList = 6;
int Mail::giftlist_size() const {
  return giftlist_.size();
}
void Mail::clear_giftlist() {
  giftlist_.Clear();
}
const ::pb::MailGift& Mail::giftlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.Mail.GiftList)
  return giftlist_.Get(index);
}
::pb::MailGift* Mail::mutable_giftlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.Mail.GiftList)
  return giftlist_.Mutable(index);
}
::pb::MailGift* Mail::add_giftlist() {
  // @@protoc_insertion_point(field_add:pb.Mail.GiftList)
  return giftlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::MailGift >*
Mail::mutable_giftlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.Mail.GiftList)
  return &giftlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::MailGift >&
Mail::giftlist() const {
  // @@protoc_insertion_point(field_list:pb.Mail.GiftList)
  return giftlist_;
}

// optional bool IsRead = 7;
void Mail::clear_isread() {
  isread_ = false;
}
 bool Mail::isread() const {
  // @@protoc_insertion_point(field_get:pb.Mail.IsRead)
  return isread_;
}
 void Mail::set_isread(bool value) {
  
  isread_ = value;
  // @@protoc_insertion_point(field_set:pb.Mail.IsRead)
}

// optional bool IsReceived = 8;
void Mail::clear_isreceived() {
  isreceived_ = false;
}
 bool Mail::isreceived() const {
  // @@protoc_insertion_point(field_get:pb.Mail.IsReceived)
  return isreceived_;
}
 void Mail::set_isreceived(bool value) {
  
  isreceived_ = value;
  // @@protoc_insertion_point(field_set:pb.Mail.IsReceived)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetMailList_253::C2SGetMailList_253()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetMailList_253)
}

void C2SGetMailList_253::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetMailList_253::C2SGetMailList_253(const C2SGetMailList_253& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetMailList_253)
}

void C2SGetMailList_253::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGetMailList_253::~C2SGetMailList_253() {
  // @@protoc_insertion_point(destructor:pb.C2SGetMailList_253)
  SharedDtor();
}

void C2SGetMailList_253::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetMailList_253::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetMailList_253::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetMailList_253_descriptor_;
}

const C2SGetMailList_253& C2SGetMailList_253::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetMailList_253* C2SGetMailList_253::default_instance_ = NULL;

C2SGetMailList_253* C2SGetMailList_253::New(::google::protobuf::Arena* arena) const {
  C2SGetMailList_253* n = new C2SGetMailList_253;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetMailList_253::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetMailList_253)
}

bool C2SGetMailList_253::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetMailList_253)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetMailList_253)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetMailList_253)
  return false;
#undef DO_
}

void C2SGetMailList_253::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetMailList_253)
  // @@protoc_insertion_point(serialize_end:pb.C2SGetMailList_253)
}

::google::protobuf::uint8* C2SGetMailList_253::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetMailList_253)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetMailList_253)
  return target;
}

int C2SGetMailList_253::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetMailList_253)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetMailList_253::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetMailList_253)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetMailList_253* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetMailList_253>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetMailList_253)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetMailList_253)
    MergeFrom(*source);
  }
}

void C2SGetMailList_253::MergeFrom(const C2SGetMailList_253& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetMailList_253)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SGetMailList_253::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetMailList_253)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetMailList_253::CopyFrom(const C2SGetMailList_253& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetMailList_253)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetMailList_253::IsInitialized() const {

  return true;
}

void C2SGetMailList_253::Swap(C2SGetMailList_253* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetMailList_253::InternalSwap(C2SGetMailList_253* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetMailList_253::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetMailList_253_descriptor_;
  metadata.reflection = C2SGetMailList_253_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetMailList_253

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetMailList_253::kMailListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetMailList_253::S2CGetMailList_253()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetMailList_253)
}

void S2CGetMailList_253::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetMailList_253::S2CGetMailList_253(const S2CGetMailList_253& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetMailList_253)
}

void S2CGetMailList_253::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CGetMailList_253::~S2CGetMailList_253() {
  // @@protoc_insertion_point(destructor:pb.S2CGetMailList_253)
  SharedDtor();
}

void S2CGetMailList_253::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetMailList_253::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetMailList_253::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetMailList_253_descriptor_;
}

const S2CGetMailList_253& S2CGetMailList_253::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetMailList_253* S2CGetMailList_253::default_instance_ = NULL;

S2CGetMailList_253* S2CGetMailList_253::New(::google::protobuf::Arena* arena) const {
  S2CGetMailList_253* n = new S2CGetMailList_253;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetMailList_253::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetMailList_253)
  maillist_.Clear();
}

bool S2CGetMailList_253::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetMailList_253)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.Mail MailList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_MailList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_maillist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_MailList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetMailList_253)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetMailList_253)
  return false;
#undef DO_
}

void S2CGetMailList_253::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetMailList_253)
  // repeated .pb.Mail MailList = 1;
  for (unsigned int i = 0, n = this->maillist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->maillist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetMailList_253)
}

::google::protobuf::uint8* S2CGetMailList_253::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetMailList_253)
  // repeated .pb.Mail MailList = 1;
  for (unsigned int i = 0, n = this->maillist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->maillist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetMailList_253)
  return target;
}

int S2CGetMailList_253::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetMailList_253)
  int total_size = 0;

  // repeated .pb.Mail MailList = 1;
  total_size += 1 * this->maillist_size();
  for (int i = 0; i < this->maillist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->maillist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetMailList_253::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetMailList_253)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetMailList_253* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetMailList_253>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetMailList_253)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetMailList_253)
    MergeFrom(*source);
  }
}

void S2CGetMailList_253::MergeFrom(const S2CGetMailList_253& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetMailList_253)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  maillist_.MergeFrom(from.maillist_);
}

void S2CGetMailList_253::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetMailList_253)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetMailList_253::CopyFrom(const S2CGetMailList_253& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetMailList_253)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetMailList_253::IsInitialized() const {

  return true;
}

void S2CGetMailList_253::Swap(S2CGetMailList_253* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetMailList_253::InternalSwap(S2CGetMailList_253* other) {
  maillist_.UnsafeArenaSwap(&other->maillist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetMailList_253::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetMailList_253_descriptor_;
  metadata.reflection = S2CGetMailList_253_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetMailList_253

// repeated .pb.Mail MailList = 1;
int S2CGetMailList_253::maillist_size() const {
  return maillist_.size();
}
void S2CGetMailList_253::clear_maillist() {
  maillist_.Clear();
}
const ::pb::Mail& S2CGetMailList_253::maillist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetMailList_253.MailList)
  return maillist_.Get(index);
}
::pb::Mail* S2CGetMailList_253::mutable_maillist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetMailList_253.MailList)
  return maillist_.Mutable(index);
}
::pb::Mail* S2CGetMailList_253::add_maillist() {
  // @@protoc_insertion_point(field_add:pb.S2CGetMailList_253.MailList)
  return maillist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::Mail >*
S2CGetMailList_253::mutable_maillist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetMailList_253.MailList)
  return &maillist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::Mail >&
S2CGetMailList_253::maillist() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetMailList_253.MailList)
  return maillist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SReadMail_254::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SReadMail_254::C2SReadMail_254()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SReadMail_254)
}

void C2SReadMail_254::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SReadMail_254::C2SReadMail_254(const C2SReadMail_254& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SReadMail_254)
}

void C2SReadMail_254::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0u;
}

C2SReadMail_254::~C2SReadMail_254() {
  // @@protoc_insertion_point(destructor:pb.C2SReadMail_254)
  SharedDtor();
}

void C2SReadMail_254::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SReadMail_254::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SReadMail_254::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SReadMail_254_descriptor_;
}

const C2SReadMail_254& C2SReadMail_254::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SReadMail_254* C2SReadMail_254::default_instance_ = NULL;

C2SReadMail_254* C2SReadMail_254::New(::google::protobuf::Arena* arena) const {
  C2SReadMail_254* n = new C2SReadMail_254;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SReadMail_254::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SReadMail_254)
  id_ = 0u;
}

bool C2SReadMail_254::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SReadMail_254)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SReadMail_254)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SReadMail_254)
  return false;
#undef DO_
}

void C2SReadMail_254::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SReadMail_254)
  // optional uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SReadMail_254)
}

::google::protobuf::uint8* C2SReadMail_254::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SReadMail_254)
  // optional uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SReadMail_254)
  return target;
}

int C2SReadMail_254::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SReadMail_254)
  int total_size = 0;

  // optional uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SReadMail_254::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SReadMail_254)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SReadMail_254* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SReadMail_254>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SReadMail_254)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SReadMail_254)
    MergeFrom(*source);
  }
}

void C2SReadMail_254::MergeFrom(const C2SReadMail_254& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SReadMail_254)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void C2SReadMail_254::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SReadMail_254)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SReadMail_254::CopyFrom(const C2SReadMail_254& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SReadMail_254)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SReadMail_254::IsInitialized() const {

  return true;
}

void C2SReadMail_254::Swap(C2SReadMail_254* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SReadMail_254::InternalSwap(C2SReadMail_254* other) {
  std::swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SReadMail_254::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SReadMail_254_descriptor_;
  metadata.reflection = C2SReadMail_254_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SReadMail_254

// optional uint32 Id = 1;
void C2SReadMail_254::clear_id() {
  id_ = 0u;
}
 ::google::protobuf::uint32 C2SReadMail_254::id() const {
  // @@protoc_insertion_point(field_get:pb.C2SReadMail_254.Id)
  return id_;
}
 void C2SReadMail_254::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SReadMail_254.Id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SReceiveGift_255::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SReceiveGift_255::C2SReceiveGift_255()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SReceiveGift_255)
}

void C2SReceiveGift_255::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SReceiveGift_255::C2SReceiveGift_255(const C2SReceiveGift_255& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SReceiveGift_255)
}

void C2SReceiveGift_255::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0u;
}

C2SReceiveGift_255::~C2SReceiveGift_255() {
  // @@protoc_insertion_point(destructor:pb.C2SReceiveGift_255)
  SharedDtor();
}

void C2SReceiveGift_255::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SReceiveGift_255::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SReceiveGift_255::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SReceiveGift_255_descriptor_;
}

const C2SReceiveGift_255& C2SReceiveGift_255::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SReceiveGift_255* C2SReceiveGift_255::default_instance_ = NULL;

C2SReceiveGift_255* C2SReceiveGift_255::New(::google::protobuf::Arena* arena) const {
  C2SReceiveGift_255* n = new C2SReceiveGift_255;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SReceiveGift_255::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SReceiveGift_255)
  id_ = 0u;
}

bool C2SReceiveGift_255::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SReceiveGift_255)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SReceiveGift_255)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SReceiveGift_255)
  return false;
#undef DO_
}

void C2SReceiveGift_255::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SReceiveGift_255)
  // optional uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SReceiveGift_255)
}

::google::protobuf::uint8* C2SReceiveGift_255::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SReceiveGift_255)
  // optional uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SReceiveGift_255)
  return target;
}

int C2SReceiveGift_255::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SReceiveGift_255)
  int total_size = 0;

  // optional uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SReceiveGift_255::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SReceiveGift_255)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SReceiveGift_255* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SReceiveGift_255>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SReceiveGift_255)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SReceiveGift_255)
    MergeFrom(*source);
  }
}

void C2SReceiveGift_255::MergeFrom(const C2SReceiveGift_255& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SReceiveGift_255)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void C2SReceiveGift_255::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SReceiveGift_255)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SReceiveGift_255::CopyFrom(const C2SReceiveGift_255& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SReceiveGift_255)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SReceiveGift_255::IsInitialized() const {

  return true;
}

void C2SReceiveGift_255::Swap(C2SReceiveGift_255* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SReceiveGift_255::InternalSwap(C2SReceiveGift_255* other) {
  std::swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SReceiveGift_255::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SReceiveGift_255_descriptor_;
  metadata.reflection = C2SReceiveGift_255_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SReceiveGift_255

// optional uint32 Id = 1;
void C2SReceiveGift_255::clear_id() {
  id_ = 0u;
}
 ::google::protobuf::uint32 C2SReceiveGift_255::id() const {
  // @@protoc_insertion_point(field_get:pb.C2SReceiveGift_255.Id)
  return id_;
}
 void C2SReceiveGift_255::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SReceiveGift_255.Id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CSendMail_256::kMailInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CSendMail_256::S2CSendMail_256()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CSendMail_256)
}

void S2CSendMail_256::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  mailinfo_ = const_cast< ::pb::Mail*>(&::pb::Mail::default_instance());
}

S2CSendMail_256::S2CSendMail_256(const S2CSendMail_256& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CSendMail_256)
}

void S2CSendMail_256::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  mailinfo_ = NULL;
}

S2CSendMail_256::~S2CSendMail_256() {
  // @@protoc_insertion_point(destructor:pb.S2CSendMail_256)
  SharedDtor();
}

void S2CSendMail_256::SharedDtor() {
  if (this != default_instance_) {
    delete mailinfo_;
  }
}

void S2CSendMail_256::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CSendMail_256::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CSendMail_256_descriptor_;
}

const S2CSendMail_256& S2CSendMail_256::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CSendMail_256* S2CSendMail_256::default_instance_ = NULL;

S2CSendMail_256* S2CSendMail_256::New(::google::protobuf::Arena* arena) const {
  S2CSendMail_256* n = new S2CSendMail_256;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CSendMail_256::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CSendMail_256)
  if (GetArenaNoVirtual() == NULL && mailinfo_ != NULL) delete mailinfo_;
  mailinfo_ = NULL;
}

bool S2CSendMail_256::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CSendMail_256)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.Mail MailInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mailinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CSendMail_256)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CSendMail_256)
  return false;
#undef DO_
}

void S2CSendMail_256::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CSendMail_256)
  // optional .pb.Mail MailInfo = 1;
  if (this->has_mailinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->mailinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CSendMail_256)
}

::google::protobuf::uint8* S2CSendMail_256::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CSendMail_256)
  // optional .pb.Mail MailInfo = 1;
  if (this->has_mailinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->mailinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CSendMail_256)
  return target;
}

int S2CSendMail_256::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CSendMail_256)
  int total_size = 0;

  // optional .pb.Mail MailInfo = 1;
  if (this->has_mailinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mailinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CSendMail_256::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CSendMail_256)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CSendMail_256* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CSendMail_256>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CSendMail_256)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CSendMail_256)
    MergeFrom(*source);
  }
}

void S2CSendMail_256::MergeFrom(const S2CSendMail_256& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CSendMail_256)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_mailinfo()) {
    mutable_mailinfo()->::pb::Mail::MergeFrom(from.mailinfo());
  }
}

void S2CSendMail_256::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CSendMail_256)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CSendMail_256::CopyFrom(const S2CSendMail_256& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CSendMail_256)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CSendMail_256::IsInitialized() const {

  return true;
}

void S2CSendMail_256::Swap(S2CSendMail_256* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CSendMail_256::InternalSwap(S2CSendMail_256* other) {
  std::swap(mailinfo_, other->mailinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CSendMail_256::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CSendMail_256_descriptor_;
  metadata.reflection = S2CSendMail_256_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CSendMail_256

// optional .pb.Mail MailInfo = 1;
bool S2CSendMail_256::has_mailinfo() const {
  return !_is_default_instance_ && mailinfo_ != NULL;
}
void S2CSendMail_256::clear_mailinfo() {
  if (GetArenaNoVirtual() == NULL && mailinfo_ != NULL) delete mailinfo_;
  mailinfo_ = NULL;
}
const ::pb::Mail& S2CSendMail_256::mailinfo() const {
  // @@protoc_insertion_point(field_get:pb.S2CSendMail_256.MailInfo)
  return mailinfo_ != NULL ? *mailinfo_ : *default_instance_->mailinfo_;
}
::pb::Mail* S2CSendMail_256::mutable_mailinfo() {
  
  if (mailinfo_ == NULL) {
    mailinfo_ = new ::pb::Mail;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CSendMail_256.MailInfo)
  return mailinfo_;
}
::pb::Mail* S2CSendMail_256::release_mailinfo() {
  // @@protoc_insertion_point(field_release:pb.S2CSendMail_256.MailInfo)
  
  ::pb::Mail* temp = mailinfo_;
  mailinfo_ = NULL;
  return temp;
}
void S2CSendMail_256::set_allocated_mailinfo(::pb::Mail* mailinfo) {
  delete mailinfo_;
  mailinfo_ = mailinfo;
  if (mailinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CSendMail_256.MailInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SDeleteMail_257::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SDeleteMail_257::C2SDeleteMail_257()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SDeleteMail_257)
}

void C2SDeleteMail_257::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SDeleteMail_257::C2SDeleteMail_257(const C2SDeleteMail_257& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SDeleteMail_257)
}

void C2SDeleteMail_257::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0u;
}

C2SDeleteMail_257::~C2SDeleteMail_257() {
  // @@protoc_insertion_point(destructor:pb.C2SDeleteMail_257)
  SharedDtor();
}

void C2SDeleteMail_257::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SDeleteMail_257::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SDeleteMail_257::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SDeleteMail_257_descriptor_;
}

const C2SDeleteMail_257& C2SDeleteMail_257::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SDeleteMail_257* C2SDeleteMail_257::default_instance_ = NULL;

C2SDeleteMail_257* C2SDeleteMail_257::New(::google::protobuf::Arena* arena) const {
  C2SDeleteMail_257* n = new C2SDeleteMail_257;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SDeleteMail_257::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SDeleteMail_257)
  id_ = 0u;
}

bool C2SDeleteMail_257::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SDeleteMail_257)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SDeleteMail_257)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SDeleteMail_257)
  return false;
#undef DO_
}

void C2SDeleteMail_257::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SDeleteMail_257)
  // optional uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SDeleteMail_257)
}

::google::protobuf::uint8* C2SDeleteMail_257::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SDeleteMail_257)
  // optional uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SDeleteMail_257)
  return target;
}

int C2SDeleteMail_257::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SDeleteMail_257)
  int total_size = 0;

  // optional uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SDeleteMail_257::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SDeleteMail_257)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SDeleteMail_257* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SDeleteMail_257>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SDeleteMail_257)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SDeleteMail_257)
    MergeFrom(*source);
  }
}

void C2SDeleteMail_257::MergeFrom(const C2SDeleteMail_257& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SDeleteMail_257)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void C2SDeleteMail_257::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SDeleteMail_257)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SDeleteMail_257::CopyFrom(const C2SDeleteMail_257& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SDeleteMail_257)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SDeleteMail_257::IsInitialized() const {

  return true;
}

void C2SDeleteMail_257::Swap(C2SDeleteMail_257* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SDeleteMail_257::InternalSwap(C2SDeleteMail_257* other) {
  std::swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SDeleteMail_257::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SDeleteMail_257_descriptor_;
  metadata.reflection = C2SDeleteMail_257_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SDeleteMail_257

// optional uint32 Id = 1;
void C2SDeleteMail_257::clear_id() {
  id_ = 0u;
}
 ::google::protobuf::uint32 C2SDeleteMail_257::id() const {
  // @@protoc_insertion_point(field_get:pb.C2SDeleteMail_257.Id)
  return id_;
}
 void C2SDeleteMail_257::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SDeleteMail_257.Id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CBroadcastLevel_258::kLevelFieldNumber;
const int S2CBroadcastLevel_258::kExpFieldNumber;
const int S2CBroadcastLevel_258::kRewardStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CBroadcastLevel_258::S2CBroadcastLevel_258()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CBroadcastLevel_258)
}

void S2CBroadcastLevel_258::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CBroadcastLevel_258::S2CBroadcastLevel_258(const S2CBroadcastLevel_258& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CBroadcastLevel_258)
}

void S2CBroadcastLevel_258::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  level_ = 0u;
  exp_ = 0u;
  rewardstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

S2CBroadcastLevel_258::~S2CBroadcastLevel_258() {
  // @@protoc_insertion_point(destructor:pb.S2CBroadcastLevel_258)
  SharedDtor();
}

void S2CBroadcastLevel_258::SharedDtor() {
  rewardstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void S2CBroadcastLevel_258::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CBroadcastLevel_258::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CBroadcastLevel_258_descriptor_;
}

const S2CBroadcastLevel_258& S2CBroadcastLevel_258::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CBroadcastLevel_258* S2CBroadcastLevel_258::default_instance_ = NULL;

S2CBroadcastLevel_258* S2CBroadcastLevel_258::New(::google::protobuf::Arena* arena) const {
  S2CBroadcastLevel_258* n = new S2CBroadcastLevel_258;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CBroadcastLevel_258::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CBroadcastLevel_258)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CBroadcastLevel_258, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CBroadcastLevel_258*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(level_, exp_);
  rewardstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool S2CBroadcastLevel_258::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CBroadcastLevel_258)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Exp;
        break;
      }

      // optional uint32 Exp = 2;
      case 2: {
        if (tag == 16) {
         parse_Exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RewardStr;
        break;
      }

      // optional string RewardStr = 3;
      case 3: {
        if (tag == 26) {
         parse_RewardStr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rewardstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rewardstr().data(), this->rewardstr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CBroadcastLevel_258.RewardStr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CBroadcastLevel_258)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CBroadcastLevel_258)
  return false;
#undef DO_
}

void S2CBroadcastLevel_258::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CBroadcastLevel_258)
  // optional uint32 Level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // optional uint32 Exp = 2;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->exp(), output);
  }

  // optional string RewardStr = 3;
  if (this->rewardstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rewardstr().data(), this->rewardstr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CBroadcastLevel_258.RewardStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rewardstr(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CBroadcastLevel_258)
}

::google::protobuf::uint8* S2CBroadcastLevel_258::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CBroadcastLevel_258)
  // optional uint32 Level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // optional uint32 Exp = 2;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->exp(), target);
  }

  // optional string RewardStr = 3;
  if (this->rewardstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rewardstr().data(), this->rewardstr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CBroadcastLevel_258.RewardStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rewardstr(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CBroadcastLevel_258)
  return target;
}

int S2CBroadcastLevel_258::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CBroadcastLevel_258)
  int total_size = 0;

  // optional uint32 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // optional uint32 Exp = 2;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp());
  }

  // optional string RewardStr = 3;
  if (this->rewardstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rewardstr());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CBroadcastLevel_258::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CBroadcastLevel_258)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CBroadcastLevel_258* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CBroadcastLevel_258>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CBroadcastLevel_258)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CBroadcastLevel_258)
    MergeFrom(*source);
  }
}

void S2CBroadcastLevel_258::MergeFrom(const S2CBroadcastLevel_258& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CBroadcastLevel_258)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.rewardstr().size() > 0) {

    rewardstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rewardstr_);
  }
}

void S2CBroadcastLevel_258::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CBroadcastLevel_258)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CBroadcastLevel_258::CopyFrom(const S2CBroadcastLevel_258& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CBroadcastLevel_258)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CBroadcastLevel_258::IsInitialized() const {

  return true;
}

void S2CBroadcastLevel_258::Swap(S2CBroadcastLevel_258* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CBroadcastLevel_258::InternalSwap(S2CBroadcastLevel_258* other) {
  std::swap(level_, other->level_);
  std::swap(exp_, other->exp_);
  rewardstr_.Swap(&other->rewardstr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CBroadcastLevel_258::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CBroadcastLevel_258_descriptor_;
  metadata.reflection = S2CBroadcastLevel_258_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CBroadcastLevel_258

// optional uint32 Level = 1;
void S2CBroadcastLevel_258::clear_level() {
  level_ = 0u;
}
 ::google::protobuf::uint32 S2CBroadcastLevel_258::level() const {
  // @@protoc_insertion_point(field_get:pb.S2CBroadcastLevel_258.Level)
  return level_;
}
 void S2CBroadcastLevel_258::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CBroadcastLevel_258.Level)
}

// optional uint32 Exp = 2;
void S2CBroadcastLevel_258::clear_exp() {
  exp_ = 0u;
}
 ::google::protobuf::uint32 S2CBroadcastLevel_258::exp() const {
  // @@protoc_insertion_point(field_get:pb.S2CBroadcastLevel_258.Exp)
  return exp_;
}
 void S2CBroadcastLevel_258::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CBroadcastLevel_258.Exp)
}

// optional string RewardStr = 3;
void S2CBroadcastLevel_258::clear_rewardstr() {
  rewardstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CBroadcastLevel_258::rewardstr() const {
  // @@protoc_insertion_point(field_get:pb.S2CBroadcastLevel_258.RewardStr)
  return rewardstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CBroadcastLevel_258::set_rewardstr(const ::std::string& value) {
  
  rewardstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CBroadcastLevel_258.RewardStr)
}
 void S2CBroadcastLevel_258::set_rewardstr(const char* value) {
  
  rewardstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CBroadcastLevel_258.RewardStr)
}
 void S2CBroadcastLevel_258::set_rewardstr(const char* value, size_t size) {
  
  rewardstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CBroadcastLevel_258.RewardStr)
}
 ::std::string* S2CBroadcastLevel_258::mutable_rewardstr() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CBroadcastLevel_258.RewardStr)
  return rewardstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CBroadcastLevel_258::release_rewardstr() {
  // @@protoc_insertion_point(field_release:pb.S2CBroadcastLevel_258.RewardStr)
  
  return rewardstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CBroadcastLevel_258::set_allocated_rewardstr(::std::string* rewardstr) {
  if (rewardstr != NULL) {
    
  } else {
    
  }
  rewardstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rewardstr);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CBroadcastLevel_258.RewardStr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CImportantNotice_259::kContentFieldNumber;
const int S2CImportantNotice_259::kReplayTimesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CImportantNotice_259::S2CImportantNotice_259()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CImportantNotice_259)
}

void S2CImportantNotice_259::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CImportantNotice_259::S2CImportantNotice_259(const S2CImportantNotice_259& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CImportantNotice_259)
}

void S2CImportantNotice_259::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  replaytimes_ = 0u;
}

S2CImportantNotice_259::~S2CImportantNotice_259() {
  // @@protoc_insertion_point(destructor:pb.S2CImportantNotice_259)
  SharedDtor();
}

void S2CImportantNotice_259::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void S2CImportantNotice_259::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CImportantNotice_259::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CImportantNotice_259_descriptor_;
}

const S2CImportantNotice_259& S2CImportantNotice_259::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CImportantNotice_259* S2CImportantNotice_259::default_instance_ = NULL;

S2CImportantNotice_259* S2CImportantNotice_259::New(::google::protobuf::Arena* arena) const {
  S2CImportantNotice_259* n = new S2CImportantNotice_259;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CImportantNotice_259::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CImportantNotice_259)
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  replaytimes_ = 0u;
}

bool S2CImportantNotice_259::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CImportantNotice_259)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Content = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CImportantNotice_259.Content"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ReplayTimes;
        break;
      }

      // optional uint32 ReplayTimes = 2;
      case 2: {
        if (tag == 16) {
         parse_ReplayTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &replaytimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CImportantNotice_259)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CImportantNotice_259)
  return false;
#undef DO_
}

void S2CImportantNotice_259::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CImportantNotice_259)
  // optional string Content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CImportantNotice_259.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  // optional uint32 ReplayTimes = 2;
  if (this->replaytimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->replaytimes(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CImportantNotice_259)
}

::google::protobuf::uint8* S2CImportantNotice_259::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CImportantNotice_259)
  // optional string Content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CImportantNotice_259.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  // optional uint32 ReplayTimes = 2;
  if (this->replaytimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->replaytimes(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CImportantNotice_259)
  return target;
}

int S2CImportantNotice_259::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CImportantNotice_259)
  int total_size = 0;

  // optional string Content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // optional uint32 ReplayTimes = 2;
  if (this->replaytimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->replaytimes());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CImportantNotice_259::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CImportantNotice_259)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CImportantNotice_259* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CImportantNotice_259>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CImportantNotice_259)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CImportantNotice_259)
    MergeFrom(*source);
  }
}

void S2CImportantNotice_259::MergeFrom(const S2CImportantNotice_259& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CImportantNotice_259)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.replaytimes() != 0) {
    set_replaytimes(from.replaytimes());
  }
}

void S2CImportantNotice_259::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CImportantNotice_259)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CImportantNotice_259::CopyFrom(const S2CImportantNotice_259& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CImportantNotice_259)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CImportantNotice_259::IsInitialized() const {

  return true;
}

void S2CImportantNotice_259::Swap(S2CImportantNotice_259* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CImportantNotice_259::InternalSwap(S2CImportantNotice_259* other) {
  content_.Swap(&other->content_);
  std::swap(replaytimes_, other->replaytimes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CImportantNotice_259::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CImportantNotice_259_descriptor_;
  metadata.reflection = S2CImportantNotice_259_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CImportantNotice_259

// optional string Content = 1;
void S2CImportantNotice_259::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CImportantNotice_259::content() const {
  // @@protoc_insertion_point(field_get:pb.S2CImportantNotice_259.Content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CImportantNotice_259::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CImportantNotice_259.Content)
}
 void S2CImportantNotice_259::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CImportantNotice_259.Content)
}
 void S2CImportantNotice_259::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CImportantNotice_259.Content)
}
 ::std::string* S2CImportantNotice_259::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CImportantNotice_259.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CImportantNotice_259::release_content() {
  // @@protoc_insertion_point(field_release:pb.S2CImportantNotice_259.Content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CImportantNotice_259::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CImportantNotice_259.Content)
}

// optional uint32 ReplayTimes = 2;
void S2CImportantNotice_259::clear_replaytimes() {
  replaytimes_ = 0u;
}
 ::google::protobuf::uint32 S2CImportantNotice_259::replaytimes() const {
  // @@protoc_insertion_point(field_get:pb.S2CImportantNotice_259.ReplayTimes)
  return replaytimes_;
}
 void S2CImportantNotice_259::set_replaytimes(::google::protobuf::uint32 value) {
  
  replaytimes_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CImportantNotice_259.ReplayTimes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetShopParams_260::C2SGetShopParams_260()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetShopParams_260)
}

void C2SGetShopParams_260::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetShopParams_260::C2SGetShopParams_260(const C2SGetShopParams_260& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetShopParams_260)
}

void C2SGetShopParams_260::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGetShopParams_260::~C2SGetShopParams_260() {
  // @@protoc_insertion_point(destructor:pb.C2SGetShopParams_260)
  SharedDtor();
}

void C2SGetShopParams_260::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetShopParams_260::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetShopParams_260::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetShopParams_260_descriptor_;
}

const C2SGetShopParams_260& C2SGetShopParams_260::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetShopParams_260* C2SGetShopParams_260::default_instance_ = NULL;

C2SGetShopParams_260* C2SGetShopParams_260::New(::google::protobuf::Arena* arena) const {
  C2SGetShopParams_260* n = new C2SGetShopParams_260;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetShopParams_260::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetShopParams_260)
}

bool C2SGetShopParams_260::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetShopParams_260)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetShopParams_260)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetShopParams_260)
  return false;
#undef DO_
}

void C2SGetShopParams_260::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetShopParams_260)
  // @@protoc_insertion_point(serialize_end:pb.C2SGetShopParams_260)
}

::google::protobuf::uint8* C2SGetShopParams_260::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetShopParams_260)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetShopParams_260)
  return target;
}

int C2SGetShopParams_260::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetShopParams_260)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetShopParams_260::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetShopParams_260)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetShopParams_260* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetShopParams_260>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetShopParams_260)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetShopParams_260)
    MergeFrom(*source);
  }
}

void C2SGetShopParams_260::MergeFrom(const C2SGetShopParams_260& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetShopParams_260)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SGetShopParams_260::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetShopParams_260)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetShopParams_260::CopyFrom(const C2SGetShopParams_260& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetShopParams_260)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetShopParams_260::IsInitialized() const {

  return true;
}

void C2SGetShopParams_260::Swap(C2SGetShopParams_260* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetShopParams_260::InternalSwap(C2SGetShopParams_260* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetShopParams_260::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetShopParams_260_descriptor_;
  metadata.reflection = C2SGetShopParams_260_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetShopParams_260

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetShopParams_260::kMaxStarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetShopParams_260::S2CGetShopParams_260()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetShopParams_260)
}

void S2CGetShopParams_260::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetShopParams_260::S2CGetShopParams_260(const S2CGetShopParams_260& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetShopParams_260)
}

void S2CGetShopParams_260::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  maxstar_ = 0u;
}

S2CGetShopParams_260::~S2CGetShopParams_260() {
  // @@protoc_insertion_point(destructor:pb.S2CGetShopParams_260)
  SharedDtor();
}

void S2CGetShopParams_260::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetShopParams_260::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetShopParams_260::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetShopParams_260_descriptor_;
}

const S2CGetShopParams_260& S2CGetShopParams_260::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetShopParams_260* S2CGetShopParams_260::default_instance_ = NULL;

S2CGetShopParams_260* S2CGetShopParams_260::New(::google::protobuf::Arena* arena) const {
  S2CGetShopParams_260* n = new S2CGetShopParams_260;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetShopParams_260::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetShopParams_260)
  maxstar_ = 0u;
}

bool S2CGetShopParams_260::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetShopParams_260)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MaxStar = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxstar_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetShopParams_260)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetShopParams_260)
  return false;
#undef DO_
}

void S2CGetShopParams_260::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetShopParams_260)
  // optional uint32 MaxStar = 1;
  if (this->maxstar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->maxstar(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetShopParams_260)
}

::google::protobuf::uint8* S2CGetShopParams_260::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetShopParams_260)
  // optional uint32 MaxStar = 1;
  if (this->maxstar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->maxstar(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetShopParams_260)
  return target;
}

int S2CGetShopParams_260::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetShopParams_260)
  int total_size = 0;

  // optional uint32 MaxStar = 1;
  if (this->maxstar() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxstar());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetShopParams_260::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetShopParams_260)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetShopParams_260* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetShopParams_260>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetShopParams_260)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetShopParams_260)
    MergeFrom(*source);
  }
}

void S2CGetShopParams_260::MergeFrom(const S2CGetShopParams_260& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetShopParams_260)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.maxstar() != 0) {
    set_maxstar(from.maxstar());
  }
}

void S2CGetShopParams_260::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetShopParams_260)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetShopParams_260::CopyFrom(const S2CGetShopParams_260& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetShopParams_260)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetShopParams_260::IsInitialized() const {

  return true;
}

void S2CGetShopParams_260::Swap(S2CGetShopParams_260* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetShopParams_260::InternalSwap(S2CGetShopParams_260* other) {
  std::swap(maxstar_, other->maxstar_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetShopParams_260::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetShopParams_260_descriptor_;
  metadata.reflection = S2CGetShopParams_260_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetShopParams_260

// optional uint32 MaxStar = 1;
void S2CGetShopParams_260::clear_maxstar() {
  maxstar_ = 0u;
}
 ::google::protobuf::uint32 S2CGetShopParams_260::maxstar() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetShopParams_260.MaxStar)
  return maxstar_;
}
 void S2CGetShopParams_260::set_maxstar(::google::protobuf::uint32 value) {
  
  maxstar_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetShopParams_260.MaxStar)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SSearchUser_280::kUseridFieldNumber;
const int C2SSearchUser_280::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SSearchUser_280::C2SSearchUser_280()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SSearchUser_280)
}

void C2SSearchUser_280::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SSearchUser_280::C2SSearchUser_280(const C2SSearchUser_280& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SSearchUser_280)
}

void C2SSearchUser_280::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2SSearchUser_280::~C2SSearchUser_280() {
  // @@protoc_insertion_point(destructor:pb.C2SSearchUser_280)
  SharedDtor();
}

void C2SSearchUser_280::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2SSearchUser_280::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SSearchUser_280::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SSearchUser_280_descriptor_;
}

const C2SSearchUser_280& C2SSearchUser_280::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SSearchUser_280* C2SSearchUser_280::default_instance_ = NULL;

C2SSearchUser_280* C2SSearchUser_280::New(::google::protobuf::Arena* arena) const {
  C2SSearchUser_280* n = new C2SSearchUser_280;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SSearchUser_280::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SSearchUser_280)
  userid_ = GOOGLE_ULONGLONG(0);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2SSearchUser_280::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SSearchUser_280)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Name;
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (tag == 18) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SSearchUser_280.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SSearchUser_280)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SSearchUser_280)
  return false;
#undef DO_
}

void C2SSearchUser_280::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SSearchUser_280)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->userid(), output);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SSearchUser_280.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SSearchUser_280)
}

::google::protobuf::uint8* C2SSearchUser_280::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SSearchUser_280)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->userid(), target);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SSearchUser_280.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SSearchUser_280)
  return target;
}

int C2SSearchUser_280::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SSearchUser_280)
  int total_size = 0;

  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SSearchUser_280::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SSearchUser_280)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SSearchUser_280* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SSearchUser_280>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SSearchUser_280)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SSearchUser_280)
    MergeFrom(*source);
  }
}

void C2SSearchUser_280::MergeFrom(const C2SSearchUser_280& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SSearchUser_280)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void C2SSearchUser_280::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SSearchUser_280)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SSearchUser_280::CopyFrom(const C2SSearchUser_280& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SSearchUser_280)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SSearchUser_280::IsInitialized() const {

  return true;
}

void C2SSearchUser_280::Swap(C2SSearchUser_280* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SSearchUser_280::InternalSwap(C2SSearchUser_280* other) {
  std::swap(userid_, other->userid_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SSearchUser_280::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SSearchUser_280_descriptor_;
  metadata.reflection = C2SSearchUser_280_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SSearchUser_280

// optional uint64 Userid = 1;
void C2SSearchUser_280::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 C2SSearchUser_280::userid() const {
  // @@protoc_insertion_point(field_get:pb.C2SSearchUser_280.Userid)
  return userid_;
}
 void C2SSearchUser_280::set_userid(::google::protobuf::uint64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SSearchUser_280.Userid)
}

// optional string Name = 2;
void C2SSearchUser_280::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SSearchUser_280::name() const {
  // @@protoc_insertion_point(field_get:pb.C2SSearchUser_280.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SSearchUser_280::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SSearchUser_280.Name)
}
 void C2SSearchUser_280::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SSearchUser_280.Name)
}
 void C2SSearchUser_280::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SSearchUser_280.Name)
}
 ::std::string* C2SSearchUser_280::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SSearchUser_280.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SSearchUser_280::release_name() {
  // @@protoc_insertion_point(field_release:pb.C2SSearchUser_280.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SSearchUser_280::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SSearchUser_280.Name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserProfile::kUseridFieldNumber;
const int UserProfile::kNameFieldNumber;
const int UserProfile::kSexFieldNumber;
const int UserProfile::kLevelFieldNumber;
const int UserProfile::kStarFieldNumber;
const int UserProfile::kIntimacyFieldNumber;
const int UserProfile::kVerifyMsgFieldNumber;
const int UserProfile::kChannelFieldNumber;
const int UserProfile::kOnlineFieldNumber;
const int UserProfile::kLocationFieldNumber;
const int UserProfile::kDistanceFieldNumber;
const int UserProfile::kMountidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserProfile::UserProfile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.UserProfile)
}

void UserProfile::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UserProfile::UserProfile(const UserProfile& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.UserProfile)
}

void UserProfile::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sex_ = 0u;
  level_ = 0u;
  star_ = 0u;
  intimacy_ = 0u;
  verifymsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0u;
  online_ = false;
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  distance_ = 0u;
  mountid_ = 0u;
}

UserProfile::~UserProfile() {
  // @@protoc_insertion_point(destructor:pb.UserProfile)
  SharedDtor();
}

void UserProfile::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verifymsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void UserProfile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserProfile::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserProfile_descriptor_;
}

const UserProfile& UserProfile::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

UserProfile* UserProfile::default_instance_ = NULL;

UserProfile* UserProfile::New(::google::protobuf::Arena* arena) const {
  UserProfile* n = new UserProfile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.UserProfile)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UserProfile, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UserProfile*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(sex_, intimacy_);
  userid_ = GOOGLE_ULONGLONG(0);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verifymsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0u;
  ZR_(distance_, mountid_);
  online_ = false;
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool UserProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.UserProfile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Name;
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (tag == 18) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.UserProfile.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Sex;
        break;
      }

      // optional uint32 Sex = 3;
      case 3: {
        if (tag == 24) {
         parse_Sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Level;
        break;
      }

      // optional uint32 Level = 4;
      case 4: {
        if (tag == 32) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Star;
        break;
      }

      // optional uint32 Star = 5;
      case 5: {
        if (tag == 40) {
         parse_Star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &star_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Intimacy;
        break;
      }

      // optional uint32 Intimacy = 6;
      case 6: {
        if (tag == 48) {
         parse_Intimacy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &intimacy_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_VerifyMsg;
        break;
      }

      // optional string VerifyMsg = 7;
      case 7: {
        if (tag == 58) {
         parse_VerifyMsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verifymsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->verifymsg().data(), this->verifymsg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.UserProfile.VerifyMsg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_Channel;
        break;
      }

      // optional uint32 Channel = 8;
      case 8: {
        if (tag == 64) {
         parse_Channel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_Online;
        break;
      }

      // optional bool Online = 9;
      case 9: {
        if (tag == 72) {
         parse_Online:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &online_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_Location;
        break;
      }

      // optional string Location = 10;
      case 10: {
        if (tag == 82) {
         parse_Location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.UserProfile.Location"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_Distance;
        break;
      }

      // optional uint32 Distance = 11;
      case 11: {
        if (tag == 88) {
         parse_Distance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &distance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_Mountid;
        break;
      }

      // optional uint32 Mountid = 12;
      case 12: {
        if (tag == 96) {
         parse_Mountid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.UserProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.UserProfile)
  return false;
#undef DO_
}

void UserProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.UserProfile)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->userid(), output);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.UserProfile.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional uint32 Sex = 3;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sex(), output);
  }

  // optional uint32 Level = 4;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->level(), output);
  }

  // optional uint32 Star = 5;
  if (this->star() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->star(), output);
  }

  // optional uint32 Intimacy = 6;
  if (this->intimacy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->intimacy(), output);
  }

  // optional string VerifyMsg = 7;
  if (this->verifymsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verifymsg().data(), this->verifymsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.UserProfile.VerifyMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->verifymsg(), output);
  }

  // optional uint32 Channel = 8;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->channel(), output);
  }

  // optional bool Online = 9;
  if (this->online() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->online(), output);
  }

  // optional string Location = 10;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.UserProfile.Location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->location(), output);
  }

  // optional uint32 Distance = 11;
  if (this->distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->distance(), output);
  }

  // optional uint32 Mountid = 12;
  if (this->mountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->mountid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.UserProfile)
}

::google::protobuf::uint8* UserProfile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.UserProfile)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->userid(), target);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.UserProfile.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional uint32 Sex = 3;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sex(), target);
  }

  // optional uint32 Level = 4;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->level(), target);
  }

  // optional uint32 Star = 5;
  if (this->star() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->star(), target);
  }

  // optional uint32 Intimacy = 6;
  if (this->intimacy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->intimacy(), target);
  }

  // optional string VerifyMsg = 7;
  if (this->verifymsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verifymsg().data(), this->verifymsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.UserProfile.VerifyMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->verifymsg(), target);
  }

  // optional uint32 Channel = 8;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->channel(), target);
  }

  // optional bool Online = 9;
  if (this->online() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->online(), target);
  }

  // optional string Location = 10;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.UserProfile.Location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->location(), target);
  }

  // optional uint32 Distance = 11;
  if (this->distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->distance(), target);
  }

  // optional uint32 Mountid = 12;
  if (this->mountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->mountid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.UserProfile)
  return target;
}

int UserProfile::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.UserProfile)
  int total_size = 0;

  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional uint32 Sex = 3;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sex());
  }

  // optional uint32 Level = 4;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // optional uint32 Star = 5;
  if (this->star() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->star());
  }

  // optional uint32 Intimacy = 6;
  if (this->intimacy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->intimacy());
  }

  // optional string VerifyMsg = 7;
  if (this->verifymsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->verifymsg());
  }

  // optional uint32 Channel = 8;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel());
  }

  // optional bool Online = 9;
  if (this->online() != 0) {
    total_size += 1 + 1;
  }

  // optional string Location = 10;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // optional uint32 Distance = 11;
  if (this->distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->distance());
  }

  // optional uint32 Mountid = 12;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mountid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.UserProfile)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UserProfile* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UserProfile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.UserProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.UserProfile)
    MergeFrom(*source);
  }
}

void UserProfile::MergeFrom(const UserProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.UserProfile)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.star() != 0) {
    set_star(from.star());
  }
  if (from.intimacy() != 0) {
    set_intimacy(from.intimacy());
  }
  if (from.verifymsg().size() > 0) {

    verifymsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifymsg_);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.online() != 0) {
    set_online(from.online());
  }
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.distance() != 0) {
    set_distance(from.distance());
  }
  if (from.mountid() != 0) {
    set_mountid(from.mountid());
  }
}

void UserProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.UserProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserProfile::CopyFrom(const UserProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.UserProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserProfile::IsInitialized() const {

  return true;
}

void UserProfile::Swap(UserProfile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserProfile::InternalSwap(UserProfile* other) {
  std::swap(userid_, other->userid_);
  name_.Swap(&other->name_);
  std::swap(sex_, other->sex_);
  std::swap(level_, other->level_);
  std::swap(star_, other->star_);
  std::swap(intimacy_, other->intimacy_);
  verifymsg_.Swap(&other->verifymsg_);
  std::swap(channel_, other->channel_);
  std::swap(online_, other->online_);
  location_.Swap(&other->location_);
  std::swap(distance_, other->distance_);
  std::swap(mountid_, other->mountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserProfile::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserProfile_descriptor_;
  metadata.reflection = UserProfile_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserProfile

// optional uint64 Userid = 1;
void UserProfile::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 UserProfile::userid() const {
  // @@protoc_insertion_point(field_get:pb.UserProfile.Userid)
  return userid_;
}
 void UserProfile::set_userid(::google::protobuf::uint64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:pb.UserProfile.Userid)
}

// optional string Name = 2;
void UserProfile::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserProfile::name() const {
  // @@protoc_insertion_point(field_get:pb.UserProfile.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserProfile::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.UserProfile.Name)
}
 void UserProfile::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.UserProfile.Name)
}
 void UserProfile::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.UserProfile.Name)
}
 ::std::string* UserProfile::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.UserProfile.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserProfile::release_name() {
  // @@protoc_insertion_point(field_release:pb.UserProfile.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserProfile::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.UserProfile.Name)
}

// optional uint32 Sex = 3;
void UserProfile::clear_sex() {
  sex_ = 0u;
}
 ::google::protobuf::uint32 UserProfile::sex() const {
  // @@protoc_insertion_point(field_get:pb.UserProfile.Sex)
  return sex_;
}
 void UserProfile::set_sex(::google::protobuf::uint32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:pb.UserProfile.Sex)
}

// optional uint32 Level = 4;
void UserProfile::clear_level() {
  level_ = 0u;
}
 ::google::protobuf::uint32 UserProfile::level() const {
  // @@protoc_insertion_point(field_get:pb.UserProfile.Level)
  return level_;
}
 void UserProfile::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.UserProfile.Level)
}

// optional uint32 Star = 5;
void UserProfile::clear_star() {
  star_ = 0u;
}
 ::google::protobuf::uint32 UserProfile::star() const {
  // @@protoc_insertion_point(field_get:pb.UserProfile.Star)
  return star_;
}
 void UserProfile::set_star(::google::protobuf::uint32 value) {
  
  star_ = value;
  // @@protoc_insertion_point(field_set:pb.UserProfile.Star)
}

// optional uint32 Intimacy = 6;
void UserProfile::clear_intimacy() {
  intimacy_ = 0u;
}
 ::google::protobuf::uint32 UserProfile::intimacy() const {
  // @@protoc_insertion_point(field_get:pb.UserProfile.Intimacy)
  return intimacy_;
}
 void UserProfile::set_intimacy(::google::protobuf::uint32 value) {
  
  intimacy_ = value;
  // @@protoc_insertion_point(field_set:pb.UserProfile.Intimacy)
}

// optional string VerifyMsg = 7;
void UserProfile::clear_verifymsg() {
  verifymsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserProfile::verifymsg() const {
  // @@protoc_insertion_point(field_get:pb.UserProfile.VerifyMsg)
  return verifymsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserProfile::set_verifymsg(const ::std::string& value) {
  
  verifymsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.UserProfile.VerifyMsg)
}
 void UserProfile::set_verifymsg(const char* value) {
  
  verifymsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.UserProfile.VerifyMsg)
}
 void UserProfile::set_verifymsg(const char* value, size_t size) {
  
  verifymsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.UserProfile.VerifyMsg)
}
 ::std::string* UserProfile::mutable_verifymsg() {
  
  // @@protoc_insertion_point(field_mutable:pb.UserProfile.VerifyMsg)
  return verifymsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserProfile::release_verifymsg() {
  // @@protoc_insertion_point(field_release:pb.UserProfile.VerifyMsg)
  
  return verifymsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserProfile::set_allocated_verifymsg(::std::string* verifymsg) {
  if (verifymsg != NULL) {
    
  } else {
    
  }
  verifymsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifymsg);
  // @@protoc_insertion_point(field_set_allocated:pb.UserProfile.VerifyMsg)
}

// optional uint32 Channel = 8;
void UserProfile::clear_channel() {
  channel_ = 0u;
}
 ::google::protobuf::uint32 UserProfile::channel() const {
  // @@protoc_insertion_point(field_get:pb.UserProfile.Channel)
  return channel_;
}
 void UserProfile::set_channel(::google::protobuf::uint32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:pb.UserProfile.Channel)
}

// optional bool Online = 9;
void UserProfile::clear_online() {
  online_ = false;
}
 bool UserProfile::online() const {
  // @@protoc_insertion_point(field_get:pb.UserProfile.Online)
  return online_;
}
 void UserProfile::set_online(bool value) {
  
  online_ = value;
  // @@protoc_insertion_point(field_set:pb.UserProfile.Online)
}

// optional string Location = 10;
void UserProfile::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserProfile::location() const {
  // @@protoc_insertion_point(field_get:pb.UserProfile.Location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserProfile::set_location(const ::std::string& value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.UserProfile.Location)
}
 void UserProfile::set_location(const char* value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.UserProfile.Location)
}
 void UserProfile::set_location(const char* value, size_t size) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.UserProfile.Location)
}
 ::std::string* UserProfile::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:pb.UserProfile.Location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserProfile::release_location() {
  // @@protoc_insertion_point(field_release:pb.UserProfile.Location)
  
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserProfile::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:pb.UserProfile.Location)
}

// optional uint32 Distance = 11;
void UserProfile::clear_distance() {
  distance_ = 0u;
}
 ::google::protobuf::uint32 UserProfile::distance() const {
  // @@protoc_insertion_point(field_get:pb.UserProfile.Distance)
  return distance_;
}
 void UserProfile::set_distance(::google::protobuf::uint32 value) {
  
  distance_ = value;
  // @@protoc_insertion_point(field_set:pb.UserProfile.Distance)
}

// optional uint32 Mountid = 12;
void UserProfile::clear_mountid() {
  mountid_ = 0u;
}
 ::google::protobuf::uint32 UserProfile::mountid() const {
  // @@protoc_insertion_point(field_get:pb.UserProfile.Mountid)
  return mountid_;
}
 void UserProfile::set_mountid(::google::protobuf::uint32 value) {
  
  mountid_ = value;
  // @@protoc_insertion_point(field_set:pb.UserProfile.Mountid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CSearchUser_280::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CSearchUser_280::S2CSearchUser_280()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CSearchUser_280)
}

void S2CSearchUser_280::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  user_ = const_cast< ::pb::UserProfile*>(&::pb::UserProfile::default_instance());
}

S2CSearchUser_280::S2CSearchUser_280(const S2CSearchUser_280& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CSearchUser_280)
}

void S2CSearchUser_280::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  user_ = NULL;
}

S2CSearchUser_280::~S2CSearchUser_280() {
  // @@protoc_insertion_point(destructor:pb.S2CSearchUser_280)
  SharedDtor();
}

void S2CSearchUser_280::SharedDtor() {
  if (this != default_instance_) {
    delete user_;
  }
}

void S2CSearchUser_280::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CSearchUser_280::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CSearchUser_280_descriptor_;
}

const S2CSearchUser_280& S2CSearchUser_280::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CSearchUser_280* S2CSearchUser_280::default_instance_ = NULL;

S2CSearchUser_280* S2CSearchUser_280::New(::google::protobuf::Arena* arena) const {
  S2CSearchUser_280* n = new S2CSearchUser_280;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CSearchUser_280::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CSearchUser_280)
  if (GetArenaNoVirtual() == NULL && user_ != NULL) delete user_;
  user_ = NULL;
}

bool S2CSearchUser_280::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CSearchUser_280)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.UserProfile User = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CSearchUser_280)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CSearchUser_280)
  return false;
#undef DO_
}

void S2CSearchUser_280::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CSearchUser_280)
  // optional .pb.UserProfile User = 1;
  if (this->has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->user_, output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CSearchUser_280)
}

::google::protobuf::uint8* S2CSearchUser_280::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CSearchUser_280)
  // optional .pb.UserProfile User = 1;
  if (this->has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->user_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CSearchUser_280)
  return target;
}

int S2CSearchUser_280::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CSearchUser_280)
  int total_size = 0;

  // optional .pb.UserProfile User = 1;
  if (this->has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->user_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CSearchUser_280::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CSearchUser_280)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CSearchUser_280* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CSearchUser_280>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CSearchUser_280)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CSearchUser_280)
    MergeFrom(*source);
  }
}

void S2CSearchUser_280::MergeFrom(const S2CSearchUser_280& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CSearchUser_280)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_user()) {
    mutable_user()->::pb::UserProfile::MergeFrom(from.user());
  }
}

void S2CSearchUser_280::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CSearchUser_280)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CSearchUser_280::CopyFrom(const S2CSearchUser_280& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CSearchUser_280)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CSearchUser_280::IsInitialized() const {

  return true;
}

void S2CSearchUser_280::Swap(S2CSearchUser_280* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CSearchUser_280::InternalSwap(S2CSearchUser_280* other) {
  std::swap(user_, other->user_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CSearchUser_280::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CSearchUser_280_descriptor_;
  metadata.reflection = S2CSearchUser_280_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CSearchUser_280

// optional .pb.UserProfile User = 1;
bool S2CSearchUser_280::has_user() const {
  return !_is_default_instance_ && user_ != NULL;
}
void S2CSearchUser_280::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) delete user_;
  user_ = NULL;
}
const ::pb::UserProfile& S2CSearchUser_280::user() const {
  // @@protoc_insertion_point(field_get:pb.S2CSearchUser_280.User)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
::pb::UserProfile* S2CSearchUser_280::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::pb::UserProfile;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CSearchUser_280.User)
  return user_;
}
::pb::UserProfile* S2CSearchUser_280::release_user() {
  // @@protoc_insertion_point(field_release:pb.S2CSearchUser_280.User)
  
  ::pb::UserProfile* temp = user_;
  user_ = NULL;
  return temp;
}
void S2CSearchUser_280::set_allocated_user(::pb::UserProfile* user) {
  delete user_;
  user_ = user;
  if (user) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CSearchUser_280.User)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SFriendRequest_281::kUseridFieldNumber;
const int C2SFriendRequest_281::kChannelFieldNumber;
const int C2SFriendRequest_281::kVerifyMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SFriendRequest_281::C2SFriendRequest_281()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SFriendRequest_281)
}

void C2SFriendRequest_281::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SFriendRequest_281::C2SFriendRequest_281(const C2SFriendRequest_281& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SFriendRequest_281)
}

void C2SFriendRequest_281::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = GOOGLE_ULONGLONG(0);
  channel_ = 0u;
  verifymsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2SFriendRequest_281::~C2SFriendRequest_281() {
  // @@protoc_insertion_point(destructor:pb.C2SFriendRequest_281)
  SharedDtor();
}

void C2SFriendRequest_281::SharedDtor() {
  verifymsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2SFriendRequest_281::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SFriendRequest_281::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SFriendRequest_281_descriptor_;
}

const C2SFriendRequest_281& C2SFriendRequest_281::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SFriendRequest_281* C2SFriendRequest_281::default_instance_ = NULL;

C2SFriendRequest_281* C2SFriendRequest_281::New(::google::protobuf::Arena* arena) const {
  C2SFriendRequest_281* n = new C2SFriendRequest_281;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SFriendRequest_281::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SFriendRequest_281)
  userid_ = GOOGLE_ULONGLONG(0);
  channel_ = 0u;
  verifymsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2SFriendRequest_281::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SFriendRequest_281)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Channel;
        break;
      }

      // optional uint32 Channel = 2;
      case 2: {
        if (tag == 16) {
         parse_Channel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_VerifyMsg;
        break;
      }

      // optional string VerifyMsg = 3;
      case 3: {
        if (tag == 26) {
         parse_VerifyMsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verifymsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->verifymsg().data(), this->verifymsg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SFriendRequest_281.VerifyMsg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SFriendRequest_281)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SFriendRequest_281)
  return false;
#undef DO_
}

void C2SFriendRequest_281::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SFriendRequest_281)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->userid(), output);
  }

  // optional uint32 Channel = 2;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->channel(), output);
  }

  // optional string VerifyMsg = 3;
  if (this->verifymsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verifymsg().data(), this->verifymsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SFriendRequest_281.VerifyMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->verifymsg(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SFriendRequest_281)
}

::google::protobuf::uint8* C2SFriendRequest_281::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SFriendRequest_281)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->userid(), target);
  }

  // optional uint32 Channel = 2;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->channel(), target);
  }

  // optional string VerifyMsg = 3;
  if (this->verifymsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verifymsg().data(), this->verifymsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SFriendRequest_281.VerifyMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->verifymsg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SFriendRequest_281)
  return target;
}

int C2SFriendRequest_281::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SFriendRequest_281)
  int total_size = 0;

  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // optional uint32 Channel = 2;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel());
  }

  // optional string VerifyMsg = 3;
  if (this->verifymsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->verifymsg());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SFriendRequest_281::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SFriendRequest_281)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SFriendRequest_281* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SFriendRequest_281>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SFriendRequest_281)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SFriendRequest_281)
    MergeFrom(*source);
  }
}

void C2SFriendRequest_281::MergeFrom(const C2SFriendRequest_281& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SFriendRequest_281)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.verifymsg().size() > 0) {

    verifymsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifymsg_);
  }
}

void C2SFriendRequest_281::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SFriendRequest_281)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SFriendRequest_281::CopyFrom(const C2SFriendRequest_281& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SFriendRequest_281)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SFriendRequest_281::IsInitialized() const {

  return true;
}

void C2SFriendRequest_281::Swap(C2SFriendRequest_281* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SFriendRequest_281::InternalSwap(C2SFriendRequest_281* other) {
  std::swap(userid_, other->userid_);
  std::swap(channel_, other->channel_);
  verifymsg_.Swap(&other->verifymsg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SFriendRequest_281::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SFriendRequest_281_descriptor_;
  metadata.reflection = C2SFriendRequest_281_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SFriendRequest_281

// optional uint64 Userid = 1;
void C2SFriendRequest_281::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 C2SFriendRequest_281::userid() const {
  // @@protoc_insertion_point(field_get:pb.C2SFriendRequest_281.Userid)
  return userid_;
}
 void C2SFriendRequest_281::set_userid(::google::protobuf::uint64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SFriendRequest_281.Userid)
}

// optional uint32 Channel = 2;
void C2SFriendRequest_281::clear_channel() {
  channel_ = 0u;
}
 ::google::protobuf::uint32 C2SFriendRequest_281::channel() const {
  // @@protoc_insertion_point(field_get:pb.C2SFriendRequest_281.Channel)
  return channel_;
}
 void C2SFriendRequest_281::set_channel(::google::protobuf::uint32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SFriendRequest_281.Channel)
}

// optional string VerifyMsg = 3;
void C2SFriendRequest_281::clear_verifymsg() {
  verifymsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SFriendRequest_281::verifymsg() const {
  // @@protoc_insertion_point(field_get:pb.C2SFriendRequest_281.VerifyMsg)
  return verifymsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SFriendRequest_281::set_verifymsg(const ::std::string& value) {
  
  verifymsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SFriendRequest_281.VerifyMsg)
}
 void C2SFriendRequest_281::set_verifymsg(const char* value) {
  
  verifymsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SFriendRequest_281.VerifyMsg)
}
 void C2SFriendRequest_281::set_verifymsg(const char* value, size_t size) {
  
  verifymsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SFriendRequest_281.VerifyMsg)
}
 ::std::string* C2SFriendRequest_281::mutable_verifymsg() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SFriendRequest_281.VerifyMsg)
  return verifymsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SFriendRequest_281::release_verifymsg() {
  // @@protoc_insertion_point(field_release:pb.C2SFriendRequest_281.VerifyMsg)
  
  return verifymsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SFriendRequest_281::set_allocated_verifymsg(::std::string* verifymsg) {
  if (verifymsg != NULL) {
    
  } else {
    
  }
  verifymsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifymsg);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SFriendRequest_281.VerifyMsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CFriendRequest_281::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CFriendRequest_281::S2CFriendRequest_281()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CFriendRequest_281)
}

void S2CFriendRequest_281::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  user_ = const_cast< ::pb::UserProfile*>(&::pb::UserProfile::default_instance());
}

S2CFriendRequest_281::S2CFriendRequest_281(const S2CFriendRequest_281& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CFriendRequest_281)
}

void S2CFriendRequest_281::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  user_ = NULL;
}

S2CFriendRequest_281::~S2CFriendRequest_281() {
  // @@protoc_insertion_point(destructor:pb.S2CFriendRequest_281)
  SharedDtor();
}

void S2CFriendRequest_281::SharedDtor() {
  if (this != default_instance_) {
    delete user_;
  }
}

void S2CFriendRequest_281::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CFriendRequest_281::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CFriendRequest_281_descriptor_;
}

const S2CFriendRequest_281& S2CFriendRequest_281::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CFriendRequest_281* S2CFriendRequest_281::default_instance_ = NULL;

S2CFriendRequest_281* S2CFriendRequest_281::New(::google::protobuf::Arena* arena) const {
  S2CFriendRequest_281* n = new S2CFriendRequest_281;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CFriendRequest_281::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CFriendRequest_281)
  if (GetArenaNoVirtual() == NULL && user_ != NULL) delete user_;
  user_ = NULL;
}

bool S2CFriendRequest_281::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CFriendRequest_281)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.UserProfile User = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CFriendRequest_281)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CFriendRequest_281)
  return false;
#undef DO_
}

void S2CFriendRequest_281::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CFriendRequest_281)
  // optional .pb.UserProfile User = 1;
  if (this->has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->user_, output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CFriendRequest_281)
}

::google::protobuf::uint8* S2CFriendRequest_281::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CFriendRequest_281)
  // optional .pb.UserProfile User = 1;
  if (this->has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->user_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CFriendRequest_281)
  return target;
}

int S2CFriendRequest_281::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CFriendRequest_281)
  int total_size = 0;

  // optional .pb.UserProfile User = 1;
  if (this->has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->user_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CFriendRequest_281::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CFriendRequest_281)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CFriendRequest_281* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CFriendRequest_281>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CFriendRequest_281)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CFriendRequest_281)
    MergeFrom(*source);
  }
}

void S2CFriendRequest_281::MergeFrom(const S2CFriendRequest_281& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CFriendRequest_281)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_user()) {
    mutable_user()->::pb::UserProfile::MergeFrom(from.user());
  }
}

void S2CFriendRequest_281::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CFriendRequest_281)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CFriendRequest_281::CopyFrom(const S2CFriendRequest_281& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CFriendRequest_281)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CFriendRequest_281::IsInitialized() const {

  return true;
}

void S2CFriendRequest_281::Swap(S2CFriendRequest_281* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CFriendRequest_281::InternalSwap(S2CFriendRequest_281* other) {
  std::swap(user_, other->user_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CFriendRequest_281::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CFriendRequest_281_descriptor_;
  metadata.reflection = S2CFriendRequest_281_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CFriendRequest_281

// optional .pb.UserProfile User = 1;
bool S2CFriendRequest_281::has_user() const {
  return !_is_default_instance_ && user_ != NULL;
}
void S2CFriendRequest_281::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) delete user_;
  user_ = NULL;
}
const ::pb::UserProfile& S2CFriendRequest_281::user() const {
  // @@protoc_insertion_point(field_get:pb.S2CFriendRequest_281.User)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
::pb::UserProfile* S2CFriendRequest_281::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::pb::UserProfile;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CFriendRequest_281.User)
  return user_;
}
::pb::UserProfile* S2CFriendRequest_281::release_user() {
  // @@protoc_insertion_point(field_release:pb.S2CFriendRequest_281.User)
  
  ::pb::UserProfile* temp = user_;
  user_ = NULL;
  return temp;
}
void S2CFriendRequest_281::set_allocated_user(::pb::UserProfile* user) {
  delete user_;
  user_ = user;
  if (user) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CFriendRequest_281.User)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetFriendRequests_282::C2SGetFriendRequests_282()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetFriendRequests_282)
}

void C2SGetFriendRequests_282::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetFriendRequests_282::C2SGetFriendRequests_282(const C2SGetFriendRequests_282& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetFriendRequests_282)
}

void C2SGetFriendRequests_282::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGetFriendRequests_282::~C2SGetFriendRequests_282() {
  // @@protoc_insertion_point(destructor:pb.C2SGetFriendRequests_282)
  SharedDtor();
}

void C2SGetFriendRequests_282::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetFriendRequests_282::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetFriendRequests_282::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetFriendRequests_282_descriptor_;
}

const C2SGetFriendRequests_282& C2SGetFriendRequests_282::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetFriendRequests_282* C2SGetFriendRequests_282::default_instance_ = NULL;

C2SGetFriendRequests_282* C2SGetFriendRequests_282::New(::google::protobuf::Arena* arena) const {
  C2SGetFriendRequests_282* n = new C2SGetFriendRequests_282;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetFriendRequests_282::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetFriendRequests_282)
}

bool C2SGetFriendRequests_282::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetFriendRequests_282)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetFriendRequests_282)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetFriendRequests_282)
  return false;
#undef DO_
}

void C2SGetFriendRequests_282::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetFriendRequests_282)
  // @@protoc_insertion_point(serialize_end:pb.C2SGetFriendRequests_282)
}

::google::protobuf::uint8* C2SGetFriendRequests_282::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetFriendRequests_282)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetFriendRequests_282)
  return target;
}

int C2SGetFriendRequests_282::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetFriendRequests_282)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetFriendRequests_282::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetFriendRequests_282)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetFriendRequests_282* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetFriendRequests_282>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetFriendRequests_282)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetFriendRequests_282)
    MergeFrom(*source);
  }
}

void C2SGetFriendRequests_282::MergeFrom(const C2SGetFriendRequests_282& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetFriendRequests_282)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SGetFriendRequests_282::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetFriendRequests_282)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetFriendRequests_282::CopyFrom(const C2SGetFriendRequests_282& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetFriendRequests_282)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetFriendRequests_282::IsInitialized() const {

  return true;
}

void C2SGetFriendRequests_282::Swap(C2SGetFriendRequests_282* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetFriendRequests_282::InternalSwap(C2SGetFriendRequests_282* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetFriendRequests_282::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetFriendRequests_282_descriptor_;
  metadata.reflection = C2SGetFriendRequests_282_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetFriendRequests_282

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetFriendRequests_282::kFriendRequestsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetFriendRequests_282::S2CGetFriendRequests_282()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetFriendRequests_282)
}

void S2CGetFriendRequests_282::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetFriendRequests_282::S2CGetFriendRequests_282(const S2CGetFriendRequests_282& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetFriendRequests_282)
}

void S2CGetFriendRequests_282::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CGetFriendRequests_282::~S2CGetFriendRequests_282() {
  // @@protoc_insertion_point(destructor:pb.S2CGetFriendRequests_282)
  SharedDtor();
}

void S2CGetFriendRequests_282::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetFriendRequests_282::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetFriendRequests_282::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetFriendRequests_282_descriptor_;
}

const S2CGetFriendRequests_282& S2CGetFriendRequests_282::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetFriendRequests_282* S2CGetFriendRequests_282::default_instance_ = NULL;

S2CGetFriendRequests_282* S2CGetFriendRequests_282::New(::google::protobuf::Arena* arena) const {
  S2CGetFriendRequests_282* n = new S2CGetFriendRequests_282;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetFriendRequests_282::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetFriendRequests_282)
  friendrequests_.Clear();
}

bool S2CGetFriendRequests_282::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetFriendRequests_282)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.UserProfile FriendRequests = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_FriendRequests:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_friendrequests()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_FriendRequests;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetFriendRequests_282)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetFriendRequests_282)
  return false;
#undef DO_
}

void S2CGetFriendRequests_282::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetFriendRequests_282)
  // repeated .pb.UserProfile FriendRequests = 1;
  for (unsigned int i = 0, n = this->friendrequests_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friendrequests(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetFriendRequests_282)
}

::google::protobuf::uint8* S2CGetFriendRequests_282::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetFriendRequests_282)
  // repeated .pb.UserProfile FriendRequests = 1;
  for (unsigned int i = 0, n = this->friendrequests_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->friendrequests(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetFriendRequests_282)
  return target;
}

int S2CGetFriendRequests_282::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetFriendRequests_282)
  int total_size = 0;

  // repeated .pb.UserProfile FriendRequests = 1;
  total_size += 1 * this->friendrequests_size();
  for (int i = 0; i < this->friendrequests_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->friendrequests(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetFriendRequests_282::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetFriendRequests_282)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetFriendRequests_282* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetFriendRequests_282>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetFriendRequests_282)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetFriendRequests_282)
    MergeFrom(*source);
  }
}

void S2CGetFriendRequests_282::MergeFrom(const S2CGetFriendRequests_282& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetFriendRequests_282)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  friendrequests_.MergeFrom(from.friendrequests_);
}

void S2CGetFriendRequests_282::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetFriendRequests_282)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetFriendRequests_282::CopyFrom(const S2CGetFriendRequests_282& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetFriendRequests_282)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetFriendRequests_282::IsInitialized() const {

  return true;
}

void S2CGetFriendRequests_282::Swap(S2CGetFriendRequests_282* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetFriendRequests_282::InternalSwap(S2CGetFriendRequests_282* other) {
  friendrequests_.UnsafeArenaSwap(&other->friendrequests_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetFriendRequests_282::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetFriendRequests_282_descriptor_;
  metadata.reflection = S2CGetFriendRequests_282_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetFriendRequests_282

// repeated .pb.UserProfile FriendRequests = 1;
int S2CGetFriendRequests_282::friendrequests_size() const {
  return friendrequests_.size();
}
void S2CGetFriendRequests_282::clear_friendrequests() {
  friendrequests_.Clear();
}
const ::pb::UserProfile& S2CGetFriendRequests_282::friendrequests(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetFriendRequests_282.FriendRequests)
  return friendrequests_.Get(index);
}
::pb::UserProfile* S2CGetFriendRequests_282::mutable_friendrequests(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetFriendRequests_282.FriendRequests)
  return friendrequests_.Mutable(index);
}
::pb::UserProfile* S2CGetFriendRequests_282::add_friendrequests() {
  // @@protoc_insertion_point(field_add:pb.S2CGetFriendRequests_282.FriendRequests)
  return friendrequests_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::UserProfile >*
S2CGetFriendRequests_282::mutable_friendrequests() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetFriendRequests_282.FriendRequests)
  return &friendrequests_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::UserProfile >&
S2CGetFriendRequests_282::friendrequests() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetFriendRequests_282.FriendRequests)
  return friendrequests_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SDealFriendRequest_283::kUseridFieldNumber;
const int C2SDealFriendRequest_283::kOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SDealFriendRequest_283::C2SDealFriendRequest_283()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SDealFriendRequest_283)
}

void C2SDealFriendRequest_283::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SDealFriendRequest_283::C2SDealFriendRequest_283(const C2SDealFriendRequest_283& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SDealFriendRequest_283)
}

void C2SDealFriendRequest_283::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = GOOGLE_ULONGLONG(0);
  op_ = 0u;
}

C2SDealFriendRequest_283::~C2SDealFriendRequest_283() {
  // @@protoc_insertion_point(destructor:pb.C2SDealFriendRequest_283)
  SharedDtor();
}

void C2SDealFriendRequest_283::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SDealFriendRequest_283::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SDealFriendRequest_283::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SDealFriendRequest_283_descriptor_;
}

const C2SDealFriendRequest_283& C2SDealFriendRequest_283::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SDealFriendRequest_283* C2SDealFriendRequest_283::default_instance_ = NULL;

C2SDealFriendRequest_283* C2SDealFriendRequest_283::New(::google::protobuf::Arena* arena) const {
  C2SDealFriendRequest_283* n = new C2SDealFriendRequest_283;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SDealFriendRequest_283::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SDealFriendRequest_283)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(C2SDealFriendRequest_283, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<C2SDealFriendRequest_283*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, op_);

#undef ZR_HELPER_
#undef ZR_

}

bool C2SDealFriendRequest_283::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SDealFriendRequest_283)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Op;
        break;
      }

      // optional uint32 Op = 2;
      case 2: {
        if (tag == 16) {
         parse_Op:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &op_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SDealFriendRequest_283)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SDealFriendRequest_283)
  return false;
#undef DO_
}

void C2SDealFriendRequest_283::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SDealFriendRequest_283)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->userid(), output);
  }

  // optional uint32 Op = 2;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->op(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SDealFriendRequest_283)
}

::google::protobuf::uint8* C2SDealFriendRequest_283::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SDealFriendRequest_283)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->userid(), target);
  }

  // optional uint32 Op = 2;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->op(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SDealFriendRequest_283)
  return target;
}

int C2SDealFriendRequest_283::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SDealFriendRequest_283)
  int total_size = 0;

  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // optional uint32 Op = 2;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->op());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SDealFriendRequest_283::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SDealFriendRequest_283)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SDealFriendRequest_283* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SDealFriendRequest_283>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SDealFriendRequest_283)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SDealFriendRequest_283)
    MergeFrom(*source);
  }
}

void C2SDealFriendRequest_283::MergeFrom(const C2SDealFriendRequest_283& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SDealFriendRequest_283)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
}

void C2SDealFriendRequest_283::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SDealFriendRequest_283)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SDealFriendRequest_283::CopyFrom(const C2SDealFriendRequest_283& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SDealFriendRequest_283)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SDealFriendRequest_283::IsInitialized() const {

  return true;
}

void C2SDealFriendRequest_283::Swap(C2SDealFriendRequest_283* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SDealFriendRequest_283::InternalSwap(C2SDealFriendRequest_283* other) {
  std::swap(userid_, other->userid_);
  std::swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SDealFriendRequest_283::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SDealFriendRequest_283_descriptor_;
  metadata.reflection = C2SDealFriendRequest_283_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SDealFriendRequest_283

// optional uint64 Userid = 1;
void C2SDealFriendRequest_283::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 C2SDealFriendRequest_283::userid() const {
  // @@protoc_insertion_point(field_get:pb.C2SDealFriendRequest_283.Userid)
  return userid_;
}
 void C2SDealFriendRequest_283::set_userid(::google::protobuf::uint64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SDealFriendRequest_283.Userid)
}

// optional uint32 Op = 2;
void C2SDealFriendRequest_283::clear_op() {
  op_ = 0u;
}
 ::google::protobuf::uint32 C2SDealFriendRequest_283::op() const {
  // @@protoc_insertion_point(field_get:pb.C2SDealFriendRequest_283.Op)
  return op_;
}
 void C2SDealFriendRequest_283::set_op(::google::protobuf::uint32 value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SDealFriendRequest_283.Op)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CAddNewFriend_284::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CAddNewFriend_284::S2CAddNewFriend_284()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CAddNewFriend_284)
}

void S2CAddNewFriend_284::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  user_ = const_cast< ::pb::UserProfile*>(&::pb::UserProfile::default_instance());
}

S2CAddNewFriend_284::S2CAddNewFriend_284(const S2CAddNewFriend_284& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CAddNewFriend_284)
}

void S2CAddNewFriend_284::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  user_ = NULL;
}

S2CAddNewFriend_284::~S2CAddNewFriend_284() {
  // @@protoc_insertion_point(destructor:pb.S2CAddNewFriend_284)
  SharedDtor();
}

void S2CAddNewFriend_284::SharedDtor() {
  if (this != default_instance_) {
    delete user_;
  }
}

void S2CAddNewFriend_284::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CAddNewFriend_284::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CAddNewFriend_284_descriptor_;
}

const S2CAddNewFriend_284& S2CAddNewFriend_284::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CAddNewFriend_284* S2CAddNewFriend_284::default_instance_ = NULL;

S2CAddNewFriend_284* S2CAddNewFriend_284::New(::google::protobuf::Arena* arena) const {
  S2CAddNewFriend_284* n = new S2CAddNewFriend_284;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CAddNewFriend_284::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CAddNewFriend_284)
  if (GetArenaNoVirtual() == NULL && user_ != NULL) delete user_;
  user_ = NULL;
}

bool S2CAddNewFriend_284::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CAddNewFriend_284)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.UserProfile User = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CAddNewFriend_284)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CAddNewFriend_284)
  return false;
#undef DO_
}

void S2CAddNewFriend_284::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CAddNewFriend_284)
  // optional .pb.UserProfile User = 1;
  if (this->has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->user_, output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CAddNewFriend_284)
}

::google::protobuf::uint8* S2CAddNewFriend_284::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CAddNewFriend_284)
  // optional .pb.UserProfile User = 1;
  if (this->has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->user_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CAddNewFriend_284)
  return target;
}

int S2CAddNewFriend_284::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CAddNewFriend_284)
  int total_size = 0;

  // optional .pb.UserProfile User = 1;
  if (this->has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->user_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CAddNewFriend_284::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CAddNewFriend_284)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CAddNewFriend_284* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CAddNewFriend_284>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CAddNewFriend_284)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CAddNewFriend_284)
    MergeFrom(*source);
  }
}

void S2CAddNewFriend_284::MergeFrom(const S2CAddNewFriend_284& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CAddNewFriend_284)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_user()) {
    mutable_user()->::pb::UserProfile::MergeFrom(from.user());
  }
}

void S2CAddNewFriend_284::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CAddNewFriend_284)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CAddNewFriend_284::CopyFrom(const S2CAddNewFriend_284& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CAddNewFriend_284)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CAddNewFriend_284::IsInitialized() const {

  return true;
}

void S2CAddNewFriend_284::Swap(S2CAddNewFriend_284* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CAddNewFriend_284::InternalSwap(S2CAddNewFriend_284* other) {
  std::swap(user_, other->user_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CAddNewFriend_284::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CAddNewFriend_284_descriptor_;
  metadata.reflection = S2CAddNewFriend_284_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CAddNewFriend_284

// optional .pb.UserProfile User = 1;
bool S2CAddNewFriend_284::has_user() const {
  return !_is_default_instance_ && user_ != NULL;
}
void S2CAddNewFriend_284::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) delete user_;
  user_ = NULL;
}
const ::pb::UserProfile& S2CAddNewFriend_284::user() const {
  // @@protoc_insertion_point(field_get:pb.S2CAddNewFriend_284.User)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
::pb::UserProfile* S2CAddNewFriend_284::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::pb::UserProfile;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CAddNewFriend_284.User)
  return user_;
}
::pb::UserProfile* S2CAddNewFriend_284::release_user() {
  // @@protoc_insertion_point(field_release:pb.S2CAddNewFriend_284.User)
  
  ::pb::UserProfile* temp = user_;
  user_ = NULL;
  return temp;
}
void S2CAddNewFriend_284::set_allocated_user(::pb::UserProfile* user) {
  delete user_;
  user_ = user;
  if (user) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CAddNewFriend_284.User)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SRemoveFriend_285::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SRemoveFriend_285::C2SRemoveFriend_285()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SRemoveFriend_285)
}

void C2SRemoveFriend_285::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SRemoveFriend_285::C2SRemoveFriend_285(const C2SRemoveFriend_285& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SRemoveFriend_285)
}

void C2SRemoveFriend_285::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = GOOGLE_ULONGLONG(0);
}

C2SRemoveFriend_285::~C2SRemoveFriend_285() {
  // @@protoc_insertion_point(destructor:pb.C2SRemoveFriend_285)
  SharedDtor();
}

void C2SRemoveFriend_285::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SRemoveFriend_285::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SRemoveFriend_285::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SRemoveFriend_285_descriptor_;
}

const C2SRemoveFriend_285& C2SRemoveFriend_285::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SRemoveFriend_285* C2SRemoveFriend_285::default_instance_ = NULL;

C2SRemoveFriend_285* C2SRemoveFriend_285::New(::google::protobuf::Arena* arena) const {
  C2SRemoveFriend_285* n = new C2SRemoveFriend_285;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SRemoveFriend_285::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SRemoveFriend_285)
  userid_ = GOOGLE_ULONGLONG(0);
}

bool C2SRemoveFriend_285::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SRemoveFriend_285)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SRemoveFriend_285)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SRemoveFriend_285)
  return false;
#undef DO_
}

void C2SRemoveFriend_285::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SRemoveFriend_285)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->userid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SRemoveFriend_285)
}

::google::protobuf::uint8* C2SRemoveFriend_285::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SRemoveFriend_285)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->userid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SRemoveFriend_285)
  return target;
}

int C2SRemoveFriend_285::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SRemoveFriend_285)
  int total_size = 0;

  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SRemoveFriend_285::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SRemoveFriend_285)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SRemoveFriend_285* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SRemoveFriend_285>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SRemoveFriend_285)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SRemoveFriend_285)
    MergeFrom(*source);
  }
}

void C2SRemoveFriend_285::MergeFrom(const C2SRemoveFriend_285& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SRemoveFriend_285)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void C2SRemoveFriend_285::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SRemoveFriend_285)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SRemoveFriend_285::CopyFrom(const C2SRemoveFriend_285& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SRemoveFriend_285)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SRemoveFriend_285::IsInitialized() const {

  return true;
}

void C2SRemoveFriend_285::Swap(C2SRemoveFriend_285* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SRemoveFriend_285::InternalSwap(C2SRemoveFriend_285* other) {
  std::swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SRemoveFriend_285::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SRemoveFriend_285_descriptor_;
  metadata.reflection = C2SRemoveFriend_285_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SRemoveFriend_285

// optional uint64 Userid = 1;
void C2SRemoveFriend_285::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 C2SRemoveFriend_285::userid() const {
  // @@protoc_insertion_point(field_get:pb.C2SRemoveFriend_285.Userid)
  return userid_;
}
 void C2SRemoveFriend_285::set_userid(::google::protobuf::uint64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SRemoveFriend_285.Userid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetFriendList_286::C2SGetFriendList_286()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetFriendList_286)
}

void C2SGetFriendList_286::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetFriendList_286::C2SGetFriendList_286(const C2SGetFriendList_286& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetFriendList_286)
}

void C2SGetFriendList_286::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGetFriendList_286::~C2SGetFriendList_286() {
  // @@protoc_insertion_point(destructor:pb.C2SGetFriendList_286)
  SharedDtor();
}

void C2SGetFriendList_286::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetFriendList_286::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetFriendList_286::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetFriendList_286_descriptor_;
}

const C2SGetFriendList_286& C2SGetFriendList_286::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetFriendList_286* C2SGetFriendList_286::default_instance_ = NULL;

C2SGetFriendList_286* C2SGetFriendList_286::New(::google::protobuf::Arena* arena) const {
  C2SGetFriendList_286* n = new C2SGetFriendList_286;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetFriendList_286::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetFriendList_286)
}

bool C2SGetFriendList_286::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetFriendList_286)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetFriendList_286)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetFriendList_286)
  return false;
#undef DO_
}

void C2SGetFriendList_286::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetFriendList_286)
  // @@protoc_insertion_point(serialize_end:pb.C2SGetFriendList_286)
}

::google::protobuf::uint8* C2SGetFriendList_286::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetFriendList_286)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetFriendList_286)
  return target;
}

int C2SGetFriendList_286::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetFriendList_286)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetFriendList_286::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetFriendList_286)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetFriendList_286* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetFriendList_286>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetFriendList_286)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetFriendList_286)
    MergeFrom(*source);
  }
}

void C2SGetFriendList_286::MergeFrom(const C2SGetFriendList_286& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetFriendList_286)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SGetFriendList_286::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetFriendList_286)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetFriendList_286::CopyFrom(const C2SGetFriendList_286& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetFriendList_286)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetFriendList_286::IsInitialized() const {

  return true;
}

void C2SGetFriendList_286::Swap(C2SGetFriendList_286* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetFriendList_286::InternalSwap(C2SGetFriendList_286* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetFriendList_286::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetFriendList_286_descriptor_;
  metadata.reflection = C2SGetFriendList_286_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetFriendList_286

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetFriendList_286::kFriendListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetFriendList_286::S2CGetFriendList_286()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetFriendList_286)
}

void S2CGetFriendList_286::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetFriendList_286::S2CGetFriendList_286(const S2CGetFriendList_286& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetFriendList_286)
}

void S2CGetFriendList_286::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CGetFriendList_286::~S2CGetFriendList_286() {
  // @@protoc_insertion_point(destructor:pb.S2CGetFriendList_286)
  SharedDtor();
}

void S2CGetFriendList_286::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetFriendList_286::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetFriendList_286::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetFriendList_286_descriptor_;
}

const S2CGetFriendList_286& S2CGetFriendList_286::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetFriendList_286* S2CGetFriendList_286::default_instance_ = NULL;

S2CGetFriendList_286* S2CGetFriendList_286::New(::google::protobuf::Arena* arena) const {
  S2CGetFriendList_286* n = new S2CGetFriendList_286;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetFriendList_286::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetFriendList_286)
  friendlist_.Clear();
}

bool S2CGetFriendList_286::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetFriendList_286)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.UserProfile FriendList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_FriendList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_friendlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_FriendList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetFriendList_286)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetFriendList_286)
  return false;
#undef DO_
}

void S2CGetFriendList_286::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetFriendList_286)
  // repeated .pb.UserProfile FriendList = 1;
  for (unsigned int i = 0, n = this->friendlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friendlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetFriendList_286)
}

::google::protobuf::uint8* S2CGetFriendList_286::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetFriendList_286)
  // repeated .pb.UserProfile FriendList = 1;
  for (unsigned int i = 0, n = this->friendlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->friendlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetFriendList_286)
  return target;
}

int S2CGetFriendList_286::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetFriendList_286)
  int total_size = 0;

  // repeated .pb.UserProfile FriendList = 1;
  total_size += 1 * this->friendlist_size();
  for (int i = 0; i < this->friendlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->friendlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetFriendList_286::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetFriendList_286)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetFriendList_286* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetFriendList_286>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetFriendList_286)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetFriendList_286)
    MergeFrom(*source);
  }
}

void S2CGetFriendList_286::MergeFrom(const S2CGetFriendList_286& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetFriendList_286)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  friendlist_.MergeFrom(from.friendlist_);
}

void S2CGetFriendList_286::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetFriendList_286)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetFriendList_286::CopyFrom(const S2CGetFriendList_286& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetFriendList_286)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetFriendList_286::IsInitialized() const {

  return true;
}

void S2CGetFriendList_286::Swap(S2CGetFriendList_286* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetFriendList_286::InternalSwap(S2CGetFriendList_286* other) {
  friendlist_.UnsafeArenaSwap(&other->friendlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetFriendList_286::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetFriendList_286_descriptor_;
  metadata.reflection = S2CGetFriendList_286_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetFriendList_286

// repeated .pb.UserProfile FriendList = 1;
int S2CGetFriendList_286::friendlist_size() const {
  return friendlist_.size();
}
void S2CGetFriendList_286::clear_friendlist() {
  friendlist_.Clear();
}
const ::pb::UserProfile& S2CGetFriendList_286::friendlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetFriendList_286.FriendList)
  return friendlist_.Get(index);
}
::pb::UserProfile* S2CGetFriendList_286::mutable_friendlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetFriendList_286.FriendList)
  return friendlist_.Mutable(index);
}
::pb::UserProfile* S2CGetFriendList_286::add_friendlist() {
  // @@protoc_insertion_point(field_add:pb.S2CGetFriendList_286.FriendList)
  return friendlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::UserProfile >*
S2CGetFriendList_286::mutable_friendlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetFriendList_286.FriendList)
  return &friendlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::UserProfile >&
S2CGetFriendList_286::friendlist() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetFriendList_286.FriendList)
  return friendlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SGetFriendAvaList_287::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetFriendAvaList_287::C2SGetFriendAvaList_287()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetFriendAvaList_287)
}

void C2SGetFriendAvaList_287::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetFriendAvaList_287::C2SGetFriendAvaList_287(const C2SGetFriendAvaList_287& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetFriendAvaList_287)
}

void C2SGetFriendAvaList_287::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  num_ = 0u;
}

C2SGetFriendAvaList_287::~C2SGetFriendAvaList_287() {
  // @@protoc_insertion_point(destructor:pb.C2SGetFriendAvaList_287)
  SharedDtor();
}

void C2SGetFriendAvaList_287::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetFriendAvaList_287::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetFriendAvaList_287::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetFriendAvaList_287_descriptor_;
}

const C2SGetFriendAvaList_287& C2SGetFriendAvaList_287::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetFriendAvaList_287* C2SGetFriendAvaList_287::default_instance_ = NULL;

C2SGetFriendAvaList_287* C2SGetFriendAvaList_287::New(::google::protobuf::Arena* arena) const {
  C2SGetFriendAvaList_287* n = new C2SGetFriendAvaList_287;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetFriendAvaList_287::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetFriendAvaList_287)
  num_ = 0u;
}

bool C2SGetFriendAvaList_287::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetFriendAvaList_287)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Num = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetFriendAvaList_287)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetFriendAvaList_287)
  return false;
#undef DO_
}

void C2SGetFriendAvaList_287::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetFriendAvaList_287)
  // optional uint32 Num = 1;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SGetFriendAvaList_287)
}

::google::protobuf::uint8* C2SGetFriendAvaList_287::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetFriendAvaList_287)
  // optional uint32 Num = 1;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetFriendAvaList_287)
  return target;
}

int C2SGetFriendAvaList_287::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetFriendAvaList_287)
  int total_size = 0;

  // optional uint32 Num = 1;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetFriendAvaList_287::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetFriendAvaList_287)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetFriendAvaList_287* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetFriendAvaList_287>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetFriendAvaList_287)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetFriendAvaList_287)
    MergeFrom(*source);
  }
}

void C2SGetFriendAvaList_287::MergeFrom(const C2SGetFriendAvaList_287& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetFriendAvaList_287)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void C2SGetFriendAvaList_287::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetFriendAvaList_287)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetFriendAvaList_287::CopyFrom(const C2SGetFriendAvaList_287& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetFriendAvaList_287)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetFriendAvaList_287::IsInitialized() const {

  return true;
}

void C2SGetFriendAvaList_287::Swap(C2SGetFriendAvaList_287* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetFriendAvaList_287::InternalSwap(C2SGetFriendAvaList_287* other) {
  std::swap(num_, other->num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetFriendAvaList_287::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetFriendAvaList_287_descriptor_;
  metadata.reflection = C2SGetFriendAvaList_287_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetFriendAvaList_287

// optional uint32 Num = 1;
void C2SGetFriendAvaList_287::clear_num() {
  num_ = 0u;
}
 ::google::protobuf::uint32 C2SGetFriendAvaList_287::num() const {
  // @@protoc_insertion_point(field_get:pb.C2SGetFriendAvaList_287.Num)
  return num_;
}
 void C2SGetFriendAvaList_287::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SGetFriendAvaList_287.Num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetFriendAvaList_287::kUserListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetFriendAvaList_287::S2CGetFriendAvaList_287()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetFriendAvaList_287)
}

void S2CGetFriendAvaList_287::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetFriendAvaList_287::S2CGetFriendAvaList_287(const S2CGetFriendAvaList_287& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetFriendAvaList_287)
}

void S2CGetFriendAvaList_287::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CGetFriendAvaList_287::~S2CGetFriendAvaList_287() {
  // @@protoc_insertion_point(destructor:pb.S2CGetFriendAvaList_287)
  SharedDtor();
}

void S2CGetFriendAvaList_287::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetFriendAvaList_287::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetFriendAvaList_287::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetFriendAvaList_287_descriptor_;
}

const S2CGetFriendAvaList_287& S2CGetFriendAvaList_287::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetFriendAvaList_287* S2CGetFriendAvaList_287::default_instance_ = NULL;

S2CGetFriendAvaList_287* S2CGetFriendAvaList_287::New(::google::protobuf::Arena* arena) const {
  S2CGetFriendAvaList_287* n = new S2CGetFriendAvaList_287;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetFriendAvaList_287::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetFriendAvaList_287)
  userlist_.Clear();
}

bool S2CGetFriendAvaList_287::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetFriendAvaList_287)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.UserProfile UserList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_UserList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_userlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_UserList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetFriendAvaList_287)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetFriendAvaList_287)
  return false;
#undef DO_
}

void S2CGetFriendAvaList_287::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetFriendAvaList_287)
  // repeated .pb.UserProfile UserList = 1;
  for (unsigned int i = 0, n = this->userlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetFriendAvaList_287)
}

::google::protobuf::uint8* S2CGetFriendAvaList_287::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetFriendAvaList_287)
  // repeated .pb.UserProfile UserList = 1;
  for (unsigned int i = 0, n = this->userlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->userlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetFriendAvaList_287)
  return target;
}

int S2CGetFriendAvaList_287::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetFriendAvaList_287)
  int total_size = 0;

  // repeated .pb.UserProfile UserList = 1;
  total_size += 1 * this->userlist_size();
  for (int i = 0; i < this->userlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetFriendAvaList_287::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetFriendAvaList_287)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetFriendAvaList_287* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetFriendAvaList_287>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetFriendAvaList_287)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetFriendAvaList_287)
    MergeFrom(*source);
  }
}

void S2CGetFriendAvaList_287::MergeFrom(const S2CGetFriendAvaList_287& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetFriendAvaList_287)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  userlist_.MergeFrom(from.userlist_);
}

void S2CGetFriendAvaList_287::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetFriendAvaList_287)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetFriendAvaList_287::CopyFrom(const S2CGetFriendAvaList_287& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetFriendAvaList_287)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetFriendAvaList_287::IsInitialized() const {

  return true;
}

void S2CGetFriendAvaList_287::Swap(S2CGetFriendAvaList_287* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetFriendAvaList_287::InternalSwap(S2CGetFriendAvaList_287* other) {
  userlist_.UnsafeArenaSwap(&other->userlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetFriendAvaList_287::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetFriendAvaList_287_descriptor_;
  metadata.reflection = S2CGetFriendAvaList_287_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetFriendAvaList_287

// repeated .pb.UserProfile UserList = 1;
int S2CGetFriendAvaList_287::userlist_size() const {
  return userlist_.size();
}
void S2CGetFriendAvaList_287::clear_userlist() {
  userlist_.Clear();
}
const ::pb::UserProfile& S2CGetFriendAvaList_287::userlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetFriendAvaList_287.UserList)
  return userlist_.Get(index);
}
::pb::UserProfile* S2CGetFriendAvaList_287::mutable_userlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetFriendAvaList_287.UserList)
  return userlist_.Mutable(index);
}
::pb::UserProfile* S2CGetFriendAvaList_287::add_userlist() {
  // @@protoc_insertion_point(field_add:pb.S2CGetFriendAvaList_287.UserList)
  return userlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::UserProfile >*
S2CGetFriendAvaList_287::mutable_userlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetFriendAvaList_287.UserList)
  return &userlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::UserProfile >&
S2CGetFriendAvaList_287::userlist() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetFriendAvaList_287.UserList)
  return userlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SAddBlackUser_288::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SAddBlackUser_288::C2SAddBlackUser_288()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SAddBlackUser_288)
}

void C2SAddBlackUser_288::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SAddBlackUser_288::C2SAddBlackUser_288(const C2SAddBlackUser_288& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SAddBlackUser_288)
}

void C2SAddBlackUser_288::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = GOOGLE_ULONGLONG(0);
}

C2SAddBlackUser_288::~C2SAddBlackUser_288() {
  // @@protoc_insertion_point(destructor:pb.C2SAddBlackUser_288)
  SharedDtor();
}

void C2SAddBlackUser_288::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SAddBlackUser_288::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SAddBlackUser_288::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SAddBlackUser_288_descriptor_;
}

const C2SAddBlackUser_288& C2SAddBlackUser_288::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SAddBlackUser_288* C2SAddBlackUser_288::default_instance_ = NULL;

C2SAddBlackUser_288* C2SAddBlackUser_288::New(::google::protobuf::Arena* arena) const {
  C2SAddBlackUser_288* n = new C2SAddBlackUser_288;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SAddBlackUser_288::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SAddBlackUser_288)
  userid_ = GOOGLE_ULONGLONG(0);
}

bool C2SAddBlackUser_288::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SAddBlackUser_288)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SAddBlackUser_288)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SAddBlackUser_288)
  return false;
#undef DO_
}

void C2SAddBlackUser_288::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SAddBlackUser_288)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->userid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SAddBlackUser_288)
}

::google::protobuf::uint8* C2SAddBlackUser_288::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SAddBlackUser_288)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->userid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SAddBlackUser_288)
  return target;
}

int C2SAddBlackUser_288::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SAddBlackUser_288)
  int total_size = 0;

  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SAddBlackUser_288::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SAddBlackUser_288)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SAddBlackUser_288* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SAddBlackUser_288>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SAddBlackUser_288)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SAddBlackUser_288)
    MergeFrom(*source);
  }
}

void C2SAddBlackUser_288::MergeFrom(const C2SAddBlackUser_288& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SAddBlackUser_288)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void C2SAddBlackUser_288::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SAddBlackUser_288)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SAddBlackUser_288::CopyFrom(const C2SAddBlackUser_288& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SAddBlackUser_288)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SAddBlackUser_288::IsInitialized() const {

  return true;
}

void C2SAddBlackUser_288::Swap(C2SAddBlackUser_288* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SAddBlackUser_288::InternalSwap(C2SAddBlackUser_288* other) {
  std::swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SAddBlackUser_288::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SAddBlackUser_288_descriptor_;
  metadata.reflection = C2SAddBlackUser_288_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SAddBlackUser_288

// optional uint64 Userid = 1;
void C2SAddBlackUser_288::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 C2SAddBlackUser_288::userid() const {
  // @@protoc_insertion_point(field_get:pb.C2SAddBlackUser_288.Userid)
  return userid_;
}
 void C2SAddBlackUser_288::set_userid(::google::protobuf::uint64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SAddBlackUser_288.Userid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SRemoveBlackUser_289::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SRemoveBlackUser_289::C2SRemoveBlackUser_289()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SRemoveBlackUser_289)
}

void C2SRemoveBlackUser_289::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SRemoveBlackUser_289::C2SRemoveBlackUser_289(const C2SRemoveBlackUser_289& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SRemoveBlackUser_289)
}

void C2SRemoveBlackUser_289::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = GOOGLE_ULONGLONG(0);
}

C2SRemoveBlackUser_289::~C2SRemoveBlackUser_289() {
  // @@protoc_insertion_point(destructor:pb.C2SRemoveBlackUser_289)
  SharedDtor();
}

void C2SRemoveBlackUser_289::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SRemoveBlackUser_289::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SRemoveBlackUser_289::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SRemoveBlackUser_289_descriptor_;
}

const C2SRemoveBlackUser_289& C2SRemoveBlackUser_289::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SRemoveBlackUser_289* C2SRemoveBlackUser_289::default_instance_ = NULL;

C2SRemoveBlackUser_289* C2SRemoveBlackUser_289::New(::google::protobuf::Arena* arena) const {
  C2SRemoveBlackUser_289* n = new C2SRemoveBlackUser_289;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SRemoveBlackUser_289::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SRemoveBlackUser_289)
  userid_ = GOOGLE_ULONGLONG(0);
}

bool C2SRemoveBlackUser_289::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SRemoveBlackUser_289)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SRemoveBlackUser_289)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SRemoveBlackUser_289)
  return false;
#undef DO_
}

void C2SRemoveBlackUser_289::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SRemoveBlackUser_289)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->userid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SRemoveBlackUser_289)
}

::google::protobuf::uint8* C2SRemoveBlackUser_289::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SRemoveBlackUser_289)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->userid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SRemoveBlackUser_289)
  return target;
}

int C2SRemoveBlackUser_289::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SRemoveBlackUser_289)
  int total_size = 0;

  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SRemoveBlackUser_289::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SRemoveBlackUser_289)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SRemoveBlackUser_289* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SRemoveBlackUser_289>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SRemoveBlackUser_289)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SRemoveBlackUser_289)
    MergeFrom(*source);
  }
}

void C2SRemoveBlackUser_289::MergeFrom(const C2SRemoveBlackUser_289& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SRemoveBlackUser_289)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void C2SRemoveBlackUser_289::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SRemoveBlackUser_289)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SRemoveBlackUser_289::CopyFrom(const C2SRemoveBlackUser_289& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SRemoveBlackUser_289)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SRemoveBlackUser_289::IsInitialized() const {

  return true;
}

void C2SRemoveBlackUser_289::Swap(C2SRemoveBlackUser_289* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SRemoveBlackUser_289::InternalSwap(C2SRemoveBlackUser_289* other) {
  std::swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SRemoveBlackUser_289::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SRemoveBlackUser_289_descriptor_;
  metadata.reflection = C2SRemoveBlackUser_289_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SRemoveBlackUser_289

// optional uint64 Userid = 1;
void C2SRemoveBlackUser_289::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 C2SRemoveBlackUser_289::userid() const {
  // @@protoc_insertion_point(field_get:pb.C2SRemoveBlackUser_289.Userid)
  return userid_;
}
 void C2SRemoveBlackUser_289::set_userid(::google::protobuf::uint64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SRemoveBlackUser_289.Userid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetBlackList_290::C2SGetBlackList_290()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetBlackList_290)
}

void C2SGetBlackList_290::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetBlackList_290::C2SGetBlackList_290(const C2SGetBlackList_290& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetBlackList_290)
}

void C2SGetBlackList_290::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGetBlackList_290::~C2SGetBlackList_290() {
  // @@protoc_insertion_point(destructor:pb.C2SGetBlackList_290)
  SharedDtor();
}

void C2SGetBlackList_290::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetBlackList_290::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetBlackList_290::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetBlackList_290_descriptor_;
}

const C2SGetBlackList_290& C2SGetBlackList_290::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetBlackList_290* C2SGetBlackList_290::default_instance_ = NULL;

C2SGetBlackList_290* C2SGetBlackList_290::New(::google::protobuf::Arena* arena) const {
  C2SGetBlackList_290* n = new C2SGetBlackList_290;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetBlackList_290::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetBlackList_290)
}

bool C2SGetBlackList_290::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetBlackList_290)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetBlackList_290)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetBlackList_290)
  return false;
#undef DO_
}

void C2SGetBlackList_290::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetBlackList_290)
  // @@protoc_insertion_point(serialize_end:pb.C2SGetBlackList_290)
}

::google::protobuf::uint8* C2SGetBlackList_290::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetBlackList_290)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetBlackList_290)
  return target;
}

int C2SGetBlackList_290::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetBlackList_290)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetBlackList_290::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetBlackList_290)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetBlackList_290* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetBlackList_290>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetBlackList_290)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetBlackList_290)
    MergeFrom(*source);
  }
}

void C2SGetBlackList_290::MergeFrom(const C2SGetBlackList_290& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetBlackList_290)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SGetBlackList_290::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetBlackList_290)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetBlackList_290::CopyFrom(const C2SGetBlackList_290& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetBlackList_290)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetBlackList_290::IsInitialized() const {

  return true;
}

void C2SGetBlackList_290::Swap(C2SGetBlackList_290* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetBlackList_290::InternalSwap(C2SGetBlackList_290* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetBlackList_290::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetBlackList_290_descriptor_;
  metadata.reflection = C2SGetBlackList_290_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetBlackList_290

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetBlackList_290::kBlackListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetBlackList_290::S2CGetBlackList_290()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetBlackList_290)
}

void S2CGetBlackList_290::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetBlackList_290::S2CGetBlackList_290(const S2CGetBlackList_290& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetBlackList_290)
}

void S2CGetBlackList_290::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CGetBlackList_290::~S2CGetBlackList_290() {
  // @@protoc_insertion_point(destructor:pb.S2CGetBlackList_290)
  SharedDtor();
}

void S2CGetBlackList_290::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetBlackList_290::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetBlackList_290::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetBlackList_290_descriptor_;
}

const S2CGetBlackList_290& S2CGetBlackList_290::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetBlackList_290* S2CGetBlackList_290::default_instance_ = NULL;

S2CGetBlackList_290* S2CGetBlackList_290::New(::google::protobuf::Arena* arena) const {
  S2CGetBlackList_290* n = new S2CGetBlackList_290;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetBlackList_290::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetBlackList_290)
  blacklist_.Clear();
}

bool S2CGetBlackList_290::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetBlackList_290)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.UserProfile BlackList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_BlackList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_blacklist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_BlackList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetBlackList_290)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetBlackList_290)
  return false;
#undef DO_
}

void S2CGetBlackList_290::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetBlackList_290)
  // repeated .pb.UserProfile BlackList = 1;
  for (unsigned int i = 0, n = this->blacklist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->blacklist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetBlackList_290)
}

::google::protobuf::uint8* S2CGetBlackList_290::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetBlackList_290)
  // repeated .pb.UserProfile BlackList = 1;
  for (unsigned int i = 0, n = this->blacklist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->blacklist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetBlackList_290)
  return target;
}

int S2CGetBlackList_290::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetBlackList_290)
  int total_size = 0;

  // repeated .pb.UserProfile BlackList = 1;
  total_size += 1 * this->blacklist_size();
  for (int i = 0; i < this->blacklist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->blacklist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetBlackList_290::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetBlackList_290)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetBlackList_290* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetBlackList_290>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetBlackList_290)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetBlackList_290)
    MergeFrom(*source);
  }
}

void S2CGetBlackList_290::MergeFrom(const S2CGetBlackList_290& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetBlackList_290)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  blacklist_.MergeFrom(from.blacklist_);
}

void S2CGetBlackList_290::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetBlackList_290)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetBlackList_290::CopyFrom(const S2CGetBlackList_290& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetBlackList_290)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetBlackList_290::IsInitialized() const {

  return true;
}

void S2CGetBlackList_290::Swap(S2CGetBlackList_290* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetBlackList_290::InternalSwap(S2CGetBlackList_290* other) {
  blacklist_.UnsafeArenaSwap(&other->blacklist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetBlackList_290::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetBlackList_290_descriptor_;
  metadata.reflection = S2CGetBlackList_290_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetBlackList_290

// repeated .pb.UserProfile BlackList = 1;
int S2CGetBlackList_290::blacklist_size() const {
  return blacklist_.size();
}
void S2CGetBlackList_290::clear_blacklist() {
  blacklist_.Clear();
}
const ::pb::UserProfile& S2CGetBlackList_290::blacklist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetBlackList_290.BlackList)
  return blacklist_.Get(index);
}
::pb::UserProfile* S2CGetBlackList_290::mutable_blacklist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetBlackList_290.BlackList)
  return blacklist_.Mutable(index);
}
::pb::UserProfile* S2CGetBlackList_290::add_blacklist() {
  // @@protoc_insertion_point(field_add:pb.S2CGetBlackList_290.BlackList)
  return blacklist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::UserProfile >*
S2CGetBlackList_290::mutable_blacklist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetBlackList_290.BlackList)
  return &blacklist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::UserProfile >&
S2CGetBlackList_290::blacklist() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetBlackList_290.BlackList)
  return blacklist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CFriendOnlineStatus_291::kUseridFieldNumber;
const int S2CFriendOnlineStatus_291::kOnlineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CFriendOnlineStatus_291::S2CFriendOnlineStatus_291()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CFriendOnlineStatus_291)
}

void S2CFriendOnlineStatus_291::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CFriendOnlineStatus_291::S2CFriendOnlineStatus_291(const S2CFriendOnlineStatus_291& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CFriendOnlineStatus_291)
}

void S2CFriendOnlineStatus_291::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = GOOGLE_ULONGLONG(0);
  online_ = false;
}

S2CFriendOnlineStatus_291::~S2CFriendOnlineStatus_291() {
  // @@protoc_insertion_point(destructor:pb.S2CFriendOnlineStatus_291)
  SharedDtor();
}

void S2CFriendOnlineStatus_291::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CFriendOnlineStatus_291::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CFriendOnlineStatus_291::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CFriendOnlineStatus_291_descriptor_;
}

const S2CFriendOnlineStatus_291& S2CFriendOnlineStatus_291::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CFriendOnlineStatus_291* S2CFriendOnlineStatus_291::default_instance_ = NULL;

S2CFriendOnlineStatus_291* S2CFriendOnlineStatus_291::New(::google::protobuf::Arena* arena) const {
  S2CFriendOnlineStatus_291* n = new S2CFriendOnlineStatus_291;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CFriendOnlineStatus_291::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CFriendOnlineStatus_291)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CFriendOnlineStatus_291, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CFriendOnlineStatus_291*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, online_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2CFriendOnlineStatus_291::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CFriendOnlineStatus_291)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Online;
        break;
      }

      // optional bool Online = 2;
      case 2: {
        if (tag == 16) {
         parse_Online:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &online_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CFriendOnlineStatus_291)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CFriendOnlineStatus_291)
  return false;
#undef DO_
}

void S2CFriendOnlineStatus_291::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CFriendOnlineStatus_291)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->userid(), output);
  }

  // optional bool Online = 2;
  if (this->online() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->online(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CFriendOnlineStatus_291)
}

::google::protobuf::uint8* S2CFriendOnlineStatus_291::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CFriendOnlineStatus_291)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->userid(), target);
  }

  // optional bool Online = 2;
  if (this->online() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->online(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CFriendOnlineStatus_291)
  return target;
}

int S2CFriendOnlineStatus_291::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CFriendOnlineStatus_291)
  int total_size = 0;

  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // optional bool Online = 2;
  if (this->online() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CFriendOnlineStatus_291::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CFriendOnlineStatus_291)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CFriendOnlineStatus_291* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CFriendOnlineStatus_291>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CFriendOnlineStatus_291)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CFriendOnlineStatus_291)
    MergeFrom(*source);
  }
}

void S2CFriendOnlineStatus_291::MergeFrom(const S2CFriendOnlineStatus_291& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CFriendOnlineStatus_291)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.online() != 0) {
    set_online(from.online());
  }
}

void S2CFriendOnlineStatus_291::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CFriendOnlineStatus_291)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CFriendOnlineStatus_291::CopyFrom(const S2CFriendOnlineStatus_291& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CFriendOnlineStatus_291)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CFriendOnlineStatus_291::IsInitialized() const {

  return true;
}

void S2CFriendOnlineStatus_291::Swap(S2CFriendOnlineStatus_291* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CFriendOnlineStatus_291::InternalSwap(S2CFriendOnlineStatus_291* other) {
  std::swap(userid_, other->userid_);
  std::swap(online_, other->online_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CFriendOnlineStatus_291::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CFriendOnlineStatus_291_descriptor_;
  metadata.reflection = S2CFriendOnlineStatus_291_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CFriendOnlineStatus_291

// optional uint64 Userid = 1;
void S2CFriendOnlineStatus_291::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CFriendOnlineStatus_291::userid() const {
  // @@protoc_insertion_point(field_get:pb.S2CFriendOnlineStatus_291.Userid)
  return userid_;
}
 void S2CFriendOnlineStatus_291::set_userid(::google::protobuf::uint64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CFriendOnlineStatus_291.Userid)
}

// optional bool Online = 2;
void S2CFriendOnlineStatus_291::clear_online() {
  online_ = false;
}
 bool S2CFriendOnlineStatus_291::online() const {
  // @@protoc_insertion_point(field_get:pb.S2CFriendOnlineStatus_291.Online)
  return online_;
}
 void S2CFriendOnlineStatus_291::set_online(bool value) {
  
  online_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CFriendOnlineStatus_291.Online)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetRecentUserList_292::C2SGetRecentUserList_292()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetRecentUserList_292)
}

void C2SGetRecentUserList_292::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetRecentUserList_292::C2SGetRecentUserList_292(const C2SGetRecentUserList_292& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetRecentUserList_292)
}

void C2SGetRecentUserList_292::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGetRecentUserList_292::~C2SGetRecentUserList_292() {
  // @@protoc_insertion_point(destructor:pb.C2SGetRecentUserList_292)
  SharedDtor();
}

void C2SGetRecentUserList_292::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetRecentUserList_292::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetRecentUserList_292::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetRecentUserList_292_descriptor_;
}

const C2SGetRecentUserList_292& C2SGetRecentUserList_292::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetRecentUserList_292* C2SGetRecentUserList_292::default_instance_ = NULL;

C2SGetRecentUserList_292* C2SGetRecentUserList_292::New(::google::protobuf::Arena* arena) const {
  C2SGetRecentUserList_292* n = new C2SGetRecentUserList_292;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetRecentUserList_292::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetRecentUserList_292)
}

bool C2SGetRecentUserList_292::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetRecentUserList_292)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetRecentUserList_292)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetRecentUserList_292)
  return false;
#undef DO_
}

void C2SGetRecentUserList_292::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetRecentUserList_292)
  // @@protoc_insertion_point(serialize_end:pb.C2SGetRecentUserList_292)
}

::google::protobuf::uint8* C2SGetRecentUserList_292::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetRecentUserList_292)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetRecentUserList_292)
  return target;
}

int C2SGetRecentUserList_292::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetRecentUserList_292)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetRecentUserList_292::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetRecentUserList_292)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetRecentUserList_292* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetRecentUserList_292>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetRecentUserList_292)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetRecentUserList_292)
    MergeFrom(*source);
  }
}

void C2SGetRecentUserList_292::MergeFrom(const C2SGetRecentUserList_292& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetRecentUserList_292)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SGetRecentUserList_292::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetRecentUserList_292)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetRecentUserList_292::CopyFrom(const C2SGetRecentUserList_292& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetRecentUserList_292)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetRecentUserList_292::IsInitialized() const {

  return true;
}

void C2SGetRecentUserList_292::Swap(C2SGetRecentUserList_292* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetRecentUserList_292::InternalSwap(C2SGetRecentUserList_292* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetRecentUserList_292::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetRecentUserList_292_descriptor_;
  metadata.reflection = C2SGetRecentUserList_292_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetRecentUserList_292

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetRecentUserList_292::kUserListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetRecentUserList_292::S2CGetRecentUserList_292()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetRecentUserList_292)
}

void S2CGetRecentUserList_292::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetRecentUserList_292::S2CGetRecentUserList_292(const S2CGetRecentUserList_292& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetRecentUserList_292)
}

void S2CGetRecentUserList_292::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CGetRecentUserList_292::~S2CGetRecentUserList_292() {
  // @@protoc_insertion_point(destructor:pb.S2CGetRecentUserList_292)
  SharedDtor();
}

void S2CGetRecentUserList_292::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetRecentUserList_292::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetRecentUserList_292::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetRecentUserList_292_descriptor_;
}

const S2CGetRecentUserList_292& S2CGetRecentUserList_292::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetRecentUserList_292* S2CGetRecentUserList_292::default_instance_ = NULL;

S2CGetRecentUserList_292* S2CGetRecentUserList_292::New(::google::protobuf::Arena* arena) const {
  S2CGetRecentUserList_292* n = new S2CGetRecentUserList_292;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetRecentUserList_292::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetRecentUserList_292)
  userlist_.Clear();
}

bool S2CGetRecentUserList_292::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetRecentUserList_292)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.UserProfile UserList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_UserList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_userlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_UserList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetRecentUserList_292)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetRecentUserList_292)
  return false;
#undef DO_
}

void S2CGetRecentUserList_292::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetRecentUserList_292)
  // repeated .pb.UserProfile UserList = 1;
  for (unsigned int i = 0, n = this->userlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetRecentUserList_292)
}

::google::protobuf::uint8* S2CGetRecentUserList_292::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetRecentUserList_292)
  // repeated .pb.UserProfile UserList = 1;
  for (unsigned int i = 0, n = this->userlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->userlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetRecentUserList_292)
  return target;
}

int S2CGetRecentUserList_292::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetRecentUserList_292)
  int total_size = 0;

  // repeated .pb.UserProfile UserList = 1;
  total_size += 1 * this->userlist_size();
  for (int i = 0; i < this->userlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetRecentUserList_292::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetRecentUserList_292)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetRecentUserList_292* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetRecentUserList_292>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetRecentUserList_292)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetRecentUserList_292)
    MergeFrom(*source);
  }
}

void S2CGetRecentUserList_292::MergeFrom(const S2CGetRecentUserList_292& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetRecentUserList_292)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  userlist_.MergeFrom(from.userlist_);
}

void S2CGetRecentUserList_292::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetRecentUserList_292)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetRecentUserList_292::CopyFrom(const S2CGetRecentUserList_292& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetRecentUserList_292)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetRecentUserList_292::IsInitialized() const {

  return true;
}

void S2CGetRecentUserList_292::Swap(S2CGetRecentUserList_292* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetRecentUserList_292::InternalSwap(S2CGetRecentUserList_292* other) {
  userlist_.UnsafeArenaSwap(&other->userlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetRecentUserList_292::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetRecentUserList_292_descriptor_;
  metadata.reflection = S2CGetRecentUserList_292_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetRecentUserList_292

// repeated .pb.UserProfile UserList = 1;
int S2CGetRecentUserList_292::userlist_size() const {
  return userlist_.size();
}
void S2CGetRecentUserList_292::clear_userlist() {
  userlist_.Clear();
}
const ::pb::UserProfile& S2CGetRecentUserList_292::userlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetRecentUserList_292.UserList)
  return userlist_.Get(index);
}
::pb::UserProfile* S2CGetRecentUserList_292::mutable_userlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetRecentUserList_292.UserList)
  return userlist_.Mutable(index);
}
::pb::UserProfile* S2CGetRecentUserList_292::add_userlist() {
  // @@protoc_insertion_point(field_add:pb.S2CGetRecentUserList_292.UserList)
  return userlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::UserProfile >*
S2CGetRecentUserList_292::mutable_userlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetRecentUserList_292.UserList)
  return &userlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::UserProfile >&
S2CGetRecentUserList_292::userlist() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetRecentUserList_292.UserList)
  return userlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SUploadCoordinates_293::kLongitudeFieldNumber;
const int C2SUploadCoordinates_293::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SUploadCoordinates_293::C2SUploadCoordinates_293()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SUploadCoordinates_293)
}

void C2SUploadCoordinates_293::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SUploadCoordinates_293::C2SUploadCoordinates_293(const C2SUploadCoordinates_293& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SUploadCoordinates_293)
}

void C2SUploadCoordinates_293::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  longitude_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latitude_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2SUploadCoordinates_293::~C2SUploadCoordinates_293() {
  // @@protoc_insertion_point(destructor:pb.C2SUploadCoordinates_293)
  SharedDtor();
}

void C2SUploadCoordinates_293::SharedDtor() {
  longitude_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latitude_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2SUploadCoordinates_293::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SUploadCoordinates_293::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SUploadCoordinates_293_descriptor_;
}

const C2SUploadCoordinates_293& C2SUploadCoordinates_293::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SUploadCoordinates_293* C2SUploadCoordinates_293::default_instance_ = NULL;

C2SUploadCoordinates_293* C2SUploadCoordinates_293::New(::google::protobuf::Arena* arena) const {
  C2SUploadCoordinates_293* n = new C2SUploadCoordinates_293;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SUploadCoordinates_293::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SUploadCoordinates_293)
  longitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2SUploadCoordinates_293::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SUploadCoordinates_293)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Longitude = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_longitude()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->longitude().data(), this->longitude().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SUploadCoordinates_293.Longitude"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Latitude;
        break;
      }

      // optional string Latitude = 2;
      case 2: {
        if (tag == 18) {
         parse_Latitude:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_latitude()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->latitude().data(), this->latitude().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SUploadCoordinates_293.Latitude"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SUploadCoordinates_293)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SUploadCoordinates_293)
  return false;
#undef DO_
}

void C2SUploadCoordinates_293::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SUploadCoordinates_293)
  // optional string Longitude = 1;
  if (this->longitude().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->longitude().data(), this->longitude().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SUploadCoordinates_293.Longitude");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->longitude(), output);
  }

  // optional string Latitude = 2;
  if (this->latitude().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->latitude().data(), this->latitude().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SUploadCoordinates_293.Latitude");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->latitude(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SUploadCoordinates_293)
}

::google::protobuf::uint8* C2SUploadCoordinates_293::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SUploadCoordinates_293)
  // optional string Longitude = 1;
  if (this->longitude().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->longitude().data(), this->longitude().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SUploadCoordinates_293.Longitude");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->longitude(), target);
  }

  // optional string Latitude = 2;
  if (this->latitude().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->latitude().data(), this->latitude().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SUploadCoordinates_293.Latitude");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->latitude(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SUploadCoordinates_293)
  return target;
}

int C2SUploadCoordinates_293::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SUploadCoordinates_293)
  int total_size = 0;

  // optional string Longitude = 1;
  if (this->longitude().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->longitude());
  }

  // optional string Latitude = 2;
  if (this->latitude().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->latitude());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SUploadCoordinates_293::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SUploadCoordinates_293)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SUploadCoordinates_293* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SUploadCoordinates_293>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SUploadCoordinates_293)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SUploadCoordinates_293)
    MergeFrom(*source);
  }
}

void C2SUploadCoordinates_293::MergeFrom(const C2SUploadCoordinates_293& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SUploadCoordinates_293)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.longitude().size() > 0) {

    longitude_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.longitude_);
  }
  if (from.latitude().size() > 0) {

    latitude_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latitude_);
  }
}

void C2SUploadCoordinates_293::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SUploadCoordinates_293)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SUploadCoordinates_293::CopyFrom(const C2SUploadCoordinates_293& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SUploadCoordinates_293)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SUploadCoordinates_293::IsInitialized() const {

  return true;
}

void C2SUploadCoordinates_293::Swap(C2SUploadCoordinates_293* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SUploadCoordinates_293::InternalSwap(C2SUploadCoordinates_293* other) {
  longitude_.Swap(&other->longitude_);
  latitude_.Swap(&other->latitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SUploadCoordinates_293::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SUploadCoordinates_293_descriptor_;
  metadata.reflection = C2SUploadCoordinates_293_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SUploadCoordinates_293

// optional string Longitude = 1;
void C2SUploadCoordinates_293::clear_longitude() {
  longitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SUploadCoordinates_293::longitude() const {
  // @@protoc_insertion_point(field_get:pb.C2SUploadCoordinates_293.Longitude)
  return longitude_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SUploadCoordinates_293::set_longitude(const ::std::string& value) {
  
  longitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SUploadCoordinates_293.Longitude)
}
 void C2SUploadCoordinates_293::set_longitude(const char* value) {
  
  longitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SUploadCoordinates_293.Longitude)
}
 void C2SUploadCoordinates_293::set_longitude(const char* value, size_t size) {
  
  longitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SUploadCoordinates_293.Longitude)
}
 ::std::string* C2SUploadCoordinates_293::mutable_longitude() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SUploadCoordinates_293.Longitude)
  return longitude_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SUploadCoordinates_293::release_longitude() {
  // @@protoc_insertion_point(field_release:pb.C2SUploadCoordinates_293.Longitude)
  
  return longitude_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SUploadCoordinates_293::set_allocated_longitude(::std::string* longitude) {
  if (longitude != NULL) {
    
  } else {
    
  }
  longitude_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), longitude);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SUploadCoordinates_293.Longitude)
}

// optional string Latitude = 2;
void C2SUploadCoordinates_293::clear_latitude() {
  latitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SUploadCoordinates_293::latitude() const {
  // @@protoc_insertion_point(field_get:pb.C2SUploadCoordinates_293.Latitude)
  return latitude_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SUploadCoordinates_293::set_latitude(const ::std::string& value) {
  
  latitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SUploadCoordinates_293.Latitude)
}
 void C2SUploadCoordinates_293::set_latitude(const char* value) {
  
  latitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SUploadCoordinates_293.Latitude)
}
 void C2SUploadCoordinates_293::set_latitude(const char* value, size_t size) {
  
  latitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SUploadCoordinates_293.Latitude)
}
 ::std::string* C2SUploadCoordinates_293::mutable_latitude() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SUploadCoordinates_293.Latitude)
  return latitude_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SUploadCoordinates_293::release_latitude() {
  // @@protoc_insertion_point(field_release:pb.C2SUploadCoordinates_293.Latitude)
  
  return latitude_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SUploadCoordinates_293::set_allocated_latitude(::std::string* latitude) {
  if (latitude != NULL) {
    
  } else {
    
  }
  latitude_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), latitude);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SUploadCoordinates_293.Latitude)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetUserNearby_294::C2SGetUserNearby_294()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetUserNearby_294)
}

void C2SGetUserNearby_294::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetUserNearby_294::C2SGetUserNearby_294(const C2SGetUserNearby_294& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetUserNearby_294)
}

void C2SGetUserNearby_294::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGetUserNearby_294::~C2SGetUserNearby_294() {
  // @@protoc_insertion_point(destructor:pb.C2SGetUserNearby_294)
  SharedDtor();
}

void C2SGetUserNearby_294::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetUserNearby_294::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetUserNearby_294::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetUserNearby_294_descriptor_;
}

const C2SGetUserNearby_294& C2SGetUserNearby_294::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetUserNearby_294* C2SGetUserNearby_294::default_instance_ = NULL;

C2SGetUserNearby_294* C2SGetUserNearby_294::New(::google::protobuf::Arena* arena) const {
  C2SGetUserNearby_294* n = new C2SGetUserNearby_294;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetUserNearby_294::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetUserNearby_294)
}

bool C2SGetUserNearby_294::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetUserNearby_294)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetUserNearby_294)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetUserNearby_294)
  return false;
#undef DO_
}

void C2SGetUserNearby_294::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetUserNearby_294)
  // @@protoc_insertion_point(serialize_end:pb.C2SGetUserNearby_294)
}

::google::protobuf::uint8* C2SGetUserNearby_294::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetUserNearby_294)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetUserNearby_294)
  return target;
}

int C2SGetUserNearby_294::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetUserNearby_294)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetUserNearby_294::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetUserNearby_294)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetUserNearby_294* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetUserNearby_294>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetUserNearby_294)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetUserNearby_294)
    MergeFrom(*source);
  }
}

void C2SGetUserNearby_294::MergeFrom(const C2SGetUserNearby_294& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetUserNearby_294)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SGetUserNearby_294::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetUserNearby_294)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetUserNearby_294::CopyFrom(const C2SGetUserNearby_294& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetUserNearby_294)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetUserNearby_294::IsInitialized() const {

  return true;
}

void C2SGetUserNearby_294::Swap(C2SGetUserNearby_294* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetUserNearby_294::InternalSwap(C2SGetUserNearby_294* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetUserNearby_294::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetUserNearby_294_descriptor_;
  metadata.reflection = C2SGetUserNearby_294_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetUserNearby_294

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetUserNearby_294::kUserListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetUserNearby_294::S2CGetUserNearby_294()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetUserNearby_294)
}

void S2CGetUserNearby_294::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetUserNearby_294::S2CGetUserNearby_294(const S2CGetUserNearby_294& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetUserNearby_294)
}

void S2CGetUserNearby_294::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CGetUserNearby_294::~S2CGetUserNearby_294() {
  // @@protoc_insertion_point(destructor:pb.S2CGetUserNearby_294)
  SharedDtor();
}

void S2CGetUserNearby_294::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetUserNearby_294::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetUserNearby_294::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetUserNearby_294_descriptor_;
}

const S2CGetUserNearby_294& S2CGetUserNearby_294::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetUserNearby_294* S2CGetUserNearby_294::default_instance_ = NULL;

S2CGetUserNearby_294* S2CGetUserNearby_294::New(::google::protobuf::Arena* arena) const {
  S2CGetUserNearby_294* n = new S2CGetUserNearby_294;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetUserNearby_294::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetUserNearby_294)
  userlist_.Clear();
}

bool S2CGetUserNearby_294::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetUserNearby_294)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.UserProfile UserList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_UserList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_userlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_UserList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetUserNearby_294)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetUserNearby_294)
  return false;
#undef DO_
}

void S2CGetUserNearby_294::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetUserNearby_294)
  // repeated .pb.UserProfile UserList = 1;
  for (unsigned int i = 0, n = this->userlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetUserNearby_294)
}

::google::protobuf::uint8* S2CGetUserNearby_294::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetUserNearby_294)
  // repeated .pb.UserProfile UserList = 1;
  for (unsigned int i = 0, n = this->userlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->userlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetUserNearby_294)
  return target;
}

int S2CGetUserNearby_294::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetUserNearby_294)
  int total_size = 0;

  // repeated .pb.UserProfile UserList = 1;
  total_size += 1 * this->userlist_size();
  for (int i = 0; i < this->userlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetUserNearby_294::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetUserNearby_294)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetUserNearby_294* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetUserNearby_294>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetUserNearby_294)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetUserNearby_294)
    MergeFrom(*source);
  }
}

void S2CGetUserNearby_294::MergeFrom(const S2CGetUserNearby_294& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetUserNearby_294)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  userlist_.MergeFrom(from.userlist_);
}

void S2CGetUserNearby_294::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetUserNearby_294)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetUserNearby_294::CopyFrom(const S2CGetUserNearby_294& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetUserNearby_294)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetUserNearby_294::IsInitialized() const {

  return true;
}

void S2CGetUserNearby_294::Swap(S2CGetUserNearby_294* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetUserNearby_294::InternalSwap(S2CGetUserNearby_294* other) {
  userlist_.UnsafeArenaSwap(&other->userlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetUserNearby_294::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetUserNearby_294_descriptor_;
  metadata.reflection = S2CGetUserNearby_294_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetUserNearby_294

// repeated .pb.UserProfile UserList = 1;
int S2CGetUserNearby_294::userlist_size() const {
  return userlist_.size();
}
void S2CGetUserNearby_294::clear_userlist() {
  userlist_.Clear();
}
const ::pb::UserProfile& S2CGetUserNearby_294::userlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetUserNearby_294.UserList)
  return userlist_.Get(index);
}
::pb::UserProfile* S2CGetUserNearby_294::mutable_userlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetUserNearby_294.UserList)
  return userlist_.Mutable(index);
}
::pb::UserProfile* S2CGetUserNearby_294::add_userlist() {
  // @@protoc_insertion_point(field_add:pb.S2CGetUserNearby_294.UserList)
  return userlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::UserProfile >*
S2CGetUserNearby_294::mutable_userlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetUserNearby_294.UserList)
  return &userlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::UserProfile >&
S2CGetUserNearby_294::userlist() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetUserNearby_294.UserList)
  return userlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SRankScore_300::kMatchModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SRankScore_300::C2SRankScore_300()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SRankScore_300)
}

void C2SRankScore_300::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SRankScore_300::C2SRankScore_300(const C2SRankScore_300& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SRankScore_300)
}

void C2SRankScore_300::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  matchmode_ = 0u;
}

C2SRankScore_300::~C2SRankScore_300() {
  // @@protoc_insertion_point(destructor:pb.C2SRankScore_300)
  SharedDtor();
}

void C2SRankScore_300::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SRankScore_300::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SRankScore_300::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SRankScore_300_descriptor_;
}

const C2SRankScore_300& C2SRankScore_300::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SRankScore_300* C2SRankScore_300::default_instance_ = NULL;

C2SRankScore_300* C2SRankScore_300::New(::google::protobuf::Arena* arena) const {
  C2SRankScore_300* n = new C2SRankScore_300;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SRankScore_300::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SRankScore_300)
  matchmode_ = 0u;
}

bool C2SRankScore_300::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SRankScore_300)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MatchMode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchmode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SRankScore_300)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SRankScore_300)
  return false;
#undef DO_
}

void C2SRankScore_300::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SRankScore_300)
  // optional uint32 MatchMode = 1;
  if (this->matchmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->matchmode(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SRankScore_300)
}

::google::protobuf::uint8* C2SRankScore_300::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SRankScore_300)
  // optional uint32 MatchMode = 1;
  if (this->matchmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->matchmode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SRankScore_300)
  return target;
}

int C2SRankScore_300::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SRankScore_300)
  int total_size = 0;

  // optional uint32 MatchMode = 1;
  if (this->matchmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchmode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SRankScore_300::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SRankScore_300)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SRankScore_300* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SRankScore_300>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SRankScore_300)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SRankScore_300)
    MergeFrom(*source);
  }
}

void C2SRankScore_300::MergeFrom(const C2SRankScore_300& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SRankScore_300)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.matchmode() != 0) {
    set_matchmode(from.matchmode());
  }
}

void C2SRankScore_300::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SRankScore_300)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SRankScore_300::CopyFrom(const C2SRankScore_300& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SRankScore_300)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SRankScore_300::IsInitialized() const {

  return true;
}

void C2SRankScore_300::Swap(C2SRankScore_300* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SRankScore_300::InternalSwap(C2SRankScore_300* other) {
  std::swap(matchmode_, other->matchmode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SRankScore_300::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SRankScore_300_descriptor_;
  metadata.reflection = C2SRankScore_300_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SRankScore_300

// optional uint32 MatchMode = 1;
void C2SRankScore_300::clear_matchmode() {
  matchmode_ = 0u;
}
 ::google::protobuf::uint32 C2SRankScore_300::matchmode() const {
  // @@protoc_insertion_point(field_get:pb.C2SRankScore_300.MatchMode)
  return matchmode_;
}
 void C2SRankScore_300::set_matchmode(::google::protobuf::uint32 value) {
  
  matchmode_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SRankScore_300.MatchMode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankScore::kUseridFieldNumber;
const int RankScore::kUsernameFieldNumber;
const int RankScore::kScoreFieldNumber;
const int RankScore::kSocreTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankScore::RankScore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RankScore)
}

void RankScore::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RankScore::RankScore(const RankScore& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RankScore)
}

void RankScore::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = GOOGLE_ULONGLONG(0);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_ = 0u;
  socretime_ = 0u;
}

RankScore::~RankScore() {
  // @@protoc_insertion_point(destructor:pb.RankScore)
  SharedDtor();
}

void RankScore::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RankScore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankScore::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RankScore_descriptor_;
}

const RankScore& RankScore::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

RankScore* RankScore::default_instance_ = NULL;

RankScore* RankScore::New(::google::protobuf::Arena* arena) const {
  RankScore* n = new RankScore;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RankScore::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RankScore)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RankScore, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RankScore*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(score_, socretime_);
  userid_ = GOOGLE_ULONGLONG(0);
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool RankScore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RankScore)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Username;
        break;
      }

      // optional string Username = 2;
      case 2: {
        if (tag == 18) {
         parse_Username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.RankScore.Username"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Score;
        break;
      }

      // optional uint32 Score = 3;
      case 3: {
        if (tag == 24) {
         parse_Score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_SocreTime;
        break;
      }

      // optional uint32 SocreTime = 4;
      case 4: {
        if (tag == 32) {
         parse_SocreTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &socretime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RankScore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RankScore)
  return false;
#undef DO_
}

void RankScore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RankScore)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->userid(), output);
  }

  // optional string Username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RankScore.Username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional uint32 Score = 3;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->score(), output);
  }

  // optional uint32 SocreTime = 4;
  if (this->socretime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->socretime(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.RankScore)
}

::google::protobuf::uint8* RankScore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.RankScore)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->userid(), target);
  }

  // optional string Username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RankScore.Username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional uint32 Score = 3;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->score(), target);
  }

  // optional uint32 SocreTime = 4;
  if (this->socretime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->socretime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.RankScore)
  return target;
}

int RankScore::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RankScore)
  int total_size = 0;

  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // optional string Username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional uint32 Score = 3;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->score());
  }

  // optional uint32 SocreTime = 4;
  if (this->socretime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->socretime());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankScore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RankScore)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RankScore* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RankScore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RankScore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RankScore)
    MergeFrom(*source);
  }
}

void RankScore::MergeFrom(const RankScore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RankScore)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.socretime() != 0) {
    set_socretime(from.socretime());
  }
}

void RankScore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RankScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankScore::CopyFrom(const RankScore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RankScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankScore::IsInitialized() const {

  return true;
}

void RankScore::Swap(RankScore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankScore::InternalSwap(RankScore* other) {
  std::swap(userid_, other->userid_);
  username_.Swap(&other->username_);
  std::swap(score_, other->score_);
  std::swap(socretime_, other->socretime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RankScore::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RankScore_descriptor_;
  metadata.reflection = RankScore_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RankScore

// optional uint64 Userid = 1;
void RankScore::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 RankScore::userid() const {
  // @@protoc_insertion_point(field_get:pb.RankScore.Userid)
  return userid_;
}
 void RankScore::set_userid(::google::protobuf::uint64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:pb.RankScore.Userid)
}

// optional string Username = 2;
void RankScore::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RankScore::username() const {
  // @@protoc_insertion_point(field_get:pb.RankScore.Username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RankScore::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RankScore.Username)
}
 void RankScore::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RankScore.Username)
}
 void RankScore::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RankScore.Username)
}
 ::std::string* RankScore::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:pb.RankScore.Username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RankScore::release_username() {
  // @@protoc_insertion_point(field_release:pb.RankScore.Username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RankScore::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:pb.RankScore.Username)
}

// optional uint32 Score = 3;
void RankScore::clear_score() {
  score_ = 0u;
}
 ::google::protobuf::uint32 RankScore::score() const {
  // @@protoc_insertion_point(field_get:pb.RankScore.Score)
  return score_;
}
 void RankScore::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.RankScore.Score)
}

// optional uint32 SocreTime = 4;
void RankScore::clear_socretime() {
  socretime_ = 0u;
}
 ::google::protobuf::uint32 RankScore::socretime() const {
  // @@protoc_insertion_point(field_get:pb.RankScore.SocreTime)
  return socretime_;
}
 void RankScore::set_socretime(::google::protobuf::uint32 value) {
  
  socretime_ = value;
  // @@protoc_insertion_point(field_set:pb.RankScore.SocreTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CRankScore_300::kRanklistFieldNumber;
const int S2CRankScore_300::kRankFieldNumber;
const int S2CRankScore_300::kMatchModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CRankScore_300::S2CRankScore_300()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CRankScore_300)
}

void S2CRankScore_300::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CRankScore_300::S2CRankScore_300(const S2CRankScore_300& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CRankScore_300)
}

void S2CRankScore_300::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rank_ = 0u;
  matchmode_ = 0u;
}

S2CRankScore_300::~S2CRankScore_300() {
  // @@protoc_insertion_point(destructor:pb.S2CRankScore_300)
  SharedDtor();
}

void S2CRankScore_300::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CRankScore_300::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CRankScore_300::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CRankScore_300_descriptor_;
}

const S2CRankScore_300& S2CRankScore_300::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CRankScore_300* S2CRankScore_300::default_instance_ = NULL;

S2CRankScore_300* S2CRankScore_300::New(::google::protobuf::Arena* arena) const {
  S2CRankScore_300* n = new S2CRankScore_300;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CRankScore_300::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CRankScore_300)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CRankScore_300, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CRankScore_300*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rank_, matchmode_);

#undef ZR_HELPER_
#undef ZR_

  ranklist_.Clear();
}

bool S2CRankScore_300::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CRankScore_300)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.RankScore Ranklist = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Ranklist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ranklist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_Ranklist;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_Rank;
        break;
      }

      // optional uint32 Rank = 2;
      case 2: {
        if (tag == 16) {
         parse_Rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rank_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_MatchMode;
        break;
      }

      // optional uint32 MatchMode = 3;
      case 3: {
        if (tag == 24) {
         parse_MatchMode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchmode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CRankScore_300)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CRankScore_300)
  return false;
#undef DO_
}

void S2CRankScore_300::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CRankScore_300)
  // repeated .pb.RankScore Ranklist = 1;
  for (unsigned int i = 0, n = this->ranklist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ranklist(i), output);
  }

  // optional uint32 Rank = 2;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rank(), output);
  }

  // optional uint32 MatchMode = 3;
  if (this->matchmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->matchmode(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CRankScore_300)
}

::google::protobuf::uint8* S2CRankScore_300::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CRankScore_300)
  // repeated .pb.RankScore Ranklist = 1;
  for (unsigned int i = 0, n = this->ranklist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->ranklist(i), false, target);
  }

  // optional uint32 Rank = 2;
  if (this->rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rank(), target);
  }

  // optional uint32 MatchMode = 3;
  if (this->matchmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->matchmode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CRankScore_300)
  return target;
}

int S2CRankScore_300::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CRankScore_300)
  int total_size = 0;

  // optional uint32 Rank = 2;
  if (this->rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rank());
  }

  // optional uint32 MatchMode = 3;
  if (this->matchmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchmode());
  }

  // repeated .pb.RankScore Ranklist = 1;
  total_size += 1 * this->ranklist_size();
  for (int i = 0; i < this->ranklist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ranklist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CRankScore_300::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CRankScore_300)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CRankScore_300* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CRankScore_300>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CRankScore_300)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CRankScore_300)
    MergeFrom(*source);
  }
}

void S2CRankScore_300::MergeFrom(const S2CRankScore_300& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CRankScore_300)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ranklist_.MergeFrom(from.ranklist_);
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
  if (from.matchmode() != 0) {
    set_matchmode(from.matchmode());
  }
}

void S2CRankScore_300::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CRankScore_300)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CRankScore_300::CopyFrom(const S2CRankScore_300& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CRankScore_300)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CRankScore_300::IsInitialized() const {

  return true;
}

void S2CRankScore_300::Swap(S2CRankScore_300* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CRankScore_300::InternalSwap(S2CRankScore_300* other) {
  ranklist_.UnsafeArenaSwap(&other->ranklist_);
  std::swap(rank_, other->rank_);
  std::swap(matchmode_, other->matchmode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CRankScore_300::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CRankScore_300_descriptor_;
  metadata.reflection = S2CRankScore_300_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CRankScore_300

// repeated .pb.RankScore Ranklist = 1;
int S2CRankScore_300::ranklist_size() const {
  return ranklist_.size();
}
void S2CRankScore_300::clear_ranklist() {
  ranklist_.Clear();
}
const ::pb::RankScore& S2CRankScore_300::ranklist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CRankScore_300.Ranklist)
  return ranklist_.Get(index);
}
::pb::RankScore* S2CRankScore_300::mutable_ranklist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CRankScore_300.Ranklist)
  return ranklist_.Mutable(index);
}
::pb::RankScore* S2CRankScore_300::add_ranklist() {
  // @@protoc_insertion_point(field_add:pb.S2CRankScore_300.Ranklist)
  return ranklist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::RankScore >*
S2CRankScore_300::mutable_ranklist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CRankScore_300.Ranklist)
  return &ranklist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::RankScore >&
S2CRankScore_300::ranklist() const {
  // @@protoc_insertion_point(field_list:pb.S2CRankScore_300.Ranklist)
  return ranklist_;
}

// optional uint32 Rank = 2;
void S2CRankScore_300::clear_rank() {
  rank_ = 0u;
}
 ::google::protobuf::uint32 S2CRankScore_300::rank() const {
  // @@protoc_insertion_point(field_get:pb.S2CRankScore_300.Rank)
  return rank_;
}
 void S2CRankScore_300::set_rank(::google::protobuf::uint32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CRankScore_300.Rank)
}

// optional uint32 MatchMode = 3;
void S2CRankScore_300::clear_matchmode() {
  matchmode_ = 0u;
}
 ::google::protobuf::uint32 S2CRankScore_300::matchmode() const {
  // @@protoc_insertion_point(field_get:pb.S2CRankScore_300.MatchMode)
  return matchmode_;
}
 void S2CRankScore_300::set_matchmode(::google::protobuf::uint32 value) {
  
  matchmode_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CRankScore_300.MatchMode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetShortMsg_311::C2SGetShortMsg_311()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetShortMsg_311)
}

void C2SGetShortMsg_311::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetShortMsg_311::C2SGetShortMsg_311(const C2SGetShortMsg_311& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetShortMsg_311)
}

void C2SGetShortMsg_311::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGetShortMsg_311::~C2SGetShortMsg_311() {
  // @@protoc_insertion_point(destructor:pb.C2SGetShortMsg_311)
  SharedDtor();
}

void C2SGetShortMsg_311::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetShortMsg_311::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetShortMsg_311::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetShortMsg_311_descriptor_;
}

const C2SGetShortMsg_311& C2SGetShortMsg_311::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetShortMsg_311* C2SGetShortMsg_311::default_instance_ = NULL;

C2SGetShortMsg_311* C2SGetShortMsg_311::New(::google::protobuf::Arena* arena) const {
  C2SGetShortMsg_311* n = new C2SGetShortMsg_311;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetShortMsg_311::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetShortMsg_311)
}

bool C2SGetShortMsg_311::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetShortMsg_311)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetShortMsg_311)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetShortMsg_311)
  return false;
#undef DO_
}

void C2SGetShortMsg_311::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetShortMsg_311)
  // @@protoc_insertion_point(serialize_end:pb.C2SGetShortMsg_311)
}

::google::protobuf::uint8* C2SGetShortMsg_311::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetShortMsg_311)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetShortMsg_311)
  return target;
}

int C2SGetShortMsg_311::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetShortMsg_311)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetShortMsg_311::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetShortMsg_311)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetShortMsg_311* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetShortMsg_311>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetShortMsg_311)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetShortMsg_311)
    MergeFrom(*source);
  }
}

void C2SGetShortMsg_311::MergeFrom(const C2SGetShortMsg_311& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetShortMsg_311)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SGetShortMsg_311::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetShortMsg_311)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetShortMsg_311::CopyFrom(const C2SGetShortMsg_311& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetShortMsg_311)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetShortMsg_311::IsInitialized() const {

  return true;
}

void C2SGetShortMsg_311::Swap(C2SGetShortMsg_311* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetShortMsg_311::InternalSwap(C2SGetShortMsg_311* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetShortMsg_311::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetShortMsg_311_descriptor_;
  metadata.reflection = C2SGetShortMsg_311_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetShortMsg_311

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetShortMsg_311::kMsglistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetShortMsg_311::S2CGetShortMsg_311()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetShortMsg_311)
}

void S2CGetShortMsg_311::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetShortMsg_311::S2CGetShortMsg_311(const S2CGetShortMsg_311& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetShortMsg_311)
}

void S2CGetShortMsg_311::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CGetShortMsg_311::~S2CGetShortMsg_311() {
  // @@protoc_insertion_point(destructor:pb.S2CGetShortMsg_311)
  SharedDtor();
}

void S2CGetShortMsg_311::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetShortMsg_311::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetShortMsg_311::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetShortMsg_311_descriptor_;
}

const S2CGetShortMsg_311& S2CGetShortMsg_311::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetShortMsg_311* S2CGetShortMsg_311::default_instance_ = NULL;

S2CGetShortMsg_311* S2CGetShortMsg_311::New(::google::protobuf::Arena* arena) const {
  S2CGetShortMsg_311* n = new S2CGetShortMsg_311;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetShortMsg_311::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetShortMsg_311)
  msglist_.Clear();
}

bool S2CGetShortMsg_311::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetShortMsg_311)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 Msglist = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_msglist())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_msglist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetShortMsg_311)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetShortMsg_311)
  return false;
#undef DO_
}

void S2CGetShortMsg_311::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetShortMsg_311)
  // repeated uint32 Msglist = 1;
  if (this->msglist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_msglist_cached_byte_size_);
  }
  for (int i = 0; i < this->msglist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->msglist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetShortMsg_311)
}

::google::protobuf::uint8* S2CGetShortMsg_311::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetShortMsg_311)
  // repeated uint32 Msglist = 1;
  if (this->msglist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _msglist_cached_byte_size_, target);
  }
  for (int i = 0; i < this->msglist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->msglist(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetShortMsg_311)
  return target;
}

int S2CGetShortMsg_311::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetShortMsg_311)
  int total_size = 0;

  // repeated uint32 Msglist = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->msglist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->msglist(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _msglist_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetShortMsg_311::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetShortMsg_311)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetShortMsg_311* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetShortMsg_311>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetShortMsg_311)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetShortMsg_311)
    MergeFrom(*source);
  }
}

void S2CGetShortMsg_311::MergeFrom(const S2CGetShortMsg_311& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetShortMsg_311)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  msglist_.MergeFrom(from.msglist_);
}

void S2CGetShortMsg_311::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetShortMsg_311)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetShortMsg_311::CopyFrom(const S2CGetShortMsg_311& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetShortMsg_311)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetShortMsg_311::IsInitialized() const {

  return true;
}

void S2CGetShortMsg_311::Swap(S2CGetShortMsg_311* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetShortMsg_311::InternalSwap(S2CGetShortMsg_311* other) {
  msglist_.UnsafeArenaSwap(&other->msglist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetShortMsg_311::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetShortMsg_311_descriptor_;
  metadata.reflection = S2CGetShortMsg_311_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetShortMsg_311

// repeated uint32 Msglist = 1;
int S2CGetShortMsg_311::msglist_size() const {
  return msglist_.size();
}
void S2CGetShortMsg_311::clear_msglist() {
  msglist_.Clear();
}
 ::google::protobuf::uint32 S2CGetShortMsg_311::msglist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetShortMsg_311.Msglist)
  return msglist_.Get(index);
}
 void S2CGetShortMsg_311::set_msglist(int index, ::google::protobuf::uint32 value) {
  msglist_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.S2CGetShortMsg_311.Msglist)
}
 void S2CGetShortMsg_311::add_msglist(::google::protobuf::uint32 value) {
  msglist_.Add(value);
  // @@protoc_insertion_point(field_add:pb.S2CGetShortMsg_311.Msglist)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
S2CGetShortMsg_311::msglist() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetShortMsg_311.Msglist)
  return msglist_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
S2CGetShortMsg_311::mutable_msglist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetShortMsg_311.Msglist)
  return &msglist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SUpdateShortMsg_312::kMsglistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SUpdateShortMsg_312::C2SUpdateShortMsg_312()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SUpdateShortMsg_312)
}

void C2SUpdateShortMsg_312::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SUpdateShortMsg_312::C2SUpdateShortMsg_312(const C2SUpdateShortMsg_312& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SUpdateShortMsg_312)
}

void C2SUpdateShortMsg_312::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SUpdateShortMsg_312::~C2SUpdateShortMsg_312() {
  // @@protoc_insertion_point(destructor:pb.C2SUpdateShortMsg_312)
  SharedDtor();
}

void C2SUpdateShortMsg_312::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SUpdateShortMsg_312::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SUpdateShortMsg_312::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SUpdateShortMsg_312_descriptor_;
}

const C2SUpdateShortMsg_312& C2SUpdateShortMsg_312::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SUpdateShortMsg_312* C2SUpdateShortMsg_312::default_instance_ = NULL;

C2SUpdateShortMsg_312* C2SUpdateShortMsg_312::New(::google::protobuf::Arena* arena) const {
  C2SUpdateShortMsg_312* n = new C2SUpdateShortMsg_312;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SUpdateShortMsg_312::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SUpdateShortMsg_312)
  msglist_.Clear();
}

bool C2SUpdateShortMsg_312::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SUpdateShortMsg_312)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 Msglist = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_msglist())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_msglist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SUpdateShortMsg_312)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SUpdateShortMsg_312)
  return false;
#undef DO_
}

void C2SUpdateShortMsg_312::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SUpdateShortMsg_312)
  // repeated uint32 Msglist = 1;
  if (this->msglist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_msglist_cached_byte_size_);
  }
  for (int i = 0; i < this->msglist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->msglist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SUpdateShortMsg_312)
}

::google::protobuf::uint8* C2SUpdateShortMsg_312::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SUpdateShortMsg_312)
  // repeated uint32 Msglist = 1;
  if (this->msglist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _msglist_cached_byte_size_, target);
  }
  for (int i = 0; i < this->msglist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->msglist(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SUpdateShortMsg_312)
  return target;
}

int C2SUpdateShortMsg_312::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SUpdateShortMsg_312)
  int total_size = 0;

  // repeated uint32 Msglist = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->msglist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->msglist(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _msglist_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SUpdateShortMsg_312::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SUpdateShortMsg_312)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SUpdateShortMsg_312* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SUpdateShortMsg_312>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SUpdateShortMsg_312)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SUpdateShortMsg_312)
    MergeFrom(*source);
  }
}

void C2SUpdateShortMsg_312::MergeFrom(const C2SUpdateShortMsg_312& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SUpdateShortMsg_312)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  msglist_.MergeFrom(from.msglist_);
}

void C2SUpdateShortMsg_312::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SUpdateShortMsg_312)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SUpdateShortMsg_312::CopyFrom(const C2SUpdateShortMsg_312& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SUpdateShortMsg_312)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SUpdateShortMsg_312::IsInitialized() const {

  return true;
}

void C2SUpdateShortMsg_312::Swap(C2SUpdateShortMsg_312* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SUpdateShortMsg_312::InternalSwap(C2SUpdateShortMsg_312* other) {
  msglist_.UnsafeArenaSwap(&other->msglist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SUpdateShortMsg_312::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SUpdateShortMsg_312_descriptor_;
  metadata.reflection = C2SUpdateShortMsg_312_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SUpdateShortMsg_312

// repeated uint32 Msglist = 1;
int C2SUpdateShortMsg_312::msglist_size() const {
  return msglist_.size();
}
void C2SUpdateShortMsg_312::clear_msglist() {
  msglist_.Clear();
}
 ::google::protobuf::uint32 C2SUpdateShortMsg_312::msglist(int index) const {
  // @@protoc_insertion_point(field_get:pb.C2SUpdateShortMsg_312.Msglist)
  return msglist_.Get(index);
}
 void C2SUpdateShortMsg_312::set_msglist(int index, ::google::protobuf::uint32 value) {
  msglist_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.C2SUpdateShortMsg_312.Msglist)
}
 void C2SUpdateShortMsg_312::add_msglist(::google::protobuf::uint32 value) {
  msglist_.Add(value);
  // @@protoc_insertion_point(field_add:pb.C2SUpdateShortMsg_312.Msglist)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
C2SUpdateShortMsg_312::msglist() const {
  // @@protoc_insertion_point(field_list:pb.C2SUpdateShortMsg_312.Msglist)
  return msglist_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
C2SUpdateShortMsg_312::mutable_msglist() {
  // @@protoc_insertion_point(field_mutable_list:pb.C2SUpdateShortMsg_312.Msglist)
  return &msglist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SGetOneResumeMsg_313::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetOneResumeMsg_313::C2SGetOneResumeMsg_313()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetOneResumeMsg_313)
}

void C2SGetOneResumeMsg_313::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetOneResumeMsg_313::C2SGetOneResumeMsg_313(const C2SGetOneResumeMsg_313& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetOneResumeMsg_313)
}

void C2SGetOneResumeMsg_313::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = GOOGLE_ULONGLONG(0);
}

C2SGetOneResumeMsg_313::~C2SGetOneResumeMsg_313() {
  // @@protoc_insertion_point(destructor:pb.C2SGetOneResumeMsg_313)
  SharedDtor();
}

void C2SGetOneResumeMsg_313::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetOneResumeMsg_313::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetOneResumeMsg_313::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetOneResumeMsg_313_descriptor_;
}

const C2SGetOneResumeMsg_313& C2SGetOneResumeMsg_313::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetOneResumeMsg_313* C2SGetOneResumeMsg_313::default_instance_ = NULL;

C2SGetOneResumeMsg_313* C2SGetOneResumeMsg_313::New(::google::protobuf::Arena* arena) const {
  C2SGetOneResumeMsg_313* n = new C2SGetOneResumeMsg_313;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetOneResumeMsg_313::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetOneResumeMsg_313)
  userid_ = GOOGLE_ULONGLONG(0);
}

bool C2SGetOneResumeMsg_313::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetOneResumeMsg_313)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetOneResumeMsg_313)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetOneResumeMsg_313)
  return false;
#undef DO_
}

void C2SGetOneResumeMsg_313::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetOneResumeMsg_313)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->userid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SGetOneResumeMsg_313)
}

::google::protobuf::uint8* C2SGetOneResumeMsg_313::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetOneResumeMsg_313)
  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->userid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetOneResumeMsg_313)
  return target;
}

int C2SGetOneResumeMsg_313::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetOneResumeMsg_313)
  int total_size = 0;

  // optional uint64 Userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetOneResumeMsg_313::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetOneResumeMsg_313)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetOneResumeMsg_313* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetOneResumeMsg_313>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetOneResumeMsg_313)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetOneResumeMsg_313)
    MergeFrom(*source);
  }
}

void C2SGetOneResumeMsg_313::MergeFrom(const C2SGetOneResumeMsg_313& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetOneResumeMsg_313)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void C2SGetOneResumeMsg_313::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetOneResumeMsg_313)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetOneResumeMsg_313::CopyFrom(const C2SGetOneResumeMsg_313& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetOneResumeMsg_313)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetOneResumeMsg_313::IsInitialized() const {

  return true;
}

void C2SGetOneResumeMsg_313::Swap(C2SGetOneResumeMsg_313* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetOneResumeMsg_313::InternalSwap(C2SGetOneResumeMsg_313* other) {
  std::swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetOneResumeMsg_313::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetOneResumeMsg_313_descriptor_;
  metadata.reflection = C2SGetOneResumeMsg_313_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetOneResumeMsg_313

// optional uint64 Userid = 1;
void C2SGetOneResumeMsg_313::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 C2SGetOneResumeMsg_313::userid() const {
  // @@protoc_insertion_point(field_get:pb.C2SGetOneResumeMsg_313.Userid)
  return userid_;
}
 void C2SGetOneResumeMsg_313::set_userid(::google::protobuf::uint64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SGetOneResumeMsg_313.Userid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CharResultRecord::kMountidFieldNumber;
const int CharResultRecord::kFightNumFieldNumber;
const int CharResultRecord::kWinNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CharResultRecord::CharResultRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CharResultRecord)
}

void CharResultRecord::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CharResultRecord::CharResultRecord(const CharResultRecord& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.CharResultRecord)
}

void CharResultRecord::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  mountid_ = 0u;
  fightnum_ = 0u;
  winnum_ = 0u;
}

CharResultRecord::~CharResultRecord() {
  // @@protoc_insertion_point(destructor:pb.CharResultRecord)
  SharedDtor();
}

void CharResultRecord::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CharResultRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CharResultRecord::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CharResultRecord_descriptor_;
}

const CharResultRecord& CharResultRecord::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

CharResultRecord* CharResultRecord::default_instance_ = NULL;

CharResultRecord* CharResultRecord::New(::google::protobuf::Arena* arena) const {
  CharResultRecord* n = new CharResultRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CharResultRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CharResultRecord)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CharResultRecord, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CharResultRecord*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mountid_, winnum_);

#undef ZR_HELPER_
#undef ZR_

}

bool CharResultRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CharResultRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Mountid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_FightNum;
        break;
      }

      // optional uint32 FightNum = 2;
      case 2: {
        if (tag == 16) {
         parse_FightNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fightnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_WinNum;
        break;
      }

      // optional uint32 WinNum = 3;
      case 3: {
        if (tag == 24) {
         parse_WinNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &winnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CharResultRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CharResultRecord)
  return false;
#undef DO_
}

void CharResultRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CharResultRecord)
  // optional uint32 Mountid = 1;
  if (this->mountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mountid(), output);
  }

  // optional uint32 FightNum = 2;
  if (this->fightnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->fightnum(), output);
  }

  // optional uint32 WinNum = 3;
  if (this->winnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->winnum(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.CharResultRecord)
}

::google::protobuf::uint8* CharResultRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CharResultRecord)
  // optional uint32 Mountid = 1;
  if (this->mountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mountid(), target);
  }

  // optional uint32 FightNum = 2;
  if (this->fightnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->fightnum(), target);
  }

  // optional uint32 WinNum = 3;
  if (this->winnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->winnum(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.CharResultRecord)
  return target;
}

int CharResultRecord::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CharResultRecord)
  int total_size = 0;

  // optional uint32 Mountid = 1;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mountid());
  }

  // optional uint32 FightNum = 2;
  if (this->fightnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fightnum());
  }

  // optional uint32 WinNum = 3;
  if (this->winnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->winnum());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CharResultRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CharResultRecord)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CharResultRecord* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CharResultRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CharResultRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CharResultRecord)
    MergeFrom(*source);
  }
}

void CharResultRecord::MergeFrom(const CharResultRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CharResultRecord)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.mountid() != 0) {
    set_mountid(from.mountid());
  }
  if (from.fightnum() != 0) {
    set_fightnum(from.fightnum());
  }
  if (from.winnum() != 0) {
    set_winnum(from.winnum());
  }
}

void CharResultRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CharResultRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharResultRecord::CopyFrom(const CharResultRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CharResultRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharResultRecord::IsInitialized() const {

  return true;
}

void CharResultRecord::Swap(CharResultRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CharResultRecord::InternalSwap(CharResultRecord* other) {
  std::swap(mountid_, other->mountid_);
  std::swap(fightnum_, other->fightnum_);
  std::swap(winnum_, other->winnum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CharResultRecord::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CharResultRecord_descriptor_;
  metadata.reflection = CharResultRecord_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CharResultRecord

// optional uint32 Mountid = 1;
void CharResultRecord::clear_mountid() {
  mountid_ = 0u;
}
 ::google::protobuf::uint32 CharResultRecord::mountid() const {
  // @@protoc_insertion_point(field_get:pb.CharResultRecord.Mountid)
  return mountid_;
}
 void CharResultRecord::set_mountid(::google::protobuf::uint32 value) {
  
  mountid_ = value;
  // @@protoc_insertion_point(field_set:pb.CharResultRecord.Mountid)
}

// optional uint32 FightNum = 2;
void CharResultRecord::clear_fightnum() {
  fightnum_ = 0u;
}
 ::google::protobuf::uint32 CharResultRecord::fightnum() const {
  // @@protoc_insertion_point(field_get:pb.CharResultRecord.FightNum)
  return fightnum_;
}
 void CharResultRecord::set_fightnum(::google::protobuf::uint32 value) {
  
  fightnum_ = value;
  // @@protoc_insertion_point(field_set:pb.CharResultRecord.FightNum)
}

// optional uint32 WinNum = 3;
void CharResultRecord::clear_winnum() {
  winnum_ = 0u;
}
 ::google::protobuf::uint32 CharResultRecord::winnum() const {
  // @@protoc_insertion_point(field_get:pb.CharResultRecord.WinNum)
  return winnum_;
}
 void CharResultRecord::set_winnum(::google::protobuf::uint32 value) {
  
  winnum_ = value;
  // @@protoc_insertion_point(field_set:pb.CharResultRecord.WinNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetOneResumeMsg_313::kStageStarFieldNumber;
const int S2CGetOneResumeMsg_313::kMountidFieldNumber;
const int S2CGetOneResumeMsg_313::kSexFieldNumber;
const int S2CGetOneResumeMsg_313::kNameFieldNumber;
const int S2CGetOneResumeMsg_313::kTeamNameFieldNumber;
const int S2CGetOneResumeMsg_313::kSelfIntroduceFieldNumber;
const int S2CGetOneResumeMsg_313::kRiderCountFieldNumber;
const int S2CGetOneResumeMsg_313::kBattleCountFieldNumber;
const int S2CGetOneResumeMsg_313::kClothesCountFieldNumber;
const int S2CGetOneResumeMsg_313::kMVPCountFieldNumber;
const int S2CGetOneResumeMsg_313::kUIDFieldNumber;
const int S2CGetOneResumeMsg_313::kBatDatasFieldNumber;
const int S2CGetOneResumeMsg_313::kSeasonInfosFieldNumber;
const int S2CGetOneResumeMsg_313::kCharDataFieldNumber;
const int S2CGetOneResumeMsg_313::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetOneResumeMsg_313::S2CGetOneResumeMsg_313()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetOneResumeMsg_313)
}

void S2CGetOneResumeMsg_313::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetOneResumeMsg_313::S2CGetOneResumeMsg_313(const S2CGetOneResumeMsg_313& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetOneResumeMsg_313)
}

void S2CGetOneResumeMsg_313::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  stagestar_ = 0u;
  mountid_ = 0u;
  sex_ = 0u;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  teamname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selfintroduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ridercount_ = 0u;
  battlecount_ = 0u;
  clothescount_ = 0u;
  mvpcount_ = 0u;
  uid_ = GOOGLE_ULONGLONG(0);
  seasoninfos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

S2CGetOneResumeMsg_313::~S2CGetOneResumeMsg_313() {
  // @@protoc_insertion_point(destructor:pb.S2CGetOneResumeMsg_313)
  SharedDtor();
}

void S2CGetOneResumeMsg_313::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  teamname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selfintroduce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seasoninfos_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void S2CGetOneResumeMsg_313::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetOneResumeMsg_313::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetOneResumeMsg_313_descriptor_;
}

const S2CGetOneResumeMsg_313& S2CGetOneResumeMsg_313::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetOneResumeMsg_313* S2CGetOneResumeMsg_313::default_instance_ = NULL;

S2CGetOneResumeMsg_313* S2CGetOneResumeMsg_313::New(::google::protobuf::Arena* arena) const {
  S2CGetOneResumeMsg_313* n = new S2CGetOneResumeMsg_313;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetOneResumeMsg_313::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetOneResumeMsg_313)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CGetOneResumeMsg_313, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CGetOneResumeMsg_313*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(stagestar_, mountid_);
  ZR_(sex_, ridercount_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  teamname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selfintroduce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  battlecount_ = 0u;
  ZR_(clothescount_, uid_);
  mvpcount_ = 0u;
  seasoninfos_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  batdatas_.Clear();
  chardata_.Clear();
}

bool S2CGetOneResumeMsg_313::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetOneResumeMsg_313)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 StageStar = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stagestar_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Mountid;
        break;
      }

      // optional uint32 Mountid = 2;
      case 2: {
        if (tag == 16) {
         parse_Mountid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Sex;
        break;
      }

      // optional uint32 Sex = 3;
      case 3: {
        if (tag == 24) {
         parse_Sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Name;
        break;
      }

      // optional string Name = 4;
      case 4: {
        if (tag == 34) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CGetOneResumeMsg_313.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_TeamName;
        break;
      }

      // optional string TeamName = 5;
      case 5: {
        if (tag == 42) {
         parse_TeamName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_teamname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->teamname().data(), this->teamname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CGetOneResumeMsg_313.TeamName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_SelfIntroduce;
        break;
      }

      // optional string SelfIntroduce = 6;
      case 6: {
        if (tag == 50) {
         parse_SelfIntroduce:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_selfintroduce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->selfintroduce().data(), this->selfintroduce().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CGetOneResumeMsg_313.SelfIntroduce"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_RiderCount;
        break;
      }

      // optional uint32 RiderCount = 7;
      case 7: {
        if (tag == 56) {
         parse_RiderCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ridercount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_BattleCount;
        break;
      }

      // optional uint32 BattleCount = 8;
      case 8: {
        if (tag == 64) {
         parse_BattleCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battlecount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_ClothesCount;
        break;
      }

      // optional uint32 ClothesCount = 9;
      case 9: {
        if (tag == 72) {
         parse_ClothesCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clothescount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_MVPCount;
        break;
      }

      // optional uint32 MVPCount = 10;
      case 10: {
        if (tag == 80) {
         parse_MVPCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mvpcount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_UID;
        break;
      }

      // optional uint64 UID = 11;
      case 11: {
        if (tag == 88) {
         parse_UID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_BatDatas;
        break;
      }

      // repeated string BatDatas = 12;
      case 12: {
        if (tag == 98) {
         parse_BatDatas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_batdatas()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->batdatas(this->batdatas_size() - 1).data(),
            this->batdatas(this->batdatas_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CGetOneResumeMsg_313.BatDatas"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_BatDatas;
        if (input->ExpectTag(106)) goto parse_SeasonInfos;
        break;
      }

      // optional string SeasonInfos = 13;
      case 13: {
        if (tag == 106) {
         parse_SeasonInfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_seasoninfos()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->seasoninfos().data(), this->seasoninfos().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CGetOneResumeMsg_313.SeasonInfos"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_CharData;
        break;
      }

      // repeated .pb.CharResultRecord CharData = 14;
      case 14: {
        if (tag == 114) {
         parse_CharData:
          DO_(input->IncrementRecursionDepth());
         parse_loop_CharData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_chardata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_loop_CharData;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(122)) goto parse_Location;
        break;
      }

      // optional string Location = 15;
      case 15: {
        if (tag == 122) {
         parse_Location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CGetOneResumeMsg_313.Location"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetOneResumeMsg_313)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetOneResumeMsg_313)
  return false;
#undef DO_
}

void S2CGetOneResumeMsg_313::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetOneResumeMsg_313)
  // optional uint32 StageStar = 1;
  if (this->stagestar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->stagestar(), output);
  }

  // optional uint32 Mountid = 2;
  if (this->mountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mountid(), output);
  }

  // optional uint32 Sex = 3;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sex(), output);
  }

  // optional string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CGetOneResumeMsg_313.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // optional string TeamName = 5;
  if (this->teamname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->teamname().data(), this->teamname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CGetOneResumeMsg_313.TeamName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->teamname(), output);
  }

  // optional string SelfIntroduce = 6;
  if (this->selfintroduce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selfintroduce().data(), this->selfintroduce().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CGetOneResumeMsg_313.SelfIntroduce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->selfintroduce(), output);
  }

  // optional uint32 RiderCount = 7;
  if (this->ridercount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->ridercount(), output);
  }

  // optional uint32 BattleCount = 8;
  if (this->battlecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->battlecount(), output);
  }

  // optional uint32 ClothesCount = 9;
  if (this->clothescount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->clothescount(), output);
  }

  // optional uint32 MVPCount = 10;
  if (this->mvpcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->mvpcount(), output);
  }

  // optional uint64 UID = 11;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->uid(), output);
  }

  // repeated string BatDatas = 12;
  for (int i = 0; i < this->batdatas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->batdatas(i).data(), this->batdatas(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CGetOneResumeMsg_313.BatDatas");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->batdatas(i), output);
  }

  // optional string SeasonInfos = 13;
  if (this->seasoninfos().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->seasoninfos().data(), this->seasoninfos().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CGetOneResumeMsg_313.SeasonInfos");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->seasoninfos(), output);
  }

  // repeated .pb.CharResultRecord CharData = 14;
  for (unsigned int i = 0, n = this->chardata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->chardata(i), output);
  }

  // optional string Location = 15;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CGetOneResumeMsg_313.Location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->location(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetOneResumeMsg_313)
}

::google::protobuf::uint8* S2CGetOneResumeMsg_313::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetOneResumeMsg_313)
  // optional uint32 StageStar = 1;
  if (this->stagestar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->stagestar(), target);
  }

  // optional uint32 Mountid = 2;
  if (this->mountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mountid(), target);
  }

  // optional uint32 Sex = 3;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sex(), target);
  }

  // optional string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CGetOneResumeMsg_313.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // optional string TeamName = 5;
  if (this->teamname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->teamname().data(), this->teamname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CGetOneResumeMsg_313.TeamName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->teamname(), target);
  }

  // optional string SelfIntroduce = 6;
  if (this->selfintroduce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selfintroduce().data(), this->selfintroduce().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CGetOneResumeMsg_313.SelfIntroduce");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->selfintroduce(), target);
  }

  // optional uint32 RiderCount = 7;
  if (this->ridercount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->ridercount(), target);
  }

  // optional uint32 BattleCount = 8;
  if (this->battlecount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->battlecount(), target);
  }

  // optional uint32 ClothesCount = 9;
  if (this->clothescount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->clothescount(), target);
  }

  // optional uint32 MVPCount = 10;
  if (this->mvpcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->mvpcount(), target);
  }

  // optional uint64 UID = 11;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->uid(), target);
  }

  // repeated string BatDatas = 12;
  for (int i = 0; i < this->batdatas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->batdatas(i).data(), this->batdatas(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CGetOneResumeMsg_313.BatDatas");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(12, this->batdatas(i), target);
  }

  // optional string SeasonInfos = 13;
  if (this->seasoninfos().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->seasoninfos().data(), this->seasoninfos().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CGetOneResumeMsg_313.SeasonInfos");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->seasoninfos(), target);
  }

  // repeated .pb.CharResultRecord CharData = 14;
  for (unsigned int i = 0, n = this->chardata_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->chardata(i), false, target);
  }

  // optional string Location = 15;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CGetOneResumeMsg_313.Location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->location(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetOneResumeMsg_313)
  return target;
}

int S2CGetOneResumeMsg_313::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetOneResumeMsg_313)
  int total_size = 0;

  // optional uint32 StageStar = 1;
  if (this->stagestar() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stagestar());
  }

  // optional uint32 Mountid = 2;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mountid());
  }

  // optional uint32 Sex = 3;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sex());
  }

  // optional string Name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string TeamName = 5;
  if (this->teamname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->teamname());
  }

  // optional string SelfIntroduce = 6;
  if (this->selfintroduce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->selfintroduce());
  }

  // optional uint32 RiderCount = 7;
  if (this->ridercount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ridercount());
  }

  // optional uint32 BattleCount = 8;
  if (this->battlecount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battlecount());
  }

  // optional uint32 ClothesCount = 9;
  if (this->clothescount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->clothescount());
  }

  // optional uint32 MVPCount = 10;
  if (this->mvpcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mvpcount());
  }

  // optional uint64 UID = 11;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  // optional string SeasonInfos = 13;
  if (this->seasoninfos().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->seasoninfos());
  }

  // optional string Location = 15;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // repeated string BatDatas = 12;
  total_size += 1 * this->batdatas_size();
  for (int i = 0; i < this->batdatas_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->batdatas(i));
  }

  // repeated .pb.CharResultRecord CharData = 14;
  total_size += 1 * this->chardata_size();
  for (int i = 0; i < this->chardata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chardata(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetOneResumeMsg_313::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetOneResumeMsg_313)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetOneResumeMsg_313* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetOneResumeMsg_313>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetOneResumeMsg_313)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetOneResumeMsg_313)
    MergeFrom(*source);
  }
}

void S2CGetOneResumeMsg_313::MergeFrom(const S2CGetOneResumeMsg_313& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetOneResumeMsg_313)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  batdatas_.MergeFrom(from.batdatas_);
  chardata_.MergeFrom(from.chardata_);
  if (from.stagestar() != 0) {
    set_stagestar(from.stagestar());
  }
  if (from.mountid() != 0) {
    set_mountid(from.mountid());
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.teamname().size() > 0) {

    teamname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.teamname_);
  }
  if (from.selfintroduce().size() > 0) {

    selfintroduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.selfintroduce_);
  }
  if (from.ridercount() != 0) {
    set_ridercount(from.ridercount());
  }
  if (from.battlecount() != 0) {
    set_battlecount(from.battlecount());
  }
  if (from.clothescount() != 0) {
    set_clothescount(from.clothescount());
  }
  if (from.mvpcount() != 0) {
    set_mvpcount(from.mvpcount());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.seasoninfos().size() > 0) {

    seasoninfos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.seasoninfos_);
  }
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
}

void S2CGetOneResumeMsg_313::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetOneResumeMsg_313)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetOneResumeMsg_313::CopyFrom(const S2CGetOneResumeMsg_313& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetOneResumeMsg_313)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetOneResumeMsg_313::IsInitialized() const {

  return true;
}

void S2CGetOneResumeMsg_313::Swap(S2CGetOneResumeMsg_313* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetOneResumeMsg_313::InternalSwap(S2CGetOneResumeMsg_313* other) {
  std::swap(stagestar_, other->stagestar_);
  std::swap(mountid_, other->mountid_);
  std::swap(sex_, other->sex_);
  name_.Swap(&other->name_);
  teamname_.Swap(&other->teamname_);
  selfintroduce_.Swap(&other->selfintroduce_);
  std::swap(ridercount_, other->ridercount_);
  std::swap(battlecount_, other->battlecount_);
  std::swap(clothescount_, other->clothescount_);
  std::swap(mvpcount_, other->mvpcount_);
  std::swap(uid_, other->uid_);
  batdatas_.UnsafeArenaSwap(&other->batdatas_);
  seasoninfos_.Swap(&other->seasoninfos_);
  chardata_.UnsafeArenaSwap(&other->chardata_);
  location_.Swap(&other->location_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetOneResumeMsg_313::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetOneResumeMsg_313_descriptor_;
  metadata.reflection = S2CGetOneResumeMsg_313_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetOneResumeMsg_313

// optional uint32 StageStar = 1;
void S2CGetOneResumeMsg_313::clear_stagestar() {
  stagestar_ = 0u;
}
 ::google::protobuf::uint32 S2CGetOneResumeMsg_313::stagestar() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetOneResumeMsg_313.StageStar)
  return stagestar_;
}
 void S2CGetOneResumeMsg_313::set_stagestar(::google::protobuf::uint32 value) {
  
  stagestar_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetOneResumeMsg_313.StageStar)
}

// optional uint32 Mountid = 2;
void S2CGetOneResumeMsg_313::clear_mountid() {
  mountid_ = 0u;
}
 ::google::protobuf::uint32 S2CGetOneResumeMsg_313::mountid() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetOneResumeMsg_313.Mountid)
  return mountid_;
}
 void S2CGetOneResumeMsg_313::set_mountid(::google::protobuf::uint32 value) {
  
  mountid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetOneResumeMsg_313.Mountid)
}

// optional uint32 Sex = 3;
void S2CGetOneResumeMsg_313::clear_sex() {
  sex_ = 0u;
}
 ::google::protobuf::uint32 S2CGetOneResumeMsg_313::sex() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetOneResumeMsg_313.Sex)
  return sex_;
}
 void S2CGetOneResumeMsg_313::set_sex(::google::protobuf::uint32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetOneResumeMsg_313.Sex)
}

// optional string Name = 4;
void S2CGetOneResumeMsg_313::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CGetOneResumeMsg_313::name() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetOneResumeMsg_313.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CGetOneResumeMsg_313::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CGetOneResumeMsg_313.Name)
}
 void S2CGetOneResumeMsg_313::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CGetOneResumeMsg_313.Name)
}
 void S2CGetOneResumeMsg_313::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CGetOneResumeMsg_313.Name)
}
 ::std::string* S2CGetOneResumeMsg_313::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CGetOneResumeMsg_313.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CGetOneResumeMsg_313::release_name() {
  // @@protoc_insertion_point(field_release:pb.S2CGetOneResumeMsg_313.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CGetOneResumeMsg_313::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CGetOneResumeMsg_313.Name)
}

// optional string TeamName = 5;
void S2CGetOneResumeMsg_313::clear_teamname() {
  teamname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CGetOneResumeMsg_313::teamname() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetOneResumeMsg_313.TeamName)
  return teamname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CGetOneResumeMsg_313::set_teamname(const ::std::string& value) {
  
  teamname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CGetOneResumeMsg_313.TeamName)
}
 void S2CGetOneResumeMsg_313::set_teamname(const char* value) {
  
  teamname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CGetOneResumeMsg_313.TeamName)
}
 void S2CGetOneResumeMsg_313::set_teamname(const char* value, size_t size) {
  
  teamname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CGetOneResumeMsg_313.TeamName)
}
 ::std::string* S2CGetOneResumeMsg_313::mutable_teamname() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CGetOneResumeMsg_313.TeamName)
  return teamname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CGetOneResumeMsg_313::release_teamname() {
  // @@protoc_insertion_point(field_release:pb.S2CGetOneResumeMsg_313.TeamName)
  
  return teamname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CGetOneResumeMsg_313::set_allocated_teamname(::std::string* teamname) {
  if (teamname != NULL) {
    
  } else {
    
  }
  teamname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), teamname);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CGetOneResumeMsg_313.TeamName)
}

// optional string SelfIntroduce = 6;
void S2CGetOneResumeMsg_313::clear_selfintroduce() {
  selfintroduce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CGetOneResumeMsg_313::selfintroduce() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetOneResumeMsg_313.SelfIntroduce)
  return selfintroduce_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CGetOneResumeMsg_313::set_selfintroduce(const ::std::string& value) {
  
  selfintroduce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CGetOneResumeMsg_313.SelfIntroduce)
}
 void S2CGetOneResumeMsg_313::set_selfintroduce(const char* value) {
  
  selfintroduce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CGetOneResumeMsg_313.SelfIntroduce)
}
 void S2CGetOneResumeMsg_313::set_selfintroduce(const char* value, size_t size) {
  
  selfintroduce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CGetOneResumeMsg_313.SelfIntroduce)
}
 ::std::string* S2CGetOneResumeMsg_313::mutable_selfintroduce() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CGetOneResumeMsg_313.SelfIntroduce)
  return selfintroduce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CGetOneResumeMsg_313::release_selfintroduce() {
  // @@protoc_insertion_point(field_release:pb.S2CGetOneResumeMsg_313.SelfIntroduce)
  
  return selfintroduce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CGetOneResumeMsg_313::set_allocated_selfintroduce(::std::string* selfintroduce) {
  if (selfintroduce != NULL) {
    
  } else {
    
  }
  selfintroduce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), selfintroduce);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CGetOneResumeMsg_313.SelfIntroduce)
}

// optional uint32 RiderCount = 7;
void S2CGetOneResumeMsg_313::clear_ridercount() {
  ridercount_ = 0u;
}
 ::google::protobuf::uint32 S2CGetOneResumeMsg_313::ridercount() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetOneResumeMsg_313.RiderCount)
  return ridercount_;
}
 void S2CGetOneResumeMsg_313::set_ridercount(::google::protobuf::uint32 value) {
  
  ridercount_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetOneResumeMsg_313.RiderCount)
}

// optional uint32 BattleCount = 8;
void S2CGetOneResumeMsg_313::clear_battlecount() {
  battlecount_ = 0u;
}
 ::google::protobuf::uint32 S2CGetOneResumeMsg_313::battlecount() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetOneResumeMsg_313.BattleCount)
  return battlecount_;
}
 void S2CGetOneResumeMsg_313::set_battlecount(::google::protobuf::uint32 value) {
  
  battlecount_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetOneResumeMsg_313.BattleCount)
}

// optional uint32 ClothesCount = 9;
void S2CGetOneResumeMsg_313::clear_clothescount() {
  clothescount_ = 0u;
}
 ::google::protobuf::uint32 S2CGetOneResumeMsg_313::clothescount() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetOneResumeMsg_313.ClothesCount)
  return clothescount_;
}
 void S2CGetOneResumeMsg_313::set_clothescount(::google::protobuf::uint32 value) {
  
  clothescount_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetOneResumeMsg_313.ClothesCount)
}

// optional uint32 MVPCount = 10;
void S2CGetOneResumeMsg_313::clear_mvpcount() {
  mvpcount_ = 0u;
}
 ::google::protobuf::uint32 S2CGetOneResumeMsg_313::mvpcount() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetOneResumeMsg_313.MVPCount)
  return mvpcount_;
}
 void S2CGetOneResumeMsg_313::set_mvpcount(::google::protobuf::uint32 value) {
  
  mvpcount_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetOneResumeMsg_313.MVPCount)
}

// optional uint64 UID = 11;
void S2CGetOneResumeMsg_313::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CGetOneResumeMsg_313::uid() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetOneResumeMsg_313.UID)
  return uid_;
}
 void S2CGetOneResumeMsg_313::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetOneResumeMsg_313.UID)
}

// repeated string BatDatas = 12;
int S2CGetOneResumeMsg_313::batdatas_size() const {
  return batdatas_.size();
}
void S2CGetOneResumeMsg_313::clear_batdatas() {
  batdatas_.Clear();
}
 const ::std::string& S2CGetOneResumeMsg_313::batdatas(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetOneResumeMsg_313.BatDatas)
  return batdatas_.Get(index);
}
 ::std::string* S2CGetOneResumeMsg_313::mutable_batdatas(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetOneResumeMsg_313.BatDatas)
  return batdatas_.Mutable(index);
}
 void S2CGetOneResumeMsg_313::set_batdatas(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pb.S2CGetOneResumeMsg_313.BatDatas)
  batdatas_.Mutable(index)->assign(value);
}
 void S2CGetOneResumeMsg_313::set_batdatas(int index, const char* value) {
  batdatas_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.S2CGetOneResumeMsg_313.BatDatas)
}
 void S2CGetOneResumeMsg_313::set_batdatas(int index, const char* value, size_t size) {
  batdatas_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.S2CGetOneResumeMsg_313.BatDatas)
}
 ::std::string* S2CGetOneResumeMsg_313::add_batdatas() {
  // @@protoc_insertion_point(field_add_mutable:pb.S2CGetOneResumeMsg_313.BatDatas)
  return batdatas_.Add();
}
 void S2CGetOneResumeMsg_313::add_batdatas(const ::std::string& value) {
  batdatas_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pb.S2CGetOneResumeMsg_313.BatDatas)
}
 void S2CGetOneResumeMsg_313::add_batdatas(const char* value) {
  batdatas_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pb.S2CGetOneResumeMsg_313.BatDatas)
}
 void S2CGetOneResumeMsg_313::add_batdatas(const char* value, size_t size) {
  batdatas_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pb.S2CGetOneResumeMsg_313.BatDatas)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
S2CGetOneResumeMsg_313::batdatas() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetOneResumeMsg_313.BatDatas)
  return batdatas_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
S2CGetOneResumeMsg_313::mutable_batdatas() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetOneResumeMsg_313.BatDatas)
  return &batdatas_;
}

// optional string SeasonInfos = 13;
void S2CGetOneResumeMsg_313::clear_seasoninfos() {
  seasoninfos_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CGetOneResumeMsg_313::seasoninfos() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetOneResumeMsg_313.SeasonInfos)
  return seasoninfos_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CGetOneResumeMsg_313::set_seasoninfos(const ::std::string& value) {
  
  seasoninfos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CGetOneResumeMsg_313.SeasonInfos)
}
 void S2CGetOneResumeMsg_313::set_seasoninfos(const char* value) {
  
  seasoninfos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CGetOneResumeMsg_313.SeasonInfos)
}
 void S2CGetOneResumeMsg_313::set_seasoninfos(const char* value, size_t size) {
  
  seasoninfos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CGetOneResumeMsg_313.SeasonInfos)
}
 ::std::string* S2CGetOneResumeMsg_313::mutable_seasoninfos() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CGetOneResumeMsg_313.SeasonInfos)
  return seasoninfos_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CGetOneResumeMsg_313::release_seasoninfos() {
  // @@protoc_insertion_point(field_release:pb.S2CGetOneResumeMsg_313.SeasonInfos)
  
  return seasoninfos_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CGetOneResumeMsg_313::set_allocated_seasoninfos(::std::string* seasoninfos) {
  if (seasoninfos != NULL) {
    
  } else {
    
  }
  seasoninfos_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seasoninfos);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CGetOneResumeMsg_313.SeasonInfos)
}

// repeated .pb.CharResultRecord CharData = 14;
int S2CGetOneResumeMsg_313::chardata_size() const {
  return chardata_.size();
}
void S2CGetOneResumeMsg_313::clear_chardata() {
  chardata_.Clear();
}
const ::pb::CharResultRecord& S2CGetOneResumeMsg_313::chardata(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetOneResumeMsg_313.CharData)
  return chardata_.Get(index);
}
::pb::CharResultRecord* S2CGetOneResumeMsg_313::mutable_chardata(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetOneResumeMsg_313.CharData)
  return chardata_.Mutable(index);
}
::pb::CharResultRecord* S2CGetOneResumeMsg_313::add_chardata() {
  // @@protoc_insertion_point(field_add:pb.S2CGetOneResumeMsg_313.CharData)
  return chardata_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::CharResultRecord >*
S2CGetOneResumeMsg_313::mutable_chardata() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetOneResumeMsg_313.CharData)
  return &chardata_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::CharResultRecord >&
S2CGetOneResumeMsg_313::chardata() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetOneResumeMsg_313.CharData)
  return chardata_;
}

// optional string Location = 15;
void S2CGetOneResumeMsg_313::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CGetOneResumeMsg_313::location() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetOneResumeMsg_313.Location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CGetOneResumeMsg_313::set_location(const ::std::string& value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CGetOneResumeMsg_313.Location)
}
 void S2CGetOneResumeMsg_313::set_location(const char* value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CGetOneResumeMsg_313.Location)
}
 void S2CGetOneResumeMsg_313::set_location(const char* value, size_t size) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CGetOneResumeMsg_313.Location)
}
 ::std::string* S2CGetOneResumeMsg_313::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CGetOneResumeMsg_313.Location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CGetOneResumeMsg_313::release_location() {
  // @@protoc_insertion_point(field_release:pb.S2CGetOneResumeMsg_313.Location)
  
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CGetOneResumeMsg_313::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CGetOneResumeMsg_313.Location)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SChangeName_314::kUserNameFieldNumber;
const int C2SChangeName_314::kSelfIntroduceFieldNumber;
const int C2SChangeName_314::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SChangeName_314::C2SChangeName_314()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SChangeName_314)
}

void C2SChangeName_314::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SChangeName_314::C2SChangeName_314(const C2SChangeName_314& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SChangeName_314)
}

void C2SChangeName_314::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selfintroduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2SChangeName_314::~C2SChangeName_314() {
  // @@protoc_insertion_point(destructor:pb.C2SChangeName_314)
  SharedDtor();
}

void C2SChangeName_314::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selfintroduce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2SChangeName_314::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SChangeName_314::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SChangeName_314_descriptor_;
}

const C2SChangeName_314& C2SChangeName_314::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SChangeName_314* C2SChangeName_314::default_instance_ = NULL;

C2SChangeName_314* C2SChangeName_314::New(::google::protobuf::Arena* arena) const {
  C2SChangeName_314* n = new C2SChangeName_314;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SChangeName_314::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SChangeName_314)
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selfintroduce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2SChangeName_314::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SChangeName_314)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string UserName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SChangeName_314.UserName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SelfIntroduce;
        break;
      }

      // optional string SelfIntroduce = 2;
      case 2: {
        if (tag == 18) {
         parse_SelfIntroduce:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_selfintroduce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->selfintroduce().data(), this->selfintroduce().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SChangeName_314.SelfIntroduce"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Location;
        break;
      }

      // optional string Location = 3;
      case 3: {
        if (tag == 26) {
         parse_Location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SChangeName_314.Location"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SChangeName_314)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SChangeName_314)
  return false;
#undef DO_
}

void C2SChangeName_314::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SChangeName_314)
  // optional string UserName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SChangeName_314.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional string SelfIntroduce = 2;
  if (this->selfintroduce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selfintroduce().data(), this->selfintroduce().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SChangeName_314.SelfIntroduce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->selfintroduce(), output);
  }

  // optional string Location = 3;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SChangeName_314.Location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->location(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SChangeName_314)
}

::google::protobuf::uint8* C2SChangeName_314::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SChangeName_314)
  // optional string UserName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SChangeName_314.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // optional string SelfIntroduce = 2;
  if (this->selfintroduce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selfintroduce().data(), this->selfintroduce().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SChangeName_314.SelfIntroduce");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->selfintroduce(), target);
  }

  // optional string Location = 3;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SChangeName_314.Location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->location(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SChangeName_314)
  return target;
}

int C2SChangeName_314::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SChangeName_314)
  int total_size = 0;

  // optional string UserName = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional string SelfIntroduce = 2;
  if (this->selfintroduce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->selfintroduce());
  }

  // optional string Location = 3;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SChangeName_314::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SChangeName_314)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SChangeName_314* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SChangeName_314>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SChangeName_314)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SChangeName_314)
    MergeFrom(*source);
  }
}

void C2SChangeName_314::MergeFrom(const C2SChangeName_314& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SChangeName_314)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.selfintroduce().size() > 0) {

    selfintroduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.selfintroduce_);
  }
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
}

void C2SChangeName_314::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SChangeName_314)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SChangeName_314::CopyFrom(const C2SChangeName_314& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SChangeName_314)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SChangeName_314::IsInitialized() const {

  return true;
}

void C2SChangeName_314::Swap(C2SChangeName_314* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SChangeName_314::InternalSwap(C2SChangeName_314* other) {
  username_.Swap(&other->username_);
  selfintroduce_.Swap(&other->selfintroduce_);
  location_.Swap(&other->location_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SChangeName_314::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SChangeName_314_descriptor_;
  metadata.reflection = C2SChangeName_314_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SChangeName_314

// optional string UserName = 1;
void C2SChangeName_314::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SChangeName_314::username() const {
  // @@protoc_insertion_point(field_get:pb.C2SChangeName_314.UserName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SChangeName_314::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SChangeName_314.UserName)
}
 void C2SChangeName_314::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SChangeName_314.UserName)
}
 void C2SChangeName_314::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SChangeName_314.UserName)
}
 ::std::string* C2SChangeName_314::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SChangeName_314.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SChangeName_314::release_username() {
  // @@protoc_insertion_point(field_release:pb.C2SChangeName_314.UserName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SChangeName_314::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SChangeName_314.UserName)
}

// optional string SelfIntroduce = 2;
void C2SChangeName_314::clear_selfintroduce() {
  selfintroduce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SChangeName_314::selfintroduce() const {
  // @@protoc_insertion_point(field_get:pb.C2SChangeName_314.SelfIntroduce)
  return selfintroduce_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SChangeName_314::set_selfintroduce(const ::std::string& value) {
  
  selfintroduce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SChangeName_314.SelfIntroduce)
}
 void C2SChangeName_314::set_selfintroduce(const char* value) {
  
  selfintroduce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SChangeName_314.SelfIntroduce)
}
 void C2SChangeName_314::set_selfintroduce(const char* value, size_t size) {
  
  selfintroduce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SChangeName_314.SelfIntroduce)
}
 ::std::string* C2SChangeName_314::mutable_selfintroduce() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SChangeName_314.SelfIntroduce)
  return selfintroduce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SChangeName_314::release_selfintroduce() {
  // @@protoc_insertion_point(field_release:pb.C2SChangeName_314.SelfIntroduce)
  
  return selfintroduce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SChangeName_314::set_allocated_selfintroduce(::std::string* selfintroduce) {
  if (selfintroduce != NULL) {
    
  } else {
    
  }
  selfintroduce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), selfintroduce);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SChangeName_314.SelfIntroduce)
}

// optional string Location = 3;
void C2SChangeName_314::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SChangeName_314::location() const {
  // @@protoc_insertion_point(field_get:pb.C2SChangeName_314.Location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SChangeName_314::set_location(const ::std::string& value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SChangeName_314.Location)
}
 void C2SChangeName_314::set_location(const char* value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SChangeName_314.Location)
}
 void C2SChangeName_314::set_location(const char* value, size_t size) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SChangeName_314.Location)
}
 ::std::string* C2SChangeName_314::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SChangeName_314.Location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SChangeName_314::release_location() {
  // @@protoc_insertion_point(field_release:pb.C2SChangeName_314.Location)
  
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SChangeName_314::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SChangeName_314.Location)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SeasonInfo::kSidFieldNumber;
const int SeasonInfo::kSeasonNameFieldNumber;
const int SeasonInfo::kStartTickFieldNumber;
const int SeasonInfo::kEndTickFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SeasonInfo::SeasonInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.SeasonInfo)
}

void SeasonInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SeasonInfo::SeasonInfo(const SeasonInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.SeasonInfo)
}

void SeasonInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seasonname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  starttick_ = 0u;
  endtick_ = 0u;
}

SeasonInfo::~SeasonInfo() {
  // @@protoc_insertion_point(destructor:pb.SeasonInfo)
  SharedDtor();
}

void SeasonInfo::SharedDtor() {
  sid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seasonname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SeasonInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SeasonInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SeasonInfo_descriptor_;
}

const SeasonInfo& SeasonInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

SeasonInfo* SeasonInfo::default_instance_ = NULL;

SeasonInfo* SeasonInfo::New(::google::protobuf::Arena* arena) const {
  SeasonInfo* n = new SeasonInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SeasonInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SeasonInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SeasonInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SeasonInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(starttick_, endtick_);
  sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seasonname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool SeasonInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.SeasonInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Sid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sid().data(), this->sid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.SeasonInfo.Sid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SeasonName;
        break;
      }

      // optional string SeasonName = 2;
      case 2: {
        if (tag == 18) {
         parse_SeasonName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_seasonname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->seasonname().data(), this->seasonname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.SeasonInfo.SeasonName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_StartTick;
        break;
      }

      // optional uint32 StartTick = 3;
      case 3: {
        if (tag == 24) {
         parse_StartTick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starttick_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_EndTick;
        break;
      }

      // optional uint32 EndTick = 4;
      case 4: {
        if (tag == 32) {
         parse_EndTick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &endtick_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.SeasonInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.SeasonInfo)
  return false;
#undef DO_
}

void SeasonInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.SeasonInfo)
  // optional string Sid = 1;
  if (this->sid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sid().data(), this->sid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SeasonInfo.Sid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sid(), output);
  }

  // optional string SeasonName = 2;
  if (this->seasonname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->seasonname().data(), this->seasonname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SeasonInfo.SeasonName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->seasonname(), output);
  }

  // optional uint32 StartTick = 3;
  if (this->starttick() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->starttick(), output);
  }

  // optional uint32 EndTick = 4;
  if (this->endtick() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->endtick(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.SeasonInfo)
}

::google::protobuf::uint8* SeasonInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SeasonInfo)
  // optional string Sid = 1;
  if (this->sid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sid().data(), this->sid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SeasonInfo.Sid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sid(), target);
  }

  // optional string SeasonName = 2;
  if (this->seasonname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->seasonname().data(), this->seasonname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.SeasonInfo.SeasonName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->seasonname(), target);
  }

  // optional uint32 StartTick = 3;
  if (this->starttick() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->starttick(), target);
  }

  // optional uint32 EndTick = 4;
  if (this->endtick() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->endtick(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.SeasonInfo)
  return target;
}

int SeasonInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SeasonInfo)
  int total_size = 0;

  // optional string Sid = 1;
  if (this->sid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sid());
  }

  // optional string SeasonName = 2;
  if (this->seasonname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->seasonname());
  }

  // optional uint32 StartTick = 3;
  if (this->starttick() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->starttick());
  }

  // optional uint32 EndTick = 4;
  if (this->endtick() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->endtick());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SeasonInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SeasonInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SeasonInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SeasonInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SeasonInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SeasonInfo)
    MergeFrom(*source);
  }
}

void SeasonInfo::MergeFrom(const SeasonInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SeasonInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sid().size() > 0) {

    sid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sid_);
  }
  if (from.seasonname().size() > 0) {

    seasonname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.seasonname_);
  }
  if (from.starttick() != 0) {
    set_starttick(from.starttick());
  }
  if (from.endtick() != 0) {
    set_endtick(from.endtick());
  }
}

void SeasonInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SeasonInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SeasonInfo::CopyFrom(const SeasonInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SeasonInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SeasonInfo::IsInitialized() const {

  return true;
}

void SeasonInfo::Swap(SeasonInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SeasonInfo::InternalSwap(SeasonInfo* other) {
  sid_.Swap(&other->sid_);
  seasonname_.Swap(&other->seasonname_);
  std::swap(starttick_, other->starttick_);
  std::swap(endtick_, other->endtick_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SeasonInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SeasonInfo_descriptor_;
  metadata.reflection = SeasonInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SeasonInfo

// optional string Sid = 1;
void SeasonInfo::clear_sid() {
  sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SeasonInfo::sid() const {
  // @@protoc_insertion_point(field_get:pb.SeasonInfo.Sid)
  return sid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SeasonInfo::set_sid(const ::std::string& value) {
  
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.SeasonInfo.Sid)
}
 void SeasonInfo::set_sid(const char* value) {
  
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.SeasonInfo.Sid)
}
 void SeasonInfo::set_sid(const char* value, size_t size) {
  
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.SeasonInfo.Sid)
}
 ::std::string* SeasonInfo::mutable_sid() {
  
  // @@protoc_insertion_point(field_mutable:pb.SeasonInfo.Sid)
  return sid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SeasonInfo::release_sid() {
  // @@protoc_insertion_point(field_release:pb.SeasonInfo.Sid)
  
  return sid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SeasonInfo::set_allocated_sid(::std::string* sid) {
  if (sid != NULL) {
    
  } else {
    
  }
  sid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sid);
  // @@protoc_insertion_point(field_set_allocated:pb.SeasonInfo.Sid)
}

// optional string SeasonName = 2;
void SeasonInfo::clear_seasonname() {
  seasonname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SeasonInfo::seasonname() const {
  // @@protoc_insertion_point(field_get:pb.SeasonInfo.SeasonName)
  return seasonname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SeasonInfo::set_seasonname(const ::std::string& value) {
  
  seasonname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.SeasonInfo.SeasonName)
}
 void SeasonInfo::set_seasonname(const char* value) {
  
  seasonname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.SeasonInfo.SeasonName)
}
 void SeasonInfo::set_seasonname(const char* value, size_t size) {
  
  seasonname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.SeasonInfo.SeasonName)
}
 ::std::string* SeasonInfo::mutable_seasonname() {
  
  // @@protoc_insertion_point(field_mutable:pb.SeasonInfo.SeasonName)
  return seasonname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SeasonInfo::release_seasonname() {
  // @@protoc_insertion_point(field_release:pb.SeasonInfo.SeasonName)
  
  return seasonname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SeasonInfo::set_allocated_seasonname(::std::string* seasonname) {
  if (seasonname != NULL) {
    
  } else {
    
  }
  seasonname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seasonname);
  // @@protoc_insertion_point(field_set_allocated:pb.SeasonInfo.SeasonName)
}

// optional uint32 StartTick = 3;
void SeasonInfo::clear_starttick() {
  starttick_ = 0u;
}
 ::google::protobuf::uint32 SeasonInfo::starttick() const {
  // @@protoc_insertion_point(field_get:pb.SeasonInfo.StartTick)
  return starttick_;
}
 void SeasonInfo::set_starttick(::google::protobuf::uint32 value) {
  
  starttick_ = value;
  // @@protoc_insertion_point(field_set:pb.SeasonInfo.StartTick)
}

// optional uint32 EndTick = 4;
void SeasonInfo::clear_endtick() {
  endtick_ = 0u;
}
 ::google::protobuf::uint32 SeasonInfo::endtick() const {
  // @@protoc_insertion_point(field_get:pb.SeasonInfo.EndTick)
  return endtick_;
}
 void SeasonInfo::set_endtick(::google::protobuf::uint32 value) {
  
  endtick_ = value;
  // @@protoc_insertion_point(field_set:pb.SeasonInfo.EndTick)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CStageSeasonStart_320::kInfoFieldNumber;
const int S2CStageSeasonStart_320::kShowInhFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CStageSeasonStart_320::S2CStageSeasonStart_320()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CStageSeasonStart_320)
}

void S2CStageSeasonStart_320::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  info_ = const_cast< ::pb::SeasonInfo*>(&::pb::SeasonInfo::default_instance());
}

S2CStageSeasonStart_320::S2CStageSeasonStart_320(const S2CStageSeasonStart_320& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CStageSeasonStart_320)
}

void S2CStageSeasonStart_320::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  info_ = NULL;
  showinh_ = false;
}

S2CStageSeasonStart_320::~S2CStageSeasonStart_320() {
  // @@protoc_insertion_point(destructor:pb.S2CStageSeasonStart_320)
  SharedDtor();
}

void S2CStageSeasonStart_320::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void S2CStageSeasonStart_320::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CStageSeasonStart_320::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CStageSeasonStart_320_descriptor_;
}

const S2CStageSeasonStart_320& S2CStageSeasonStart_320::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CStageSeasonStart_320* S2CStageSeasonStart_320::default_instance_ = NULL;

S2CStageSeasonStart_320* S2CStageSeasonStart_320::New(::google::protobuf::Arena* arena) const {
  S2CStageSeasonStart_320* n = new S2CStageSeasonStart_320;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CStageSeasonStart_320::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CStageSeasonStart_320)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
  showinh_ = false;
}

bool S2CStageSeasonStart_320::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CStageSeasonStart_320)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.SeasonInfo Info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ShowInh;
        break;
      }

      // optional bool ShowInh = 2;
      case 2: {
        if (tag == 16) {
         parse_ShowInh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &showinh_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CStageSeasonStart_320)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CStageSeasonStart_320)
  return false;
#undef DO_
}

void S2CStageSeasonStart_320::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CStageSeasonStart_320)
  // optional .pb.SeasonInfo Info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // optional bool ShowInh = 2;
  if (this->showinh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->showinh(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CStageSeasonStart_320)
}

::google::protobuf::uint8* S2CStageSeasonStart_320::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CStageSeasonStart_320)
  // optional .pb.SeasonInfo Info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, false, target);
  }

  // optional bool ShowInh = 2;
  if (this->showinh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->showinh(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CStageSeasonStart_320)
  return target;
}

int S2CStageSeasonStart_320::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CStageSeasonStart_320)
  int total_size = 0;

  // optional .pb.SeasonInfo Info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // optional bool ShowInh = 2;
  if (this->showinh() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CStageSeasonStart_320::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CStageSeasonStart_320)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CStageSeasonStart_320* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CStageSeasonStart_320>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CStageSeasonStart_320)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CStageSeasonStart_320)
    MergeFrom(*source);
  }
}

void S2CStageSeasonStart_320::MergeFrom(const S2CStageSeasonStart_320& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CStageSeasonStart_320)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_info()) {
    mutable_info()->::pb::SeasonInfo::MergeFrom(from.info());
  }
  if (from.showinh() != 0) {
    set_showinh(from.showinh());
  }
}

void S2CStageSeasonStart_320::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CStageSeasonStart_320)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CStageSeasonStart_320::CopyFrom(const S2CStageSeasonStart_320& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CStageSeasonStart_320)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CStageSeasonStart_320::IsInitialized() const {

  return true;
}

void S2CStageSeasonStart_320::Swap(S2CStageSeasonStart_320* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CStageSeasonStart_320::InternalSwap(S2CStageSeasonStart_320* other) {
  std::swap(info_, other->info_);
  std::swap(showinh_, other->showinh_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CStageSeasonStart_320::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CStageSeasonStart_320_descriptor_;
  metadata.reflection = S2CStageSeasonStart_320_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CStageSeasonStart_320

// optional .pb.SeasonInfo Info = 1;
bool S2CStageSeasonStart_320::has_info() const {
  return !_is_default_instance_ && info_ != NULL;
}
void S2CStageSeasonStart_320::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::pb::SeasonInfo& S2CStageSeasonStart_320::info() const {
  // @@protoc_insertion_point(field_get:pb.S2CStageSeasonStart_320.Info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
::pb::SeasonInfo* S2CStageSeasonStart_320::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::pb::SeasonInfo;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CStageSeasonStart_320.Info)
  return info_;
}
::pb::SeasonInfo* S2CStageSeasonStart_320::release_info() {
  // @@protoc_insertion_point(field_release:pb.S2CStageSeasonStart_320.Info)
  
  ::pb::SeasonInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void S2CStageSeasonStart_320::set_allocated_info(::pb::SeasonInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CStageSeasonStart_320.Info)
}

// optional bool ShowInh = 2;
void S2CStageSeasonStart_320::clear_showinh() {
  showinh_ = false;
}
 bool S2CStageSeasonStart_320::showinh() const {
  // @@protoc_insertion_point(field_get:pb.S2CStageSeasonStart_320.ShowInh)
  return showinh_;
}
 void S2CStageSeasonStart_320::set_showinh(bool value) {
  
  showinh_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CStageSeasonStart_320.ShowInh)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CStageSeasonOver_321::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CStageSeasonOver_321::S2CStageSeasonOver_321()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CStageSeasonOver_321)
}

void S2CStageSeasonOver_321::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  info_ = const_cast< ::pb::SeasonInfo*>(&::pb::SeasonInfo::default_instance());
}

S2CStageSeasonOver_321::S2CStageSeasonOver_321(const S2CStageSeasonOver_321& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CStageSeasonOver_321)
}

void S2CStageSeasonOver_321::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  info_ = NULL;
}

S2CStageSeasonOver_321::~S2CStageSeasonOver_321() {
  // @@protoc_insertion_point(destructor:pb.S2CStageSeasonOver_321)
  SharedDtor();
}

void S2CStageSeasonOver_321::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void S2CStageSeasonOver_321::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CStageSeasonOver_321::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CStageSeasonOver_321_descriptor_;
}

const S2CStageSeasonOver_321& S2CStageSeasonOver_321::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CStageSeasonOver_321* S2CStageSeasonOver_321::default_instance_ = NULL;

S2CStageSeasonOver_321* S2CStageSeasonOver_321::New(::google::protobuf::Arena* arena) const {
  S2CStageSeasonOver_321* n = new S2CStageSeasonOver_321;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CStageSeasonOver_321::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CStageSeasonOver_321)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}

bool S2CStageSeasonOver_321::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CStageSeasonOver_321)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.SeasonInfo Info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CStageSeasonOver_321)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CStageSeasonOver_321)
  return false;
#undef DO_
}

void S2CStageSeasonOver_321::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CStageSeasonOver_321)
  // optional .pb.SeasonInfo Info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CStageSeasonOver_321)
}

::google::protobuf::uint8* S2CStageSeasonOver_321::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CStageSeasonOver_321)
  // optional .pb.SeasonInfo Info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CStageSeasonOver_321)
  return target;
}

int S2CStageSeasonOver_321::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CStageSeasonOver_321)
  int total_size = 0;

  // optional .pb.SeasonInfo Info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CStageSeasonOver_321::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CStageSeasonOver_321)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CStageSeasonOver_321* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CStageSeasonOver_321>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CStageSeasonOver_321)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CStageSeasonOver_321)
    MergeFrom(*source);
  }
}

void S2CStageSeasonOver_321::MergeFrom(const S2CStageSeasonOver_321& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CStageSeasonOver_321)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_info()) {
    mutable_info()->::pb::SeasonInfo::MergeFrom(from.info());
  }
}

void S2CStageSeasonOver_321::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CStageSeasonOver_321)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CStageSeasonOver_321::CopyFrom(const S2CStageSeasonOver_321& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CStageSeasonOver_321)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CStageSeasonOver_321::IsInitialized() const {

  return true;
}

void S2CStageSeasonOver_321::Swap(S2CStageSeasonOver_321* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CStageSeasonOver_321::InternalSwap(S2CStageSeasonOver_321* other) {
  std::swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CStageSeasonOver_321::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CStageSeasonOver_321_descriptor_;
  metadata.reflection = S2CStageSeasonOver_321_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CStageSeasonOver_321

// optional .pb.SeasonInfo Info = 1;
bool S2CStageSeasonOver_321::has_info() const {
  return !_is_default_instance_ && info_ != NULL;
}
void S2CStageSeasonOver_321::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::pb::SeasonInfo& S2CStageSeasonOver_321::info() const {
  // @@protoc_insertion_point(field_get:pb.S2CStageSeasonOver_321.Info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
::pb::SeasonInfo* S2CStageSeasonOver_321::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::pb::SeasonInfo;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CStageSeasonOver_321.Info)
  return info_;
}
::pb::SeasonInfo* S2CStageSeasonOver_321::release_info() {
  // @@protoc_insertion_point(field_release:pb.S2CStageSeasonOver_321.Info)
  
  ::pb::SeasonInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void S2CStageSeasonOver_321::set_allocated_info(::pb::SeasonInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CStageSeasonOver_321.Info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CStageSeasonEnd_322::kRewardStrFieldNumber;
const int S2CStageSeasonEnd_322::kInfoFieldNumber;
const int S2CStageSeasonEnd_322::kMaxStarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CStageSeasonEnd_322::S2CStageSeasonEnd_322()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CStageSeasonEnd_322)
}

void S2CStageSeasonEnd_322::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  info_ = const_cast< ::pb::SeasonInfo*>(&::pb::SeasonInfo::default_instance());
}

S2CStageSeasonEnd_322::S2CStageSeasonEnd_322(const S2CStageSeasonEnd_322& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CStageSeasonEnd_322)
}

void S2CStageSeasonEnd_322::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rewardstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_ = NULL;
  maxstar_ = 0u;
}

S2CStageSeasonEnd_322::~S2CStageSeasonEnd_322() {
  // @@protoc_insertion_point(destructor:pb.S2CStageSeasonEnd_322)
  SharedDtor();
}

void S2CStageSeasonEnd_322::SharedDtor() {
  rewardstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete info_;
  }
}

void S2CStageSeasonEnd_322::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CStageSeasonEnd_322::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CStageSeasonEnd_322_descriptor_;
}

const S2CStageSeasonEnd_322& S2CStageSeasonEnd_322::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CStageSeasonEnd_322* S2CStageSeasonEnd_322::default_instance_ = NULL;

S2CStageSeasonEnd_322* S2CStageSeasonEnd_322::New(::google::protobuf::Arena* arena) const {
  S2CStageSeasonEnd_322* n = new S2CStageSeasonEnd_322;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CStageSeasonEnd_322::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CStageSeasonEnd_322)
  rewardstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
  maxstar_ = 0u;
}

bool S2CStageSeasonEnd_322::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CStageSeasonEnd_322)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RewardStr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rewardstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rewardstr().data(), this->rewardstr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CStageSeasonEnd_322.RewardStr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Info;
        break;
      }

      // optional .pb.SeasonInfo Info = 2;
      case 2: {
        if (tag == 18) {
         parse_Info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_MaxStar;
        break;
      }

      // optional uint32 MaxStar = 3;
      case 3: {
        if (tag == 24) {
         parse_MaxStar:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxstar_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CStageSeasonEnd_322)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CStageSeasonEnd_322)
  return false;
#undef DO_
}

void S2CStageSeasonEnd_322::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CStageSeasonEnd_322)
  // optional string RewardStr = 1;
  if (this->rewardstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rewardstr().data(), this->rewardstr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CStageSeasonEnd_322.RewardStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->rewardstr(), output);
  }

  // optional .pb.SeasonInfo Info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  // optional uint32 MaxStar = 3;
  if (this->maxstar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->maxstar(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CStageSeasonEnd_322)
}

::google::protobuf::uint8* S2CStageSeasonEnd_322::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CStageSeasonEnd_322)
  // optional string RewardStr = 1;
  if (this->rewardstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rewardstr().data(), this->rewardstr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CStageSeasonEnd_322.RewardStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rewardstr(), target);
  }

  // optional .pb.SeasonInfo Info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, false, target);
  }

  // optional uint32 MaxStar = 3;
  if (this->maxstar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->maxstar(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CStageSeasonEnd_322)
  return target;
}

int S2CStageSeasonEnd_322::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CStageSeasonEnd_322)
  int total_size = 0;

  // optional string RewardStr = 1;
  if (this->rewardstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rewardstr());
  }

  // optional .pb.SeasonInfo Info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // optional uint32 MaxStar = 3;
  if (this->maxstar() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxstar());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CStageSeasonEnd_322::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CStageSeasonEnd_322)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CStageSeasonEnd_322* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CStageSeasonEnd_322>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CStageSeasonEnd_322)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CStageSeasonEnd_322)
    MergeFrom(*source);
  }
}

void S2CStageSeasonEnd_322::MergeFrom(const S2CStageSeasonEnd_322& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CStageSeasonEnd_322)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rewardstr().size() > 0) {

    rewardstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rewardstr_);
  }
  if (from.has_info()) {
    mutable_info()->::pb::SeasonInfo::MergeFrom(from.info());
  }
  if (from.maxstar() != 0) {
    set_maxstar(from.maxstar());
  }
}

void S2CStageSeasonEnd_322::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CStageSeasonEnd_322)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CStageSeasonEnd_322::CopyFrom(const S2CStageSeasonEnd_322& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CStageSeasonEnd_322)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CStageSeasonEnd_322::IsInitialized() const {

  return true;
}

void S2CStageSeasonEnd_322::Swap(S2CStageSeasonEnd_322* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CStageSeasonEnd_322::InternalSwap(S2CStageSeasonEnd_322* other) {
  rewardstr_.Swap(&other->rewardstr_);
  std::swap(info_, other->info_);
  std::swap(maxstar_, other->maxstar_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CStageSeasonEnd_322::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CStageSeasonEnd_322_descriptor_;
  metadata.reflection = S2CStageSeasonEnd_322_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CStageSeasonEnd_322

// optional string RewardStr = 1;
void S2CStageSeasonEnd_322::clear_rewardstr() {
  rewardstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CStageSeasonEnd_322::rewardstr() const {
  // @@protoc_insertion_point(field_get:pb.S2CStageSeasonEnd_322.RewardStr)
  return rewardstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CStageSeasonEnd_322::set_rewardstr(const ::std::string& value) {
  
  rewardstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CStageSeasonEnd_322.RewardStr)
}
 void S2CStageSeasonEnd_322::set_rewardstr(const char* value) {
  
  rewardstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CStageSeasonEnd_322.RewardStr)
}
 void S2CStageSeasonEnd_322::set_rewardstr(const char* value, size_t size) {
  
  rewardstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CStageSeasonEnd_322.RewardStr)
}
 ::std::string* S2CStageSeasonEnd_322::mutable_rewardstr() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CStageSeasonEnd_322.RewardStr)
  return rewardstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CStageSeasonEnd_322::release_rewardstr() {
  // @@protoc_insertion_point(field_release:pb.S2CStageSeasonEnd_322.RewardStr)
  
  return rewardstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CStageSeasonEnd_322::set_allocated_rewardstr(::std::string* rewardstr) {
  if (rewardstr != NULL) {
    
  } else {
    
  }
  rewardstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rewardstr);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CStageSeasonEnd_322.RewardStr)
}

// optional .pb.SeasonInfo Info = 2;
bool S2CStageSeasonEnd_322::has_info() const {
  return !_is_default_instance_ && info_ != NULL;
}
void S2CStageSeasonEnd_322::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::pb::SeasonInfo& S2CStageSeasonEnd_322::info() const {
  // @@protoc_insertion_point(field_get:pb.S2CStageSeasonEnd_322.Info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
::pb::SeasonInfo* S2CStageSeasonEnd_322::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::pb::SeasonInfo;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CStageSeasonEnd_322.Info)
  return info_;
}
::pb::SeasonInfo* S2CStageSeasonEnd_322::release_info() {
  // @@protoc_insertion_point(field_release:pb.S2CStageSeasonEnd_322.Info)
  
  ::pb::SeasonInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void S2CStageSeasonEnd_322::set_allocated_info(::pb::SeasonInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CStageSeasonEnd_322.Info)
}

// optional uint32 MaxStar = 3;
void S2CStageSeasonEnd_322::clear_maxstar() {
  maxstar_ = 0u;
}
 ::google::protobuf::uint32 S2CStageSeasonEnd_322::maxstar() const {
  // @@protoc_insertion_point(field_get:pb.S2CStageSeasonEnd_322.MaxStar)
  return maxstar_;
}
 void S2CStageSeasonEnd_322::set_maxstar(::google::protobuf::uint32 value) {
  
  maxstar_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CStageSeasonEnd_322.MaxStar)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetSeasonInfo_323::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetSeasonInfo_323::S2CGetSeasonInfo_323()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetSeasonInfo_323)
}

void S2CGetSeasonInfo_323::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  info_ = const_cast< ::pb::SeasonInfo*>(&::pb::SeasonInfo::default_instance());
}

S2CGetSeasonInfo_323::S2CGetSeasonInfo_323(const S2CGetSeasonInfo_323& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetSeasonInfo_323)
}

void S2CGetSeasonInfo_323::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  info_ = NULL;
}

S2CGetSeasonInfo_323::~S2CGetSeasonInfo_323() {
  // @@protoc_insertion_point(destructor:pb.S2CGetSeasonInfo_323)
  SharedDtor();
}

void S2CGetSeasonInfo_323::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void S2CGetSeasonInfo_323::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetSeasonInfo_323::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetSeasonInfo_323_descriptor_;
}

const S2CGetSeasonInfo_323& S2CGetSeasonInfo_323::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetSeasonInfo_323* S2CGetSeasonInfo_323::default_instance_ = NULL;

S2CGetSeasonInfo_323* S2CGetSeasonInfo_323::New(::google::protobuf::Arena* arena) const {
  S2CGetSeasonInfo_323* n = new S2CGetSeasonInfo_323;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetSeasonInfo_323::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetSeasonInfo_323)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}

bool S2CGetSeasonInfo_323::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetSeasonInfo_323)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.SeasonInfo Info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetSeasonInfo_323)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetSeasonInfo_323)
  return false;
#undef DO_
}

void S2CGetSeasonInfo_323::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetSeasonInfo_323)
  // optional .pb.SeasonInfo Info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetSeasonInfo_323)
}

::google::protobuf::uint8* S2CGetSeasonInfo_323::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetSeasonInfo_323)
  // optional .pb.SeasonInfo Info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetSeasonInfo_323)
  return target;
}

int S2CGetSeasonInfo_323::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetSeasonInfo_323)
  int total_size = 0;

  // optional .pb.SeasonInfo Info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetSeasonInfo_323::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetSeasonInfo_323)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetSeasonInfo_323* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetSeasonInfo_323>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetSeasonInfo_323)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetSeasonInfo_323)
    MergeFrom(*source);
  }
}

void S2CGetSeasonInfo_323::MergeFrom(const S2CGetSeasonInfo_323& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetSeasonInfo_323)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_info()) {
    mutable_info()->::pb::SeasonInfo::MergeFrom(from.info());
  }
}

void S2CGetSeasonInfo_323::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetSeasonInfo_323)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetSeasonInfo_323::CopyFrom(const S2CGetSeasonInfo_323& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetSeasonInfo_323)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetSeasonInfo_323::IsInitialized() const {

  return true;
}

void S2CGetSeasonInfo_323::Swap(S2CGetSeasonInfo_323* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetSeasonInfo_323::InternalSwap(S2CGetSeasonInfo_323* other) {
  std::swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetSeasonInfo_323::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetSeasonInfo_323_descriptor_;
  metadata.reflection = S2CGetSeasonInfo_323_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetSeasonInfo_323

// optional .pb.SeasonInfo Info = 1;
bool S2CGetSeasonInfo_323::has_info() const {
  return !_is_default_instance_ && info_ != NULL;
}
void S2CGetSeasonInfo_323::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::pb::SeasonInfo& S2CGetSeasonInfo_323::info() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetSeasonInfo_323.Info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
::pb::SeasonInfo* S2CGetSeasonInfo_323::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::pb::SeasonInfo;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CGetSeasonInfo_323.Info)
  return info_;
}
::pb::SeasonInfo* S2CGetSeasonInfo_323::release_info() {
  // @@protoc_insertion_point(field_release:pb.S2CGetSeasonInfo_323.Info)
  
  ::pb::SeasonInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void S2CGetSeasonInfo_323::set_allocated_info(::pb::SeasonInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CGetSeasonInfo_323.Info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetSeasonInfo_323::C2SGetSeasonInfo_323()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetSeasonInfo_323)
}

void C2SGetSeasonInfo_323::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetSeasonInfo_323::C2SGetSeasonInfo_323(const C2SGetSeasonInfo_323& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetSeasonInfo_323)
}

void C2SGetSeasonInfo_323::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGetSeasonInfo_323::~C2SGetSeasonInfo_323() {
  // @@protoc_insertion_point(destructor:pb.C2SGetSeasonInfo_323)
  SharedDtor();
}

void C2SGetSeasonInfo_323::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetSeasonInfo_323::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetSeasonInfo_323::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetSeasonInfo_323_descriptor_;
}

const C2SGetSeasonInfo_323& C2SGetSeasonInfo_323::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetSeasonInfo_323* C2SGetSeasonInfo_323::default_instance_ = NULL;

C2SGetSeasonInfo_323* C2SGetSeasonInfo_323::New(::google::protobuf::Arena* arena) const {
  C2SGetSeasonInfo_323* n = new C2SGetSeasonInfo_323;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetSeasonInfo_323::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetSeasonInfo_323)
}

bool C2SGetSeasonInfo_323::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetSeasonInfo_323)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetSeasonInfo_323)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetSeasonInfo_323)
  return false;
#undef DO_
}

void C2SGetSeasonInfo_323::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetSeasonInfo_323)
  // @@protoc_insertion_point(serialize_end:pb.C2SGetSeasonInfo_323)
}

::google::protobuf::uint8* C2SGetSeasonInfo_323::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetSeasonInfo_323)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetSeasonInfo_323)
  return target;
}

int C2SGetSeasonInfo_323::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetSeasonInfo_323)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetSeasonInfo_323::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetSeasonInfo_323)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetSeasonInfo_323* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetSeasonInfo_323>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetSeasonInfo_323)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetSeasonInfo_323)
    MergeFrom(*source);
  }
}

void C2SGetSeasonInfo_323::MergeFrom(const C2SGetSeasonInfo_323& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetSeasonInfo_323)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SGetSeasonInfo_323::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetSeasonInfo_323)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetSeasonInfo_323::CopyFrom(const C2SGetSeasonInfo_323& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetSeasonInfo_323)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetSeasonInfo_323::IsInitialized() const {

  return true;
}

void C2SGetSeasonInfo_323::Swap(C2SGetSeasonInfo_323* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetSeasonInfo_323::InternalSwap(C2SGetSeasonInfo_323* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetSeasonInfo_323::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetSeasonInfo_323_descriptor_;
  metadata.reflection = C2SGetSeasonInfo_323_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetSeasonInfo_323

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneContestInfo::kContestIdFieldNumber;
const int OneContestInfo::kShowContestFieldNumber;
const int OneContestInfo::kStartFightFieldNumber;
const int OneContestInfo::kContestLevelFieldNumber;
const int OneContestInfo::kContestNameFieldNumber;
const int OneContestInfo::kContestDescribeFieldNumber;
const int OneContestInfo::kNewTeamsInfoFieldNumber;
const int OneContestInfo::kMapIdFieldNumber;
const int OneContestInfo::kMaxTeamNumFieldNumber;
const int OneContestInfo::kSetLoopFirstFieldNumber;
const int OneContestInfo::kSetLoopBOTimesFieldNumber;
const int OneContestInfo::kSetFinalBOTimesFieldNumber;
const int OneContestInfo::kDeathFightBOTimesFieldNumber;
const int OneContestInfo::kSetEveryFightWaitTimeFixedFieldNumber;
const int OneContestInfo::kCreatePlayerNameFieldNumber;
const int OneContestInfo::kMaybeContestFightMintues1FieldNumber;
const int OneContestInfo::kMaybeContestFightMintues2FieldNumber;
const int OneContestInfo::kCreatePlayerUidFieldNumber;
const int OneContestInfo::kSettingCodeFieldNumber;
const int OneContestInfo::kLoopCircleWaitTimesFieldNumber;
const int OneContestInfo::kLoopFightWaitTimesFieldNumber;
const int OneContestInfo::kFinalOrDeathCircleWaitTimesFieldNumber;
const int OneContestInfo::kFinalOrDeathFightWaitTimesFieldNumber;
const int OneContestInfo::kGiveupRidsFieldNumber;
const int OneContestInfo::kSinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneContestInfo::OneContestInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.OneContestInfo)
}

void OneContestInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  sinfo_ = const_cast< ::pb::OneContestSimpleInfo*>(&::pb::OneContestSimpleInfo::default_instance());
}

OneContestInfo::OneContestInfo(const OneContestInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.OneContestInfo)
}

void OneContestInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  contestid_ = 0u;
  showcontest_ = false;
  startfight_ = false;
  contestlevel_ = 0u;
  contestname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contestdescribe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapid_ = 0u;
  maxteamnum_ = 0u;
  setloopfirst_ = false;
  setloopbotimes_ = 0u;
  setfinalbotimes_ = 0u;
  deathfightbotimes_ = 0u;
  seteveryfightwaittimefixed_ = false;
  createplayername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maybecontestfightmintues1_ = 0u;
  maybecontestfightmintues2_ = 0u;
  createplayeruid_ = GOOGLE_ULONGLONG(0);
  settingcode_ = 0u;
  loopcirclewaittimes_ = 0u;
  loopfightwaittimes_ = 0u;
  finalordeathcirclewaittimes_ = 0u;
  finalordeathfightwaittimes_ = 0u;
  sinfo_ = NULL;
}

OneContestInfo::~OneContestInfo() {
  // @@protoc_insertion_point(destructor:pb.OneContestInfo)
  SharedDtor();
}

void OneContestInfo::SharedDtor() {
  contestname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contestdescribe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createplayername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete sinfo_;
  }
}

void OneContestInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneContestInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OneContestInfo_descriptor_;
}

const OneContestInfo& OneContestInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

OneContestInfo* OneContestInfo::default_instance_ = NULL;

OneContestInfo* OneContestInfo::New(::google::protobuf::Arena* arena) const {
  OneContestInfo* n = new OneContestInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneContestInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.OneContestInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OneContestInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OneContestInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(contestid_, contestlevel_);
  ZR_(showcontest_, startfight_);
  contestname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contestdescribe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapid_ = 0u;
  ZR_(setloopfirst_, seteveryfightwaittimefixed_);
  ZR_(maxteamnum_, deathfightbotimes_);
  createplayername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maybecontestfightmintues1_ = 0u;
  ZR_(maybecontestfightmintues2_, finalordeathcirclewaittimes_);
  finalordeathfightwaittimes_ = 0u;
  if (GetArenaNoVirtual() == NULL && sinfo_ != NULL) delete sinfo_;
  sinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  newteamsinfo_.Clear();
  giveuprids_.Clear();
}

bool OneContestInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.OneContestInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ContestId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contestid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ShowContest;
        break;
      }

      // optional bool ShowContest = 2;
      case 2: {
        if (tag == 16) {
         parse_ShowContest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &showcontest_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_StartFight;
        break;
      }

      // optional bool StartFight = 3;
      case 3: {
        if (tag == 24) {
         parse_StartFight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &startfight_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ContestLevel;
        break;
      }

      // optional uint32 ContestLevel = 4;
      case 4: {
        if (tag == 32) {
         parse_ContestLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contestlevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ContestName;
        break;
      }

      // optional string ContestName = 5;
      case 5: {
        if (tag == 42) {
         parse_ContestName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contestname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contestname().data(), this->contestname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OneContestInfo.ContestName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_ContestDescribe;
        break;
      }

      // optional string ContestDescribe = 6;
      case 6: {
        if (tag == 50) {
         parse_ContestDescribe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contestdescribe()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contestdescribe().data(), this->contestdescribe().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OneContestInfo.ContestDescribe"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_NewTeamsInfo;
        break;
      }

      // repeated .pb.TeamsInfo NewTeamsInfo = 7;
      case 7: {
        if (tag == 58) {
         parse_NewTeamsInfo:
          DO_(input->IncrementRecursionDepth());
         parse_loop_NewTeamsInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_newteamsinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_NewTeamsInfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(64)) goto parse_MapId;
        break;
      }

      // optional uint32 MapId = 8;
      case 8: {
        if (tag == 64) {
         parse_MapId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_MaxTeamNum;
        break;
      }

      // optional uint32 MaxTeamNum = 9;
      case 9: {
        if (tag == 72) {
         parse_MaxTeamNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxteamnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_SetLoopFirst;
        break;
      }

      // optional bool SetLoopFirst = 10;
      case 10: {
        if (tag == 80) {
         parse_SetLoopFirst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &setloopfirst_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_SetLoopBOTimes;
        break;
      }

      // optional uint32 SetLoopBOTimes = 11;
      case 11: {
        if (tag == 88) {
         parse_SetLoopBOTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &setloopbotimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_SetFinalBOTimes;
        break;
      }

      // optional uint32 SetFinalBOTimes = 12;
      case 12: {
        if (tag == 96) {
         parse_SetFinalBOTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &setfinalbotimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_DeathFightBOTimes;
        break;
      }

      // optional uint32 DeathFightBOTimes = 13;
      case 13: {
        if (tag == 104) {
         parse_DeathFightBOTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deathfightbotimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_SetEveryFightWaitTimeFixed;
        break;
      }

      // optional bool SetEveryFightWaitTimeFixed = 14;
      case 14: {
        if (tag == 112) {
         parse_SetEveryFightWaitTimeFixed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &seteveryfightwaittimefixed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_CreatePlayerName;
        break;
      }

      // optional string CreatePlayerName = 15;
      case 15: {
        if (tag == 122) {
         parse_CreatePlayerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createplayername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->createplayername().data(), this->createplayername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OneContestInfo.CreatePlayerName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_MaybeContestFightMintues1;
        break;
      }

      // optional uint32 MaybeContestFightMintues1 = 16;
      case 16: {
        if (tag == 128) {
         parse_MaybeContestFightMintues1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maybecontestfightmintues1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_MaybeContestFightMintues2;
        break;
      }

      // optional uint32 MaybeContestFightMintues2 = 17;
      case 17: {
        if (tag == 136) {
         parse_MaybeContestFightMintues2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maybecontestfightmintues2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_CreatePlayerUid;
        break;
      }

      // optional uint64 CreatePlayerUid = 18;
      case 18: {
        if (tag == 144) {
         parse_CreatePlayerUid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &createplayeruid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_SettingCode;
        break;
      }

      // optional uint32 SettingCode = 19;
      case 19: {
        if (tag == 152) {
         parse_SettingCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &settingcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_LoopCircleWaitTimes;
        break;
      }

      // optional uint32 LoopCircleWaitTimes = 20;
      case 20: {
        if (tag == 160) {
         parse_LoopCircleWaitTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loopcirclewaittimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_LoopFightWaitTimes;
        break;
      }

      // optional uint32 LoopFightWaitTimes = 21;
      case 21: {
        if (tag == 168) {
         parse_LoopFightWaitTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loopfightwaittimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_FinalOrDeathCircleWaitTimes;
        break;
      }

      // optional uint32 FinalOrDeathCircleWaitTimes = 22;
      case 22: {
        if (tag == 176) {
         parse_FinalOrDeathCircleWaitTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finalordeathcirclewaittimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_FinalOrDeathFightWaitTimes;
        break;
      }

      // optional uint32 FinalOrDeathFightWaitTimes = 23;
      case 23: {
        if (tag == 184) {
         parse_FinalOrDeathFightWaitTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finalordeathfightwaittimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_GiveupRids;
        break;
      }

      // repeated uint64 GiveupRids = 24;
      case 24: {
        if (tag == 194) {
         parse_GiveupRids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_giveuprids())));
        } else if (tag == 192) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 194, input, this->mutable_giveuprids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_Sinfo;
        break;
      }

      // optional .pb.OneContestSimpleInfo Sinfo = 25;
      case 25: {
        if (tag == 202) {
         parse_Sinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.OneContestInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.OneContestInfo)
  return false;
#undef DO_
}

void OneContestInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.OneContestInfo)
  // optional uint32 ContestId = 1;
  if (this->contestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->contestid(), output);
  }

  // optional bool ShowContest = 2;
  if (this->showcontest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->showcontest(), output);
  }

  // optional bool StartFight = 3;
  if (this->startfight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->startfight(), output);
  }

  // optional uint32 ContestLevel = 4;
  if (this->contestlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->contestlevel(), output);
  }

  // optional string ContestName = 5;
  if (this->contestname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contestname().data(), this->contestname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OneContestInfo.ContestName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->contestname(), output);
  }

  // optional string ContestDescribe = 6;
  if (this->contestdescribe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contestdescribe().data(), this->contestdescribe().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OneContestInfo.ContestDescribe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->contestdescribe(), output);
  }

  // repeated .pb.TeamsInfo NewTeamsInfo = 7;
  for (unsigned int i = 0, n = this->newteamsinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->newteamsinfo(i), output);
  }

  // optional uint32 MapId = 8;
  if (this->mapid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->mapid(), output);
  }

  // optional uint32 MaxTeamNum = 9;
  if (this->maxteamnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->maxteamnum(), output);
  }

  // optional bool SetLoopFirst = 10;
  if (this->setloopfirst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->setloopfirst(), output);
  }

  // optional uint32 SetLoopBOTimes = 11;
  if (this->setloopbotimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->setloopbotimes(), output);
  }

  // optional uint32 SetFinalBOTimes = 12;
  if (this->setfinalbotimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->setfinalbotimes(), output);
  }

  // optional uint32 DeathFightBOTimes = 13;
  if (this->deathfightbotimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->deathfightbotimes(), output);
  }

  // optional bool SetEveryFightWaitTimeFixed = 14;
  if (this->seteveryfightwaittimefixed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->seteveryfightwaittimefixed(), output);
  }

  // optional string CreatePlayerName = 15;
  if (this->createplayername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->createplayername().data(), this->createplayername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OneContestInfo.CreatePlayerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->createplayername(), output);
  }

  // optional uint32 MaybeContestFightMintues1 = 16;
  if (this->maybecontestfightmintues1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->maybecontestfightmintues1(), output);
  }

  // optional uint32 MaybeContestFightMintues2 = 17;
  if (this->maybecontestfightmintues2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->maybecontestfightmintues2(), output);
  }

  // optional uint64 CreatePlayerUid = 18;
  if (this->createplayeruid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(18, this->createplayeruid(), output);
  }

  // optional uint32 SettingCode = 19;
  if (this->settingcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->settingcode(), output);
  }

  // optional uint32 LoopCircleWaitTimes = 20;
  if (this->loopcirclewaittimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->loopcirclewaittimes(), output);
  }

  // optional uint32 LoopFightWaitTimes = 21;
  if (this->loopfightwaittimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->loopfightwaittimes(), output);
  }

  // optional uint32 FinalOrDeathCircleWaitTimes = 22;
  if (this->finalordeathcirclewaittimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->finalordeathcirclewaittimes(), output);
  }

  // optional uint32 FinalOrDeathFightWaitTimes = 23;
  if (this->finalordeathfightwaittimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->finalordeathfightwaittimes(), output);
  }

  // repeated uint64 GiveupRids = 24;
  if (this->giveuprids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(24, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_giveuprids_cached_byte_size_);
  }
  for (int i = 0; i < this->giveuprids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->giveuprids(i), output);
  }

  // optional .pb.OneContestSimpleInfo Sinfo = 25;
  if (this->has_sinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, *this->sinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:pb.OneContestInfo)
}

::google::protobuf::uint8* OneContestInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.OneContestInfo)
  // optional uint32 ContestId = 1;
  if (this->contestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->contestid(), target);
  }

  // optional bool ShowContest = 2;
  if (this->showcontest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->showcontest(), target);
  }

  // optional bool StartFight = 3;
  if (this->startfight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->startfight(), target);
  }

  // optional uint32 ContestLevel = 4;
  if (this->contestlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->contestlevel(), target);
  }

  // optional string ContestName = 5;
  if (this->contestname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contestname().data(), this->contestname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OneContestInfo.ContestName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->contestname(), target);
  }

  // optional string ContestDescribe = 6;
  if (this->contestdescribe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contestdescribe().data(), this->contestdescribe().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OneContestInfo.ContestDescribe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->contestdescribe(), target);
  }

  // repeated .pb.TeamsInfo NewTeamsInfo = 7;
  for (unsigned int i = 0, n = this->newteamsinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->newteamsinfo(i), false, target);
  }

  // optional uint32 MapId = 8;
  if (this->mapid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->mapid(), target);
  }

  // optional uint32 MaxTeamNum = 9;
  if (this->maxteamnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->maxteamnum(), target);
  }

  // optional bool SetLoopFirst = 10;
  if (this->setloopfirst() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->setloopfirst(), target);
  }

  // optional uint32 SetLoopBOTimes = 11;
  if (this->setloopbotimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->setloopbotimes(), target);
  }

  // optional uint32 SetFinalBOTimes = 12;
  if (this->setfinalbotimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->setfinalbotimes(), target);
  }

  // optional uint32 DeathFightBOTimes = 13;
  if (this->deathfightbotimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->deathfightbotimes(), target);
  }

  // optional bool SetEveryFightWaitTimeFixed = 14;
  if (this->seteveryfightwaittimefixed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->seteveryfightwaittimefixed(), target);
  }

  // optional string CreatePlayerName = 15;
  if (this->createplayername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->createplayername().data(), this->createplayername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OneContestInfo.CreatePlayerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->createplayername(), target);
  }

  // optional uint32 MaybeContestFightMintues1 = 16;
  if (this->maybecontestfightmintues1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->maybecontestfightmintues1(), target);
  }

  // optional uint32 MaybeContestFightMintues2 = 17;
  if (this->maybecontestfightmintues2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->maybecontestfightmintues2(), target);
  }

  // optional uint64 CreatePlayerUid = 18;
  if (this->createplayeruid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(18, this->createplayeruid(), target);
  }

  // optional uint32 SettingCode = 19;
  if (this->settingcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->settingcode(), target);
  }

  // optional uint32 LoopCircleWaitTimes = 20;
  if (this->loopcirclewaittimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->loopcirclewaittimes(), target);
  }

  // optional uint32 LoopFightWaitTimes = 21;
  if (this->loopfightwaittimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->loopfightwaittimes(), target);
  }

  // optional uint32 FinalOrDeathCircleWaitTimes = 22;
  if (this->finalordeathcirclewaittimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->finalordeathcirclewaittimes(), target);
  }

  // optional uint32 FinalOrDeathFightWaitTimes = 23;
  if (this->finalordeathfightwaittimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->finalordeathfightwaittimes(), target);
  }

  // repeated uint64 GiveupRids = 24;
  if (this->giveuprids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      24,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _giveuprids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->giveuprids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->giveuprids(i), target);
  }

  // optional .pb.OneContestSimpleInfo Sinfo = 25;
  if (this->has_sinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        25, *this->sinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.OneContestInfo)
  return target;
}

int OneContestInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.OneContestInfo)
  int total_size = 0;

  // optional uint32 ContestId = 1;
  if (this->contestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contestid());
  }

  // optional bool ShowContest = 2;
  if (this->showcontest() != 0) {
    total_size += 1 + 1;
  }

  // optional bool StartFight = 3;
  if (this->startfight() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 ContestLevel = 4;
  if (this->contestlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contestlevel());
  }

  // optional string ContestName = 5;
  if (this->contestname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contestname());
  }

  // optional string ContestDescribe = 6;
  if (this->contestdescribe().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contestdescribe());
  }

  // optional uint32 MapId = 8;
  if (this->mapid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mapid());
  }

  // optional uint32 MaxTeamNum = 9;
  if (this->maxteamnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxteamnum());
  }

  // optional bool SetLoopFirst = 10;
  if (this->setloopfirst() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 SetLoopBOTimes = 11;
  if (this->setloopbotimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->setloopbotimes());
  }

  // optional uint32 SetFinalBOTimes = 12;
  if (this->setfinalbotimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->setfinalbotimes());
  }

  // optional uint32 DeathFightBOTimes = 13;
  if (this->deathfightbotimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->deathfightbotimes());
  }

  // optional bool SetEveryFightWaitTimeFixed = 14;
  if (this->seteveryfightwaittimefixed() != 0) {
    total_size += 1 + 1;
  }

  // optional string CreatePlayerName = 15;
  if (this->createplayername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->createplayername());
  }

  // optional uint32 MaybeContestFightMintues1 = 16;
  if (this->maybecontestfightmintues1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maybecontestfightmintues1());
  }

  // optional uint32 MaybeContestFightMintues2 = 17;
  if (this->maybecontestfightmintues2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maybecontestfightmintues2());
  }

  // optional uint64 CreatePlayerUid = 18;
  if (this->createplayeruid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->createplayeruid());
  }

  // optional uint32 SettingCode = 19;
  if (this->settingcode() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->settingcode());
  }

  // optional uint32 LoopCircleWaitTimes = 20;
  if (this->loopcirclewaittimes() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loopcirclewaittimes());
  }

  // optional uint32 LoopFightWaitTimes = 21;
  if (this->loopfightwaittimes() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loopfightwaittimes());
  }

  // optional uint32 FinalOrDeathCircleWaitTimes = 22;
  if (this->finalordeathcirclewaittimes() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finalordeathcirclewaittimes());
  }

  // optional uint32 FinalOrDeathFightWaitTimes = 23;
  if (this->finalordeathfightwaittimes() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finalordeathfightwaittimes());
  }

  // optional .pb.OneContestSimpleInfo Sinfo = 25;
  if (this->has_sinfo()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sinfo_);
  }

  // repeated .pb.TeamsInfo NewTeamsInfo = 7;
  total_size += 1 * this->newteamsinfo_size();
  for (int i = 0; i < this->newteamsinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->newteamsinfo(i));
  }

  // repeated uint64 GiveupRids = 24;
  {
    int data_size = 0;
    for (int i = 0; i < this->giveuprids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->giveuprids(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _giveuprids_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneContestInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.OneContestInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OneContestInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OneContestInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.OneContestInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.OneContestInfo)
    MergeFrom(*source);
  }
}

void OneContestInfo::MergeFrom(const OneContestInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.OneContestInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  newteamsinfo_.MergeFrom(from.newteamsinfo_);
  giveuprids_.MergeFrom(from.giveuprids_);
  if (from.contestid() != 0) {
    set_contestid(from.contestid());
  }
  if (from.showcontest() != 0) {
    set_showcontest(from.showcontest());
  }
  if (from.startfight() != 0) {
    set_startfight(from.startfight());
  }
  if (from.contestlevel() != 0) {
    set_contestlevel(from.contestlevel());
  }
  if (from.contestname().size() > 0) {

    contestname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contestname_);
  }
  if (from.contestdescribe().size() > 0) {

    contestdescribe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contestdescribe_);
  }
  if (from.mapid() != 0) {
    set_mapid(from.mapid());
  }
  if (from.maxteamnum() != 0) {
    set_maxteamnum(from.maxteamnum());
  }
  if (from.setloopfirst() != 0) {
    set_setloopfirst(from.setloopfirst());
  }
  if (from.setloopbotimes() != 0) {
    set_setloopbotimes(from.setloopbotimes());
  }
  if (from.setfinalbotimes() != 0) {
    set_setfinalbotimes(from.setfinalbotimes());
  }
  if (from.deathfightbotimes() != 0) {
    set_deathfightbotimes(from.deathfightbotimes());
  }
  if (from.seteveryfightwaittimefixed() != 0) {
    set_seteveryfightwaittimefixed(from.seteveryfightwaittimefixed());
  }
  if (from.createplayername().size() > 0) {

    createplayername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createplayername_);
  }
  if (from.maybecontestfightmintues1() != 0) {
    set_maybecontestfightmintues1(from.maybecontestfightmintues1());
  }
  if (from.maybecontestfightmintues2() != 0) {
    set_maybecontestfightmintues2(from.maybecontestfightmintues2());
  }
  if (from.createplayeruid() != 0) {
    set_createplayeruid(from.createplayeruid());
  }
  if (from.settingcode() != 0) {
    set_settingcode(from.settingcode());
  }
  if (from.loopcirclewaittimes() != 0) {
    set_loopcirclewaittimes(from.loopcirclewaittimes());
  }
  if (from.loopfightwaittimes() != 0) {
    set_loopfightwaittimes(from.loopfightwaittimes());
  }
  if (from.finalordeathcirclewaittimes() != 0) {
    set_finalordeathcirclewaittimes(from.finalordeathcirclewaittimes());
  }
  if (from.finalordeathfightwaittimes() != 0) {
    set_finalordeathfightwaittimes(from.finalordeathfightwaittimes());
  }
  if (from.has_sinfo()) {
    mutable_sinfo()->::pb::OneContestSimpleInfo::MergeFrom(from.sinfo());
  }
}

void OneContestInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.OneContestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneContestInfo::CopyFrom(const OneContestInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.OneContestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneContestInfo::IsInitialized() const {

  return true;
}

void OneContestInfo::Swap(OneContestInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneContestInfo::InternalSwap(OneContestInfo* other) {
  std::swap(contestid_, other->contestid_);
  std::swap(showcontest_, other->showcontest_);
  std::swap(startfight_, other->startfight_);
  std::swap(contestlevel_, other->contestlevel_);
  contestname_.Swap(&other->contestname_);
  contestdescribe_.Swap(&other->contestdescribe_);
  newteamsinfo_.UnsafeArenaSwap(&other->newteamsinfo_);
  std::swap(mapid_, other->mapid_);
  std::swap(maxteamnum_, other->maxteamnum_);
  std::swap(setloopfirst_, other->setloopfirst_);
  std::swap(setloopbotimes_, other->setloopbotimes_);
  std::swap(setfinalbotimes_, other->setfinalbotimes_);
  std::swap(deathfightbotimes_, other->deathfightbotimes_);
  std::swap(seteveryfightwaittimefixed_, other->seteveryfightwaittimefixed_);
  createplayername_.Swap(&other->createplayername_);
  std::swap(maybecontestfightmintues1_, other->maybecontestfightmintues1_);
  std::swap(maybecontestfightmintues2_, other->maybecontestfightmintues2_);
  std::swap(createplayeruid_, other->createplayeruid_);
  std::swap(settingcode_, other->settingcode_);
  std::swap(loopcirclewaittimes_, other->loopcirclewaittimes_);
  std::swap(loopfightwaittimes_, other->loopfightwaittimes_);
  std::swap(finalordeathcirclewaittimes_, other->finalordeathcirclewaittimes_);
  std::swap(finalordeathfightwaittimes_, other->finalordeathfightwaittimes_);
  giveuprids_.UnsafeArenaSwap(&other->giveuprids_);
  std::swap(sinfo_, other->sinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneContestInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OneContestInfo_descriptor_;
  metadata.reflection = OneContestInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneContestInfo

// optional uint32 ContestId = 1;
void OneContestInfo::clear_contestid() {
  contestid_ = 0u;
}
 ::google::protobuf::uint32 OneContestInfo::contestid() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.ContestId)
  return contestid_;
}
 void OneContestInfo::set_contestid(::google::protobuf::uint32 value) {
  
  contestid_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.ContestId)
}

// optional bool ShowContest = 2;
void OneContestInfo::clear_showcontest() {
  showcontest_ = false;
}
 bool OneContestInfo::showcontest() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.ShowContest)
  return showcontest_;
}
 void OneContestInfo::set_showcontest(bool value) {
  
  showcontest_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.ShowContest)
}

// optional bool StartFight = 3;
void OneContestInfo::clear_startfight() {
  startfight_ = false;
}
 bool OneContestInfo::startfight() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.StartFight)
  return startfight_;
}
 void OneContestInfo::set_startfight(bool value) {
  
  startfight_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.StartFight)
}

// optional uint32 ContestLevel = 4;
void OneContestInfo::clear_contestlevel() {
  contestlevel_ = 0u;
}
 ::google::protobuf::uint32 OneContestInfo::contestlevel() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.ContestLevel)
  return contestlevel_;
}
 void OneContestInfo::set_contestlevel(::google::protobuf::uint32 value) {
  
  contestlevel_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.ContestLevel)
}

// optional string ContestName = 5;
void OneContestInfo::clear_contestname() {
  contestname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OneContestInfo::contestname() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.ContestName)
  return contestname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OneContestInfo::set_contestname(const ::std::string& value) {
  
  contestname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.ContestName)
}
 void OneContestInfo::set_contestname(const char* value) {
  
  contestname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.OneContestInfo.ContestName)
}
 void OneContestInfo::set_contestname(const char* value, size_t size) {
  
  contestname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.OneContestInfo.ContestName)
}
 ::std::string* OneContestInfo::mutable_contestname() {
  
  // @@protoc_insertion_point(field_mutable:pb.OneContestInfo.ContestName)
  return contestname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OneContestInfo::release_contestname() {
  // @@protoc_insertion_point(field_release:pb.OneContestInfo.ContestName)
  
  return contestname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OneContestInfo::set_allocated_contestname(::std::string* contestname) {
  if (contestname != NULL) {
    
  } else {
    
  }
  contestname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contestname);
  // @@protoc_insertion_point(field_set_allocated:pb.OneContestInfo.ContestName)
}

// optional string ContestDescribe = 6;
void OneContestInfo::clear_contestdescribe() {
  contestdescribe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OneContestInfo::contestdescribe() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.ContestDescribe)
  return contestdescribe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OneContestInfo::set_contestdescribe(const ::std::string& value) {
  
  contestdescribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.ContestDescribe)
}
 void OneContestInfo::set_contestdescribe(const char* value) {
  
  contestdescribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.OneContestInfo.ContestDescribe)
}
 void OneContestInfo::set_contestdescribe(const char* value, size_t size) {
  
  contestdescribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.OneContestInfo.ContestDescribe)
}
 ::std::string* OneContestInfo::mutable_contestdescribe() {
  
  // @@protoc_insertion_point(field_mutable:pb.OneContestInfo.ContestDescribe)
  return contestdescribe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OneContestInfo::release_contestdescribe() {
  // @@protoc_insertion_point(field_release:pb.OneContestInfo.ContestDescribe)
  
  return contestdescribe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OneContestInfo::set_allocated_contestdescribe(::std::string* contestdescribe) {
  if (contestdescribe != NULL) {
    
  } else {
    
  }
  contestdescribe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contestdescribe);
  // @@protoc_insertion_point(field_set_allocated:pb.OneContestInfo.ContestDescribe)
}

// repeated .pb.TeamsInfo NewTeamsInfo = 7;
int OneContestInfo::newteamsinfo_size() const {
  return newteamsinfo_.size();
}
void OneContestInfo::clear_newteamsinfo() {
  newteamsinfo_.Clear();
}
const ::pb::TeamsInfo& OneContestInfo::newteamsinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.NewTeamsInfo)
  return newteamsinfo_.Get(index);
}
::pb::TeamsInfo* OneContestInfo::mutable_newteamsinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.OneContestInfo.NewTeamsInfo)
  return newteamsinfo_.Mutable(index);
}
::pb::TeamsInfo* OneContestInfo::add_newteamsinfo() {
  // @@protoc_insertion_point(field_add:pb.OneContestInfo.NewTeamsInfo)
  return newteamsinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::TeamsInfo >*
OneContestInfo::mutable_newteamsinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.OneContestInfo.NewTeamsInfo)
  return &newteamsinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::TeamsInfo >&
OneContestInfo::newteamsinfo() const {
  // @@protoc_insertion_point(field_list:pb.OneContestInfo.NewTeamsInfo)
  return newteamsinfo_;
}

// optional uint32 MapId = 8;
void OneContestInfo::clear_mapid() {
  mapid_ = 0u;
}
 ::google::protobuf::uint32 OneContestInfo::mapid() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.MapId)
  return mapid_;
}
 void OneContestInfo::set_mapid(::google::protobuf::uint32 value) {
  
  mapid_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.MapId)
}

// optional uint32 MaxTeamNum = 9;
void OneContestInfo::clear_maxteamnum() {
  maxteamnum_ = 0u;
}
 ::google::protobuf::uint32 OneContestInfo::maxteamnum() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.MaxTeamNum)
  return maxteamnum_;
}
 void OneContestInfo::set_maxteamnum(::google::protobuf::uint32 value) {
  
  maxteamnum_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.MaxTeamNum)
}

// optional bool SetLoopFirst = 10;
void OneContestInfo::clear_setloopfirst() {
  setloopfirst_ = false;
}
 bool OneContestInfo::setloopfirst() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.SetLoopFirst)
  return setloopfirst_;
}
 void OneContestInfo::set_setloopfirst(bool value) {
  
  setloopfirst_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.SetLoopFirst)
}

// optional uint32 SetLoopBOTimes = 11;
void OneContestInfo::clear_setloopbotimes() {
  setloopbotimes_ = 0u;
}
 ::google::protobuf::uint32 OneContestInfo::setloopbotimes() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.SetLoopBOTimes)
  return setloopbotimes_;
}
 void OneContestInfo::set_setloopbotimes(::google::protobuf::uint32 value) {
  
  setloopbotimes_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.SetLoopBOTimes)
}

// optional uint32 SetFinalBOTimes = 12;
void OneContestInfo::clear_setfinalbotimes() {
  setfinalbotimes_ = 0u;
}
 ::google::protobuf::uint32 OneContestInfo::setfinalbotimes() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.SetFinalBOTimes)
  return setfinalbotimes_;
}
 void OneContestInfo::set_setfinalbotimes(::google::protobuf::uint32 value) {
  
  setfinalbotimes_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.SetFinalBOTimes)
}

// optional uint32 DeathFightBOTimes = 13;
void OneContestInfo::clear_deathfightbotimes() {
  deathfightbotimes_ = 0u;
}
 ::google::protobuf::uint32 OneContestInfo::deathfightbotimes() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.DeathFightBOTimes)
  return deathfightbotimes_;
}
 void OneContestInfo::set_deathfightbotimes(::google::protobuf::uint32 value) {
  
  deathfightbotimes_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.DeathFightBOTimes)
}

// optional bool SetEveryFightWaitTimeFixed = 14;
void OneContestInfo::clear_seteveryfightwaittimefixed() {
  seteveryfightwaittimefixed_ = false;
}
 bool OneContestInfo::seteveryfightwaittimefixed() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.SetEveryFightWaitTimeFixed)
  return seteveryfightwaittimefixed_;
}
 void OneContestInfo::set_seteveryfightwaittimefixed(bool value) {
  
  seteveryfightwaittimefixed_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.SetEveryFightWaitTimeFixed)
}

// optional string CreatePlayerName = 15;
void OneContestInfo::clear_createplayername() {
  createplayername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OneContestInfo::createplayername() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.CreatePlayerName)
  return createplayername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OneContestInfo::set_createplayername(const ::std::string& value) {
  
  createplayername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.CreatePlayerName)
}
 void OneContestInfo::set_createplayername(const char* value) {
  
  createplayername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.OneContestInfo.CreatePlayerName)
}
 void OneContestInfo::set_createplayername(const char* value, size_t size) {
  
  createplayername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.OneContestInfo.CreatePlayerName)
}
 ::std::string* OneContestInfo::mutable_createplayername() {
  
  // @@protoc_insertion_point(field_mutable:pb.OneContestInfo.CreatePlayerName)
  return createplayername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OneContestInfo::release_createplayername() {
  // @@protoc_insertion_point(field_release:pb.OneContestInfo.CreatePlayerName)
  
  return createplayername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OneContestInfo::set_allocated_createplayername(::std::string* createplayername) {
  if (createplayername != NULL) {
    
  } else {
    
  }
  createplayername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), createplayername);
  // @@protoc_insertion_point(field_set_allocated:pb.OneContestInfo.CreatePlayerName)
}

// optional uint32 MaybeContestFightMintues1 = 16;
void OneContestInfo::clear_maybecontestfightmintues1() {
  maybecontestfightmintues1_ = 0u;
}
 ::google::protobuf::uint32 OneContestInfo::maybecontestfightmintues1() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.MaybeContestFightMintues1)
  return maybecontestfightmintues1_;
}
 void OneContestInfo::set_maybecontestfightmintues1(::google::protobuf::uint32 value) {
  
  maybecontestfightmintues1_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.MaybeContestFightMintues1)
}

// optional uint32 MaybeContestFightMintues2 = 17;
void OneContestInfo::clear_maybecontestfightmintues2() {
  maybecontestfightmintues2_ = 0u;
}
 ::google::protobuf::uint32 OneContestInfo::maybecontestfightmintues2() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.MaybeContestFightMintues2)
  return maybecontestfightmintues2_;
}
 void OneContestInfo::set_maybecontestfightmintues2(::google::protobuf::uint32 value) {
  
  maybecontestfightmintues2_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.MaybeContestFightMintues2)
}

// optional uint64 CreatePlayerUid = 18;
void OneContestInfo::clear_createplayeruid() {
  createplayeruid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 OneContestInfo::createplayeruid() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.CreatePlayerUid)
  return createplayeruid_;
}
 void OneContestInfo::set_createplayeruid(::google::protobuf::uint64 value) {
  
  createplayeruid_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.CreatePlayerUid)
}

// optional uint32 SettingCode = 19;
void OneContestInfo::clear_settingcode() {
  settingcode_ = 0u;
}
 ::google::protobuf::uint32 OneContestInfo::settingcode() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.SettingCode)
  return settingcode_;
}
 void OneContestInfo::set_settingcode(::google::protobuf::uint32 value) {
  
  settingcode_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.SettingCode)
}

// optional uint32 LoopCircleWaitTimes = 20;
void OneContestInfo::clear_loopcirclewaittimes() {
  loopcirclewaittimes_ = 0u;
}
 ::google::protobuf::uint32 OneContestInfo::loopcirclewaittimes() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.LoopCircleWaitTimes)
  return loopcirclewaittimes_;
}
 void OneContestInfo::set_loopcirclewaittimes(::google::protobuf::uint32 value) {
  
  loopcirclewaittimes_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.LoopCircleWaitTimes)
}

// optional uint32 LoopFightWaitTimes = 21;
void OneContestInfo::clear_loopfightwaittimes() {
  loopfightwaittimes_ = 0u;
}
 ::google::protobuf::uint32 OneContestInfo::loopfightwaittimes() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.LoopFightWaitTimes)
  return loopfightwaittimes_;
}
 void OneContestInfo::set_loopfightwaittimes(::google::protobuf::uint32 value) {
  
  loopfightwaittimes_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.LoopFightWaitTimes)
}

// optional uint32 FinalOrDeathCircleWaitTimes = 22;
void OneContestInfo::clear_finalordeathcirclewaittimes() {
  finalordeathcirclewaittimes_ = 0u;
}
 ::google::protobuf::uint32 OneContestInfo::finalordeathcirclewaittimes() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.FinalOrDeathCircleWaitTimes)
  return finalordeathcirclewaittimes_;
}
 void OneContestInfo::set_finalordeathcirclewaittimes(::google::protobuf::uint32 value) {
  
  finalordeathcirclewaittimes_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.FinalOrDeathCircleWaitTimes)
}

// optional uint32 FinalOrDeathFightWaitTimes = 23;
void OneContestInfo::clear_finalordeathfightwaittimes() {
  finalordeathfightwaittimes_ = 0u;
}
 ::google::protobuf::uint32 OneContestInfo::finalordeathfightwaittimes() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.FinalOrDeathFightWaitTimes)
  return finalordeathfightwaittimes_;
}
 void OneContestInfo::set_finalordeathfightwaittimes(::google::protobuf::uint32 value) {
  
  finalordeathfightwaittimes_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.FinalOrDeathFightWaitTimes)
}

// repeated uint64 GiveupRids = 24;
int OneContestInfo::giveuprids_size() const {
  return giveuprids_.size();
}
void OneContestInfo::clear_giveuprids() {
  giveuprids_.Clear();
}
 ::google::protobuf::uint64 OneContestInfo::giveuprids(int index) const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.GiveupRids)
  return giveuprids_.Get(index);
}
 void OneContestInfo::set_giveuprids(int index, ::google::protobuf::uint64 value) {
  giveuprids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.OneContestInfo.GiveupRids)
}
 void OneContestInfo::add_giveuprids(::google::protobuf::uint64 value) {
  giveuprids_.Add(value);
  // @@protoc_insertion_point(field_add:pb.OneContestInfo.GiveupRids)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
OneContestInfo::giveuprids() const {
  // @@protoc_insertion_point(field_list:pb.OneContestInfo.GiveupRids)
  return giveuprids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
OneContestInfo::mutable_giveuprids() {
  // @@protoc_insertion_point(field_mutable_list:pb.OneContestInfo.GiveupRids)
  return &giveuprids_;
}

// optional .pb.OneContestSimpleInfo Sinfo = 25;
bool OneContestInfo::has_sinfo() const {
  return !_is_default_instance_ && sinfo_ != NULL;
}
void OneContestInfo::clear_sinfo() {
  if (GetArenaNoVirtual() == NULL && sinfo_ != NULL) delete sinfo_;
  sinfo_ = NULL;
}
const ::pb::OneContestSimpleInfo& OneContestInfo::sinfo() const {
  // @@protoc_insertion_point(field_get:pb.OneContestInfo.Sinfo)
  return sinfo_ != NULL ? *sinfo_ : *default_instance_->sinfo_;
}
::pb::OneContestSimpleInfo* OneContestInfo::mutable_sinfo() {
  
  if (sinfo_ == NULL) {
    sinfo_ = new ::pb::OneContestSimpleInfo;
  }
  // @@protoc_insertion_point(field_mutable:pb.OneContestInfo.Sinfo)
  return sinfo_;
}
::pb::OneContestSimpleInfo* OneContestInfo::release_sinfo() {
  // @@protoc_insertion_point(field_release:pb.OneContestInfo.Sinfo)
  
  ::pb::OneContestSimpleInfo* temp = sinfo_;
  sinfo_ = NULL;
  return temp;
}
void OneContestInfo::set_allocated_sinfo(::pb::OneContestSimpleInfo* sinfo) {
  delete sinfo_;
  sinfo_ = sinfo;
  if (sinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.OneContestInfo.Sinfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneContestSimpleInfo::kContestIdFieldNumber;
const int OneContestSimpleInfo::kShowContestFieldNumber;
const int OneContestSimpleInfo::kContestLevelFieldNumber;
const int OneContestSimpleInfo::kContestNameFieldNumber;
const int OneContestSimpleInfo::kContestDescribeFieldNumber;
const int OneContestSimpleInfo::kCreatePlayerNameFieldNumber;
const int OneContestSimpleInfo::kCreatePlayerUIDFieldNumber;
const int OneContestSimpleInfo::kSetLoopFirstFieldNumber;
const int OneContestSimpleInfo::kSignPlayerNumFieldNumber;
const int OneContestSimpleInfo::kMaybeContestFightMintues1FieldNumber;
const int OneContestSimpleInfo::kMaybeContestFightMintues2FieldNumber;
const int OneContestSimpleInfo::kLoopBoTimeFieldNumber;
const int OneContestSimpleInfo::kFinalBOTimesFieldNumber;
const int OneContestSimpleInfo::kDeathFightBOTimesFieldNumber;
const int OneContestSimpleInfo::kSetEveryFightWaitTimeFixedFieldNumber;
const int OneContestSimpleInfo::kContestStateFieldNumber;
const int OneContestSimpleInfo::kOpenTeamNumFieldNumber;
const int OneContestSimpleInfo::kNeedPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneContestSimpleInfo::OneContestSimpleInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.OneContestSimpleInfo)
}

void OneContestSimpleInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OneContestSimpleInfo::OneContestSimpleInfo(const OneContestSimpleInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.OneContestSimpleInfo)
}

void OneContestSimpleInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  contestid_ = 0u;
  showcontest_ = false;
  contestlevel_ = 0u;
  contestname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contestdescribe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createplayername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createplayeruid_ = GOOGLE_ULONGLONG(0);
  setloopfirst_ = false;
  signplayernum_ = 0u;
  maybecontestfightmintues1_ = 0u;
  maybecontestfightmintues2_ = 0u;
  loopbotime_ = 0u;
  finalbotimes_ = 0u;
  deathfightbotimes_ = 0u;
  seteveryfightwaittimefixed_ = false;
  conteststate_ = 0u;
  openteamnum_ = 0u;
  needpassword_ = false;
}

OneContestSimpleInfo::~OneContestSimpleInfo() {
  // @@protoc_insertion_point(destructor:pb.OneContestSimpleInfo)
  SharedDtor();
}

void OneContestSimpleInfo::SharedDtor() {
  contestname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contestdescribe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createplayername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void OneContestSimpleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneContestSimpleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OneContestSimpleInfo_descriptor_;
}

const OneContestSimpleInfo& OneContestSimpleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

OneContestSimpleInfo* OneContestSimpleInfo::default_instance_ = NULL;

OneContestSimpleInfo* OneContestSimpleInfo::New(::google::protobuf::Arena* arena) const {
  OneContestSimpleInfo* n = new OneContestSimpleInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneContestSimpleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.OneContestSimpleInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OneContestSimpleInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OneContestSimpleInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(contestid_, contestlevel_);
  ZR_(showcontest_, setloopfirst_);
  contestname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contestdescribe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createplayername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createplayeruid_ = GOOGLE_ULONGLONG(0);
  ZR_(signplayernum_, maybecontestfightmintues1_);
  ZR_(maybecontestfightmintues2_, conteststate_);
  seteveryfightwaittimefixed_ = false;
  openteamnum_ = 0u;
  needpassword_ = false;

#undef ZR_HELPER_
#undef ZR_

}

bool OneContestSimpleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.OneContestSimpleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ContestId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contestid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ShowContest;
        break;
      }

      // optional bool ShowContest = 2;
      case 2: {
        if (tag == 16) {
         parse_ShowContest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &showcontest_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ContestLevel;
        break;
      }

      // optional uint32 ContestLevel = 4;
      case 4: {
        if (tag == 32) {
         parse_ContestLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contestlevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ContestName;
        break;
      }

      // optional string ContestName = 5;
      case 5: {
        if (tag == 42) {
         parse_ContestName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contestname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contestname().data(), this->contestname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OneContestSimpleInfo.ContestName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_ContestDescribe;
        break;
      }

      // optional string ContestDescribe = 6;
      case 6: {
        if (tag == 50) {
         parse_ContestDescribe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contestdescribe()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contestdescribe().data(), this->contestdescribe().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OneContestSimpleInfo.ContestDescribe"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_CreatePlayerName;
        break;
      }

      // optional string CreatePlayerName = 7;
      case 7: {
        if (tag == 58) {
         parse_CreatePlayerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createplayername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->createplayername().data(), this->createplayername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OneContestSimpleInfo.CreatePlayerName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_CreatePlayerUID;
        break;
      }

      // optional uint64 CreatePlayerUID = 8;
      case 8: {
        if (tag == 64) {
         parse_CreatePlayerUID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &createplayeruid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_SetLoopFirst;
        break;
      }

      // optional bool SetLoopFirst = 9;
      case 9: {
        if (tag == 72) {
         parse_SetLoopFirst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &setloopfirst_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_SignPlayerNum;
        break;
      }

      // optional uint32 SignPlayerNum = 10;
      case 10: {
        if (tag == 80) {
         parse_SignPlayerNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &signplayernum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_MaybeContestFightMintues1;
        break;
      }

      // optional uint32 MaybeContestFightMintues1 = 11;
      case 11: {
        if (tag == 88) {
         parse_MaybeContestFightMintues1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maybecontestfightmintues1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_MaybeContestFightMintues2;
        break;
      }

      // optional uint32 MaybeContestFightMintues2 = 12;
      case 12: {
        if (tag == 96) {
         parse_MaybeContestFightMintues2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maybecontestfightmintues2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_LoopBoTime;
        break;
      }

      // optional uint32 LoopBoTime = 13;
      case 13: {
        if (tag == 104) {
         parse_LoopBoTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loopbotime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_FinalBOTimes;
        break;
      }

      // optional uint32 FinalBOTimes = 14;
      case 14: {
        if (tag == 112) {
         parse_FinalBOTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finalbotimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_DeathFightBOTimes;
        break;
      }

      // optional uint32 DeathFightBOTimes = 15;
      case 15: {
        if (tag == 120) {
         parse_DeathFightBOTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deathfightbotimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_SetEveryFightWaitTimeFixed;
        break;
      }

      // optional bool SetEveryFightWaitTimeFixed = 16;
      case 16: {
        if (tag == 128) {
         parse_SetEveryFightWaitTimeFixed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &seteveryfightwaittimefixed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_ContestState;
        break;
      }

      // optional uint32 ContestState = 17;
      case 17: {
        if (tag == 136) {
         parse_ContestState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &conteststate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_OpenTeamNum;
        break;
      }

      // optional uint32 OpenTeamNum = 18;
      case 18: {
        if (tag == 144) {
         parse_OpenTeamNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &openteamnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_NeedPassword;
        break;
      }

      // optional bool NeedPassword = 19;
      case 19: {
        if (tag == 152) {
         parse_NeedPassword:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needpassword_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.OneContestSimpleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.OneContestSimpleInfo)
  return false;
#undef DO_
}

void OneContestSimpleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.OneContestSimpleInfo)
  // optional uint32 ContestId = 1;
  if (this->contestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->contestid(), output);
  }

  // optional bool ShowContest = 2;
  if (this->showcontest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->showcontest(), output);
  }

  // optional uint32 ContestLevel = 4;
  if (this->contestlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->contestlevel(), output);
  }

  // optional string ContestName = 5;
  if (this->contestname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contestname().data(), this->contestname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OneContestSimpleInfo.ContestName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->contestname(), output);
  }

  // optional string ContestDescribe = 6;
  if (this->contestdescribe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contestdescribe().data(), this->contestdescribe().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OneContestSimpleInfo.ContestDescribe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->contestdescribe(), output);
  }

  // optional string CreatePlayerName = 7;
  if (this->createplayername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->createplayername().data(), this->createplayername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OneContestSimpleInfo.CreatePlayerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->createplayername(), output);
  }

  // optional uint64 CreatePlayerUID = 8;
  if (this->createplayeruid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->createplayeruid(), output);
  }

  // optional bool SetLoopFirst = 9;
  if (this->setloopfirst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->setloopfirst(), output);
  }

  // optional uint32 SignPlayerNum = 10;
  if (this->signplayernum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->signplayernum(), output);
  }

  // optional uint32 MaybeContestFightMintues1 = 11;
  if (this->maybecontestfightmintues1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->maybecontestfightmintues1(), output);
  }

  // optional uint32 MaybeContestFightMintues2 = 12;
  if (this->maybecontestfightmintues2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->maybecontestfightmintues2(), output);
  }

  // optional uint32 LoopBoTime = 13;
  if (this->loopbotime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->loopbotime(), output);
  }

  // optional uint32 FinalBOTimes = 14;
  if (this->finalbotimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->finalbotimes(), output);
  }

  // optional uint32 DeathFightBOTimes = 15;
  if (this->deathfightbotimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->deathfightbotimes(), output);
  }

  // optional bool SetEveryFightWaitTimeFixed = 16;
  if (this->seteveryfightwaittimefixed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->seteveryfightwaittimefixed(), output);
  }

  // optional uint32 ContestState = 17;
  if (this->conteststate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->conteststate(), output);
  }

  // optional uint32 OpenTeamNum = 18;
  if (this->openteamnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->openteamnum(), output);
  }

  // optional bool NeedPassword = 19;
  if (this->needpassword() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->needpassword(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.OneContestSimpleInfo)
}

::google::protobuf::uint8* OneContestSimpleInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.OneContestSimpleInfo)
  // optional uint32 ContestId = 1;
  if (this->contestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->contestid(), target);
  }

  // optional bool ShowContest = 2;
  if (this->showcontest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->showcontest(), target);
  }

  // optional uint32 ContestLevel = 4;
  if (this->contestlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->contestlevel(), target);
  }

  // optional string ContestName = 5;
  if (this->contestname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contestname().data(), this->contestname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OneContestSimpleInfo.ContestName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->contestname(), target);
  }

  // optional string ContestDescribe = 6;
  if (this->contestdescribe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contestdescribe().data(), this->contestdescribe().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OneContestSimpleInfo.ContestDescribe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->contestdescribe(), target);
  }

  // optional string CreatePlayerName = 7;
  if (this->createplayername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->createplayername().data(), this->createplayername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OneContestSimpleInfo.CreatePlayerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->createplayername(), target);
  }

  // optional uint64 CreatePlayerUID = 8;
  if (this->createplayeruid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->createplayeruid(), target);
  }

  // optional bool SetLoopFirst = 9;
  if (this->setloopfirst() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->setloopfirst(), target);
  }

  // optional uint32 SignPlayerNum = 10;
  if (this->signplayernum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->signplayernum(), target);
  }

  // optional uint32 MaybeContestFightMintues1 = 11;
  if (this->maybecontestfightmintues1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->maybecontestfightmintues1(), target);
  }

  // optional uint32 MaybeContestFightMintues2 = 12;
  if (this->maybecontestfightmintues2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->maybecontestfightmintues2(), target);
  }

  // optional uint32 LoopBoTime = 13;
  if (this->loopbotime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->loopbotime(), target);
  }

  // optional uint32 FinalBOTimes = 14;
  if (this->finalbotimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->finalbotimes(), target);
  }

  // optional uint32 DeathFightBOTimes = 15;
  if (this->deathfightbotimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->deathfightbotimes(), target);
  }

  // optional bool SetEveryFightWaitTimeFixed = 16;
  if (this->seteveryfightwaittimefixed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->seteveryfightwaittimefixed(), target);
  }

  // optional uint32 ContestState = 17;
  if (this->conteststate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->conteststate(), target);
  }

  // optional uint32 OpenTeamNum = 18;
  if (this->openteamnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->openteamnum(), target);
  }

  // optional bool NeedPassword = 19;
  if (this->needpassword() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->needpassword(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.OneContestSimpleInfo)
  return target;
}

int OneContestSimpleInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.OneContestSimpleInfo)
  int total_size = 0;

  // optional uint32 ContestId = 1;
  if (this->contestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contestid());
  }

  // optional bool ShowContest = 2;
  if (this->showcontest() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 ContestLevel = 4;
  if (this->contestlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contestlevel());
  }

  // optional string ContestName = 5;
  if (this->contestname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contestname());
  }

  // optional string ContestDescribe = 6;
  if (this->contestdescribe().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contestdescribe());
  }

  // optional string CreatePlayerName = 7;
  if (this->createplayername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->createplayername());
  }

  // optional uint64 CreatePlayerUID = 8;
  if (this->createplayeruid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->createplayeruid());
  }

  // optional bool SetLoopFirst = 9;
  if (this->setloopfirst() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 SignPlayerNum = 10;
  if (this->signplayernum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->signplayernum());
  }

  // optional uint32 MaybeContestFightMintues1 = 11;
  if (this->maybecontestfightmintues1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maybecontestfightmintues1());
  }

  // optional uint32 MaybeContestFightMintues2 = 12;
  if (this->maybecontestfightmintues2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maybecontestfightmintues2());
  }

  // optional uint32 LoopBoTime = 13;
  if (this->loopbotime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loopbotime());
  }

  // optional uint32 FinalBOTimes = 14;
  if (this->finalbotimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finalbotimes());
  }

  // optional uint32 DeathFightBOTimes = 15;
  if (this->deathfightbotimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->deathfightbotimes());
  }

  // optional bool SetEveryFightWaitTimeFixed = 16;
  if (this->seteveryfightwaittimefixed() != 0) {
    total_size += 2 + 1;
  }

  // optional uint32 ContestState = 17;
  if (this->conteststate() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->conteststate());
  }

  // optional uint32 OpenTeamNum = 18;
  if (this->openteamnum() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->openteamnum());
  }

  // optional bool NeedPassword = 19;
  if (this->needpassword() != 0) {
    total_size += 2 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneContestSimpleInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.OneContestSimpleInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OneContestSimpleInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OneContestSimpleInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.OneContestSimpleInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.OneContestSimpleInfo)
    MergeFrom(*source);
  }
}

void OneContestSimpleInfo::MergeFrom(const OneContestSimpleInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.OneContestSimpleInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.contestid() != 0) {
    set_contestid(from.contestid());
  }
  if (from.showcontest() != 0) {
    set_showcontest(from.showcontest());
  }
  if (from.contestlevel() != 0) {
    set_contestlevel(from.contestlevel());
  }
  if (from.contestname().size() > 0) {

    contestname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contestname_);
  }
  if (from.contestdescribe().size() > 0) {

    contestdescribe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contestdescribe_);
  }
  if (from.createplayername().size() > 0) {

    createplayername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createplayername_);
  }
  if (from.createplayeruid() != 0) {
    set_createplayeruid(from.createplayeruid());
  }
  if (from.setloopfirst() != 0) {
    set_setloopfirst(from.setloopfirst());
  }
  if (from.signplayernum() != 0) {
    set_signplayernum(from.signplayernum());
  }
  if (from.maybecontestfightmintues1() != 0) {
    set_maybecontestfightmintues1(from.maybecontestfightmintues1());
  }
  if (from.maybecontestfightmintues2() != 0) {
    set_maybecontestfightmintues2(from.maybecontestfightmintues2());
  }
  if (from.loopbotime() != 0) {
    set_loopbotime(from.loopbotime());
  }
  if (from.finalbotimes() != 0) {
    set_finalbotimes(from.finalbotimes());
  }
  if (from.deathfightbotimes() != 0) {
    set_deathfightbotimes(from.deathfightbotimes());
  }
  if (from.seteveryfightwaittimefixed() != 0) {
    set_seteveryfightwaittimefixed(from.seteveryfightwaittimefixed());
  }
  if (from.conteststate() != 0) {
    set_conteststate(from.conteststate());
  }
  if (from.openteamnum() != 0) {
    set_openteamnum(from.openteamnum());
  }
  if (from.needpassword() != 0) {
    set_needpassword(from.needpassword());
  }
}

void OneContestSimpleInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.OneContestSimpleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneContestSimpleInfo::CopyFrom(const OneContestSimpleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.OneContestSimpleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneContestSimpleInfo::IsInitialized() const {

  return true;
}

void OneContestSimpleInfo::Swap(OneContestSimpleInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneContestSimpleInfo::InternalSwap(OneContestSimpleInfo* other) {
  std::swap(contestid_, other->contestid_);
  std::swap(showcontest_, other->showcontest_);
  std::swap(contestlevel_, other->contestlevel_);
  contestname_.Swap(&other->contestname_);
  contestdescribe_.Swap(&other->contestdescribe_);
  createplayername_.Swap(&other->createplayername_);
  std::swap(createplayeruid_, other->createplayeruid_);
  std::swap(setloopfirst_, other->setloopfirst_);
  std::swap(signplayernum_, other->signplayernum_);
  std::swap(maybecontestfightmintues1_, other->maybecontestfightmintues1_);
  std::swap(maybecontestfightmintues2_, other->maybecontestfightmintues2_);
  std::swap(loopbotime_, other->loopbotime_);
  std::swap(finalbotimes_, other->finalbotimes_);
  std::swap(deathfightbotimes_, other->deathfightbotimes_);
  std::swap(seteveryfightwaittimefixed_, other->seteveryfightwaittimefixed_);
  std::swap(conteststate_, other->conteststate_);
  std::swap(openteamnum_, other->openteamnum_);
  std::swap(needpassword_, other->needpassword_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneContestSimpleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OneContestSimpleInfo_descriptor_;
  metadata.reflection = OneContestSimpleInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneContestSimpleInfo

// optional uint32 ContestId = 1;
void OneContestSimpleInfo::clear_contestid() {
  contestid_ = 0u;
}
 ::google::protobuf::uint32 OneContestSimpleInfo::contestid() const {
  // @@protoc_insertion_point(field_get:pb.OneContestSimpleInfo.ContestId)
  return contestid_;
}
 void OneContestSimpleInfo::set_contestid(::google::protobuf::uint32 value) {
  
  contestid_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestSimpleInfo.ContestId)
}

// optional bool ShowContest = 2;
void OneContestSimpleInfo::clear_showcontest() {
  showcontest_ = false;
}
 bool OneContestSimpleInfo::showcontest() const {
  // @@protoc_insertion_point(field_get:pb.OneContestSimpleInfo.ShowContest)
  return showcontest_;
}
 void OneContestSimpleInfo::set_showcontest(bool value) {
  
  showcontest_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestSimpleInfo.ShowContest)
}

// optional uint32 ContestLevel = 4;
void OneContestSimpleInfo::clear_contestlevel() {
  contestlevel_ = 0u;
}
 ::google::protobuf::uint32 OneContestSimpleInfo::contestlevel() const {
  // @@protoc_insertion_point(field_get:pb.OneContestSimpleInfo.ContestLevel)
  return contestlevel_;
}
 void OneContestSimpleInfo::set_contestlevel(::google::protobuf::uint32 value) {
  
  contestlevel_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestSimpleInfo.ContestLevel)
}

// optional string ContestName = 5;
void OneContestSimpleInfo::clear_contestname() {
  contestname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OneContestSimpleInfo::contestname() const {
  // @@protoc_insertion_point(field_get:pb.OneContestSimpleInfo.ContestName)
  return contestname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OneContestSimpleInfo::set_contestname(const ::std::string& value) {
  
  contestname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.OneContestSimpleInfo.ContestName)
}
 void OneContestSimpleInfo::set_contestname(const char* value) {
  
  contestname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.OneContestSimpleInfo.ContestName)
}
 void OneContestSimpleInfo::set_contestname(const char* value, size_t size) {
  
  contestname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.OneContestSimpleInfo.ContestName)
}
 ::std::string* OneContestSimpleInfo::mutable_contestname() {
  
  // @@protoc_insertion_point(field_mutable:pb.OneContestSimpleInfo.ContestName)
  return contestname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OneContestSimpleInfo::release_contestname() {
  // @@protoc_insertion_point(field_release:pb.OneContestSimpleInfo.ContestName)
  
  return contestname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OneContestSimpleInfo::set_allocated_contestname(::std::string* contestname) {
  if (contestname != NULL) {
    
  } else {
    
  }
  contestname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contestname);
  // @@protoc_insertion_point(field_set_allocated:pb.OneContestSimpleInfo.ContestName)
}

// optional string ContestDescribe = 6;
void OneContestSimpleInfo::clear_contestdescribe() {
  contestdescribe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OneContestSimpleInfo::contestdescribe() const {
  // @@protoc_insertion_point(field_get:pb.OneContestSimpleInfo.ContestDescribe)
  return contestdescribe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OneContestSimpleInfo::set_contestdescribe(const ::std::string& value) {
  
  contestdescribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.OneContestSimpleInfo.ContestDescribe)
}
 void OneContestSimpleInfo::set_contestdescribe(const char* value) {
  
  contestdescribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.OneContestSimpleInfo.ContestDescribe)
}
 void OneContestSimpleInfo::set_contestdescribe(const char* value, size_t size) {
  
  contestdescribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.OneContestSimpleInfo.ContestDescribe)
}
 ::std::string* OneContestSimpleInfo::mutable_contestdescribe() {
  
  // @@protoc_insertion_point(field_mutable:pb.OneContestSimpleInfo.ContestDescribe)
  return contestdescribe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OneContestSimpleInfo::release_contestdescribe() {
  // @@protoc_insertion_point(field_release:pb.OneContestSimpleInfo.ContestDescribe)
  
  return contestdescribe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OneContestSimpleInfo::set_allocated_contestdescribe(::std::string* contestdescribe) {
  if (contestdescribe != NULL) {
    
  } else {
    
  }
  contestdescribe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contestdescribe);
  // @@protoc_insertion_point(field_set_allocated:pb.OneContestSimpleInfo.ContestDescribe)
}

// optional string CreatePlayerName = 7;
void OneContestSimpleInfo::clear_createplayername() {
  createplayername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OneContestSimpleInfo::createplayername() const {
  // @@protoc_insertion_point(field_get:pb.OneContestSimpleInfo.CreatePlayerName)
  return createplayername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OneContestSimpleInfo::set_createplayername(const ::std::string& value) {
  
  createplayername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.OneContestSimpleInfo.CreatePlayerName)
}
 void OneContestSimpleInfo::set_createplayername(const char* value) {
  
  createplayername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.OneContestSimpleInfo.CreatePlayerName)
}
 void OneContestSimpleInfo::set_createplayername(const char* value, size_t size) {
  
  createplayername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.OneContestSimpleInfo.CreatePlayerName)
}
 ::std::string* OneContestSimpleInfo::mutable_createplayername() {
  
  // @@protoc_insertion_point(field_mutable:pb.OneContestSimpleInfo.CreatePlayerName)
  return createplayername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OneContestSimpleInfo::release_createplayername() {
  // @@protoc_insertion_point(field_release:pb.OneContestSimpleInfo.CreatePlayerName)
  
  return createplayername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OneContestSimpleInfo::set_allocated_createplayername(::std::string* createplayername) {
  if (createplayername != NULL) {
    
  } else {
    
  }
  createplayername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), createplayername);
  // @@protoc_insertion_point(field_set_allocated:pb.OneContestSimpleInfo.CreatePlayerName)
}

// optional uint64 CreatePlayerUID = 8;
void OneContestSimpleInfo::clear_createplayeruid() {
  createplayeruid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 OneContestSimpleInfo::createplayeruid() const {
  // @@protoc_insertion_point(field_get:pb.OneContestSimpleInfo.CreatePlayerUID)
  return createplayeruid_;
}
 void OneContestSimpleInfo::set_createplayeruid(::google::protobuf::uint64 value) {
  
  createplayeruid_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestSimpleInfo.CreatePlayerUID)
}

// optional bool SetLoopFirst = 9;
void OneContestSimpleInfo::clear_setloopfirst() {
  setloopfirst_ = false;
}
 bool OneContestSimpleInfo::setloopfirst() const {
  // @@protoc_insertion_point(field_get:pb.OneContestSimpleInfo.SetLoopFirst)
  return setloopfirst_;
}
 void OneContestSimpleInfo::set_setloopfirst(bool value) {
  
  setloopfirst_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestSimpleInfo.SetLoopFirst)
}

// optional uint32 SignPlayerNum = 10;
void OneContestSimpleInfo::clear_signplayernum() {
  signplayernum_ = 0u;
}
 ::google::protobuf::uint32 OneContestSimpleInfo::signplayernum() const {
  // @@protoc_insertion_point(field_get:pb.OneContestSimpleInfo.SignPlayerNum)
  return signplayernum_;
}
 void OneContestSimpleInfo::set_signplayernum(::google::protobuf::uint32 value) {
  
  signplayernum_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestSimpleInfo.SignPlayerNum)
}

// optional uint32 MaybeContestFightMintues1 = 11;
void OneContestSimpleInfo::clear_maybecontestfightmintues1() {
  maybecontestfightmintues1_ = 0u;
}
 ::google::protobuf::uint32 OneContestSimpleInfo::maybecontestfightmintues1() const {
  // @@protoc_insertion_point(field_get:pb.OneContestSimpleInfo.MaybeContestFightMintues1)
  return maybecontestfightmintues1_;
}
 void OneContestSimpleInfo::set_maybecontestfightmintues1(::google::protobuf::uint32 value) {
  
  maybecontestfightmintues1_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestSimpleInfo.MaybeContestFightMintues1)
}

// optional uint32 MaybeContestFightMintues2 = 12;
void OneContestSimpleInfo::clear_maybecontestfightmintues2() {
  maybecontestfightmintues2_ = 0u;
}
 ::google::protobuf::uint32 OneContestSimpleInfo::maybecontestfightmintues2() const {
  // @@protoc_insertion_point(field_get:pb.OneContestSimpleInfo.MaybeContestFightMintues2)
  return maybecontestfightmintues2_;
}
 void OneContestSimpleInfo::set_maybecontestfightmintues2(::google::protobuf::uint32 value) {
  
  maybecontestfightmintues2_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestSimpleInfo.MaybeContestFightMintues2)
}

// optional uint32 LoopBoTime = 13;
void OneContestSimpleInfo::clear_loopbotime() {
  loopbotime_ = 0u;
}
 ::google::protobuf::uint32 OneContestSimpleInfo::loopbotime() const {
  // @@protoc_insertion_point(field_get:pb.OneContestSimpleInfo.LoopBoTime)
  return loopbotime_;
}
 void OneContestSimpleInfo::set_loopbotime(::google::protobuf::uint32 value) {
  
  loopbotime_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestSimpleInfo.LoopBoTime)
}

// optional uint32 FinalBOTimes = 14;
void OneContestSimpleInfo::clear_finalbotimes() {
  finalbotimes_ = 0u;
}
 ::google::protobuf::uint32 OneContestSimpleInfo::finalbotimes() const {
  // @@protoc_insertion_point(field_get:pb.OneContestSimpleInfo.FinalBOTimes)
  return finalbotimes_;
}
 void OneContestSimpleInfo::set_finalbotimes(::google::protobuf::uint32 value) {
  
  finalbotimes_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestSimpleInfo.FinalBOTimes)
}

// optional uint32 DeathFightBOTimes = 15;
void OneContestSimpleInfo::clear_deathfightbotimes() {
  deathfightbotimes_ = 0u;
}
 ::google::protobuf::uint32 OneContestSimpleInfo::deathfightbotimes() const {
  // @@protoc_insertion_point(field_get:pb.OneContestSimpleInfo.DeathFightBOTimes)
  return deathfightbotimes_;
}
 void OneContestSimpleInfo::set_deathfightbotimes(::google::protobuf::uint32 value) {
  
  deathfightbotimes_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestSimpleInfo.DeathFightBOTimes)
}

// optional bool SetEveryFightWaitTimeFixed = 16;
void OneContestSimpleInfo::clear_seteveryfightwaittimefixed() {
  seteveryfightwaittimefixed_ = false;
}
 bool OneContestSimpleInfo::seteveryfightwaittimefixed() const {
  // @@protoc_insertion_point(field_get:pb.OneContestSimpleInfo.SetEveryFightWaitTimeFixed)
  return seteveryfightwaittimefixed_;
}
 void OneContestSimpleInfo::set_seteveryfightwaittimefixed(bool value) {
  
  seteveryfightwaittimefixed_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestSimpleInfo.SetEveryFightWaitTimeFixed)
}

// optional uint32 ContestState = 17;
void OneContestSimpleInfo::clear_conteststate() {
  conteststate_ = 0u;
}
 ::google::protobuf::uint32 OneContestSimpleInfo::conteststate() const {
  // @@protoc_insertion_point(field_get:pb.OneContestSimpleInfo.ContestState)
  return conteststate_;
}
 void OneContestSimpleInfo::set_conteststate(::google::protobuf::uint32 value) {
  
  conteststate_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestSimpleInfo.ContestState)
}

// optional uint32 OpenTeamNum = 18;
void OneContestSimpleInfo::clear_openteamnum() {
  openteamnum_ = 0u;
}
 ::google::protobuf::uint32 OneContestSimpleInfo::openteamnum() const {
  // @@protoc_insertion_point(field_get:pb.OneContestSimpleInfo.OpenTeamNum)
  return openteamnum_;
}
 void OneContestSimpleInfo::set_openteamnum(::google::protobuf::uint32 value) {
  
  openteamnum_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestSimpleInfo.OpenTeamNum)
}

// optional bool NeedPassword = 19;
void OneContestSimpleInfo::clear_needpassword() {
  needpassword_ = false;
}
 bool OneContestSimpleInfo::needpassword() const {
  // @@protoc_insertion_point(field_get:pb.OneContestSimpleInfo.NeedPassword)
  return needpassword_;
}
 void OneContestSimpleInfo::set_needpassword(bool value) {
  
  needpassword_ = value;
  // @@protoc_insertion_point(field_set:pb.OneContestSimpleInfo.NeedPassword)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SCreateContest_400::kContestLevelFieldNumber;
const int C2SCreateContest_400::kShowContestFieldNumber;
const int C2SCreateContest_400::kIsSecretFieldNumber;
const int C2SCreateContest_400::kContestNameFieldNumber;
const int C2SCreateContest_400::kContestDescribeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SCreateContest_400::C2SCreateContest_400()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SCreateContest_400)
}

void C2SCreateContest_400::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SCreateContest_400::C2SCreateContest_400(const C2SCreateContest_400& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SCreateContest_400)
}

void C2SCreateContest_400::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  contestlevel_ = 0u;
  showcontest_ = false;
  issecret_ = false;
  contestname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contestdescribe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2SCreateContest_400::~C2SCreateContest_400() {
  // @@protoc_insertion_point(destructor:pb.C2SCreateContest_400)
  SharedDtor();
}

void C2SCreateContest_400::SharedDtor() {
  contestname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contestdescribe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2SCreateContest_400::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SCreateContest_400::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SCreateContest_400_descriptor_;
}

const C2SCreateContest_400& C2SCreateContest_400::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SCreateContest_400* C2SCreateContest_400::default_instance_ = NULL;

C2SCreateContest_400* C2SCreateContest_400::New(::google::protobuf::Arena* arena) const {
  C2SCreateContest_400* n = new C2SCreateContest_400;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SCreateContest_400::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SCreateContest_400)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(C2SCreateContest_400, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<C2SCreateContest_400*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(contestlevel_, issecret_);
  contestname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contestdescribe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool C2SCreateContest_400::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SCreateContest_400)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ContestLevel = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contestlevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ShowContest;
        break;
      }

      // optional bool ShowContest = 2;
      case 2: {
        if (tag == 16) {
         parse_ShowContest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &showcontest_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_IsSecret;
        break;
      }

      // optional bool IsSecret = 3;
      case 3: {
        if (tag == 24) {
         parse_IsSecret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issecret_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ContestName;
        break;
      }

      // optional string ContestName = 4;
      case 4: {
        if (tag == 34) {
         parse_ContestName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contestname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contestname().data(), this->contestname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SCreateContest_400.ContestName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ContestDescribe;
        break;
      }

      // optional string ContestDescribe = 5;
      case 5: {
        if (tag == 42) {
         parse_ContestDescribe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contestdescribe()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contestdescribe().data(), this->contestdescribe().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SCreateContest_400.ContestDescribe"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SCreateContest_400)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SCreateContest_400)
  return false;
#undef DO_
}

void C2SCreateContest_400::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SCreateContest_400)
  // optional uint32 ContestLevel = 1;
  if (this->contestlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->contestlevel(), output);
  }

  // optional bool ShowContest = 2;
  if (this->showcontest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->showcontest(), output);
  }

  // optional bool IsSecret = 3;
  if (this->issecret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->issecret(), output);
  }

  // optional string ContestName = 4;
  if (this->contestname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contestname().data(), this->contestname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SCreateContest_400.ContestName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->contestname(), output);
  }

  // optional string ContestDescribe = 5;
  if (this->contestdescribe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contestdescribe().data(), this->contestdescribe().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SCreateContest_400.ContestDescribe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->contestdescribe(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SCreateContest_400)
}

::google::protobuf::uint8* C2SCreateContest_400::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SCreateContest_400)
  // optional uint32 ContestLevel = 1;
  if (this->contestlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->contestlevel(), target);
  }

  // optional bool ShowContest = 2;
  if (this->showcontest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->showcontest(), target);
  }

  // optional bool IsSecret = 3;
  if (this->issecret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->issecret(), target);
  }

  // optional string ContestName = 4;
  if (this->contestname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contestname().data(), this->contestname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SCreateContest_400.ContestName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->contestname(), target);
  }

  // optional string ContestDescribe = 5;
  if (this->contestdescribe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contestdescribe().data(), this->contestdescribe().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SCreateContest_400.ContestDescribe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->contestdescribe(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SCreateContest_400)
  return target;
}

int C2SCreateContest_400::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SCreateContest_400)
  int total_size = 0;

  // optional uint32 ContestLevel = 1;
  if (this->contestlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contestlevel());
  }

  // optional bool ShowContest = 2;
  if (this->showcontest() != 0) {
    total_size += 1 + 1;
  }

  // optional bool IsSecret = 3;
  if (this->issecret() != 0) {
    total_size += 1 + 1;
  }

  // optional string ContestName = 4;
  if (this->contestname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contestname());
  }

  // optional string ContestDescribe = 5;
  if (this->contestdescribe().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contestdescribe());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SCreateContest_400::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SCreateContest_400)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SCreateContest_400* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SCreateContest_400>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SCreateContest_400)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SCreateContest_400)
    MergeFrom(*source);
  }
}

void C2SCreateContest_400::MergeFrom(const C2SCreateContest_400& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SCreateContest_400)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.contestlevel() != 0) {
    set_contestlevel(from.contestlevel());
  }
  if (from.showcontest() != 0) {
    set_showcontest(from.showcontest());
  }
  if (from.issecret() != 0) {
    set_issecret(from.issecret());
  }
  if (from.contestname().size() > 0) {

    contestname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contestname_);
  }
  if (from.contestdescribe().size() > 0) {

    contestdescribe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contestdescribe_);
  }
}

void C2SCreateContest_400::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SCreateContest_400)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SCreateContest_400::CopyFrom(const C2SCreateContest_400& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SCreateContest_400)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SCreateContest_400::IsInitialized() const {

  return true;
}

void C2SCreateContest_400::Swap(C2SCreateContest_400* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SCreateContest_400::InternalSwap(C2SCreateContest_400* other) {
  std::swap(contestlevel_, other->contestlevel_);
  std::swap(showcontest_, other->showcontest_);
  std::swap(issecret_, other->issecret_);
  contestname_.Swap(&other->contestname_);
  contestdescribe_.Swap(&other->contestdescribe_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SCreateContest_400::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SCreateContest_400_descriptor_;
  metadata.reflection = C2SCreateContest_400_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SCreateContest_400

// optional uint32 ContestLevel = 1;
void C2SCreateContest_400::clear_contestlevel() {
  contestlevel_ = 0u;
}
 ::google::protobuf::uint32 C2SCreateContest_400::contestlevel() const {
  // @@protoc_insertion_point(field_get:pb.C2SCreateContest_400.ContestLevel)
  return contestlevel_;
}
 void C2SCreateContest_400::set_contestlevel(::google::protobuf::uint32 value) {
  
  contestlevel_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SCreateContest_400.ContestLevel)
}

// optional bool ShowContest = 2;
void C2SCreateContest_400::clear_showcontest() {
  showcontest_ = false;
}
 bool C2SCreateContest_400::showcontest() const {
  // @@protoc_insertion_point(field_get:pb.C2SCreateContest_400.ShowContest)
  return showcontest_;
}
 void C2SCreateContest_400::set_showcontest(bool value) {
  
  showcontest_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SCreateContest_400.ShowContest)
}

// optional bool IsSecret = 3;
void C2SCreateContest_400::clear_issecret() {
  issecret_ = false;
}
 bool C2SCreateContest_400::issecret() const {
  // @@protoc_insertion_point(field_get:pb.C2SCreateContest_400.IsSecret)
  return issecret_;
}
 void C2SCreateContest_400::set_issecret(bool value) {
  
  issecret_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SCreateContest_400.IsSecret)
}

// optional string ContestName = 4;
void C2SCreateContest_400::clear_contestname() {
  contestname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SCreateContest_400::contestname() const {
  // @@protoc_insertion_point(field_get:pb.C2SCreateContest_400.ContestName)
  return contestname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SCreateContest_400::set_contestname(const ::std::string& value) {
  
  contestname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SCreateContest_400.ContestName)
}
 void C2SCreateContest_400::set_contestname(const char* value) {
  
  contestname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SCreateContest_400.ContestName)
}
 void C2SCreateContest_400::set_contestname(const char* value, size_t size) {
  
  contestname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SCreateContest_400.ContestName)
}
 ::std::string* C2SCreateContest_400::mutable_contestname() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SCreateContest_400.ContestName)
  return contestname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SCreateContest_400::release_contestname() {
  // @@protoc_insertion_point(field_release:pb.C2SCreateContest_400.ContestName)
  
  return contestname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SCreateContest_400::set_allocated_contestname(::std::string* contestname) {
  if (contestname != NULL) {
    
  } else {
    
  }
  contestname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contestname);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SCreateContest_400.ContestName)
}

// optional string ContestDescribe = 5;
void C2SCreateContest_400::clear_contestdescribe() {
  contestdescribe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SCreateContest_400::contestdescribe() const {
  // @@protoc_insertion_point(field_get:pb.C2SCreateContest_400.ContestDescribe)
  return contestdescribe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SCreateContest_400::set_contestdescribe(const ::std::string& value) {
  
  contestdescribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SCreateContest_400.ContestDescribe)
}
 void C2SCreateContest_400::set_contestdescribe(const char* value) {
  
  contestdescribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SCreateContest_400.ContestDescribe)
}
 void C2SCreateContest_400::set_contestdescribe(const char* value, size_t size) {
  
  contestdescribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SCreateContest_400.ContestDescribe)
}
 ::std::string* C2SCreateContest_400::mutable_contestdescribe() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SCreateContest_400.ContestDescribe)
  return contestdescribe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SCreateContest_400::release_contestdescribe() {
  // @@protoc_insertion_point(field_release:pb.C2SCreateContest_400.ContestDescribe)
  
  return contestdescribe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SCreateContest_400::set_allocated_contestdescribe(::std::string* contestdescribe) {
  if (contestdescribe != NULL) {
    
  } else {
    
  }
  contestdescribe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contestdescribe);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SCreateContest_400.ContestDescribe)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CBroadContest_400::kTheContestInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CBroadContest_400::S2CBroadContest_400()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CBroadContest_400)
}

void S2CBroadContest_400::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  thecontestinfo_ = const_cast< ::pb::OneContestInfo*>(&::pb::OneContestInfo::default_instance());
}

S2CBroadContest_400::S2CBroadContest_400(const S2CBroadContest_400& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CBroadContest_400)
}

void S2CBroadContest_400::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  thecontestinfo_ = NULL;
}

S2CBroadContest_400::~S2CBroadContest_400() {
  // @@protoc_insertion_point(destructor:pb.S2CBroadContest_400)
  SharedDtor();
}

void S2CBroadContest_400::SharedDtor() {
  if (this != default_instance_) {
    delete thecontestinfo_;
  }
}

void S2CBroadContest_400::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CBroadContest_400::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CBroadContest_400_descriptor_;
}

const S2CBroadContest_400& S2CBroadContest_400::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CBroadContest_400* S2CBroadContest_400::default_instance_ = NULL;

S2CBroadContest_400* S2CBroadContest_400::New(::google::protobuf::Arena* arena) const {
  S2CBroadContest_400* n = new S2CBroadContest_400;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CBroadContest_400::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CBroadContest_400)
  if (GetArenaNoVirtual() == NULL && thecontestinfo_ != NULL) delete thecontestinfo_;
  thecontestinfo_ = NULL;
}

bool S2CBroadContest_400::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CBroadContest_400)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.OneContestInfo TheContestInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_thecontestinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CBroadContest_400)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CBroadContest_400)
  return false;
#undef DO_
}

void S2CBroadContest_400::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CBroadContest_400)
  // optional .pb.OneContestInfo TheContestInfo = 1;
  if (this->has_thecontestinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->thecontestinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CBroadContest_400)
}

::google::protobuf::uint8* S2CBroadContest_400::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CBroadContest_400)
  // optional .pb.OneContestInfo TheContestInfo = 1;
  if (this->has_thecontestinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->thecontestinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CBroadContest_400)
  return target;
}

int S2CBroadContest_400::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CBroadContest_400)
  int total_size = 0;

  // optional .pb.OneContestInfo TheContestInfo = 1;
  if (this->has_thecontestinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->thecontestinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CBroadContest_400::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CBroadContest_400)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CBroadContest_400* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CBroadContest_400>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CBroadContest_400)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CBroadContest_400)
    MergeFrom(*source);
  }
}

void S2CBroadContest_400::MergeFrom(const S2CBroadContest_400& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CBroadContest_400)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_thecontestinfo()) {
    mutable_thecontestinfo()->::pb::OneContestInfo::MergeFrom(from.thecontestinfo());
  }
}

void S2CBroadContest_400::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CBroadContest_400)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CBroadContest_400::CopyFrom(const S2CBroadContest_400& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CBroadContest_400)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CBroadContest_400::IsInitialized() const {

  return true;
}

void S2CBroadContest_400::Swap(S2CBroadContest_400* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CBroadContest_400::InternalSwap(S2CBroadContest_400* other) {
  std::swap(thecontestinfo_, other->thecontestinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CBroadContest_400::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CBroadContest_400_descriptor_;
  metadata.reflection = S2CBroadContest_400_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CBroadContest_400

// optional .pb.OneContestInfo TheContestInfo = 1;
bool S2CBroadContest_400::has_thecontestinfo() const {
  return !_is_default_instance_ && thecontestinfo_ != NULL;
}
void S2CBroadContest_400::clear_thecontestinfo() {
  if (GetArenaNoVirtual() == NULL && thecontestinfo_ != NULL) delete thecontestinfo_;
  thecontestinfo_ = NULL;
}
const ::pb::OneContestInfo& S2CBroadContest_400::thecontestinfo() const {
  // @@protoc_insertion_point(field_get:pb.S2CBroadContest_400.TheContestInfo)
  return thecontestinfo_ != NULL ? *thecontestinfo_ : *default_instance_->thecontestinfo_;
}
::pb::OneContestInfo* S2CBroadContest_400::mutable_thecontestinfo() {
  
  if (thecontestinfo_ == NULL) {
    thecontestinfo_ = new ::pb::OneContestInfo;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CBroadContest_400.TheContestInfo)
  return thecontestinfo_;
}
::pb::OneContestInfo* S2CBroadContest_400::release_thecontestinfo() {
  // @@protoc_insertion_point(field_release:pb.S2CBroadContest_400.TheContestInfo)
  
  ::pb::OneContestInfo* temp = thecontestinfo_;
  thecontestinfo_ = NULL;
  return temp;
}
void S2CBroadContest_400::set_allocated_thecontestinfo(::pb::OneContestInfo* thecontestinfo) {
  delete thecontestinfo_;
  thecontestinfo_ = thecontestinfo;
  if (thecontestinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CBroadContest_400.TheContestInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetContestList_401::C2SGetContestList_401()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetContestList_401)
}

void C2SGetContestList_401::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetContestList_401::C2SGetContestList_401(const C2SGetContestList_401& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetContestList_401)
}

void C2SGetContestList_401::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGetContestList_401::~C2SGetContestList_401() {
  // @@protoc_insertion_point(destructor:pb.C2SGetContestList_401)
  SharedDtor();
}

void C2SGetContestList_401::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetContestList_401::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetContestList_401::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetContestList_401_descriptor_;
}

const C2SGetContestList_401& C2SGetContestList_401::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetContestList_401* C2SGetContestList_401::default_instance_ = NULL;

C2SGetContestList_401* C2SGetContestList_401::New(::google::protobuf::Arena* arena) const {
  C2SGetContestList_401* n = new C2SGetContestList_401;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetContestList_401::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetContestList_401)
}

bool C2SGetContestList_401::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetContestList_401)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetContestList_401)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetContestList_401)
  return false;
#undef DO_
}

void C2SGetContestList_401::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetContestList_401)
  // @@protoc_insertion_point(serialize_end:pb.C2SGetContestList_401)
}

::google::protobuf::uint8* C2SGetContestList_401::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetContestList_401)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetContestList_401)
  return target;
}

int C2SGetContestList_401::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetContestList_401)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetContestList_401::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetContestList_401)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetContestList_401* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetContestList_401>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetContestList_401)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetContestList_401)
    MergeFrom(*source);
  }
}

void C2SGetContestList_401::MergeFrom(const C2SGetContestList_401& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetContestList_401)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SGetContestList_401::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetContestList_401)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetContestList_401::CopyFrom(const C2SGetContestList_401& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetContestList_401)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetContestList_401::IsInitialized() const {

  return true;
}

void C2SGetContestList_401::Swap(C2SGetContestList_401* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetContestList_401::InternalSwap(C2SGetContestList_401* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetContestList_401::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetContestList_401_descriptor_;
  metadata.reflection = C2SGetContestList_401_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetContestList_401

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetContestList_401::kTheContestInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetContestList_401::S2CGetContestList_401()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetContestList_401)
}

void S2CGetContestList_401::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetContestList_401::S2CGetContestList_401(const S2CGetContestList_401& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetContestList_401)
}

void S2CGetContestList_401::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CGetContestList_401::~S2CGetContestList_401() {
  // @@protoc_insertion_point(destructor:pb.S2CGetContestList_401)
  SharedDtor();
}

void S2CGetContestList_401::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetContestList_401::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetContestList_401::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetContestList_401_descriptor_;
}

const S2CGetContestList_401& S2CGetContestList_401::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetContestList_401* S2CGetContestList_401::default_instance_ = NULL;

S2CGetContestList_401* S2CGetContestList_401::New(::google::protobuf::Arena* arena) const {
  S2CGetContestList_401* n = new S2CGetContestList_401;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetContestList_401::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetContestList_401)
  thecontestinfolist_.Clear();
}

bool S2CGetContestList_401::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetContestList_401)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.OneContestSimpleInfo TheContestInfoList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_TheContestInfoList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_thecontestinfolist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_TheContestInfoList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetContestList_401)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetContestList_401)
  return false;
#undef DO_
}

void S2CGetContestList_401::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetContestList_401)
  // repeated .pb.OneContestSimpleInfo TheContestInfoList = 1;
  for (unsigned int i = 0, n = this->thecontestinfolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->thecontestinfolist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetContestList_401)
}

::google::protobuf::uint8* S2CGetContestList_401::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetContestList_401)
  // repeated .pb.OneContestSimpleInfo TheContestInfoList = 1;
  for (unsigned int i = 0, n = this->thecontestinfolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->thecontestinfolist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetContestList_401)
  return target;
}

int S2CGetContestList_401::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetContestList_401)
  int total_size = 0;

  // repeated .pb.OneContestSimpleInfo TheContestInfoList = 1;
  total_size += 1 * this->thecontestinfolist_size();
  for (int i = 0; i < this->thecontestinfolist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->thecontestinfolist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetContestList_401::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetContestList_401)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetContestList_401* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetContestList_401>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetContestList_401)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetContestList_401)
    MergeFrom(*source);
  }
}

void S2CGetContestList_401::MergeFrom(const S2CGetContestList_401& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetContestList_401)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  thecontestinfolist_.MergeFrom(from.thecontestinfolist_);
}

void S2CGetContestList_401::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetContestList_401)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetContestList_401::CopyFrom(const S2CGetContestList_401& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetContestList_401)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetContestList_401::IsInitialized() const {

  return true;
}

void S2CGetContestList_401::Swap(S2CGetContestList_401* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetContestList_401::InternalSwap(S2CGetContestList_401* other) {
  thecontestinfolist_.UnsafeArenaSwap(&other->thecontestinfolist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetContestList_401::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetContestList_401_descriptor_;
  metadata.reflection = S2CGetContestList_401_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetContestList_401

// repeated .pb.OneContestSimpleInfo TheContestInfoList = 1;
int S2CGetContestList_401::thecontestinfolist_size() const {
  return thecontestinfolist_.size();
}
void S2CGetContestList_401::clear_thecontestinfolist() {
  thecontestinfolist_.Clear();
}
const ::pb::OneContestSimpleInfo& S2CGetContestList_401::thecontestinfolist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetContestList_401.TheContestInfoList)
  return thecontestinfolist_.Get(index);
}
::pb::OneContestSimpleInfo* S2CGetContestList_401::mutable_thecontestinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetContestList_401.TheContestInfoList)
  return thecontestinfolist_.Mutable(index);
}
::pb::OneContestSimpleInfo* S2CGetContestList_401::add_thecontestinfolist() {
  // @@protoc_insertion_point(field_add:pb.S2CGetContestList_401.TheContestInfoList)
  return thecontestinfolist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::OneContestSimpleInfo >*
S2CGetContestList_401::mutable_thecontestinfolist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetContestList_401.TheContestInfoList)
  return &thecontestinfolist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::OneContestSimpleInfo >&
S2CGetContestList_401::thecontestinfolist() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetContestList_401.TheContestInfoList)
  return thecontestinfolist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SSignContest_402::kContestIdFieldNumber;
const int C2SSignContest_402::kPasswordStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SSignContest_402::C2SSignContest_402()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SSignContest_402)
}

void C2SSignContest_402::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SSignContest_402::C2SSignContest_402(const C2SSignContest_402& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SSignContest_402)
}

void C2SSignContest_402::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  contestid_ = 0u;
  passwordstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2SSignContest_402::~C2SSignContest_402() {
  // @@protoc_insertion_point(destructor:pb.C2SSignContest_402)
  SharedDtor();
}

void C2SSignContest_402::SharedDtor() {
  passwordstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2SSignContest_402::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SSignContest_402::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SSignContest_402_descriptor_;
}

const C2SSignContest_402& C2SSignContest_402::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SSignContest_402* C2SSignContest_402::default_instance_ = NULL;

C2SSignContest_402* C2SSignContest_402::New(::google::protobuf::Arena* arena) const {
  C2SSignContest_402* n = new C2SSignContest_402;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SSignContest_402::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SSignContest_402)
  contestid_ = 0u;
  passwordstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2SSignContest_402::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SSignContest_402)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ContestId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contestid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_PasswordStr;
        break;
      }

      // optional string PasswordStr = 2;
      case 2: {
        if (tag == 18) {
         parse_PasswordStr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwordstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passwordstr().data(), this->passwordstr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SSignContest_402.PasswordStr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SSignContest_402)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SSignContest_402)
  return false;
#undef DO_
}

void C2SSignContest_402::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SSignContest_402)
  // optional uint32 ContestId = 1;
  if (this->contestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->contestid(), output);
  }

  // optional string PasswordStr = 2;
  if (this->passwordstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwordstr().data(), this->passwordstr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SSignContest_402.PasswordStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->passwordstr(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SSignContest_402)
}

::google::protobuf::uint8* C2SSignContest_402::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SSignContest_402)
  // optional uint32 ContestId = 1;
  if (this->contestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->contestid(), target);
  }

  // optional string PasswordStr = 2;
  if (this->passwordstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwordstr().data(), this->passwordstr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SSignContest_402.PasswordStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->passwordstr(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SSignContest_402)
  return target;
}

int C2SSignContest_402::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SSignContest_402)
  int total_size = 0;

  // optional uint32 ContestId = 1;
  if (this->contestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contestid());
  }

  // optional string PasswordStr = 2;
  if (this->passwordstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwordstr());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SSignContest_402::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SSignContest_402)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SSignContest_402* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SSignContest_402>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SSignContest_402)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SSignContest_402)
    MergeFrom(*source);
  }
}

void C2SSignContest_402::MergeFrom(const C2SSignContest_402& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SSignContest_402)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.contestid() != 0) {
    set_contestid(from.contestid());
  }
  if (from.passwordstr().size() > 0) {

    passwordstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwordstr_);
  }
}

void C2SSignContest_402::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SSignContest_402)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SSignContest_402::CopyFrom(const C2SSignContest_402& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SSignContest_402)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SSignContest_402::IsInitialized() const {

  return true;
}

void C2SSignContest_402::Swap(C2SSignContest_402* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SSignContest_402::InternalSwap(C2SSignContest_402* other) {
  std::swap(contestid_, other->contestid_);
  passwordstr_.Swap(&other->passwordstr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SSignContest_402::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SSignContest_402_descriptor_;
  metadata.reflection = C2SSignContest_402_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SSignContest_402

// optional uint32 ContestId = 1;
void C2SSignContest_402::clear_contestid() {
  contestid_ = 0u;
}
 ::google::protobuf::uint32 C2SSignContest_402::contestid() const {
  // @@protoc_insertion_point(field_get:pb.C2SSignContest_402.ContestId)
  return contestid_;
}
 void C2SSignContest_402::set_contestid(::google::protobuf::uint32 value) {
  
  contestid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SSignContest_402.ContestId)
}

// optional string PasswordStr = 2;
void C2SSignContest_402::clear_passwordstr() {
  passwordstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SSignContest_402::passwordstr() const {
  // @@protoc_insertion_point(field_get:pb.C2SSignContest_402.PasswordStr)
  return passwordstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SSignContest_402::set_passwordstr(const ::std::string& value) {
  
  passwordstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SSignContest_402.PasswordStr)
}
 void C2SSignContest_402::set_passwordstr(const char* value) {
  
  passwordstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SSignContest_402.PasswordStr)
}
 void C2SSignContest_402::set_passwordstr(const char* value, size_t size) {
  
  passwordstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SSignContest_402.PasswordStr)
}
 ::std::string* C2SSignContest_402::mutable_passwordstr() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SSignContest_402.PasswordStr)
  return passwordstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SSignContest_402::release_passwordstr() {
  // @@protoc_insertion_point(field_release:pb.C2SSignContest_402.PasswordStr)
  
  return passwordstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SSignContest_402::set_allocated_passwordstr(::std::string* passwordstr) {
  if (passwordstr != NULL) {
    
  } else {
    
  }
  passwordstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwordstr);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SSignContest_402.PasswordStr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CSignContest_402::kSignCodeFieldNumber;
const int S2CSignContest_402::kTheContestInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CSignContest_402::S2CSignContest_402()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CSignContest_402)
}

void S2CSignContest_402::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  thecontestinfo_ = const_cast< ::pb::OneContestInfo*>(&::pb::OneContestInfo::default_instance());
}

S2CSignContest_402::S2CSignContest_402(const S2CSignContest_402& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CSignContest_402)
}

void S2CSignContest_402::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  signcode_ = 0u;
  thecontestinfo_ = NULL;
}

S2CSignContest_402::~S2CSignContest_402() {
  // @@protoc_insertion_point(destructor:pb.S2CSignContest_402)
  SharedDtor();
}

void S2CSignContest_402::SharedDtor() {
  if (this != default_instance_) {
    delete thecontestinfo_;
  }
}

void S2CSignContest_402::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CSignContest_402::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CSignContest_402_descriptor_;
}

const S2CSignContest_402& S2CSignContest_402::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CSignContest_402* S2CSignContest_402::default_instance_ = NULL;

S2CSignContest_402* S2CSignContest_402::New(::google::protobuf::Arena* arena) const {
  S2CSignContest_402* n = new S2CSignContest_402;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CSignContest_402::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CSignContest_402)
  signcode_ = 0u;
  if (GetArenaNoVirtual() == NULL && thecontestinfo_ != NULL) delete thecontestinfo_;
  thecontestinfo_ = NULL;
}

bool S2CSignContest_402::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CSignContest_402)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 SignCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &signcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_TheContestInfo;
        break;
      }

      // optional .pb.OneContestInfo TheContestInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_TheContestInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_thecontestinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CSignContest_402)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CSignContest_402)
  return false;
#undef DO_
}

void S2CSignContest_402::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CSignContest_402)
  // optional uint32 SignCode = 1;
  if (this->signcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->signcode(), output);
  }

  // optional .pb.OneContestInfo TheContestInfo = 2;
  if (this->has_thecontestinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->thecontestinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CSignContest_402)
}

::google::protobuf::uint8* S2CSignContest_402::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CSignContest_402)
  // optional uint32 SignCode = 1;
  if (this->signcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->signcode(), target);
  }

  // optional .pb.OneContestInfo TheContestInfo = 2;
  if (this->has_thecontestinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->thecontestinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CSignContest_402)
  return target;
}

int S2CSignContest_402::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CSignContest_402)
  int total_size = 0;

  // optional uint32 SignCode = 1;
  if (this->signcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->signcode());
  }

  // optional .pb.OneContestInfo TheContestInfo = 2;
  if (this->has_thecontestinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->thecontestinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CSignContest_402::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CSignContest_402)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CSignContest_402* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CSignContest_402>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CSignContest_402)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CSignContest_402)
    MergeFrom(*source);
  }
}

void S2CSignContest_402::MergeFrom(const S2CSignContest_402& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CSignContest_402)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.signcode() != 0) {
    set_signcode(from.signcode());
  }
  if (from.has_thecontestinfo()) {
    mutable_thecontestinfo()->::pb::OneContestInfo::MergeFrom(from.thecontestinfo());
  }
}

void S2CSignContest_402::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CSignContest_402)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CSignContest_402::CopyFrom(const S2CSignContest_402& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CSignContest_402)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CSignContest_402::IsInitialized() const {

  return true;
}

void S2CSignContest_402::Swap(S2CSignContest_402* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CSignContest_402::InternalSwap(S2CSignContest_402* other) {
  std::swap(signcode_, other->signcode_);
  std::swap(thecontestinfo_, other->thecontestinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CSignContest_402::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CSignContest_402_descriptor_;
  metadata.reflection = S2CSignContest_402_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CSignContest_402

// optional uint32 SignCode = 1;
void S2CSignContest_402::clear_signcode() {
  signcode_ = 0u;
}
 ::google::protobuf::uint32 S2CSignContest_402::signcode() const {
  // @@protoc_insertion_point(field_get:pb.S2CSignContest_402.SignCode)
  return signcode_;
}
 void S2CSignContest_402::set_signcode(::google::protobuf::uint32 value) {
  
  signcode_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CSignContest_402.SignCode)
}

// optional .pb.OneContestInfo TheContestInfo = 2;
bool S2CSignContest_402::has_thecontestinfo() const {
  return !_is_default_instance_ && thecontestinfo_ != NULL;
}
void S2CSignContest_402::clear_thecontestinfo() {
  if (GetArenaNoVirtual() == NULL && thecontestinfo_ != NULL) delete thecontestinfo_;
  thecontestinfo_ = NULL;
}
const ::pb::OneContestInfo& S2CSignContest_402::thecontestinfo() const {
  // @@protoc_insertion_point(field_get:pb.S2CSignContest_402.TheContestInfo)
  return thecontestinfo_ != NULL ? *thecontestinfo_ : *default_instance_->thecontestinfo_;
}
::pb::OneContestInfo* S2CSignContest_402::mutable_thecontestinfo() {
  
  if (thecontestinfo_ == NULL) {
    thecontestinfo_ = new ::pb::OneContestInfo;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CSignContest_402.TheContestInfo)
  return thecontestinfo_;
}
::pb::OneContestInfo* S2CSignContest_402::release_thecontestinfo() {
  // @@protoc_insertion_point(field_release:pb.S2CSignContest_402.TheContestInfo)
  
  ::pb::OneContestInfo* temp = thecontestinfo_;
  thecontestinfo_ = NULL;
  return temp;
}
void S2CSignContest_402::set_allocated_thecontestinfo(::pb::OneContestInfo* thecontestinfo) {
  delete thecontestinfo_;
  thecontestinfo_ = thecontestinfo;
  if (thecontestinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CSignContest_402.TheContestInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CSignContestToOther_413::kContestTeamIdFieldNumber;
const int S2CSignContestToOther_413::kAddPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CSignContestToOther_413::S2CSignContestToOther_413()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CSignContestToOther_413)
}

void S2CSignContestToOther_413::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CSignContestToOther_413::S2CSignContestToOther_413(const S2CSignContestToOther_413& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CSignContestToOther_413)
}

void S2CSignContestToOther_413::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  contestteamid_ = 0u;
}

S2CSignContestToOther_413::~S2CSignContestToOther_413() {
  // @@protoc_insertion_point(destructor:pb.S2CSignContestToOther_413)
  SharedDtor();
}

void S2CSignContestToOther_413::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CSignContestToOther_413::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CSignContestToOther_413::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CSignContestToOther_413_descriptor_;
}

const S2CSignContestToOther_413& S2CSignContestToOther_413::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CSignContestToOther_413* S2CSignContestToOther_413::default_instance_ = NULL;

S2CSignContestToOther_413* S2CSignContestToOther_413::New(::google::protobuf::Arena* arena) const {
  S2CSignContestToOther_413* n = new S2CSignContestToOther_413;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CSignContestToOther_413::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CSignContestToOther_413)
  contestteamid_ = 0u;
  addplayer_.Clear();
}

bool S2CSignContestToOther_413::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CSignContestToOther_413)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ContestTeamId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contestteamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_addPlayer;
        break;
      }

      // repeated .pb.OnePlayerInfo addPlayer = 2;
      case 2: {
        if (tag == 18) {
         parse_addPlayer:
          DO_(input->IncrementRecursionDepth());
         parse_loop_addPlayer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_addplayer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_addPlayer;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CSignContestToOther_413)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CSignContestToOther_413)
  return false;
#undef DO_
}

void S2CSignContestToOther_413::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CSignContestToOther_413)
  // optional uint32 ContestTeamId = 1;
  if (this->contestteamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->contestteamid(), output);
  }

  // repeated .pb.OnePlayerInfo addPlayer = 2;
  for (unsigned int i = 0, n = this->addplayer_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->addplayer(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CSignContestToOther_413)
}

::google::protobuf::uint8* S2CSignContestToOther_413::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CSignContestToOther_413)
  // optional uint32 ContestTeamId = 1;
  if (this->contestteamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->contestteamid(), target);
  }

  // repeated .pb.OnePlayerInfo addPlayer = 2;
  for (unsigned int i = 0, n = this->addplayer_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->addplayer(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CSignContestToOther_413)
  return target;
}

int S2CSignContestToOther_413::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CSignContestToOther_413)
  int total_size = 0;

  // optional uint32 ContestTeamId = 1;
  if (this->contestteamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contestteamid());
  }

  // repeated .pb.OnePlayerInfo addPlayer = 2;
  total_size += 1 * this->addplayer_size();
  for (int i = 0; i < this->addplayer_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->addplayer(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CSignContestToOther_413::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CSignContestToOther_413)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CSignContestToOther_413* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CSignContestToOther_413>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CSignContestToOther_413)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CSignContestToOther_413)
    MergeFrom(*source);
  }
}

void S2CSignContestToOther_413::MergeFrom(const S2CSignContestToOther_413& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CSignContestToOther_413)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  addplayer_.MergeFrom(from.addplayer_);
  if (from.contestteamid() != 0) {
    set_contestteamid(from.contestteamid());
  }
}

void S2CSignContestToOther_413::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CSignContestToOther_413)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CSignContestToOther_413::CopyFrom(const S2CSignContestToOther_413& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CSignContestToOther_413)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CSignContestToOther_413::IsInitialized() const {

  return true;
}

void S2CSignContestToOther_413::Swap(S2CSignContestToOther_413* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CSignContestToOther_413::InternalSwap(S2CSignContestToOther_413* other) {
  std::swap(contestteamid_, other->contestteamid_);
  addplayer_.UnsafeArenaSwap(&other->addplayer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CSignContestToOther_413::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CSignContestToOther_413_descriptor_;
  metadata.reflection = S2CSignContestToOther_413_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CSignContestToOther_413

// optional uint32 ContestTeamId = 1;
void S2CSignContestToOther_413::clear_contestteamid() {
  contestteamid_ = 0u;
}
 ::google::protobuf::uint32 S2CSignContestToOther_413::contestteamid() const {
  // @@protoc_insertion_point(field_get:pb.S2CSignContestToOther_413.ContestTeamId)
  return contestteamid_;
}
 void S2CSignContestToOther_413::set_contestteamid(::google::protobuf::uint32 value) {
  
  contestteamid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CSignContestToOther_413.ContestTeamId)
}

// repeated .pb.OnePlayerInfo addPlayer = 2;
int S2CSignContestToOther_413::addplayer_size() const {
  return addplayer_.size();
}
void S2CSignContestToOther_413::clear_addplayer() {
  addplayer_.Clear();
}
const ::pb::OnePlayerInfo& S2CSignContestToOther_413::addplayer(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CSignContestToOther_413.addPlayer)
  return addplayer_.Get(index);
}
::pb::OnePlayerInfo* S2CSignContestToOther_413::mutable_addplayer(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CSignContestToOther_413.addPlayer)
  return addplayer_.Mutable(index);
}
::pb::OnePlayerInfo* S2CSignContestToOther_413::add_addplayer() {
  // @@protoc_insertion_point(field_add:pb.S2CSignContestToOther_413.addPlayer)
  return addplayer_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::OnePlayerInfo >*
S2CSignContestToOther_413::mutable_addplayer() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CSignContestToOther_413.addPlayer)
  return &addplayer_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::OnePlayerInfo >&
S2CSignContestToOther_413::addplayer() const {
  // @@protoc_insertion_point(field_list:pb.S2CSignContestToOther_413.addPlayer)
  return addplayer_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SCloseContestTeams_403::kCloseIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SCloseContestTeams_403::C2SCloseContestTeams_403()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SCloseContestTeams_403)
}

void C2SCloseContestTeams_403::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SCloseContestTeams_403::C2SCloseContestTeams_403(const C2SCloseContestTeams_403& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SCloseContestTeams_403)
}

void C2SCloseContestTeams_403::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  closeid_ = 0u;
}

C2SCloseContestTeams_403::~C2SCloseContestTeams_403() {
  // @@protoc_insertion_point(destructor:pb.C2SCloseContestTeams_403)
  SharedDtor();
}

void C2SCloseContestTeams_403::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SCloseContestTeams_403::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SCloseContestTeams_403::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SCloseContestTeams_403_descriptor_;
}

const C2SCloseContestTeams_403& C2SCloseContestTeams_403::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SCloseContestTeams_403* C2SCloseContestTeams_403::default_instance_ = NULL;

C2SCloseContestTeams_403* C2SCloseContestTeams_403::New(::google::protobuf::Arena* arena) const {
  C2SCloseContestTeams_403* n = new C2SCloseContestTeams_403;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SCloseContestTeams_403::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SCloseContestTeams_403)
  closeid_ = 0u;
}

bool C2SCloseContestTeams_403::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SCloseContestTeams_403)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 CloseId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &closeid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SCloseContestTeams_403)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SCloseContestTeams_403)
  return false;
#undef DO_
}

void C2SCloseContestTeams_403::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SCloseContestTeams_403)
  // optional uint32 CloseId = 1;
  if (this->closeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->closeid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SCloseContestTeams_403)
}

::google::protobuf::uint8* C2SCloseContestTeams_403::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SCloseContestTeams_403)
  // optional uint32 CloseId = 1;
  if (this->closeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->closeid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SCloseContestTeams_403)
  return target;
}

int C2SCloseContestTeams_403::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SCloseContestTeams_403)
  int total_size = 0;

  // optional uint32 CloseId = 1;
  if (this->closeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->closeid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SCloseContestTeams_403::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SCloseContestTeams_403)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SCloseContestTeams_403* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SCloseContestTeams_403>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SCloseContestTeams_403)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SCloseContestTeams_403)
    MergeFrom(*source);
  }
}

void C2SCloseContestTeams_403::MergeFrom(const C2SCloseContestTeams_403& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SCloseContestTeams_403)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.closeid() != 0) {
    set_closeid(from.closeid());
  }
}

void C2SCloseContestTeams_403::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SCloseContestTeams_403)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SCloseContestTeams_403::CopyFrom(const C2SCloseContestTeams_403& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SCloseContestTeams_403)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SCloseContestTeams_403::IsInitialized() const {

  return true;
}

void C2SCloseContestTeams_403::Swap(C2SCloseContestTeams_403* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SCloseContestTeams_403::InternalSwap(C2SCloseContestTeams_403* other) {
  std::swap(closeid_, other->closeid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SCloseContestTeams_403::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SCloseContestTeams_403_descriptor_;
  metadata.reflection = C2SCloseContestTeams_403_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SCloseContestTeams_403

// optional uint32 CloseId = 1;
void C2SCloseContestTeams_403::clear_closeid() {
  closeid_ = 0u;
}
 ::google::protobuf::uint32 C2SCloseContestTeams_403::closeid() const {
  // @@protoc_insertion_point(field_get:pb.C2SCloseContestTeams_403.CloseId)
  return closeid_;
}
 void C2SCloseContestTeams_403::set_closeid(::google::protobuf::uint32 value) {
  
  closeid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SCloseContestTeams_403.CloseId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CCloseContestTeams_403::kCloseIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CCloseContestTeams_403::S2CCloseContestTeams_403()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CCloseContestTeams_403)
}

void S2CCloseContestTeams_403::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CCloseContestTeams_403::S2CCloseContestTeams_403(const S2CCloseContestTeams_403& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CCloseContestTeams_403)
}

void S2CCloseContestTeams_403::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  closeid_ = 0u;
}

S2CCloseContestTeams_403::~S2CCloseContestTeams_403() {
  // @@protoc_insertion_point(destructor:pb.S2CCloseContestTeams_403)
  SharedDtor();
}

void S2CCloseContestTeams_403::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CCloseContestTeams_403::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CCloseContestTeams_403::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CCloseContestTeams_403_descriptor_;
}

const S2CCloseContestTeams_403& S2CCloseContestTeams_403::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CCloseContestTeams_403* S2CCloseContestTeams_403::default_instance_ = NULL;

S2CCloseContestTeams_403* S2CCloseContestTeams_403::New(::google::protobuf::Arena* arena) const {
  S2CCloseContestTeams_403* n = new S2CCloseContestTeams_403;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CCloseContestTeams_403::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CCloseContestTeams_403)
  closeid_ = 0u;
}

bool S2CCloseContestTeams_403::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CCloseContestTeams_403)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 CloseId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &closeid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CCloseContestTeams_403)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CCloseContestTeams_403)
  return false;
#undef DO_
}

void S2CCloseContestTeams_403::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CCloseContestTeams_403)
  // optional uint32 CloseId = 1;
  if (this->closeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->closeid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CCloseContestTeams_403)
}

::google::protobuf::uint8* S2CCloseContestTeams_403::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CCloseContestTeams_403)
  // optional uint32 CloseId = 1;
  if (this->closeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->closeid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CCloseContestTeams_403)
  return target;
}

int S2CCloseContestTeams_403::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CCloseContestTeams_403)
  int total_size = 0;

  // optional uint32 CloseId = 1;
  if (this->closeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->closeid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CCloseContestTeams_403::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CCloseContestTeams_403)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CCloseContestTeams_403* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CCloseContestTeams_403>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CCloseContestTeams_403)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CCloseContestTeams_403)
    MergeFrom(*source);
  }
}

void S2CCloseContestTeams_403::MergeFrom(const S2CCloseContestTeams_403& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CCloseContestTeams_403)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.closeid() != 0) {
    set_closeid(from.closeid());
  }
}

void S2CCloseContestTeams_403::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CCloseContestTeams_403)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CCloseContestTeams_403::CopyFrom(const S2CCloseContestTeams_403& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CCloseContestTeams_403)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CCloseContestTeams_403::IsInitialized() const {

  return true;
}

void S2CCloseContestTeams_403::Swap(S2CCloseContestTeams_403* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CCloseContestTeams_403::InternalSwap(S2CCloseContestTeams_403* other) {
  std::swap(closeid_, other->closeid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CCloseContestTeams_403::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CCloseContestTeams_403_descriptor_;
  metadata.reflection = S2CCloseContestTeams_403_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CCloseContestTeams_403

// optional uint32 CloseId = 1;
void S2CCloseContestTeams_403::clear_closeid() {
  closeid_ = 0u;
}
 ::google::protobuf::uint32 S2CCloseContestTeams_403::closeid() const {
  // @@protoc_insertion_point(field_get:pb.S2CCloseContestTeams_403.CloseId)
  return closeid_;
}
 void S2CCloseContestTeams_403::set_closeid(::google::protobuf::uint32 value) {
  
  closeid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CCloseContestTeams_403.CloseId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SStartContest_404::C2SStartContest_404()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SStartContest_404)
}

void C2SStartContest_404::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SStartContest_404::C2SStartContest_404(const C2SStartContest_404& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SStartContest_404)
}

void C2SStartContest_404::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SStartContest_404::~C2SStartContest_404() {
  // @@protoc_insertion_point(destructor:pb.C2SStartContest_404)
  SharedDtor();
}

void C2SStartContest_404::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SStartContest_404::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SStartContest_404::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SStartContest_404_descriptor_;
}

const C2SStartContest_404& C2SStartContest_404::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SStartContest_404* C2SStartContest_404::default_instance_ = NULL;

C2SStartContest_404* C2SStartContest_404::New(::google::protobuf::Arena* arena) const {
  C2SStartContest_404* n = new C2SStartContest_404;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SStartContest_404::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SStartContest_404)
}

bool C2SStartContest_404::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SStartContest_404)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SStartContest_404)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SStartContest_404)
  return false;
#undef DO_
}

void C2SStartContest_404::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SStartContest_404)
  // @@protoc_insertion_point(serialize_end:pb.C2SStartContest_404)
}

::google::protobuf::uint8* C2SStartContest_404::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SStartContest_404)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SStartContest_404)
  return target;
}

int C2SStartContest_404::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SStartContest_404)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SStartContest_404::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SStartContest_404)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SStartContest_404* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SStartContest_404>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SStartContest_404)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SStartContest_404)
    MergeFrom(*source);
  }
}

void C2SStartContest_404::MergeFrom(const C2SStartContest_404& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SStartContest_404)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SStartContest_404::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SStartContest_404)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SStartContest_404::CopyFrom(const C2SStartContest_404& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SStartContest_404)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SStartContest_404::IsInitialized() const {

  return true;
}

void C2SStartContest_404::Swap(C2SStartContest_404* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SStartContest_404::InternalSwap(C2SStartContest_404* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SStartContest_404::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SStartContest_404_descriptor_;
  metadata.reflection = C2SStartContest_404_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SStartContest_404

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CStartContest_404::kTeamInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CStartContest_404::S2CStartContest_404()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CStartContest_404)
}

void S2CStartContest_404::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CStartContest_404::S2CStartContest_404(const S2CStartContest_404& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CStartContest_404)
}

void S2CStartContest_404::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CStartContest_404::~S2CStartContest_404() {
  // @@protoc_insertion_point(destructor:pb.S2CStartContest_404)
  SharedDtor();
}

void S2CStartContest_404::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CStartContest_404::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CStartContest_404::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CStartContest_404_descriptor_;
}

const S2CStartContest_404& S2CStartContest_404::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CStartContest_404* S2CStartContest_404::default_instance_ = NULL;

S2CStartContest_404* S2CStartContest_404::New(::google::protobuf::Arena* arena) const {
  S2CStartContest_404* n = new S2CStartContest_404;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CStartContest_404::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CStartContest_404)
  teaminfo_.Clear();
}

bool S2CStartContest_404::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CStartContest_404)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.PRoomUser TeamInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_TeamInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_teaminfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_TeamInfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CStartContest_404)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CStartContest_404)
  return false;
#undef DO_
}

void S2CStartContest_404::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CStartContest_404)
  // repeated .pb.PRoomUser TeamInfo = 1;
  for (unsigned int i = 0, n = this->teaminfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->teaminfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CStartContest_404)
}

::google::protobuf::uint8* S2CStartContest_404::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CStartContest_404)
  // repeated .pb.PRoomUser TeamInfo = 1;
  for (unsigned int i = 0, n = this->teaminfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->teaminfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CStartContest_404)
  return target;
}

int S2CStartContest_404::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CStartContest_404)
  int total_size = 0;

  // repeated .pb.PRoomUser TeamInfo = 1;
  total_size += 1 * this->teaminfo_size();
  for (int i = 0; i < this->teaminfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->teaminfo(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CStartContest_404::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CStartContest_404)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CStartContest_404* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CStartContest_404>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CStartContest_404)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CStartContest_404)
    MergeFrom(*source);
  }
}

void S2CStartContest_404::MergeFrom(const S2CStartContest_404& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CStartContest_404)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  teaminfo_.MergeFrom(from.teaminfo_);
}

void S2CStartContest_404::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CStartContest_404)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CStartContest_404::CopyFrom(const S2CStartContest_404& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CStartContest_404)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CStartContest_404::IsInitialized() const {

  return true;
}

void S2CStartContest_404::Swap(S2CStartContest_404* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CStartContest_404::InternalSwap(S2CStartContest_404* other) {
  teaminfo_.UnsafeArenaSwap(&other->teaminfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CStartContest_404::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CStartContest_404_descriptor_;
  metadata.reflection = S2CStartContest_404_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CStartContest_404

// repeated .pb.PRoomUser TeamInfo = 1;
int S2CStartContest_404::teaminfo_size() const {
  return teaminfo_.size();
}
void S2CStartContest_404::clear_teaminfo() {
  teaminfo_.Clear();
}
const ::pb::PRoomUser& S2CStartContest_404::teaminfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CStartContest_404.TeamInfo)
  return teaminfo_.Get(index);
}
::pb::PRoomUser* S2CStartContest_404::mutable_teaminfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CStartContest_404.TeamInfo)
  return teaminfo_.Mutable(index);
}
::pb::PRoomUser* S2CStartContest_404::add_teaminfo() {
  // @@protoc_insertion_point(field_add:pb.S2CStartContest_404.TeamInfo)
  return teaminfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::PRoomUser >*
S2CStartContest_404::mutable_teaminfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CStartContest_404.TeamInfo)
  return &teaminfo_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::PRoomUser >&
S2CStartContest_404::teaminfo() const {
  // @@protoc_insertion_point(field_list:pb.S2CStartContest_404.TeamInfo)
  return teaminfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SGetContesInfo_405::kContestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetContesInfo_405::C2SGetContesInfo_405()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetContesInfo_405)
}

void C2SGetContesInfo_405::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetContesInfo_405::C2SGetContesInfo_405(const C2SGetContesInfo_405& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetContesInfo_405)
}

void C2SGetContesInfo_405::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  contestid_ = 0u;
}

C2SGetContesInfo_405::~C2SGetContesInfo_405() {
  // @@protoc_insertion_point(destructor:pb.C2SGetContesInfo_405)
  SharedDtor();
}

void C2SGetContesInfo_405::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetContesInfo_405::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetContesInfo_405::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetContesInfo_405_descriptor_;
}

const C2SGetContesInfo_405& C2SGetContesInfo_405::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetContesInfo_405* C2SGetContesInfo_405::default_instance_ = NULL;

C2SGetContesInfo_405* C2SGetContesInfo_405::New(::google::protobuf::Arena* arena) const {
  C2SGetContesInfo_405* n = new C2SGetContesInfo_405;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetContesInfo_405::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetContesInfo_405)
  contestid_ = 0u;
}

bool C2SGetContesInfo_405::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetContesInfo_405)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ContestId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contestid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetContesInfo_405)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetContesInfo_405)
  return false;
#undef DO_
}

void C2SGetContesInfo_405::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetContesInfo_405)
  // optional uint32 ContestId = 1;
  if (this->contestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->contestid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SGetContesInfo_405)
}

::google::protobuf::uint8* C2SGetContesInfo_405::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetContesInfo_405)
  // optional uint32 ContestId = 1;
  if (this->contestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->contestid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetContesInfo_405)
  return target;
}

int C2SGetContesInfo_405::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetContesInfo_405)
  int total_size = 0;

  // optional uint32 ContestId = 1;
  if (this->contestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contestid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetContesInfo_405::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetContesInfo_405)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetContesInfo_405* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetContesInfo_405>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetContesInfo_405)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetContesInfo_405)
    MergeFrom(*source);
  }
}

void C2SGetContesInfo_405::MergeFrom(const C2SGetContesInfo_405& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetContesInfo_405)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.contestid() != 0) {
    set_contestid(from.contestid());
  }
}

void C2SGetContesInfo_405::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetContesInfo_405)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetContesInfo_405::CopyFrom(const C2SGetContesInfo_405& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetContesInfo_405)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetContesInfo_405::IsInitialized() const {

  return true;
}

void C2SGetContesInfo_405::Swap(C2SGetContesInfo_405* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetContesInfo_405::InternalSwap(C2SGetContesInfo_405* other) {
  std::swap(contestid_, other->contestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetContesInfo_405::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetContesInfo_405_descriptor_;
  metadata.reflection = C2SGetContesInfo_405_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetContesInfo_405

// optional uint32 ContestId = 1;
void C2SGetContesInfo_405::clear_contestid() {
  contestid_ = 0u;
}
 ::google::protobuf::uint32 C2SGetContesInfo_405::contestid() const {
  // @@protoc_insertion_point(field_get:pb.C2SGetContesInfo_405.ContestId)
  return contestid_;
}
 void C2SGetContesInfo_405::set_contestid(::google::protobuf::uint32 value) {
  
  contestid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SGetContesInfo_405.ContestId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetContesInfo_405::kContestInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetContesInfo_405::S2CGetContesInfo_405()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetContesInfo_405)
}

void S2CGetContesInfo_405::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  contestinfo_ = const_cast< ::pb::OneContestSimpleInfo*>(&::pb::OneContestSimpleInfo::default_instance());
}

S2CGetContesInfo_405::S2CGetContesInfo_405(const S2CGetContesInfo_405& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetContesInfo_405)
}

void S2CGetContesInfo_405::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  contestinfo_ = NULL;
}

S2CGetContesInfo_405::~S2CGetContesInfo_405() {
  // @@protoc_insertion_point(destructor:pb.S2CGetContesInfo_405)
  SharedDtor();
}

void S2CGetContesInfo_405::SharedDtor() {
  if (this != default_instance_) {
    delete contestinfo_;
  }
}

void S2CGetContesInfo_405::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetContesInfo_405::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetContesInfo_405_descriptor_;
}

const S2CGetContesInfo_405& S2CGetContesInfo_405::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetContesInfo_405* S2CGetContesInfo_405::default_instance_ = NULL;

S2CGetContesInfo_405* S2CGetContesInfo_405::New(::google::protobuf::Arena* arena) const {
  S2CGetContesInfo_405* n = new S2CGetContesInfo_405;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetContesInfo_405::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetContesInfo_405)
  if (GetArenaNoVirtual() == NULL && contestinfo_ != NULL) delete contestinfo_;
  contestinfo_ = NULL;
}

bool S2CGetContesInfo_405::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetContesInfo_405)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.OneContestSimpleInfo ContestInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_contestinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetContesInfo_405)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetContesInfo_405)
  return false;
#undef DO_
}

void S2CGetContesInfo_405::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetContesInfo_405)
  // optional .pb.OneContestSimpleInfo ContestInfo = 1;
  if (this->has_contestinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->contestinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetContesInfo_405)
}

::google::protobuf::uint8* S2CGetContesInfo_405::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetContesInfo_405)
  // optional .pb.OneContestSimpleInfo ContestInfo = 1;
  if (this->has_contestinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->contestinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetContesInfo_405)
  return target;
}

int S2CGetContesInfo_405::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetContesInfo_405)
  int total_size = 0;

  // optional .pb.OneContestSimpleInfo ContestInfo = 1;
  if (this->has_contestinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->contestinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetContesInfo_405::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetContesInfo_405)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetContesInfo_405* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetContesInfo_405>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetContesInfo_405)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetContesInfo_405)
    MergeFrom(*source);
  }
}

void S2CGetContesInfo_405::MergeFrom(const S2CGetContesInfo_405& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetContesInfo_405)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_contestinfo()) {
    mutable_contestinfo()->::pb::OneContestSimpleInfo::MergeFrom(from.contestinfo());
  }
}

void S2CGetContesInfo_405::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetContesInfo_405)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetContesInfo_405::CopyFrom(const S2CGetContesInfo_405& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetContesInfo_405)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetContesInfo_405::IsInitialized() const {

  return true;
}

void S2CGetContesInfo_405::Swap(S2CGetContesInfo_405* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetContesInfo_405::InternalSwap(S2CGetContesInfo_405* other) {
  std::swap(contestinfo_, other->contestinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetContesInfo_405::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetContesInfo_405_descriptor_;
  metadata.reflection = S2CGetContesInfo_405_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetContesInfo_405

// optional .pb.OneContestSimpleInfo ContestInfo = 1;
bool S2CGetContesInfo_405::has_contestinfo() const {
  return !_is_default_instance_ && contestinfo_ != NULL;
}
void S2CGetContesInfo_405::clear_contestinfo() {
  if (GetArenaNoVirtual() == NULL && contestinfo_ != NULL) delete contestinfo_;
  contestinfo_ = NULL;
}
const ::pb::OneContestSimpleInfo& S2CGetContesInfo_405::contestinfo() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetContesInfo_405.ContestInfo)
  return contestinfo_ != NULL ? *contestinfo_ : *default_instance_->contestinfo_;
}
::pb::OneContestSimpleInfo* S2CGetContesInfo_405::mutable_contestinfo() {
  
  if (contestinfo_ == NULL) {
    contestinfo_ = new ::pb::OneContestSimpleInfo;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CGetContesInfo_405.ContestInfo)
  return contestinfo_;
}
::pb::OneContestSimpleInfo* S2CGetContesInfo_405::release_contestinfo() {
  // @@protoc_insertion_point(field_release:pb.S2CGetContesInfo_405.ContestInfo)
  
  ::pb::OneContestSimpleInfo* temp = contestinfo_;
  contestinfo_ = NULL;
  return temp;
}
void S2CGetContesInfo_405::set_allocated_contestinfo(::pb::OneContestSimpleInfo* contestinfo) {
  delete contestinfo_;
  contestinfo_ = contestinfo;
  if (contestinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CGetContesInfo_405.ContestInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SManagerContest_406::kMapIdFieldNumber;
const int C2SManagerContest_406::kSetLoopFirstFieldNumber;
const int C2SManagerContest_406::kSetLoopBOTimesFieldNumber;
const int C2SManagerContest_406::kLoopCircleWaitTimesFieldNumber;
const int C2SManagerContest_406::kLoopFightWaitTimesFieldNumber;
const int C2SManagerContest_406::kSetFinalBOTimesFieldNumber;
const int C2SManagerContest_406::kSetDeathBOTimesFieldNumber;
const int C2SManagerContest_406::kFinalOrDeathCircleWaitTimesFieldNumber;
const int C2SManagerContest_406::kFinalOrDeathFightWaitTimesFieldNumber;
const int C2SManagerContest_406::kSetEveryFightWaitTimeFixedFieldNumber;
const int C2SManagerContest_406::kSettingCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SManagerContest_406::C2SManagerContest_406()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SManagerContest_406)
}

void C2SManagerContest_406::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SManagerContest_406::C2SManagerContest_406(const C2SManagerContest_406& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SManagerContest_406)
}

void C2SManagerContest_406::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  mapid_ = 0u;
  setloopfirst_ = false;
  setloopbotimes_ = 0u;
  loopcirclewaittimes_ = 0u;
  loopfightwaittimes_ = 0u;
  setfinalbotimes_ = 0u;
  setdeathbotimes_ = 0u;
  finalordeathcirclewaittimes_ = 0u;
  finalordeathfightwaittimes_ = 0u;
  seteveryfightwaittimefixed_ = false;
  settingcode_ = 0u;
}

C2SManagerContest_406::~C2SManagerContest_406() {
  // @@protoc_insertion_point(destructor:pb.C2SManagerContest_406)
  SharedDtor();
}

void C2SManagerContest_406::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SManagerContest_406::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SManagerContest_406::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SManagerContest_406_descriptor_;
}

const C2SManagerContest_406& C2SManagerContest_406::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SManagerContest_406* C2SManagerContest_406::default_instance_ = NULL;

C2SManagerContest_406* C2SManagerContest_406::New(::google::protobuf::Arena* arena) const {
  C2SManagerContest_406* n = new C2SManagerContest_406;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SManagerContest_406::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SManagerContest_406)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(C2SManagerContest_406, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<C2SManagerContest_406*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mapid_, setloopfirst_);
  ZR_(setdeathbotimes_, finalordeathcirclewaittimes_);
  ZR_(finalordeathfightwaittimes_, settingcode_);
  seteveryfightwaittimefixed_ = false;

#undef ZR_HELPER_
#undef ZR_

}

bool C2SManagerContest_406::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SManagerContest_406)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MapId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SetLoopFirst;
        break;
      }

      // optional bool SetLoopFirst = 2;
      case 2: {
        if (tag == 16) {
         parse_SetLoopFirst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &setloopfirst_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SetLoopBOTimes;
        break;
      }

      // optional uint32 SetLoopBOTimes = 3;
      case 3: {
        if (tag == 24) {
         parse_SetLoopBOTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &setloopbotimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_LoopCircleWaitTimes;
        break;
      }

      // optional uint32 LoopCircleWaitTimes = 4;
      case 4: {
        if (tag == 32) {
         parse_LoopCircleWaitTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loopcirclewaittimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_LoopFightWaitTimes;
        break;
      }

      // optional uint32 LoopFightWaitTimes = 5;
      case 5: {
        if (tag == 40) {
         parse_LoopFightWaitTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loopfightwaittimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_SetFinalBOTimes;
        break;
      }

      // optional uint32 SetFinalBOTimes = 6;
      case 6: {
        if (tag == 48) {
         parse_SetFinalBOTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &setfinalbotimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_SetDeathBOTimes;
        break;
      }

      // optional uint32 SetDeathBOTimes = 7;
      case 7: {
        if (tag == 56) {
         parse_SetDeathBOTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &setdeathbotimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_FinalOrDeathCircleWaitTimes;
        break;
      }

      // optional uint32 FinalOrDeathCircleWaitTimes = 8;
      case 8: {
        if (tag == 64) {
         parse_FinalOrDeathCircleWaitTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finalordeathcirclewaittimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_FinalOrDeathFightWaitTimes;
        break;
      }

      // optional uint32 FinalOrDeathFightWaitTimes = 9;
      case 9: {
        if (tag == 72) {
         parse_FinalOrDeathFightWaitTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finalordeathfightwaittimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_SetEveryFightWaitTimeFixed;
        break;
      }

      // optional bool SetEveryFightWaitTimeFixed = 10;
      case 10: {
        if (tag == 80) {
         parse_SetEveryFightWaitTimeFixed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &seteveryfightwaittimefixed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_SettingCode;
        break;
      }

      // optional uint32 SettingCode = 11;
      case 11: {
        if (tag == 88) {
         parse_SettingCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &settingcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SManagerContest_406)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SManagerContest_406)
  return false;
#undef DO_
}

void C2SManagerContest_406::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SManagerContest_406)
  // optional uint32 MapId = 1;
  if (this->mapid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mapid(), output);
  }

  // optional bool SetLoopFirst = 2;
  if (this->setloopfirst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->setloopfirst(), output);
  }

  // optional uint32 SetLoopBOTimes = 3;
  if (this->setloopbotimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->setloopbotimes(), output);
  }

  // optional uint32 LoopCircleWaitTimes = 4;
  if (this->loopcirclewaittimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->loopcirclewaittimes(), output);
  }

  // optional uint32 LoopFightWaitTimes = 5;
  if (this->loopfightwaittimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->loopfightwaittimes(), output);
  }

  // optional uint32 SetFinalBOTimes = 6;
  if (this->setfinalbotimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->setfinalbotimes(), output);
  }

  // optional uint32 SetDeathBOTimes = 7;
  if (this->setdeathbotimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->setdeathbotimes(), output);
  }

  // optional uint32 FinalOrDeathCircleWaitTimes = 8;
  if (this->finalordeathcirclewaittimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->finalordeathcirclewaittimes(), output);
  }

  // optional uint32 FinalOrDeathFightWaitTimes = 9;
  if (this->finalordeathfightwaittimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->finalordeathfightwaittimes(), output);
  }

  // optional bool SetEveryFightWaitTimeFixed = 10;
  if (this->seteveryfightwaittimefixed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->seteveryfightwaittimefixed(), output);
  }

  // optional uint32 SettingCode = 11;
  if (this->settingcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->settingcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SManagerContest_406)
}

::google::protobuf::uint8* C2SManagerContest_406::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SManagerContest_406)
  // optional uint32 MapId = 1;
  if (this->mapid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mapid(), target);
  }

  // optional bool SetLoopFirst = 2;
  if (this->setloopfirst() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->setloopfirst(), target);
  }

  // optional uint32 SetLoopBOTimes = 3;
  if (this->setloopbotimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->setloopbotimes(), target);
  }

  // optional uint32 LoopCircleWaitTimes = 4;
  if (this->loopcirclewaittimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->loopcirclewaittimes(), target);
  }

  // optional uint32 LoopFightWaitTimes = 5;
  if (this->loopfightwaittimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->loopfightwaittimes(), target);
  }

  // optional uint32 SetFinalBOTimes = 6;
  if (this->setfinalbotimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->setfinalbotimes(), target);
  }

  // optional uint32 SetDeathBOTimes = 7;
  if (this->setdeathbotimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->setdeathbotimes(), target);
  }

  // optional uint32 FinalOrDeathCircleWaitTimes = 8;
  if (this->finalordeathcirclewaittimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->finalordeathcirclewaittimes(), target);
  }

  // optional uint32 FinalOrDeathFightWaitTimes = 9;
  if (this->finalordeathfightwaittimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->finalordeathfightwaittimes(), target);
  }

  // optional bool SetEveryFightWaitTimeFixed = 10;
  if (this->seteveryfightwaittimefixed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->seteveryfightwaittimefixed(), target);
  }

  // optional uint32 SettingCode = 11;
  if (this->settingcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->settingcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SManagerContest_406)
  return target;
}

int C2SManagerContest_406::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SManagerContest_406)
  int total_size = 0;

  // optional uint32 MapId = 1;
  if (this->mapid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mapid());
  }

  // optional bool SetLoopFirst = 2;
  if (this->setloopfirst() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 SetLoopBOTimes = 3;
  if (this->setloopbotimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->setloopbotimes());
  }

  // optional uint32 LoopCircleWaitTimes = 4;
  if (this->loopcirclewaittimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loopcirclewaittimes());
  }

  // optional uint32 LoopFightWaitTimes = 5;
  if (this->loopfightwaittimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loopfightwaittimes());
  }

  // optional uint32 SetFinalBOTimes = 6;
  if (this->setfinalbotimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->setfinalbotimes());
  }

  // optional uint32 SetDeathBOTimes = 7;
  if (this->setdeathbotimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->setdeathbotimes());
  }

  // optional uint32 FinalOrDeathCircleWaitTimes = 8;
  if (this->finalordeathcirclewaittimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finalordeathcirclewaittimes());
  }

  // optional uint32 FinalOrDeathFightWaitTimes = 9;
  if (this->finalordeathfightwaittimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finalordeathfightwaittimes());
  }

  // optional bool SetEveryFightWaitTimeFixed = 10;
  if (this->seteveryfightwaittimefixed() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 SettingCode = 11;
  if (this->settingcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->settingcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SManagerContest_406::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SManagerContest_406)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SManagerContest_406* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SManagerContest_406>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SManagerContest_406)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SManagerContest_406)
    MergeFrom(*source);
  }
}

void C2SManagerContest_406::MergeFrom(const C2SManagerContest_406& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SManagerContest_406)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.mapid() != 0) {
    set_mapid(from.mapid());
  }
  if (from.setloopfirst() != 0) {
    set_setloopfirst(from.setloopfirst());
  }
  if (from.setloopbotimes() != 0) {
    set_setloopbotimes(from.setloopbotimes());
  }
  if (from.loopcirclewaittimes() != 0) {
    set_loopcirclewaittimes(from.loopcirclewaittimes());
  }
  if (from.loopfightwaittimes() != 0) {
    set_loopfightwaittimes(from.loopfightwaittimes());
  }
  if (from.setfinalbotimes() != 0) {
    set_setfinalbotimes(from.setfinalbotimes());
  }
  if (from.setdeathbotimes() != 0) {
    set_setdeathbotimes(from.setdeathbotimes());
  }
  if (from.finalordeathcirclewaittimes() != 0) {
    set_finalordeathcirclewaittimes(from.finalordeathcirclewaittimes());
  }
  if (from.finalordeathfightwaittimes() != 0) {
    set_finalordeathfightwaittimes(from.finalordeathfightwaittimes());
  }
  if (from.seteveryfightwaittimefixed() != 0) {
    set_seteveryfightwaittimefixed(from.seteveryfightwaittimefixed());
  }
  if (from.settingcode() != 0) {
    set_settingcode(from.settingcode());
  }
}

void C2SManagerContest_406::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SManagerContest_406)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SManagerContest_406::CopyFrom(const C2SManagerContest_406& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SManagerContest_406)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SManagerContest_406::IsInitialized() const {

  return true;
}

void C2SManagerContest_406::Swap(C2SManagerContest_406* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SManagerContest_406::InternalSwap(C2SManagerContest_406* other) {
  std::swap(mapid_, other->mapid_);
  std::swap(setloopfirst_, other->setloopfirst_);
  std::swap(setloopbotimes_, other->setloopbotimes_);
  std::swap(loopcirclewaittimes_, other->loopcirclewaittimes_);
  std::swap(loopfightwaittimes_, other->loopfightwaittimes_);
  std::swap(setfinalbotimes_, other->setfinalbotimes_);
  std::swap(setdeathbotimes_, other->setdeathbotimes_);
  std::swap(finalordeathcirclewaittimes_, other->finalordeathcirclewaittimes_);
  std::swap(finalordeathfightwaittimes_, other->finalordeathfightwaittimes_);
  std::swap(seteveryfightwaittimefixed_, other->seteveryfightwaittimefixed_);
  std::swap(settingcode_, other->settingcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SManagerContest_406::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SManagerContest_406_descriptor_;
  metadata.reflection = C2SManagerContest_406_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SManagerContest_406

// optional uint32 MapId = 1;
void C2SManagerContest_406::clear_mapid() {
  mapid_ = 0u;
}
 ::google::protobuf::uint32 C2SManagerContest_406::mapid() const {
  // @@protoc_insertion_point(field_get:pb.C2SManagerContest_406.MapId)
  return mapid_;
}
 void C2SManagerContest_406::set_mapid(::google::protobuf::uint32 value) {
  
  mapid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SManagerContest_406.MapId)
}

// optional bool SetLoopFirst = 2;
void C2SManagerContest_406::clear_setloopfirst() {
  setloopfirst_ = false;
}
 bool C2SManagerContest_406::setloopfirst() const {
  // @@protoc_insertion_point(field_get:pb.C2SManagerContest_406.SetLoopFirst)
  return setloopfirst_;
}
 void C2SManagerContest_406::set_setloopfirst(bool value) {
  
  setloopfirst_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SManagerContest_406.SetLoopFirst)
}

// optional uint32 SetLoopBOTimes = 3;
void C2SManagerContest_406::clear_setloopbotimes() {
  setloopbotimes_ = 0u;
}
 ::google::protobuf::uint32 C2SManagerContest_406::setloopbotimes() const {
  // @@protoc_insertion_point(field_get:pb.C2SManagerContest_406.SetLoopBOTimes)
  return setloopbotimes_;
}
 void C2SManagerContest_406::set_setloopbotimes(::google::protobuf::uint32 value) {
  
  setloopbotimes_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SManagerContest_406.SetLoopBOTimes)
}

// optional uint32 LoopCircleWaitTimes = 4;
void C2SManagerContest_406::clear_loopcirclewaittimes() {
  loopcirclewaittimes_ = 0u;
}
 ::google::protobuf::uint32 C2SManagerContest_406::loopcirclewaittimes() const {
  // @@protoc_insertion_point(field_get:pb.C2SManagerContest_406.LoopCircleWaitTimes)
  return loopcirclewaittimes_;
}
 void C2SManagerContest_406::set_loopcirclewaittimes(::google::protobuf::uint32 value) {
  
  loopcirclewaittimes_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SManagerContest_406.LoopCircleWaitTimes)
}

// optional uint32 LoopFightWaitTimes = 5;
void C2SManagerContest_406::clear_loopfightwaittimes() {
  loopfightwaittimes_ = 0u;
}
 ::google::protobuf::uint32 C2SManagerContest_406::loopfightwaittimes() const {
  // @@protoc_insertion_point(field_get:pb.C2SManagerContest_406.LoopFightWaitTimes)
  return loopfightwaittimes_;
}
 void C2SManagerContest_406::set_loopfightwaittimes(::google::protobuf::uint32 value) {
  
  loopfightwaittimes_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SManagerContest_406.LoopFightWaitTimes)
}

// optional uint32 SetFinalBOTimes = 6;
void C2SManagerContest_406::clear_setfinalbotimes() {
  setfinalbotimes_ = 0u;
}
 ::google::protobuf::uint32 C2SManagerContest_406::setfinalbotimes() const {
  // @@protoc_insertion_point(field_get:pb.C2SManagerContest_406.SetFinalBOTimes)
  return setfinalbotimes_;
}
 void C2SManagerContest_406::set_setfinalbotimes(::google::protobuf::uint32 value) {
  
  setfinalbotimes_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SManagerContest_406.SetFinalBOTimes)
}

// optional uint32 SetDeathBOTimes = 7;
void C2SManagerContest_406::clear_setdeathbotimes() {
  setdeathbotimes_ = 0u;
}
 ::google::protobuf::uint32 C2SManagerContest_406::setdeathbotimes() const {
  // @@protoc_insertion_point(field_get:pb.C2SManagerContest_406.SetDeathBOTimes)
  return setdeathbotimes_;
}
 void C2SManagerContest_406::set_setdeathbotimes(::google::protobuf::uint32 value) {
  
  setdeathbotimes_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SManagerContest_406.SetDeathBOTimes)
}

// optional uint32 FinalOrDeathCircleWaitTimes = 8;
void C2SManagerContest_406::clear_finalordeathcirclewaittimes() {
  finalordeathcirclewaittimes_ = 0u;
}
 ::google::protobuf::uint32 C2SManagerContest_406::finalordeathcirclewaittimes() const {
  // @@protoc_insertion_point(field_get:pb.C2SManagerContest_406.FinalOrDeathCircleWaitTimes)
  return finalordeathcirclewaittimes_;
}
 void C2SManagerContest_406::set_finalordeathcirclewaittimes(::google::protobuf::uint32 value) {
  
  finalordeathcirclewaittimes_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SManagerContest_406.FinalOrDeathCircleWaitTimes)
}

// optional uint32 FinalOrDeathFightWaitTimes = 9;
void C2SManagerContest_406::clear_finalordeathfightwaittimes() {
  finalordeathfightwaittimes_ = 0u;
}
 ::google::protobuf::uint32 C2SManagerContest_406::finalordeathfightwaittimes() const {
  // @@protoc_insertion_point(field_get:pb.C2SManagerContest_406.FinalOrDeathFightWaitTimes)
  return finalordeathfightwaittimes_;
}
 void C2SManagerContest_406::set_finalordeathfightwaittimes(::google::protobuf::uint32 value) {
  
  finalordeathfightwaittimes_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SManagerContest_406.FinalOrDeathFightWaitTimes)
}

// optional bool SetEveryFightWaitTimeFixed = 10;
void C2SManagerContest_406::clear_seteveryfightwaittimefixed() {
  seteveryfightwaittimefixed_ = false;
}
 bool C2SManagerContest_406::seteveryfightwaittimefixed() const {
  // @@protoc_insertion_point(field_get:pb.C2SManagerContest_406.SetEveryFightWaitTimeFixed)
  return seteveryfightwaittimefixed_;
}
 void C2SManagerContest_406::set_seteveryfightwaittimefixed(bool value) {
  
  seteveryfightwaittimefixed_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SManagerContest_406.SetEveryFightWaitTimeFixed)
}

// optional uint32 SettingCode = 11;
void C2SManagerContest_406::clear_settingcode() {
  settingcode_ = 0u;
}
 ::google::protobuf::uint32 C2SManagerContest_406::settingcode() const {
  // @@protoc_insertion_point(field_get:pb.C2SManagerContest_406.SettingCode)
  return settingcode_;
}
 void C2SManagerContest_406::set_settingcode(::google::protobuf::uint32 value) {
  
  settingcode_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SManagerContest_406.SettingCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CManagerContest_406::kMapIdFieldNumber;
const int S2CManagerContest_406::kSetLoopFirstFieldNumber;
const int S2CManagerContest_406::kSetLoopBOTimesFieldNumber;
const int S2CManagerContest_406::kLoopCircleWaitTimesFieldNumber;
const int S2CManagerContest_406::kLoopFightWaitTimesFieldNumber;
const int S2CManagerContest_406::kSetFinalBOTimesFieldNumber;
const int S2CManagerContest_406::kSetDeathBOTimesFieldNumber;
const int S2CManagerContest_406::kFinalOrDeathCircleWaitTimesFieldNumber;
const int S2CManagerContest_406::kFinalOrDeathFightWaitTimesFieldNumber;
const int S2CManagerContest_406::kSetEveryFightWaitTimeFixedFieldNumber;
const int S2CManagerContest_406::kSettingCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CManagerContest_406::S2CManagerContest_406()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CManagerContest_406)
}

void S2CManagerContest_406::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CManagerContest_406::S2CManagerContest_406(const S2CManagerContest_406& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CManagerContest_406)
}

void S2CManagerContest_406::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  mapid_ = 0u;
  setloopfirst_ = false;
  setloopbotimes_ = 0u;
  loopcirclewaittimes_ = 0u;
  loopfightwaittimes_ = 0u;
  setfinalbotimes_ = 0u;
  setdeathbotimes_ = 0u;
  finalordeathcirclewaittimes_ = 0u;
  finalordeathfightwaittimes_ = 0u;
  seteveryfightwaittimefixed_ = false;
  settingcode_ = 0u;
}

S2CManagerContest_406::~S2CManagerContest_406() {
  // @@protoc_insertion_point(destructor:pb.S2CManagerContest_406)
  SharedDtor();
}

void S2CManagerContest_406::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CManagerContest_406::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CManagerContest_406::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CManagerContest_406_descriptor_;
}

const S2CManagerContest_406& S2CManagerContest_406::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CManagerContest_406* S2CManagerContest_406::default_instance_ = NULL;

S2CManagerContest_406* S2CManagerContest_406::New(::google::protobuf::Arena* arena) const {
  S2CManagerContest_406* n = new S2CManagerContest_406;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CManagerContest_406::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CManagerContest_406)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CManagerContest_406, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CManagerContest_406*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mapid_, setloopfirst_);
  ZR_(setdeathbotimes_, finalordeathcirclewaittimes_);
  ZR_(finalordeathfightwaittimes_, settingcode_);
  seteveryfightwaittimefixed_ = false;

#undef ZR_HELPER_
#undef ZR_

}

bool S2CManagerContest_406::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CManagerContest_406)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MapId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SetLoopFirst;
        break;
      }

      // optional bool SetLoopFirst = 2;
      case 2: {
        if (tag == 16) {
         parse_SetLoopFirst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &setloopfirst_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SetLoopBOTimes;
        break;
      }

      // optional uint32 SetLoopBOTimes = 3;
      case 3: {
        if (tag == 24) {
         parse_SetLoopBOTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &setloopbotimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_LoopCircleWaitTimes;
        break;
      }

      // optional uint32 LoopCircleWaitTimes = 4;
      case 4: {
        if (tag == 32) {
         parse_LoopCircleWaitTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loopcirclewaittimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_LoopFightWaitTimes;
        break;
      }

      // optional uint32 LoopFightWaitTimes = 5;
      case 5: {
        if (tag == 40) {
         parse_LoopFightWaitTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loopfightwaittimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_SetFinalBOTimes;
        break;
      }

      // optional uint32 SetFinalBOTimes = 6;
      case 6: {
        if (tag == 48) {
         parse_SetFinalBOTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &setfinalbotimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_SetDeathBOTimes;
        break;
      }

      // optional uint32 SetDeathBOTimes = 7;
      case 7: {
        if (tag == 56) {
         parse_SetDeathBOTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &setdeathbotimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_FinalOrDeathCircleWaitTimes;
        break;
      }

      // optional uint32 FinalOrDeathCircleWaitTimes = 8;
      case 8: {
        if (tag == 64) {
         parse_FinalOrDeathCircleWaitTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finalordeathcirclewaittimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_FinalOrDeathFightWaitTimes;
        break;
      }

      // optional uint32 FinalOrDeathFightWaitTimes = 9;
      case 9: {
        if (tag == 72) {
         parse_FinalOrDeathFightWaitTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finalordeathfightwaittimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_SetEveryFightWaitTimeFixed;
        break;
      }

      // optional bool SetEveryFightWaitTimeFixed = 10;
      case 10: {
        if (tag == 80) {
         parse_SetEveryFightWaitTimeFixed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &seteveryfightwaittimefixed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_SettingCode;
        break;
      }

      // optional uint32 SettingCode = 11;
      case 11: {
        if (tag == 88) {
         parse_SettingCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &settingcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CManagerContest_406)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CManagerContest_406)
  return false;
#undef DO_
}

void S2CManagerContest_406::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CManagerContest_406)
  // optional uint32 MapId = 1;
  if (this->mapid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mapid(), output);
  }

  // optional bool SetLoopFirst = 2;
  if (this->setloopfirst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->setloopfirst(), output);
  }

  // optional uint32 SetLoopBOTimes = 3;
  if (this->setloopbotimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->setloopbotimes(), output);
  }

  // optional uint32 LoopCircleWaitTimes = 4;
  if (this->loopcirclewaittimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->loopcirclewaittimes(), output);
  }

  // optional uint32 LoopFightWaitTimes = 5;
  if (this->loopfightwaittimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->loopfightwaittimes(), output);
  }

  // optional uint32 SetFinalBOTimes = 6;
  if (this->setfinalbotimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->setfinalbotimes(), output);
  }

  // optional uint32 SetDeathBOTimes = 7;
  if (this->setdeathbotimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->setdeathbotimes(), output);
  }

  // optional uint32 FinalOrDeathCircleWaitTimes = 8;
  if (this->finalordeathcirclewaittimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->finalordeathcirclewaittimes(), output);
  }

  // optional uint32 FinalOrDeathFightWaitTimes = 9;
  if (this->finalordeathfightwaittimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->finalordeathfightwaittimes(), output);
  }

  // optional bool SetEveryFightWaitTimeFixed = 10;
  if (this->seteveryfightwaittimefixed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->seteveryfightwaittimefixed(), output);
  }

  // optional uint32 SettingCode = 11;
  if (this->settingcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->settingcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CManagerContest_406)
}

::google::protobuf::uint8* S2CManagerContest_406::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CManagerContest_406)
  // optional uint32 MapId = 1;
  if (this->mapid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mapid(), target);
  }

  // optional bool SetLoopFirst = 2;
  if (this->setloopfirst() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->setloopfirst(), target);
  }

  // optional uint32 SetLoopBOTimes = 3;
  if (this->setloopbotimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->setloopbotimes(), target);
  }

  // optional uint32 LoopCircleWaitTimes = 4;
  if (this->loopcirclewaittimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->loopcirclewaittimes(), target);
  }

  // optional uint32 LoopFightWaitTimes = 5;
  if (this->loopfightwaittimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->loopfightwaittimes(), target);
  }

  // optional uint32 SetFinalBOTimes = 6;
  if (this->setfinalbotimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->setfinalbotimes(), target);
  }

  // optional uint32 SetDeathBOTimes = 7;
  if (this->setdeathbotimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->setdeathbotimes(), target);
  }

  // optional uint32 FinalOrDeathCircleWaitTimes = 8;
  if (this->finalordeathcirclewaittimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->finalordeathcirclewaittimes(), target);
  }

  // optional uint32 FinalOrDeathFightWaitTimes = 9;
  if (this->finalordeathfightwaittimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->finalordeathfightwaittimes(), target);
  }

  // optional bool SetEveryFightWaitTimeFixed = 10;
  if (this->seteveryfightwaittimefixed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->seteveryfightwaittimefixed(), target);
  }

  // optional uint32 SettingCode = 11;
  if (this->settingcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->settingcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CManagerContest_406)
  return target;
}

int S2CManagerContest_406::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CManagerContest_406)
  int total_size = 0;

  // optional uint32 MapId = 1;
  if (this->mapid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mapid());
  }

  // optional bool SetLoopFirst = 2;
  if (this->setloopfirst() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 SetLoopBOTimes = 3;
  if (this->setloopbotimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->setloopbotimes());
  }

  // optional uint32 LoopCircleWaitTimes = 4;
  if (this->loopcirclewaittimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loopcirclewaittimes());
  }

  // optional uint32 LoopFightWaitTimes = 5;
  if (this->loopfightwaittimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loopfightwaittimes());
  }

  // optional uint32 SetFinalBOTimes = 6;
  if (this->setfinalbotimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->setfinalbotimes());
  }

  // optional uint32 SetDeathBOTimes = 7;
  if (this->setdeathbotimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->setdeathbotimes());
  }

  // optional uint32 FinalOrDeathCircleWaitTimes = 8;
  if (this->finalordeathcirclewaittimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finalordeathcirclewaittimes());
  }

  // optional uint32 FinalOrDeathFightWaitTimes = 9;
  if (this->finalordeathfightwaittimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finalordeathfightwaittimes());
  }

  // optional bool SetEveryFightWaitTimeFixed = 10;
  if (this->seteveryfightwaittimefixed() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 SettingCode = 11;
  if (this->settingcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->settingcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CManagerContest_406::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CManagerContest_406)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CManagerContest_406* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CManagerContest_406>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CManagerContest_406)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CManagerContest_406)
    MergeFrom(*source);
  }
}

void S2CManagerContest_406::MergeFrom(const S2CManagerContest_406& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CManagerContest_406)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.mapid() != 0) {
    set_mapid(from.mapid());
  }
  if (from.setloopfirst() != 0) {
    set_setloopfirst(from.setloopfirst());
  }
  if (from.setloopbotimes() != 0) {
    set_setloopbotimes(from.setloopbotimes());
  }
  if (from.loopcirclewaittimes() != 0) {
    set_loopcirclewaittimes(from.loopcirclewaittimes());
  }
  if (from.loopfightwaittimes() != 0) {
    set_loopfightwaittimes(from.loopfightwaittimes());
  }
  if (from.setfinalbotimes() != 0) {
    set_setfinalbotimes(from.setfinalbotimes());
  }
  if (from.setdeathbotimes() != 0) {
    set_setdeathbotimes(from.setdeathbotimes());
  }
  if (from.finalordeathcirclewaittimes() != 0) {
    set_finalordeathcirclewaittimes(from.finalordeathcirclewaittimes());
  }
  if (from.finalordeathfightwaittimes() != 0) {
    set_finalordeathfightwaittimes(from.finalordeathfightwaittimes());
  }
  if (from.seteveryfightwaittimefixed() != 0) {
    set_seteveryfightwaittimefixed(from.seteveryfightwaittimefixed());
  }
  if (from.settingcode() != 0) {
    set_settingcode(from.settingcode());
  }
}

void S2CManagerContest_406::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CManagerContest_406)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CManagerContest_406::CopyFrom(const S2CManagerContest_406& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CManagerContest_406)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CManagerContest_406::IsInitialized() const {

  return true;
}

void S2CManagerContest_406::Swap(S2CManagerContest_406* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CManagerContest_406::InternalSwap(S2CManagerContest_406* other) {
  std::swap(mapid_, other->mapid_);
  std::swap(setloopfirst_, other->setloopfirst_);
  std::swap(setloopbotimes_, other->setloopbotimes_);
  std::swap(loopcirclewaittimes_, other->loopcirclewaittimes_);
  std::swap(loopfightwaittimes_, other->loopfightwaittimes_);
  std::swap(setfinalbotimes_, other->setfinalbotimes_);
  std::swap(setdeathbotimes_, other->setdeathbotimes_);
  std::swap(finalordeathcirclewaittimes_, other->finalordeathcirclewaittimes_);
  std::swap(finalordeathfightwaittimes_, other->finalordeathfightwaittimes_);
  std::swap(seteveryfightwaittimefixed_, other->seteveryfightwaittimefixed_);
  std::swap(settingcode_, other->settingcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CManagerContest_406::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CManagerContest_406_descriptor_;
  metadata.reflection = S2CManagerContest_406_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CManagerContest_406

// optional uint32 MapId = 1;
void S2CManagerContest_406::clear_mapid() {
  mapid_ = 0u;
}
 ::google::protobuf::uint32 S2CManagerContest_406::mapid() const {
  // @@protoc_insertion_point(field_get:pb.S2CManagerContest_406.MapId)
  return mapid_;
}
 void S2CManagerContest_406::set_mapid(::google::protobuf::uint32 value) {
  
  mapid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CManagerContest_406.MapId)
}

// optional bool SetLoopFirst = 2;
void S2CManagerContest_406::clear_setloopfirst() {
  setloopfirst_ = false;
}
 bool S2CManagerContest_406::setloopfirst() const {
  // @@protoc_insertion_point(field_get:pb.S2CManagerContest_406.SetLoopFirst)
  return setloopfirst_;
}
 void S2CManagerContest_406::set_setloopfirst(bool value) {
  
  setloopfirst_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CManagerContest_406.SetLoopFirst)
}

// optional uint32 SetLoopBOTimes = 3;
void S2CManagerContest_406::clear_setloopbotimes() {
  setloopbotimes_ = 0u;
}
 ::google::protobuf::uint32 S2CManagerContest_406::setloopbotimes() const {
  // @@protoc_insertion_point(field_get:pb.S2CManagerContest_406.SetLoopBOTimes)
  return setloopbotimes_;
}
 void S2CManagerContest_406::set_setloopbotimes(::google::protobuf::uint32 value) {
  
  setloopbotimes_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CManagerContest_406.SetLoopBOTimes)
}

// optional uint32 LoopCircleWaitTimes = 4;
void S2CManagerContest_406::clear_loopcirclewaittimes() {
  loopcirclewaittimes_ = 0u;
}
 ::google::protobuf::uint32 S2CManagerContest_406::loopcirclewaittimes() const {
  // @@protoc_insertion_point(field_get:pb.S2CManagerContest_406.LoopCircleWaitTimes)
  return loopcirclewaittimes_;
}
 void S2CManagerContest_406::set_loopcirclewaittimes(::google::protobuf::uint32 value) {
  
  loopcirclewaittimes_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CManagerContest_406.LoopCircleWaitTimes)
}

// optional uint32 LoopFightWaitTimes = 5;
void S2CManagerContest_406::clear_loopfightwaittimes() {
  loopfightwaittimes_ = 0u;
}
 ::google::protobuf::uint32 S2CManagerContest_406::loopfightwaittimes() const {
  // @@protoc_insertion_point(field_get:pb.S2CManagerContest_406.LoopFightWaitTimes)
  return loopfightwaittimes_;
}
 void S2CManagerContest_406::set_loopfightwaittimes(::google::protobuf::uint32 value) {
  
  loopfightwaittimes_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CManagerContest_406.LoopFightWaitTimes)
}

// optional uint32 SetFinalBOTimes = 6;
void S2CManagerContest_406::clear_setfinalbotimes() {
  setfinalbotimes_ = 0u;
}
 ::google::protobuf::uint32 S2CManagerContest_406::setfinalbotimes() const {
  // @@protoc_insertion_point(field_get:pb.S2CManagerContest_406.SetFinalBOTimes)
  return setfinalbotimes_;
}
 void S2CManagerContest_406::set_setfinalbotimes(::google::protobuf::uint32 value) {
  
  setfinalbotimes_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CManagerContest_406.SetFinalBOTimes)
}

// optional uint32 SetDeathBOTimes = 7;
void S2CManagerContest_406::clear_setdeathbotimes() {
  setdeathbotimes_ = 0u;
}
 ::google::protobuf::uint32 S2CManagerContest_406::setdeathbotimes() const {
  // @@protoc_insertion_point(field_get:pb.S2CManagerContest_406.SetDeathBOTimes)
  return setdeathbotimes_;
}
 void S2CManagerContest_406::set_setdeathbotimes(::google::protobuf::uint32 value) {
  
  setdeathbotimes_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CManagerContest_406.SetDeathBOTimes)
}

// optional uint32 FinalOrDeathCircleWaitTimes = 8;
void S2CManagerContest_406::clear_finalordeathcirclewaittimes() {
  finalordeathcirclewaittimes_ = 0u;
}
 ::google::protobuf::uint32 S2CManagerContest_406::finalordeathcirclewaittimes() const {
  // @@protoc_insertion_point(field_get:pb.S2CManagerContest_406.FinalOrDeathCircleWaitTimes)
  return finalordeathcirclewaittimes_;
}
 void S2CManagerContest_406::set_finalordeathcirclewaittimes(::google::protobuf::uint32 value) {
  
  finalordeathcirclewaittimes_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CManagerContest_406.FinalOrDeathCircleWaitTimes)
}

// optional uint32 FinalOrDeathFightWaitTimes = 9;
void S2CManagerContest_406::clear_finalordeathfightwaittimes() {
  finalordeathfightwaittimes_ = 0u;
}
 ::google::protobuf::uint32 S2CManagerContest_406::finalordeathfightwaittimes() const {
  // @@protoc_insertion_point(field_get:pb.S2CManagerContest_406.FinalOrDeathFightWaitTimes)
  return finalordeathfightwaittimes_;
}
 void S2CManagerContest_406::set_finalordeathfightwaittimes(::google::protobuf::uint32 value) {
  
  finalordeathfightwaittimes_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CManagerContest_406.FinalOrDeathFightWaitTimes)
}

// optional bool SetEveryFightWaitTimeFixed = 10;
void S2CManagerContest_406::clear_seteveryfightwaittimefixed() {
  seteveryfightwaittimefixed_ = false;
}
 bool S2CManagerContest_406::seteveryfightwaittimefixed() const {
  // @@protoc_insertion_point(field_get:pb.S2CManagerContest_406.SetEveryFightWaitTimeFixed)
  return seteveryfightwaittimefixed_;
}
 void S2CManagerContest_406::set_seteveryfightwaittimefixed(bool value) {
  
  seteveryfightwaittimefixed_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CManagerContest_406.SetEveryFightWaitTimeFixed)
}

// optional uint32 SettingCode = 11;
void S2CManagerContest_406::clear_settingcode() {
  settingcode_ = 0u;
}
 ::google::protobuf::uint32 S2CManagerContest_406::settingcode() const {
  // @@protoc_insertion_point(field_get:pb.S2CManagerContest_406.SettingCode)
  return settingcode_;
}
 void S2CManagerContest_406::set_settingcode(::google::protobuf::uint32 value) {
  
  settingcode_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CManagerContest_406.SettingCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnePlayerInfo::kTeamsIdFieldNumber;
const int OnePlayerInfo::kPlayerUIDFieldNumber;
const int OnePlayerInfo::kPlayerNameFieldNumber;
const int OnePlayerInfo::kMountidFieldNumber;
const int OnePlayerInfo::kIsCaptainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnePlayerInfo::OnePlayerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.OnePlayerInfo)
}

void OnePlayerInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OnePlayerInfo::OnePlayerInfo(const OnePlayerInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.OnePlayerInfo)
}

void OnePlayerInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  teamsid_ = GOOGLE_ULONGLONG(0);
  playeruid_ = GOOGLE_ULONGLONG(0);
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mountid_ = 0u;
  iscaptain_ = false;
}

OnePlayerInfo::~OnePlayerInfo() {
  // @@protoc_insertion_point(destructor:pb.OnePlayerInfo)
  SharedDtor();
}

void OnePlayerInfo::SharedDtor() {
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void OnePlayerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnePlayerInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OnePlayerInfo_descriptor_;
}

const OnePlayerInfo& OnePlayerInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

OnePlayerInfo* OnePlayerInfo::default_instance_ = NULL;

OnePlayerInfo* OnePlayerInfo::New(::google::protobuf::Arena* arena) const {
  OnePlayerInfo* n = new OnePlayerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnePlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.OnePlayerInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OnePlayerInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OnePlayerInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(teamsid_, playeruid_);
  ZR_(mountid_, iscaptain_);
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool OnePlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.OnePlayerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 TeamsId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamsid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PlayerUID;
        break;
      }

      // optional uint64 PlayerUID = 2;
      case 2: {
        if (tag == 16) {
         parse_PlayerUID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playeruid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_PlayerName;
        break;
      }

      // optional string PlayerName = 3;
      case 3: {
        if (tag == 26) {
         parse_PlayerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playername().data(), this->playername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OnePlayerInfo.PlayerName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Mountid;
        break;
      }

      // optional uint32 Mountid = 4;
      case 4: {
        if (tag == 32) {
         parse_Mountid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_IsCaptain;
        break;
      }

      // optional bool IsCaptain = 5;
      case 5: {
        if (tag == 40) {
         parse_IsCaptain:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &iscaptain_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.OnePlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.OnePlayerInfo)
  return false;
#undef DO_
}

void OnePlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.OnePlayerInfo)
  // optional uint64 TeamsId = 1;
  if (this->teamsid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamsid(), output);
  }

  // optional uint64 PlayerUID = 2;
  if (this->playeruid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playeruid(), output);
  }

  // optional string PlayerName = 3;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), this->playername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OnePlayerInfo.PlayerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->playername(), output);
  }

  // optional uint32 Mountid = 4;
  if (this->mountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->mountid(), output);
  }

  // optional bool IsCaptain = 5;
  if (this->iscaptain() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->iscaptain(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.OnePlayerInfo)
}

::google::protobuf::uint8* OnePlayerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.OnePlayerInfo)
  // optional uint64 TeamsId = 1;
  if (this->teamsid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamsid(), target);
  }

  // optional uint64 PlayerUID = 2;
  if (this->playeruid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playeruid(), target);
  }

  // optional string PlayerName = 3;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), this->playername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OnePlayerInfo.PlayerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->playername(), target);
  }

  // optional uint32 Mountid = 4;
  if (this->mountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->mountid(), target);
  }

  // optional bool IsCaptain = 5;
  if (this->iscaptain() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->iscaptain(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.OnePlayerInfo)
  return target;
}

int OnePlayerInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.OnePlayerInfo)
  int total_size = 0;

  // optional uint64 TeamsId = 1;
  if (this->teamsid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamsid());
  }

  // optional uint64 PlayerUID = 2;
  if (this->playeruid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playeruid());
  }

  // optional string PlayerName = 3;
  if (this->playername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playername());
  }

  // optional uint32 Mountid = 4;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mountid());
  }

  // optional bool IsCaptain = 5;
  if (this->iscaptain() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OnePlayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.OnePlayerInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OnePlayerInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OnePlayerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.OnePlayerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.OnePlayerInfo)
    MergeFrom(*source);
  }
}

void OnePlayerInfo::MergeFrom(const OnePlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.OnePlayerInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.teamsid() != 0) {
    set_teamsid(from.teamsid());
  }
  if (from.playeruid() != 0) {
    set_playeruid(from.playeruid());
  }
  if (from.playername().size() > 0) {

    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  if (from.mountid() != 0) {
    set_mountid(from.mountid());
  }
  if (from.iscaptain() != 0) {
    set_iscaptain(from.iscaptain());
  }
}

void OnePlayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.OnePlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnePlayerInfo::CopyFrom(const OnePlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.OnePlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnePlayerInfo::IsInitialized() const {

  return true;
}

void OnePlayerInfo::Swap(OnePlayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnePlayerInfo::InternalSwap(OnePlayerInfo* other) {
  std::swap(teamsid_, other->teamsid_);
  std::swap(playeruid_, other->playeruid_);
  playername_.Swap(&other->playername_);
  std::swap(mountid_, other->mountid_);
  std::swap(iscaptain_, other->iscaptain_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OnePlayerInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OnePlayerInfo_descriptor_;
  metadata.reflection = OnePlayerInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OnePlayerInfo

// optional uint64 TeamsId = 1;
void OnePlayerInfo::clear_teamsid() {
  teamsid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 OnePlayerInfo::teamsid() const {
  // @@protoc_insertion_point(field_get:pb.OnePlayerInfo.TeamsId)
  return teamsid_;
}
 void OnePlayerInfo::set_teamsid(::google::protobuf::uint64 value) {
  
  teamsid_ = value;
  // @@protoc_insertion_point(field_set:pb.OnePlayerInfo.TeamsId)
}

// optional uint64 PlayerUID = 2;
void OnePlayerInfo::clear_playeruid() {
  playeruid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 OnePlayerInfo::playeruid() const {
  // @@protoc_insertion_point(field_get:pb.OnePlayerInfo.PlayerUID)
  return playeruid_;
}
 void OnePlayerInfo::set_playeruid(::google::protobuf::uint64 value) {
  
  playeruid_ = value;
  // @@protoc_insertion_point(field_set:pb.OnePlayerInfo.PlayerUID)
}

// optional string PlayerName = 3;
void OnePlayerInfo::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OnePlayerInfo::playername() const {
  // @@protoc_insertion_point(field_get:pb.OnePlayerInfo.PlayerName)
  return playername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OnePlayerInfo::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.OnePlayerInfo.PlayerName)
}
 void OnePlayerInfo::set_playername(const char* value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.OnePlayerInfo.PlayerName)
}
 void OnePlayerInfo::set_playername(const char* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.OnePlayerInfo.PlayerName)
}
 ::std::string* OnePlayerInfo::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:pb.OnePlayerInfo.PlayerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OnePlayerInfo::release_playername() {
  // @@protoc_insertion_point(field_release:pb.OnePlayerInfo.PlayerName)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OnePlayerInfo::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:pb.OnePlayerInfo.PlayerName)
}

// optional uint32 Mountid = 4;
void OnePlayerInfo::clear_mountid() {
  mountid_ = 0u;
}
 ::google::protobuf::uint32 OnePlayerInfo::mountid() const {
  // @@protoc_insertion_point(field_get:pb.OnePlayerInfo.Mountid)
  return mountid_;
}
 void OnePlayerInfo::set_mountid(::google::protobuf::uint32 value) {
  
  mountid_ = value;
  // @@protoc_insertion_point(field_set:pb.OnePlayerInfo.Mountid)
}

// optional bool IsCaptain = 5;
void OnePlayerInfo::clear_iscaptain() {
  iscaptain_ = false;
}
 bool OnePlayerInfo::iscaptain() const {
  // @@protoc_insertion_point(field_get:pb.OnePlayerInfo.IsCaptain)
  return iscaptain_;
}
 void OnePlayerInfo::set_iscaptain(bool value) {
  
  iscaptain_ = value;
  // @@protoc_insertion_point(field_set:pb.OnePlayerInfo.IsCaptain)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamsInfo::kContestTeamIdFieldNumber;
const int TeamsInfo::kIsOpenFieldNumber;
const int TeamsInfo::kPlayerListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamsInfo::TeamsInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TeamsInfo)
}

void TeamsInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TeamsInfo::TeamsInfo(const TeamsInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TeamsInfo)
}

void TeamsInfo::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  contestteamid_ = 0u;
  isopen_ = false;
}

TeamsInfo::~TeamsInfo() {
  // @@protoc_insertion_point(destructor:pb.TeamsInfo)
  SharedDtor();
}

void TeamsInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TeamsInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamsInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TeamsInfo_descriptor_;
}

const TeamsInfo& TeamsInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

TeamsInfo* TeamsInfo::default_instance_ = NULL;

TeamsInfo* TeamsInfo::New(::google::protobuf::Arena* arena) const {
  TeamsInfo* n = new TeamsInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.TeamsInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TeamsInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TeamsInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(contestteamid_, isopen_);

#undef ZR_HELPER_
#undef ZR_

  playerlist_.Clear();
}

bool TeamsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TeamsInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ContestTeamId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contestteamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_IsOpen;
        break;
      }

      // optional bool IsOpen = 2;
      case 2: {
        if (tag == 16) {
         parse_IsOpen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isopen_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_playerList;
        break;
      }

      // repeated .pb.OnePlayerInfo playerList = 3;
      case 3: {
        if (tag == 26) {
         parse_playerList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_playerList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_playerlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_playerList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TeamsInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TeamsInfo)
  return false;
#undef DO_
}

void TeamsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TeamsInfo)
  // optional uint32 ContestTeamId = 1;
  if (this->contestteamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->contestteamid(), output);
  }

  // optional bool IsOpen = 2;
  if (this->isopen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isopen(), output);
  }

  // repeated .pb.OnePlayerInfo playerList = 3;
  for (unsigned int i = 0, n = this->playerlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->playerlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.TeamsInfo)
}

::google::protobuf::uint8* TeamsInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TeamsInfo)
  // optional uint32 ContestTeamId = 1;
  if (this->contestteamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->contestteamid(), target);
  }

  // optional bool IsOpen = 2;
  if (this->isopen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isopen(), target);
  }

  // repeated .pb.OnePlayerInfo playerList = 3;
  for (unsigned int i = 0, n = this->playerlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->playerlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.TeamsInfo)
  return target;
}

int TeamsInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.TeamsInfo)
  int total_size = 0;

  // optional uint32 ContestTeamId = 1;
  if (this->contestteamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contestteamid());
  }

  // optional bool IsOpen = 2;
  if (this->isopen() != 0) {
    total_size += 1 + 1;
  }

  // repeated .pb.OnePlayerInfo playerList = 3;
  total_size += 1 * this->playerlist_size();
  for (int i = 0; i < this->playerlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->playerlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamsInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.TeamsInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TeamsInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamsInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.TeamsInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.TeamsInfo)
    MergeFrom(*source);
  }
}

void TeamsInfo::MergeFrom(const TeamsInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.TeamsInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  playerlist_.MergeFrom(from.playerlist_);
  if (from.contestteamid() != 0) {
    set_contestteamid(from.contestteamid());
  }
  if (from.isopen() != 0) {
    set_isopen(from.isopen());
  }
}

void TeamsInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.TeamsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamsInfo::CopyFrom(const TeamsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.TeamsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamsInfo::IsInitialized() const {

  return true;
}

void TeamsInfo::Swap(TeamsInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamsInfo::InternalSwap(TeamsInfo* other) {
  std::swap(contestteamid_, other->contestteamid_);
  std::swap(isopen_, other->isopen_);
  playerlist_.UnsafeArenaSwap(&other->playerlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamsInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TeamsInfo_descriptor_;
  metadata.reflection = TeamsInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamsInfo

// optional uint32 ContestTeamId = 1;
void TeamsInfo::clear_contestteamid() {
  contestteamid_ = 0u;
}
 ::google::protobuf::uint32 TeamsInfo::contestteamid() const {
  // @@protoc_insertion_point(field_get:pb.TeamsInfo.ContestTeamId)
  return contestteamid_;
}
 void TeamsInfo::set_contestteamid(::google::protobuf::uint32 value) {
  
  contestteamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TeamsInfo.ContestTeamId)
}

// optional bool IsOpen = 2;
void TeamsInfo::clear_isopen() {
  isopen_ = false;
}
 bool TeamsInfo::isopen() const {
  // @@protoc_insertion_point(field_get:pb.TeamsInfo.IsOpen)
  return isopen_;
}
 void TeamsInfo::set_isopen(bool value) {
  
  isopen_ = value;
  // @@protoc_insertion_point(field_set:pb.TeamsInfo.IsOpen)
}

// repeated .pb.OnePlayerInfo playerList = 3;
int TeamsInfo::playerlist_size() const {
  return playerlist_.size();
}
void TeamsInfo::clear_playerlist() {
  playerlist_.Clear();
}
const ::pb::OnePlayerInfo& TeamsInfo::playerlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.TeamsInfo.playerList)
  return playerlist_.Get(index);
}
::pb::OnePlayerInfo* TeamsInfo::mutable_playerlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.TeamsInfo.playerList)
  return playerlist_.Mutable(index);
}
::pb::OnePlayerInfo* TeamsInfo::add_playerlist() {
  // @@protoc_insertion_point(field_add:pb.TeamsInfo.playerList)
  return playerlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::OnePlayerInfo >*
TeamsInfo::mutable_playerlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.TeamsInfo.playerList)
  return &playerlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::OnePlayerInfo >&
TeamsInfo::playerlist() const {
  // @@protoc_insertion_point(field_list:pb.TeamsInfo.playerList)
  return playerlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamsSimpleInfo::kTeamsIdFieldNumber;
const int TeamsSimpleInfo::kTeamNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamsSimpleInfo::TeamsSimpleInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TeamsSimpleInfo)
}

void TeamsSimpleInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TeamsSimpleInfo::TeamsSimpleInfo(const TeamsSimpleInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TeamsSimpleInfo)
}

void TeamsSimpleInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  teamsid_ = GOOGLE_ULONGLONG(0);
  teamname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TeamsSimpleInfo::~TeamsSimpleInfo() {
  // @@protoc_insertion_point(destructor:pb.TeamsSimpleInfo)
  SharedDtor();
}

void TeamsSimpleInfo::SharedDtor() {
  teamname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TeamsSimpleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamsSimpleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TeamsSimpleInfo_descriptor_;
}

const TeamsSimpleInfo& TeamsSimpleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

TeamsSimpleInfo* TeamsSimpleInfo::default_instance_ = NULL;

TeamsSimpleInfo* TeamsSimpleInfo::New(::google::protobuf::Arena* arena) const {
  TeamsSimpleInfo* n = new TeamsSimpleInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamsSimpleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.TeamsSimpleInfo)
  teamsid_ = GOOGLE_ULONGLONG(0);
  teamname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TeamsSimpleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TeamsSimpleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 TeamsId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamsid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_TeamName;
        break;
      }

      // optional string TeamName = 2;
      case 2: {
        if (tag == 18) {
         parse_TeamName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_teamname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->teamname().data(), this->teamname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.TeamsSimpleInfo.TeamName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TeamsSimpleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TeamsSimpleInfo)
  return false;
#undef DO_
}

void TeamsSimpleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TeamsSimpleInfo)
  // optional uint64 TeamsId = 1;
  if (this->teamsid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamsid(), output);
  }

  // optional string TeamName = 2;
  if (this->teamname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->teamname().data(), this->teamname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.TeamsSimpleInfo.TeamName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->teamname(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.TeamsSimpleInfo)
}

::google::protobuf::uint8* TeamsSimpleInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TeamsSimpleInfo)
  // optional uint64 TeamsId = 1;
  if (this->teamsid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamsid(), target);
  }

  // optional string TeamName = 2;
  if (this->teamname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->teamname().data(), this->teamname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.TeamsSimpleInfo.TeamName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->teamname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.TeamsSimpleInfo)
  return target;
}

int TeamsSimpleInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.TeamsSimpleInfo)
  int total_size = 0;

  // optional uint64 TeamsId = 1;
  if (this->teamsid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamsid());
  }

  // optional string TeamName = 2;
  if (this->teamname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->teamname());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamsSimpleInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.TeamsSimpleInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TeamsSimpleInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamsSimpleInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.TeamsSimpleInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.TeamsSimpleInfo)
    MergeFrom(*source);
  }
}

void TeamsSimpleInfo::MergeFrom(const TeamsSimpleInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.TeamsSimpleInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.teamsid() != 0) {
    set_teamsid(from.teamsid());
  }
  if (from.teamname().size() > 0) {

    teamname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.teamname_);
  }
}

void TeamsSimpleInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.TeamsSimpleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamsSimpleInfo::CopyFrom(const TeamsSimpleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.TeamsSimpleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamsSimpleInfo::IsInitialized() const {

  return true;
}

void TeamsSimpleInfo::Swap(TeamsSimpleInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamsSimpleInfo::InternalSwap(TeamsSimpleInfo* other) {
  std::swap(teamsid_, other->teamsid_);
  teamname_.Swap(&other->teamname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamsSimpleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TeamsSimpleInfo_descriptor_;
  metadata.reflection = TeamsSimpleInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamsSimpleInfo

// optional uint64 TeamsId = 1;
void TeamsSimpleInfo::clear_teamsid() {
  teamsid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 TeamsSimpleInfo::teamsid() const {
  // @@protoc_insertion_point(field_get:pb.TeamsSimpleInfo.TeamsId)
  return teamsid_;
}
 void TeamsSimpleInfo::set_teamsid(::google::protobuf::uint64 value) {
  
  teamsid_ = value;
  // @@protoc_insertion_point(field_set:pb.TeamsSimpleInfo.TeamsId)
}

// optional string TeamName = 2;
void TeamsSimpleInfo::clear_teamname() {
  teamname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TeamsSimpleInfo::teamname() const {
  // @@protoc_insertion_point(field_get:pb.TeamsSimpleInfo.TeamName)
  return teamname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TeamsSimpleInfo::set_teamname(const ::std::string& value) {
  
  teamname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.TeamsSimpleInfo.TeamName)
}
 void TeamsSimpleInfo::set_teamname(const char* value) {
  
  teamname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.TeamsSimpleInfo.TeamName)
}
 void TeamsSimpleInfo::set_teamname(const char* value, size_t size) {
  
  teamname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.TeamsSimpleInfo.TeamName)
}
 ::std::string* TeamsSimpleInfo::mutable_teamname() {
  
  // @@protoc_insertion_point(field_mutable:pb.TeamsSimpleInfo.TeamName)
  return teamname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TeamsSimpleInfo::release_teamname() {
  // @@protoc_insertion_point(field_release:pb.TeamsSimpleInfo.TeamName)
  
  return teamname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TeamsSimpleInfo::set_allocated_teamname(::std::string* teamname) {
  if (teamname != NULL) {
    
  } else {
    
  }
  teamname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), teamname);
  // @@protoc_insertion_point(field_set_allocated:pb.TeamsSimpleInfo.TeamName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SGetContestTeams_407::kContestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetContestTeams_407::C2SGetContestTeams_407()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetContestTeams_407)
}

void C2SGetContestTeams_407::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetContestTeams_407::C2SGetContestTeams_407(const C2SGetContestTeams_407& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetContestTeams_407)
}

void C2SGetContestTeams_407::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  contestid_ = 0u;
}

C2SGetContestTeams_407::~C2SGetContestTeams_407() {
  // @@protoc_insertion_point(destructor:pb.C2SGetContestTeams_407)
  SharedDtor();
}

void C2SGetContestTeams_407::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetContestTeams_407::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetContestTeams_407::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetContestTeams_407_descriptor_;
}

const C2SGetContestTeams_407& C2SGetContestTeams_407::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetContestTeams_407* C2SGetContestTeams_407::default_instance_ = NULL;

C2SGetContestTeams_407* C2SGetContestTeams_407::New(::google::protobuf::Arena* arena) const {
  C2SGetContestTeams_407* n = new C2SGetContestTeams_407;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetContestTeams_407::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetContestTeams_407)
  contestid_ = 0u;
}

bool C2SGetContestTeams_407::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetContestTeams_407)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ContestId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contestid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetContestTeams_407)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetContestTeams_407)
  return false;
#undef DO_
}

void C2SGetContestTeams_407::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetContestTeams_407)
  // optional uint32 ContestId = 1;
  if (this->contestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->contestid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SGetContestTeams_407)
}

::google::protobuf::uint8* C2SGetContestTeams_407::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetContestTeams_407)
  // optional uint32 ContestId = 1;
  if (this->contestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->contestid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetContestTeams_407)
  return target;
}

int C2SGetContestTeams_407::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetContestTeams_407)
  int total_size = 0;

  // optional uint32 ContestId = 1;
  if (this->contestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contestid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetContestTeams_407::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetContestTeams_407)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetContestTeams_407* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetContestTeams_407>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetContestTeams_407)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetContestTeams_407)
    MergeFrom(*source);
  }
}

void C2SGetContestTeams_407::MergeFrom(const C2SGetContestTeams_407& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetContestTeams_407)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.contestid() != 0) {
    set_contestid(from.contestid());
  }
}

void C2SGetContestTeams_407::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetContestTeams_407)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetContestTeams_407::CopyFrom(const C2SGetContestTeams_407& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetContestTeams_407)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetContestTeams_407::IsInitialized() const {

  return true;
}

void C2SGetContestTeams_407::Swap(C2SGetContestTeams_407* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetContestTeams_407::InternalSwap(C2SGetContestTeams_407* other) {
  std::swap(contestid_, other->contestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetContestTeams_407::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetContestTeams_407_descriptor_;
  metadata.reflection = C2SGetContestTeams_407_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetContestTeams_407

// optional uint32 ContestId = 1;
void C2SGetContestTeams_407::clear_contestid() {
  contestid_ = 0u;
}
 ::google::protobuf::uint32 C2SGetContestTeams_407::contestid() const {
  // @@protoc_insertion_point(field_get:pb.C2SGetContestTeams_407.ContestId)
  return contestid_;
}
 void C2SGetContestTeams_407::set_contestid(::google::protobuf::uint32 value) {
  
  contestid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SGetContestTeams_407.ContestId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetContestTeams_407::kInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetContestTeams_407::S2CGetContestTeams_407()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetContestTeams_407)
}

void S2CGetContestTeams_407::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetContestTeams_407::S2CGetContestTeams_407(const S2CGetContestTeams_407& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetContestTeams_407)
}

void S2CGetContestTeams_407::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CGetContestTeams_407::~S2CGetContestTeams_407() {
  // @@protoc_insertion_point(destructor:pb.S2CGetContestTeams_407)
  SharedDtor();
}

void S2CGetContestTeams_407::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetContestTeams_407::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetContestTeams_407::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetContestTeams_407_descriptor_;
}

const S2CGetContestTeams_407& S2CGetContestTeams_407::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetContestTeams_407* S2CGetContestTeams_407::default_instance_ = NULL;

S2CGetContestTeams_407* S2CGetContestTeams_407::New(::google::protobuf::Arena* arena) const {
  S2CGetContestTeams_407* n = new S2CGetContestTeams_407;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetContestTeams_407::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetContestTeams_407)
  infos_.Clear();
}

bool S2CGetContestTeams_407::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetContestTeams_407)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TeamsInfo Infos = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Infos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_infos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_Infos;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetContestTeams_407)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetContestTeams_407)
  return false;
#undef DO_
}

void S2CGetContestTeams_407::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetContestTeams_407)
  // repeated .pb.TeamsInfo Infos = 1;
  for (unsigned int i = 0, n = this->infos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->infos(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetContestTeams_407)
}

::google::protobuf::uint8* S2CGetContestTeams_407::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetContestTeams_407)
  // repeated .pb.TeamsInfo Infos = 1;
  for (unsigned int i = 0, n = this->infos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->infos(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetContestTeams_407)
  return target;
}

int S2CGetContestTeams_407::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetContestTeams_407)
  int total_size = 0;

  // repeated .pb.TeamsInfo Infos = 1;
  total_size += 1 * this->infos_size();
  for (int i = 0; i < this->infos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->infos(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetContestTeams_407::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetContestTeams_407)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetContestTeams_407* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetContestTeams_407>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetContestTeams_407)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetContestTeams_407)
    MergeFrom(*source);
  }
}

void S2CGetContestTeams_407::MergeFrom(const S2CGetContestTeams_407& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetContestTeams_407)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  infos_.MergeFrom(from.infos_);
}

void S2CGetContestTeams_407::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetContestTeams_407)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetContestTeams_407::CopyFrom(const S2CGetContestTeams_407& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetContestTeams_407)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetContestTeams_407::IsInitialized() const {

  return true;
}

void S2CGetContestTeams_407::Swap(S2CGetContestTeams_407* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetContestTeams_407::InternalSwap(S2CGetContestTeams_407* other) {
  infos_.UnsafeArenaSwap(&other->infos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetContestTeams_407::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetContestTeams_407_descriptor_;
  metadata.reflection = S2CGetContestTeams_407_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetContestTeams_407

// repeated .pb.TeamsInfo Infos = 1;
int S2CGetContestTeams_407::infos_size() const {
  return infos_.size();
}
void S2CGetContestTeams_407::clear_infos() {
  infos_.Clear();
}
const ::pb::TeamsInfo& S2CGetContestTeams_407::infos(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetContestTeams_407.Infos)
  return infos_.Get(index);
}
::pb::TeamsInfo* S2CGetContestTeams_407::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetContestTeams_407.Infos)
  return infos_.Mutable(index);
}
::pb::TeamsInfo* S2CGetContestTeams_407::add_infos() {
  // @@protoc_insertion_point(field_add:pb.S2CGetContestTeams_407.Infos)
  return infos_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::TeamsInfo >*
S2CGetContestTeams_407::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetContestTeams_407.Infos)
  return &infos_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::TeamsInfo >&
S2CGetContestTeams_407::infos() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetContestTeams_407.Infos)
  return infos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SEditorContesMembers_408::kNewTeamsInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SEditorContesMembers_408::C2SEditorContesMembers_408()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SEditorContesMembers_408)
}

void C2SEditorContesMembers_408::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SEditorContesMembers_408::C2SEditorContesMembers_408(const C2SEditorContesMembers_408& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SEditorContesMembers_408)
}

void C2SEditorContesMembers_408::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SEditorContesMembers_408::~C2SEditorContesMembers_408() {
  // @@protoc_insertion_point(destructor:pb.C2SEditorContesMembers_408)
  SharedDtor();
}

void C2SEditorContesMembers_408::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SEditorContesMembers_408::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SEditorContesMembers_408::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SEditorContesMembers_408_descriptor_;
}

const C2SEditorContesMembers_408& C2SEditorContesMembers_408::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SEditorContesMembers_408* C2SEditorContesMembers_408::default_instance_ = NULL;

C2SEditorContesMembers_408* C2SEditorContesMembers_408::New(::google::protobuf::Arena* arena) const {
  C2SEditorContesMembers_408* n = new C2SEditorContesMembers_408;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SEditorContesMembers_408::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SEditorContesMembers_408)
  newteamsinfo_.Clear();
}

bool C2SEditorContesMembers_408::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SEditorContesMembers_408)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TeamsInfo NewTeamsInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_NewTeamsInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_newteamsinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_NewTeamsInfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SEditorContesMembers_408)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SEditorContesMembers_408)
  return false;
#undef DO_
}

void C2SEditorContesMembers_408::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SEditorContesMembers_408)
  // repeated .pb.TeamsInfo NewTeamsInfo = 1;
  for (unsigned int i = 0, n = this->newteamsinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->newteamsinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SEditorContesMembers_408)
}

::google::protobuf::uint8* C2SEditorContesMembers_408::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SEditorContesMembers_408)
  // repeated .pb.TeamsInfo NewTeamsInfo = 1;
  for (unsigned int i = 0, n = this->newteamsinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->newteamsinfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SEditorContesMembers_408)
  return target;
}

int C2SEditorContesMembers_408::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SEditorContesMembers_408)
  int total_size = 0;

  // repeated .pb.TeamsInfo NewTeamsInfo = 1;
  total_size += 1 * this->newteamsinfo_size();
  for (int i = 0; i < this->newteamsinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->newteamsinfo(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SEditorContesMembers_408::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SEditorContesMembers_408)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SEditorContesMembers_408* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SEditorContesMembers_408>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SEditorContesMembers_408)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SEditorContesMembers_408)
    MergeFrom(*source);
  }
}

void C2SEditorContesMembers_408::MergeFrom(const C2SEditorContesMembers_408& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SEditorContesMembers_408)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  newteamsinfo_.MergeFrom(from.newteamsinfo_);
}

void C2SEditorContesMembers_408::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SEditorContesMembers_408)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SEditorContesMembers_408::CopyFrom(const C2SEditorContesMembers_408& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SEditorContesMembers_408)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SEditorContesMembers_408::IsInitialized() const {

  return true;
}

void C2SEditorContesMembers_408::Swap(C2SEditorContesMembers_408* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SEditorContesMembers_408::InternalSwap(C2SEditorContesMembers_408* other) {
  newteamsinfo_.UnsafeArenaSwap(&other->newteamsinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SEditorContesMembers_408::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SEditorContesMembers_408_descriptor_;
  metadata.reflection = C2SEditorContesMembers_408_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SEditorContesMembers_408

// repeated .pb.TeamsInfo NewTeamsInfo = 1;
int C2SEditorContesMembers_408::newteamsinfo_size() const {
  return newteamsinfo_.size();
}
void C2SEditorContesMembers_408::clear_newteamsinfo() {
  newteamsinfo_.Clear();
}
const ::pb::TeamsInfo& C2SEditorContesMembers_408::newteamsinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.C2SEditorContesMembers_408.NewTeamsInfo)
  return newteamsinfo_.Get(index);
}
::pb::TeamsInfo* C2SEditorContesMembers_408::mutable_newteamsinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.C2SEditorContesMembers_408.NewTeamsInfo)
  return newteamsinfo_.Mutable(index);
}
::pb::TeamsInfo* C2SEditorContesMembers_408::add_newteamsinfo() {
  // @@protoc_insertion_point(field_add:pb.C2SEditorContesMembers_408.NewTeamsInfo)
  return newteamsinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::TeamsInfo >*
C2SEditorContesMembers_408::mutable_newteamsinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.C2SEditorContesMembers_408.NewTeamsInfo)
  return &newteamsinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::TeamsInfo >&
C2SEditorContesMembers_408::newteamsinfo() const {
  // @@protoc_insertion_point(field_list:pb.C2SEditorContesMembers_408.NewTeamsInfo)
  return newteamsinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CEditorContesMembers_408::kNewTeamsInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CEditorContesMembers_408::S2CEditorContesMembers_408()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CEditorContesMembers_408)
}

void S2CEditorContesMembers_408::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CEditorContesMembers_408::S2CEditorContesMembers_408(const S2CEditorContesMembers_408& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CEditorContesMembers_408)
}

void S2CEditorContesMembers_408::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CEditorContesMembers_408::~S2CEditorContesMembers_408() {
  // @@protoc_insertion_point(destructor:pb.S2CEditorContesMembers_408)
  SharedDtor();
}

void S2CEditorContesMembers_408::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CEditorContesMembers_408::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CEditorContesMembers_408::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CEditorContesMembers_408_descriptor_;
}

const S2CEditorContesMembers_408& S2CEditorContesMembers_408::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CEditorContesMembers_408* S2CEditorContesMembers_408::default_instance_ = NULL;

S2CEditorContesMembers_408* S2CEditorContesMembers_408::New(::google::protobuf::Arena* arena) const {
  S2CEditorContesMembers_408* n = new S2CEditorContesMembers_408;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CEditorContesMembers_408::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CEditorContesMembers_408)
  newteamsinfo_.Clear();
}

bool S2CEditorContesMembers_408::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CEditorContesMembers_408)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TeamsInfo NewTeamsInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_NewTeamsInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_newteamsinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_NewTeamsInfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CEditorContesMembers_408)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CEditorContesMembers_408)
  return false;
#undef DO_
}

void S2CEditorContesMembers_408::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CEditorContesMembers_408)
  // repeated .pb.TeamsInfo NewTeamsInfo = 1;
  for (unsigned int i = 0, n = this->newteamsinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->newteamsinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CEditorContesMembers_408)
}

::google::protobuf::uint8* S2CEditorContesMembers_408::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CEditorContesMembers_408)
  // repeated .pb.TeamsInfo NewTeamsInfo = 1;
  for (unsigned int i = 0, n = this->newteamsinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->newteamsinfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CEditorContesMembers_408)
  return target;
}

int S2CEditorContesMembers_408::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CEditorContesMembers_408)
  int total_size = 0;

  // repeated .pb.TeamsInfo NewTeamsInfo = 1;
  total_size += 1 * this->newteamsinfo_size();
  for (int i = 0; i < this->newteamsinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->newteamsinfo(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CEditorContesMembers_408::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CEditorContesMembers_408)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CEditorContesMembers_408* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CEditorContesMembers_408>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CEditorContesMembers_408)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CEditorContesMembers_408)
    MergeFrom(*source);
  }
}

void S2CEditorContesMembers_408::MergeFrom(const S2CEditorContesMembers_408& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CEditorContesMembers_408)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  newteamsinfo_.MergeFrom(from.newteamsinfo_);
}

void S2CEditorContesMembers_408::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CEditorContesMembers_408)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CEditorContesMembers_408::CopyFrom(const S2CEditorContesMembers_408& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CEditorContesMembers_408)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CEditorContesMembers_408::IsInitialized() const {

  return true;
}

void S2CEditorContesMembers_408::Swap(S2CEditorContesMembers_408* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CEditorContesMembers_408::InternalSwap(S2CEditorContesMembers_408* other) {
  newteamsinfo_.UnsafeArenaSwap(&other->newteamsinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CEditorContesMembers_408::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CEditorContesMembers_408_descriptor_;
  metadata.reflection = S2CEditorContesMembers_408_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CEditorContesMembers_408

// repeated .pb.TeamsInfo NewTeamsInfo = 1;
int S2CEditorContesMembers_408::newteamsinfo_size() const {
  return newteamsinfo_.size();
}
void S2CEditorContesMembers_408::clear_newteamsinfo() {
  newteamsinfo_.Clear();
}
const ::pb::TeamsInfo& S2CEditorContesMembers_408::newteamsinfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CEditorContesMembers_408.NewTeamsInfo)
  return newteamsinfo_.Get(index);
}
::pb::TeamsInfo* S2CEditorContesMembers_408::mutable_newteamsinfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CEditorContesMembers_408.NewTeamsInfo)
  return newteamsinfo_.Mutable(index);
}
::pb::TeamsInfo* S2CEditorContesMembers_408::add_newteamsinfo() {
  // @@protoc_insertion_point(field_add:pb.S2CEditorContesMembers_408.NewTeamsInfo)
  return newteamsinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::TeamsInfo >*
S2CEditorContesMembers_408::mutable_newteamsinfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CEditorContesMembers_408.NewTeamsInfo)
  return &newteamsinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::TeamsInfo >&
S2CEditorContesMembers_408::newteamsinfo() const {
  // @@protoc_insertion_point(field_list:pb.S2CEditorContesMembers_408.NewTeamsInfo)
  return newteamsinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SQuitContest_409::kDeleteRidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SQuitContest_409::C2SQuitContest_409()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SQuitContest_409)
}

void C2SQuitContest_409::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SQuitContest_409::C2SQuitContest_409(const C2SQuitContest_409& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SQuitContest_409)
}

void C2SQuitContest_409::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SQuitContest_409::~C2SQuitContest_409() {
  // @@protoc_insertion_point(destructor:pb.C2SQuitContest_409)
  SharedDtor();
}

void C2SQuitContest_409::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SQuitContest_409::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SQuitContest_409::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SQuitContest_409_descriptor_;
}

const C2SQuitContest_409& C2SQuitContest_409::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SQuitContest_409* C2SQuitContest_409::default_instance_ = NULL;

C2SQuitContest_409* C2SQuitContest_409::New(::google::protobuf::Arena* arena) const {
  C2SQuitContest_409* n = new C2SQuitContest_409;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SQuitContest_409::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SQuitContest_409)
  deleterids_.Clear();
}

bool C2SQuitContest_409::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SQuitContest_409)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 DeleteRids = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_deleterids())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10, input, this->mutable_deleterids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SQuitContest_409)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SQuitContest_409)
  return false;
#undef DO_
}

void C2SQuitContest_409::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SQuitContest_409)
  // repeated uint64 DeleteRids = 1;
  if (this->deleterids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_deleterids_cached_byte_size_);
  }
  for (int i = 0; i < this->deleterids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->deleterids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SQuitContest_409)
}

::google::protobuf::uint8* C2SQuitContest_409::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SQuitContest_409)
  // repeated uint64 DeleteRids = 1;
  if (this->deleterids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _deleterids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->deleterids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->deleterids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SQuitContest_409)
  return target;
}

int C2SQuitContest_409::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SQuitContest_409)
  int total_size = 0;

  // repeated uint64 DeleteRids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->deleterids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->deleterids(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _deleterids_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SQuitContest_409::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SQuitContest_409)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SQuitContest_409* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SQuitContest_409>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SQuitContest_409)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SQuitContest_409)
    MergeFrom(*source);
  }
}

void C2SQuitContest_409::MergeFrom(const C2SQuitContest_409& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SQuitContest_409)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  deleterids_.MergeFrom(from.deleterids_);
}

void C2SQuitContest_409::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SQuitContest_409)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SQuitContest_409::CopyFrom(const C2SQuitContest_409& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SQuitContest_409)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SQuitContest_409::IsInitialized() const {

  return true;
}

void C2SQuitContest_409::Swap(C2SQuitContest_409* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SQuitContest_409::InternalSwap(C2SQuitContest_409* other) {
  deleterids_.UnsafeArenaSwap(&other->deleterids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SQuitContest_409::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SQuitContest_409_descriptor_;
  metadata.reflection = C2SQuitContest_409_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SQuitContest_409

// repeated uint64 DeleteRids = 1;
int C2SQuitContest_409::deleterids_size() const {
  return deleterids_.size();
}
void C2SQuitContest_409::clear_deleterids() {
  deleterids_.Clear();
}
 ::google::protobuf::uint64 C2SQuitContest_409::deleterids(int index) const {
  // @@protoc_insertion_point(field_get:pb.C2SQuitContest_409.DeleteRids)
  return deleterids_.Get(index);
}
 void C2SQuitContest_409::set_deleterids(int index, ::google::protobuf::uint64 value) {
  deleterids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.C2SQuitContest_409.DeleteRids)
}
 void C2SQuitContest_409::add_deleterids(::google::protobuf::uint64 value) {
  deleterids_.Add(value);
  // @@protoc_insertion_point(field_add:pb.C2SQuitContest_409.DeleteRids)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
C2SQuitContest_409::deleterids() const {
  // @@protoc_insertion_point(field_list:pb.C2SQuitContest_409.DeleteRids)
  return deleterids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
C2SQuitContest_409::mutable_deleterids() {
  // @@protoc_insertion_point(field_mutable_list:pb.C2SQuitContest_409.DeleteRids)
  return &deleterids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CQuitContest_409::kQuitUidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CQuitContest_409::S2CQuitContest_409()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CQuitContest_409)
}

void S2CQuitContest_409::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CQuitContest_409::S2CQuitContest_409(const S2CQuitContest_409& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CQuitContest_409)
}

void S2CQuitContest_409::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CQuitContest_409::~S2CQuitContest_409() {
  // @@protoc_insertion_point(destructor:pb.S2CQuitContest_409)
  SharedDtor();
}

void S2CQuitContest_409::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CQuitContest_409::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CQuitContest_409::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CQuitContest_409_descriptor_;
}

const S2CQuitContest_409& S2CQuitContest_409::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CQuitContest_409* S2CQuitContest_409::default_instance_ = NULL;

S2CQuitContest_409* S2CQuitContest_409::New(::google::protobuf::Arena* arena) const {
  S2CQuitContest_409* n = new S2CQuitContest_409;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CQuitContest_409::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CQuitContest_409)
  quituids_.Clear();
}

bool S2CQuitContest_409::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CQuitContest_409)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 QuitUids = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_quituids())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10, input, this->mutable_quituids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CQuitContest_409)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CQuitContest_409)
  return false;
#undef DO_
}

void S2CQuitContest_409::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CQuitContest_409)
  // repeated uint64 QuitUids = 1;
  if (this->quituids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_quituids_cached_byte_size_);
  }
  for (int i = 0; i < this->quituids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->quituids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CQuitContest_409)
}

::google::protobuf::uint8* S2CQuitContest_409::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CQuitContest_409)
  // repeated uint64 QuitUids = 1;
  if (this->quituids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _quituids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->quituids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->quituids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CQuitContest_409)
  return target;
}

int S2CQuitContest_409::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CQuitContest_409)
  int total_size = 0;

  // repeated uint64 QuitUids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->quituids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->quituids(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _quituids_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CQuitContest_409::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CQuitContest_409)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CQuitContest_409* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CQuitContest_409>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CQuitContest_409)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CQuitContest_409)
    MergeFrom(*source);
  }
}

void S2CQuitContest_409::MergeFrom(const S2CQuitContest_409& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CQuitContest_409)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  quituids_.MergeFrom(from.quituids_);
}

void S2CQuitContest_409::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CQuitContest_409)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CQuitContest_409::CopyFrom(const S2CQuitContest_409& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CQuitContest_409)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CQuitContest_409::IsInitialized() const {

  return true;
}

void S2CQuitContest_409::Swap(S2CQuitContest_409* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CQuitContest_409::InternalSwap(S2CQuitContest_409* other) {
  quituids_.UnsafeArenaSwap(&other->quituids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CQuitContest_409::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CQuitContest_409_descriptor_;
  metadata.reflection = S2CQuitContest_409_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CQuitContest_409

// repeated uint64 QuitUids = 1;
int S2CQuitContest_409::quituids_size() const {
  return quituids_.size();
}
void S2CQuitContest_409::clear_quituids() {
  quituids_.Clear();
}
 ::google::protobuf::uint64 S2CQuitContest_409::quituids(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CQuitContest_409.QuitUids)
  return quituids_.Get(index);
}
 void S2CQuitContest_409::set_quituids(int index, ::google::protobuf::uint64 value) {
  quituids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.S2CQuitContest_409.QuitUids)
}
 void S2CQuitContest_409::add_quituids(::google::protobuf::uint64 value) {
  quituids_.Add(value);
  // @@protoc_insertion_point(field_add:pb.S2CQuitContest_409.QuitUids)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2CQuitContest_409::quituids() const {
  // @@protoc_insertion_point(field_list:pb.S2CQuitContest_409.QuitUids)
  return quituids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2CQuitContest_409::mutable_quituids() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CQuitContest_409.QuitUids)
  return &quituids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SOpenContestTeam_410::kOpenContestTeamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SOpenContestTeam_410::C2SOpenContestTeam_410()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SOpenContestTeam_410)
}

void C2SOpenContestTeam_410::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SOpenContestTeam_410::C2SOpenContestTeam_410(const C2SOpenContestTeam_410& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SOpenContestTeam_410)
}

void C2SOpenContestTeam_410::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  opencontestteamid_ = 0u;
}

C2SOpenContestTeam_410::~C2SOpenContestTeam_410() {
  // @@protoc_insertion_point(destructor:pb.C2SOpenContestTeam_410)
  SharedDtor();
}

void C2SOpenContestTeam_410::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SOpenContestTeam_410::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SOpenContestTeam_410::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SOpenContestTeam_410_descriptor_;
}

const C2SOpenContestTeam_410& C2SOpenContestTeam_410::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SOpenContestTeam_410* C2SOpenContestTeam_410::default_instance_ = NULL;

C2SOpenContestTeam_410* C2SOpenContestTeam_410::New(::google::protobuf::Arena* arena) const {
  C2SOpenContestTeam_410* n = new C2SOpenContestTeam_410;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SOpenContestTeam_410::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SOpenContestTeam_410)
  opencontestteamid_ = 0u;
}

bool C2SOpenContestTeam_410::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SOpenContestTeam_410)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 OpenContestTeamId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opencontestteamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SOpenContestTeam_410)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SOpenContestTeam_410)
  return false;
#undef DO_
}

void C2SOpenContestTeam_410::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SOpenContestTeam_410)
  // optional uint32 OpenContestTeamId = 1;
  if (this->opencontestteamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->opencontestteamid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SOpenContestTeam_410)
}

::google::protobuf::uint8* C2SOpenContestTeam_410::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SOpenContestTeam_410)
  // optional uint32 OpenContestTeamId = 1;
  if (this->opencontestteamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->opencontestteamid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SOpenContestTeam_410)
  return target;
}

int C2SOpenContestTeam_410::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SOpenContestTeam_410)
  int total_size = 0;

  // optional uint32 OpenContestTeamId = 1;
  if (this->opencontestteamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opencontestteamid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SOpenContestTeam_410::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SOpenContestTeam_410)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SOpenContestTeam_410* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SOpenContestTeam_410>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SOpenContestTeam_410)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SOpenContestTeam_410)
    MergeFrom(*source);
  }
}

void C2SOpenContestTeam_410::MergeFrom(const C2SOpenContestTeam_410& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SOpenContestTeam_410)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.opencontestteamid() != 0) {
    set_opencontestteamid(from.opencontestteamid());
  }
}

void C2SOpenContestTeam_410::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SOpenContestTeam_410)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SOpenContestTeam_410::CopyFrom(const C2SOpenContestTeam_410& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SOpenContestTeam_410)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SOpenContestTeam_410::IsInitialized() const {

  return true;
}

void C2SOpenContestTeam_410::Swap(C2SOpenContestTeam_410* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SOpenContestTeam_410::InternalSwap(C2SOpenContestTeam_410* other) {
  std::swap(opencontestteamid_, other->opencontestteamid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SOpenContestTeam_410::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SOpenContestTeam_410_descriptor_;
  metadata.reflection = C2SOpenContestTeam_410_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SOpenContestTeam_410

// optional uint32 OpenContestTeamId = 1;
void C2SOpenContestTeam_410::clear_opencontestteamid() {
  opencontestteamid_ = 0u;
}
 ::google::protobuf::uint32 C2SOpenContestTeam_410::opencontestteamid() const {
  // @@protoc_insertion_point(field_get:pb.C2SOpenContestTeam_410.OpenContestTeamId)
  return opencontestteamid_;
}
 void C2SOpenContestTeam_410::set_opencontestteamid(::google::protobuf::uint32 value) {
  
  opencontestteamid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SOpenContestTeam_410.OpenContestTeamId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2COpenContestTeam_410::kOpenContestTeamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2COpenContestTeam_410::S2COpenContestTeam_410()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2COpenContestTeam_410)
}

void S2COpenContestTeam_410::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2COpenContestTeam_410::S2COpenContestTeam_410(const S2COpenContestTeam_410& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2COpenContestTeam_410)
}

void S2COpenContestTeam_410::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  opencontestteamid_ = 0u;
}

S2COpenContestTeam_410::~S2COpenContestTeam_410() {
  // @@protoc_insertion_point(destructor:pb.S2COpenContestTeam_410)
  SharedDtor();
}

void S2COpenContestTeam_410::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2COpenContestTeam_410::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2COpenContestTeam_410::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2COpenContestTeam_410_descriptor_;
}

const S2COpenContestTeam_410& S2COpenContestTeam_410::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2COpenContestTeam_410* S2COpenContestTeam_410::default_instance_ = NULL;

S2COpenContestTeam_410* S2COpenContestTeam_410::New(::google::protobuf::Arena* arena) const {
  S2COpenContestTeam_410* n = new S2COpenContestTeam_410;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2COpenContestTeam_410::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2COpenContestTeam_410)
  opencontestteamid_ = 0u;
}

bool S2COpenContestTeam_410::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2COpenContestTeam_410)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 OpenContestTeamId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opencontestteamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2COpenContestTeam_410)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2COpenContestTeam_410)
  return false;
#undef DO_
}

void S2COpenContestTeam_410::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2COpenContestTeam_410)
  // optional uint32 OpenContestTeamId = 1;
  if (this->opencontestteamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->opencontestteamid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2COpenContestTeam_410)
}

::google::protobuf::uint8* S2COpenContestTeam_410::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2COpenContestTeam_410)
  // optional uint32 OpenContestTeamId = 1;
  if (this->opencontestteamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->opencontestteamid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2COpenContestTeam_410)
  return target;
}

int S2COpenContestTeam_410::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2COpenContestTeam_410)
  int total_size = 0;

  // optional uint32 OpenContestTeamId = 1;
  if (this->opencontestteamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opencontestteamid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2COpenContestTeam_410::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2COpenContestTeam_410)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2COpenContestTeam_410* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2COpenContestTeam_410>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2COpenContestTeam_410)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2COpenContestTeam_410)
    MergeFrom(*source);
  }
}

void S2COpenContestTeam_410::MergeFrom(const S2COpenContestTeam_410& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2COpenContestTeam_410)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.opencontestteamid() != 0) {
    set_opencontestteamid(from.opencontestteamid());
  }
}

void S2COpenContestTeam_410::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2COpenContestTeam_410)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2COpenContestTeam_410::CopyFrom(const S2COpenContestTeam_410& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2COpenContestTeam_410)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2COpenContestTeam_410::IsInitialized() const {

  return true;
}

void S2COpenContestTeam_410::Swap(S2COpenContestTeam_410* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2COpenContestTeam_410::InternalSwap(S2COpenContestTeam_410* other) {
  std::swap(opencontestteamid_, other->opencontestteamid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2COpenContestTeam_410::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2COpenContestTeam_410_descriptor_;
  metadata.reflection = S2COpenContestTeam_410_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2COpenContestTeam_410

// optional uint32 OpenContestTeamId = 1;
void S2COpenContestTeam_410::clear_opencontestteamid() {
  opencontestteamid_ = 0u;
}
 ::google::protobuf::uint32 S2COpenContestTeam_410::opencontestteamid() const {
  // @@protoc_insertion_point(field_get:pb.S2COpenContestTeam_410.OpenContestTeamId)
  return opencontestteamid_;
}
 void S2COpenContestTeam_410::set_opencontestteamid(::google::protobuf::uint32 value) {
  
  opencontestteamid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2COpenContestTeam_410.OpenContestTeamId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CContestStop_412::kClearContestDataSecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CContestStop_412::S2CContestStop_412()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CContestStop_412)
}

void S2CContestStop_412::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CContestStop_412::S2CContestStop_412(const S2CContestStop_412& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CContestStop_412)
}

void S2CContestStop_412::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  clearcontestdataseconds_ = 0u;
}

S2CContestStop_412::~S2CContestStop_412() {
  // @@protoc_insertion_point(destructor:pb.S2CContestStop_412)
  SharedDtor();
}

void S2CContestStop_412::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CContestStop_412::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CContestStop_412::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CContestStop_412_descriptor_;
}

const S2CContestStop_412& S2CContestStop_412::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CContestStop_412* S2CContestStop_412::default_instance_ = NULL;

S2CContestStop_412* S2CContestStop_412::New(::google::protobuf::Arena* arena) const {
  S2CContestStop_412* n = new S2CContestStop_412;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CContestStop_412::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CContestStop_412)
  clearcontestdataseconds_ = 0u;
}

bool S2CContestStop_412::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CContestStop_412)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ClearContestDataSeconds = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clearcontestdataseconds_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CContestStop_412)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CContestStop_412)
  return false;
#undef DO_
}

void S2CContestStop_412::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CContestStop_412)
  // optional uint32 ClearContestDataSeconds = 1;
  if (this->clearcontestdataseconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->clearcontestdataseconds(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CContestStop_412)
}

::google::protobuf::uint8* S2CContestStop_412::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CContestStop_412)
  // optional uint32 ClearContestDataSeconds = 1;
  if (this->clearcontestdataseconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->clearcontestdataseconds(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CContestStop_412)
  return target;
}

int S2CContestStop_412::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CContestStop_412)
  int total_size = 0;

  // optional uint32 ClearContestDataSeconds = 1;
  if (this->clearcontestdataseconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->clearcontestdataseconds());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CContestStop_412::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CContestStop_412)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CContestStop_412* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CContestStop_412>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CContestStop_412)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CContestStop_412)
    MergeFrom(*source);
  }
}

void S2CContestStop_412::MergeFrom(const S2CContestStop_412& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CContestStop_412)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.clearcontestdataseconds() != 0) {
    set_clearcontestdataseconds(from.clearcontestdataseconds());
  }
}

void S2CContestStop_412::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CContestStop_412)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CContestStop_412::CopyFrom(const S2CContestStop_412& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CContestStop_412)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CContestStop_412::IsInitialized() const {

  return true;
}

void S2CContestStop_412::Swap(S2CContestStop_412* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CContestStop_412::InternalSwap(S2CContestStop_412* other) {
  std::swap(clearcontestdataseconds_, other->clearcontestdataseconds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CContestStop_412::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CContestStop_412_descriptor_;
  metadata.reflection = S2CContestStop_412_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CContestStop_412

// optional uint32 ClearContestDataSeconds = 1;
void S2CContestStop_412::clear_clearcontestdataseconds() {
  clearcontestdataseconds_ = 0u;
}
 ::google::protobuf::uint32 S2CContestStop_412::clearcontestdataseconds() const {
  // @@protoc_insertion_point(field_get:pb.S2CContestStop_412.ClearContestDataSeconds)
  return clearcontestdataseconds_;
}
 void S2CContestStop_412::set_clearcontestdataseconds(::google::protobuf::uint32 value) {
  
  clearcontestdataseconds_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CContestStop_412.ClearContestDataSeconds)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AteamVsBteam::kLeftteamIdFieldNumber;
const int AteamVsBteam::kRightteamIdFieldNumber;
const int AteamVsBteam::kLeftteamWinNumFieldNumber;
const int AteamVsBteam::kRightteamWinNumFieldNumber;
const int AteamVsBteam::kWinTeamIdFieldNumber;
const int AteamVsBteam::kRankCodeFieldNumber;
const int AteamVsBteam::kIsFightingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AteamVsBteam::AteamVsBteam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.AteamVsBteam)
}

void AteamVsBteam::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AteamVsBteam::AteamVsBteam(const AteamVsBteam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.AteamVsBteam)
}

void AteamVsBteam::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  leftteamid_ = 0u;
  rightteamid_ = 0u;
  leftteamwinnum_ = 0u;
  rightteamwinnum_ = 0u;
  winteamid_ = 0u;
  rankcode_ = 0u;
  isfighting_ = false;
}

AteamVsBteam::~AteamVsBteam() {
  // @@protoc_insertion_point(destructor:pb.AteamVsBteam)
  SharedDtor();
}

void AteamVsBteam::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AteamVsBteam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AteamVsBteam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AteamVsBteam_descriptor_;
}

const AteamVsBteam& AteamVsBteam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

AteamVsBteam* AteamVsBteam::default_instance_ = NULL;

AteamVsBteam* AteamVsBteam::New(::google::protobuf::Arena* arena) const {
  AteamVsBteam* n = new AteamVsBteam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AteamVsBteam::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.AteamVsBteam)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AteamVsBteam, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AteamVsBteam*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(leftteamid_, isfighting_);

#undef ZR_HELPER_
#undef ZR_

}

bool AteamVsBteam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.AteamVsBteam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 LeftteamId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftteamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RightteamId;
        break;
      }

      // optional uint32 RightteamId = 2;
      case 2: {
        if (tag == 16) {
         parse_RightteamId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightteamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_LeftteamWinNum;
        break;
      }

      // optional uint32 LeftteamWinNum = 3;
      case 3: {
        if (tag == 24) {
         parse_LeftteamWinNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftteamwinnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_RightteamWinNum;
        break;
      }

      // optional uint32 RightteamWinNum = 4;
      case 4: {
        if (tag == 32) {
         parse_RightteamWinNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightteamwinnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_winTeamId;
        break;
      }

      // optional uint32 winTeamId = 5;
      case 5: {
        if (tag == 40) {
         parse_winTeamId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &winteamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_RankCode;
        break;
      }

      // optional uint32 RankCode = 6;
      case 6: {
        if (tag == 48) {
         parse_RankCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_IsFighting;
        break;
      }

      // optional bool IsFighting = 7;
      case 7: {
        if (tag == 56) {
         parse_IsFighting:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isfighting_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.AteamVsBteam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.AteamVsBteam)
  return false;
#undef DO_
}

void AteamVsBteam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.AteamVsBteam)
  // optional uint32 LeftteamId = 1;
  if (this->leftteamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->leftteamid(), output);
  }

  // optional uint32 RightteamId = 2;
  if (this->rightteamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rightteamid(), output);
  }

  // optional uint32 LeftteamWinNum = 3;
  if (this->leftteamwinnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->leftteamwinnum(), output);
  }

  // optional uint32 RightteamWinNum = 4;
  if (this->rightteamwinnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->rightteamwinnum(), output);
  }

  // optional uint32 winTeamId = 5;
  if (this->winteamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->winteamid(), output);
  }

  // optional uint32 RankCode = 6;
  if (this->rankcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->rankcode(), output);
  }

  // optional bool IsFighting = 7;
  if (this->isfighting() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isfighting(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.AteamVsBteam)
}

::google::protobuf::uint8* AteamVsBteam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.AteamVsBteam)
  // optional uint32 LeftteamId = 1;
  if (this->leftteamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->leftteamid(), target);
  }

  // optional uint32 RightteamId = 2;
  if (this->rightteamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rightteamid(), target);
  }

  // optional uint32 LeftteamWinNum = 3;
  if (this->leftteamwinnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->leftteamwinnum(), target);
  }

  // optional uint32 RightteamWinNum = 4;
  if (this->rightteamwinnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->rightteamwinnum(), target);
  }

  // optional uint32 winTeamId = 5;
  if (this->winteamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->winteamid(), target);
  }

  // optional uint32 RankCode = 6;
  if (this->rankcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->rankcode(), target);
  }

  // optional bool IsFighting = 7;
  if (this->isfighting() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isfighting(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.AteamVsBteam)
  return target;
}

int AteamVsBteam::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.AteamVsBteam)
  int total_size = 0;

  // optional uint32 LeftteamId = 1;
  if (this->leftteamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftteamid());
  }

  // optional uint32 RightteamId = 2;
  if (this->rightteamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rightteamid());
  }

  // optional uint32 LeftteamWinNum = 3;
  if (this->leftteamwinnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftteamwinnum());
  }

  // optional uint32 RightteamWinNum = 4;
  if (this->rightteamwinnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rightteamwinnum());
  }

  // optional uint32 winTeamId = 5;
  if (this->winteamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->winteamid());
  }

  // optional uint32 RankCode = 6;
  if (this->rankcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankcode());
  }

  // optional bool IsFighting = 7;
  if (this->isfighting() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AteamVsBteam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.AteamVsBteam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AteamVsBteam* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AteamVsBteam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.AteamVsBteam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.AteamVsBteam)
    MergeFrom(*source);
  }
}

void AteamVsBteam::MergeFrom(const AteamVsBteam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.AteamVsBteam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.leftteamid() != 0) {
    set_leftteamid(from.leftteamid());
  }
  if (from.rightteamid() != 0) {
    set_rightteamid(from.rightteamid());
  }
  if (from.leftteamwinnum() != 0) {
    set_leftteamwinnum(from.leftteamwinnum());
  }
  if (from.rightteamwinnum() != 0) {
    set_rightteamwinnum(from.rightteamwinnum());
  }
  if (from.winteamid() != 0) {
    set_winteamid(from.winteamid());
  }
  if (from.rankcode() != 0) {
    set_rankcode(from.rankcode());
  }
  if (from.isfighting() != 0) {
    set_isfighting(from.isfighting());
  }
}

void AteamVsBteam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.AteamVsBteam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AteamVsBteam::CopyFrom(const AteamVsBteam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.AteamVsBteam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AteamVsBteam::IsInitialized() const {

  return true;
}

void AteamVsBteam::Swap(AteamVsBteam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AteamVsBteam::InternalSwap(AteamVsBteam* other) {
  std::swap(leftteamid_, other->leftteamid_);
  std::swap(rightteamid_, other->rightteamid_);
  std::swap(leftteamwinnum_, other->leftteamwinnum_);
  std::swap(rightteamwinnum_, other->rightteamwinnum_);
  std::swap(winteamid_, other->winteamid_);
  std::swap(rankcode_, other->rankcode_);
  std::swap(isfighting_, other->isfighting_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AteamVsBteam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AteamVsBteam_descriptor_;
  metadata.reflection = AteamVsBteam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AteamVsBteam

// optional uint32 LeftteamId = 1;
void AteamVsBteam::clear_leftteamid() {
  leftteamid_ = 0u;
}
 ::google::protobuf::uint32 AteamVsBteam::leftteamid() const {
  // @@protoc_insertion_point(field_get:pb.AteamVsBteam.LeftteamId)
  return leftteamid_;
}
 void AteamVsBteam::set_leftteamid(::google::protobuf::uint32 value) {
  
  leftteamid_ = value;
  // @@protoc_insertion_point(field_set:pb.AteamVsBteam.LeftteamId)
}

// optional uint32 RightteamId = 2;
void AteamVsBteam::clear_rightteamid() {
  rightteamid_ = 0u;
}
 ::google::protobuf::uint32 AteamVsBteam::rightteamid() const {
  // @@protoc_insertion_point(field_get:pb.AteamVsBteam.RightteamId)
  return rightteamid_;
}
 void AteamVsBteam::set_rightteamid(::google::protobuf::uint32 value) {
  
  rightteamid_ = value;
  // @@protoc_insertion_point(field_set:pb.AteamVsBteam.RightteamId)
}

// optional uint32 LeftteamWinNum = 3;
void AteamVsBteam::clear_leftteamwinnum() {
  leftteamwinnum_ = 0u;
}
 ::google::protobuf::uint32 AteamVsBteam::leftteamwinnum() const {
  // @@protoc_insertion_point(field_get:pb.AteamVsBteam.LeftteamWinNum)
  return leftteamwinnum_;
}
 void AteamVsBteam::set_leftteamwinnum(::google::protobuf::uint32 value) {
  
  leftteamwinnum_ = value;
  // @@protoc_insertion_point(field_set:pb.AteamVsBteam.LeftteamWinNum)
}

// optional uint32 RightteamWinNum = 4;
void AteamVsBteam::clear_rightteamwinnum() {
  rightteamwinnum_ = 0u;
}
 ::google::protobuf::uint32 AteamVsBteam::rightteamwinnum() const {
  // @@protoc_insertion_point(field_get:pb.AteamVsBteam.RightteamWinNum)
  return rightteamwinnum_;
}
 void AteamVsBteam::set_rightteamwinnum(::google::protobuf::uint32 value) {
  
  rightteamwinnum_ = value;
  // @@protoc_insertion_point(field_set:pb.AteamVsBteam.RightteamWinNum)
}

// optional uint32 winTeamId = 5;
void AteamVsBteam::clear_winteamid() {
  winteamid_ = 0u;
}
 ::google::protobuf::uint32 AteamVsBteam::winteamid() const {
  // @@protoc_insertion_point(field_get:pb.AteamVsBteam.winTeamId)
  return winteamid_;
}
 void AteamVsBteam::set_winteamid(::google::protobuf::uint32 value) {
  
  winteamid_ = value;
  // @@protoc_insertion_point(field_set:pb.AteamVsBteam.winTeamId)
}

// optional uint32 RankCode = 6;
void AteamVsBteam::clear_rankcode() {
  rankcode_ = 0u;
}
 ::google::protobuf::uint32 AteamVsBteam::rankcode() const {
  // @@protoc_insertion_point(field_get:pb.AteamVsBteam.RankCode)
  return rankcode_;
}
 void AteamVsBteam::set_rankcode(::google::protobuf::uint32 value) {
  
  rankcode_ = value;
  // @@protoc_insertion_point(field_set:pb.AteamVsBteam.RankCode)
}

// optional bool IsFighting = 7;
void AteamVsBteam::clear_isfighting() {
  isfighting_ = false;
}
 bool AteamVsBteam::isfighting() const {
  // @@protoc_insertion_point(field_get:pb.AteamVsBteam.IsFighting)
  return isfighting_;
}
 void AteamVsBteam::set_isfighting(bool value) {
  
  isfighting_ = value;
  // @@protoc_insertion_point(field_set:pb.AteamVsBteam.IsFighting)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OutVsFight::kLeftteamIdFieldNumber;
const int OutVsFight::kRightteamIdFieldNumber;
const int OutVsFight::kLeftteamWinNumFieldNumber;
const int OutVsFight::kRightteamWinNumFieldNumber;
const int OutVsFight::kWinTeamIdFieldNumber;
const int OutVsFight::kFightTypeCodeFieldNumber;
const int OutVsFight::kIsFightingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OutVsFight::OutVsFight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.OutVsFight)
}

void OutVsFight::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OutVsFight::OutVsFight(const OutVsFight& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.OutVsFight)
}

void OutVsFight::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  leftteamid_ = 0u;
  rightteamid_ = 0u;
  leftteamwinnum_ = 0u;
  rightteamwinnum_ = 0u;
  winteamid_ = 0u;
  fighttypecode_ = 0u;
  isfighting_ = false;
}

OutVsFight::~OutVsFight() {
  // @@protoc_insertion_point(destructor:pb.OutVsFight)
  SharedDtor();
}

void OutVsFight::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OutVsFight::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OutVsFight::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OutVsFight_descriptor_;
}

const OutVsFight& OutVsFight::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

OutVsFight* OutVsFight::default_instance_ = NULL;

OutVsFight* OutVsFight::New(::google::protobuf::Arena* arena) const {
  OutVsFight* n = new OutVsFight;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OutVsFight::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.OutVsFight)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OutVsFight, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OutVsFight*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(leftteamid_, isfighting_);

#undef ZR_HELPER_
#undef ZR_

}

bool OutVsFight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.OutVsFight)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 LeftteamId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftteamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RightteamId;
        break;
      }

      // optional uint32 RightteamId = 2;
      case 2: {
        if (tag == 16) {
         parse_RightteamId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightteamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_LeftteamWinNum;
        break;
      }

      // optional uint32 LeftteamWinNum = 3;
      case 3: {
        if (tag == 24) {
         parse_LeftteamWinNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftteamwinnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_RightteamWinNum;
        break;
      }

      // optional uint32 RightteamWinNum = 4;
      case 4: {
        if (tag == 32) {
         parse_RightteamWinNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightteamwinnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_winTeamId;
        break;
      }

      // optional uint32 winTeamId = 5;
      case 5: {
        if (tag == 40) {
         parse_winTeamId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &winteamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_FightTypeCode;
        break;
      }

      // optional uint32 FightTypeCode = 6;
      case 6: {
        if (tag == 48) {
         parse_FightTypeCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fighttypecode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_IsFighting;
        break;
      }

      // optional bool IsFighting = 7;
      case 7: {
        if (tag == 56) {
         parse_IsFighting:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isfighting_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.OutVsFight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.OutVsFight)
  return false;
#undef DO_
}

void OutVsFight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.OutVsFight)
  // optional uint32 LeftteamId = 1;
  if (this->leftteamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->leftteamid(), output);
  }

  // optional uint32 RightteamId = 2;
  if (this->rightteamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rightteamid(), output);
  }

  // optional uint32 LeftteamWinNum = 3;
  if (this->leftteamwinnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->leftteamwinnum(), output);
  }

  // optional uint32 RightteamWinNum = 4;
  if (this->rightteamwinnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->rightteamwinnum(), output);
  }

  // optional uint32 winTeamId = 5;
  if (this->winteamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->winteamid(), output);
  }

  // optional uint32 FightTypeCode = 6;
  if (this->fighttypecode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->fighttypecode(), output);
  }

  // optional bool IsFighting = 7;
  if (this->isfighting() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isfighting(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.OutVsFight)
}

::google::protobuf::uint8* OutVsFight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.OutVsFight)
  // optional uint32 LeftteamId = 1;
  if (this->leftteamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->leftteamid(), target);
  }

  // optional uint32 RightteamId = 2;
  if (this->rightteamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rightteamid(), target);
  }

  // optional uint32 LeftteamWinNum = 3;
  if (this->leftteamwinnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->leftteamwinnum(), target);
  }

  // optional uint32 RightteamWinNum = 4;
  if (this->rightteamwinnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->rightteamwinnum(), target);
  }

  // optional uint32 winTeamId = 5;
  if (this->winteamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->winteamid(), target);
  }

  // optional uint32 FightTypeCode = 6;
  if (this->fighttypecode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->fighttypecode(), target);
  }

  // optional bool IsFighting = 7;
  if (this->isfighting() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isfighting(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.OutVsFight)
  return target;
}

int OutVsFight::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.OutVsFight)
  int total_size = 0;

  // optional uint32 LeftteamId = 1;
  if (this->leftteamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftteamid());
  }

  // optional uint32 RightteamId = 2;
  if (this->rightteamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rightteamid());
  }

  // optional uint32 LeftteamWinNum = 3;
  if (this->leftteamwinnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftteamwinnum());
  }

  // optional uint32 RightteamWinNum = 4;
  if (this->rightteamwinnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rightteamwinnum());
  }

  // optional uint32 winTeamId = 5;
  if (this->winteamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->winteamid());
  }

  // optional uint32 FightTypeCode = 6;
  if (this->fighttypecode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fighttypecode());
  }

  // optional bool IsFighting = 7;
  if (this->isfighting() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OutVsFight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.OutVsFight)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OutVsFight* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OutVsFight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.OutVsFight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.OutVsFight)
    MergeFrom(*source);
  }
}

void OutVsFight::MergeFrom(const OutVsFight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.OutVsFight)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.leftteamid() != 0) {
    set_leftteamid(from.leftteamid());
  }
  if (from.rightteamid() != 0) {
    set_rightteamid(from.rightteamid());
  }
  if (from.leftteamwinnum() != 0) {
    set_leftteamwinnum(from.leftteamwinnum());
  }
  if (from.rightteamwinnum() != 0) {
    set_rightteamwinnum(from.rightteamwinnum());
  }
  if (from.winteamid() != 0) {
    set_winteamid(from.winteamid());
  }
  if (from.fighttypecode() != 0) {
    set_fighttypecode(from.fighttypecode());
  }
  if (from.isfighting() != 0) {
    set_isfighting(from.isfighting());
  }
}

void OutVsFight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.OutVsFight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutVsFight::CopyFrom(const OutVsFight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.OutVsFight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutVsFight::IsInitialized() const {

  return true;
}

void OutVsFight::Swap(OutVsFight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OutVsFight::InternalSwap(OutVsFight* other) {
  std::swap(leftteamid_, other->leftteamid_);
  std::swap(rightteamid_, other->rightteamid_);
  std::swap(leftteamwinnum_, other->leftteamwinnum_);
  std::swap(rightteamwinnum_, other->rightteamwinnum_);
  std::swap(winteamid_, other->winteamid_);
  std::swap(fighttypecode_, other->fighttypecode_);
  std::swap(isfighting_, other->isfighting_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OutVsFight::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OutVsFight_descriptor_;
  metadata.reflection = OutVsFight_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OutVsFight

// optional uint32 LeftteamId = 1;
void OutVsFight::clear_leftteamid() {
  leftteamid_ = 0u;
}
 ::google::protobuf::uint32 OutVsFight::leftteamid() const {
  // @@protoc_insertion_point(field_get:pb.OutVsFight.LeftteamId)
  return leftteamid_;
}
 void OutVsFight::set_leftteamid(::google::protobuf::uint32 value) {
  
  leftteamid_ = value;
  // @@protoc_insertion_point(field_set:pb.OutVsFight.LeftteamId)
}

// optional uint32 RightteamId = 2;
void OutVsFight::clear_rightteamid() {
  rightteamid_ = 0u;
}
 ::google::protobuf::uint32 OutVsFight::rightteamid() const {
  // @@protoc_insertion_point(field_get:pb.OutVsFight.RightteamId)
  return rightteamid_;
}
 void OutVsFight::set_rightteamid(::google::protobuf::uint32 value) {
  
  rightteamid_ = value;
  // @@protoc_insertion_point(field_set:pb.OutVsFight.RightteamId)
}

// optional uint32 LeftteamWinNum = 3;
void OutVsFight::clear_leftteamwinnum() {
  leftteamwinnum_ = 0u;
}
 ::google::protobuf::uint32 OutVsFight::leftteamwinnum() const {
  // @@protoc_insertion_point(field_get:pb.OutVsFight.LeftteamWinNum)
  return leftteamwinnum_;
}
 void OutVsFight::set_leftteamwinnum(::google::protobuf::uint32 value) {
  
  leftteamwinnum_ = value;
  // @@protoc_insertion_point(field_set:pb.OutVsFight.LeftteamWinNum)
}

// optional uint32 RightteamWinNum = 4;
void OutVsFight::clear_rightteamwinnum() {
  rightteamwinnum_ = 0u;
}
 ::google::protobuf::uint32 OutVsFight::rightteamwinnum() const {
  // @@protoc_insertion_point(field_get:pb.OutVsFight.RightteamWinNum)
  return rightteamwinnum_;
}
 void OutVsFight::set_rightteamwinnum(::google::protobuf::uint32 value) {
  
  rightteamwinnum_ = value;
  // @@protoc_insertion_point(field_set:pb.OutVsFight.RightteamWinNum)
}

// optional uint32 winTeamId = 5;
void OutVsFight::clear_winteamid() {
  winteamid_ = 0u;
}
 ::google::protobuf::uint32 OutVsFight::winteamid() const {
  // @@protoc_insertion_point(field_get:pb.OutVsFight.winTeamId)
  return winteamid_;
}
 void OutVsFight::set_winteamid(::google::protobuf::uint32 value) {
  
  winteamid_ = value;
  // @@protoc_insertion_point(field_set:pb.OutVsFight.winTeamId)
}

// optional uint32 FightTypeCode = 6;
void OutVsFight::clear_fighttypecode() {
  fighttypecode_ = 0u;
}
 ::google::protobuf::uint32 OutVsFight::fighttypecode() const {
  // @@protoc_insertion_point(field_get:pb.OutVsFight.FightTypeCode)
  return fighttypecode_;
}
 void OutVsFight::set_fighttypecode(::google::protobuf::uint32 value) {
  
  fighttypecode_ = value;
  // @@protoc_insertion_point(field_set:pb.OutVsFight.FightTypeCode)
}

// optional bool IsFighting = 7;
void OutVsFight::clear_isfighting() {
  isfighting_ = false;
}
 bool OutVsFight::isfighting() const {
  // @@protoc_insertion_point(field_get:pb.OutVsFight.IsFighting)
  return isfighting_;
}
 void OutVsFight::set_isfighting(bool value) {
  
  isfighting_ = value;
  // @@protoc_insertion_point(field_set:pb.OutVsFight.IsFighting)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamScoreInfo::kTeamIDFieldNumber;
const int TeamScoreInfo::kScoreFieldNumber;
const int TeamScoreInfo::kWinNumFieldNumber;
const int TeamScoreInfo::kLoseNumFieldNumber;
const int TeamScoreInfo::kBattleKADScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamScoreInfo::TeamScoreInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TeamScoreInfo)
}

void TeamScoreInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TeamScoreInfo::TeamScoreInfo(const TeamScoreInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.TeamScoreInfo)
}

void TeamScoreInfo::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  teamid_ = 0u;
  score_ = 0u;
  winnum_ = 0u;
  losenum_ = 0u;
  battlekadscore_ = 0u;
}

TeamScoreInfo::~TeamScoreInfo() {
  // @@protoc_insertion_point(destructor:pb.TeamScoreInfo)
  SharedDtor();
}

void TeamScoreInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TeamScoreInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamScoreInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TeamScoreInfo_descriptor_;
}

const TeamScoreInfo& TeamScoreInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

TeamScoreInfo* TeamScoreInfo::default_instance_ = NULL;

TeamScoreInfo* TeamScoreInfo::New(::google::protobuf::Arena* arena) const {
  TeamScoreInfo* n = new TeamScoreInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamScoreInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.TeamScoreInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TeamScoreInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TeamScoreInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(teamid_, battlekadscore_);

#undef ZR_HELPER_
#undef ZR_

}

bool TeamScoreInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TeamScoreInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 TeamID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &teamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Score;
        break;
      }

      // optional uint32 Score = 2;
      case 2: {
        if (tag == 16) {
         parse_Score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_WinNum;
        break;
      }

      // optional uint32 WinNum = 3;
      case 3: {
        if (tag == 24) {
         parse_WinNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &winnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_LoseNum;
        break;
      }

      // optional uint32 LoseNum = 4;
      case 4: {
        if (tag == 32) {
         parse_LoseNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &losenum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_BattleKADScore;
        break;
      }

      // optional uint32 BattleKADScore = 5;
      case 5: {
        if (tag == 40) {
         parse_BattleKADScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battlekadscore_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TeamScoreInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TeamScoreInfo)
  return false;
#undef DO_
}

void TeamScoreInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TeamScoreInfo)
  // optional uint32 TeamID = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->teamid(), output);
  }

  // optional uint32 Score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->score(), output);
  }

  // optional uint32 WinNum = 3;
  if (this->winnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->winnum(), output);
  }

  // optional uint32 LoseNum = 4;
  if (this->losenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->losenum(), output);
  }

  // optional uint32 BattleKADScore = 5;
  if (this->battlekadscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->battlekadscore(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.TeamScoreInfo)
}

::google::protobuf::uint8* TeamScoreInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.TeamScoreInfo)
  // optional uint32 TeamID = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->teamid(), target);
  }

  // optional uint32 Score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->score(), target);
  }

  // optional uint32 WinNum = 3;
  if (this->winnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->winnum(), target);
  }

  // optional uint32 LoseNum = 4;
  if (this->losenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->losenum(), target);
  }

  // optional uint32 BattleKADScore = 5;
  if (this->battlekadscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->battlekadscore(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.TeamScoreInfo)
  return target;
}

int TeamScoreInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.TeamScoreInfo)
  int total_size = 0;

  // optional uint32 TeamID = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->teamid());
  }

  // optional uint32 Score = 2;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->score());
  }

  // optional uint32 WinNum = 3;
  if (this->winnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->winnum());
  }

  // optional uint32 LoseNum = 4;
  if (this->losenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->losenum());
  }

  // optional uint32 BattleKADScore = 5;
  if (this->battlekadscore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battlekadscore());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamScoreInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.TeamScoreInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TeamScoreInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamScoreInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.TeamScoreInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.TeamScoreInfo)
    MergeFrom(*source);
  }
}

void TeamScoreInfo::MergeFrom(const TeamScoreInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.TeamScoreInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.winnum() != 0) {
    set_winnum(from.winnum());
  }
  if (from.losenum() != 0) {
    set_losenum(from.losenum());
  }
  if (from.battlekadscore() != 0) {
    set_battlekadscore(from.battlekadscore());
  }
}

void TeamScoreInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.TeamScoreInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamScoreInfo::CopyFrom(const TeamScoreInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.TeamScoreInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamScoreInfo::IsInitialized() const {

  return true;
}

void TeamScoreInfo::Swap(TeamScoreInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamScoreInfo::InternalSwap(TeamScoreInfo* other) {
  std::swap(teamid_, other->teamid_);
  std::swap(score_, other->score_);
  std::swap(winnum_, other->winnum_);
  std::swap(losenum_, other->losenum_);
  std::swap(battlekadscore_, other->battlekadscore_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamScoreInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TeamScoreInfo_descriptor_;
  metadata.reflection = TeamScoreInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamScoreInfo

// optional uint32 TeamID = 1;
void TeamScoreInfo::clear_teamid() {
  teamid_ = 0u;
}
 ::google::protobuf::uint32 TeamScoreInfo::teamid() const {
  // @@protoc_insertion_point(field_get:pb.TeamScoreInfo.TeamID)
  return teamid_;
}
 void TeamScoreInfo::set_teamid(::google::protobuf::uint32 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:pb.TeamScoreInfo.TeamID)
}

// optional uint32 Score = 2;
void TeamScoreInfo::clear_score() {
  score_ = 0u;
}
 ::google::protobuf::uint32 TeamScoreInfo::score() const {
  // @@protoc_insertion_point(field_get:pb.TeamScoreInfo.Score)
  return score_;
}
 void TeamScoreInfo::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.TeamScoreInfo.Score)
}

// optional uint32 WinNum = 3;
void TeamScoreInfo::clear_winnum() {
  winnum_ = 0u;
}
 ::google::protobuf::uint32 TeamScoreInfo::winnum() const {
  // @@protoc_insertion_point(field_get:pb.TeamScoreInfo.WinNum)
  return winnum_;
}
 void TeamScoreInfo::set_winnum(::google::protobuf::uint32 value) {
  
  winnum_ = value;
  // @@protoc_insertion_point(field_set:pb.TeamScoreInfo.WinNum)
}

// optional uint32 LoseNum = 4;
void TeamScoreInfo::clear_losenum() {
  losenum_ = 0u;
}
 ::google::protobuf::uint32 TeamScoreInfo::losenum() const {
  // @@protoc_insertion_point(field_get:pb.TeamScoreInfo.LoseNum)
  return losenum_;
}
 void TeamScoreInfo::set_losenum(::google::protobuf::uint32 value) {
  
  losenum_ = value;
  // @@protoc_insertion_point(field_set:pb.TeamScoreInfo.LoseNum)
}

// optional uint32 BattleKADScore = 5;
void TeamScoreInfo::clear_battlekadscore() {
  battlekadscore_ = 0u;
}
 ::google::protobuf::uint32 TeamScoreInfo::battlekadscore() const {
  // @@protoc_insertion_point(field_get:pb.TeamScoreInfo.BattleKADScore)
  return battlekadscore_;
}
 void TeamScoreInfo::set_battlekadscore(::google::protobuf::uint32 value) {
  
  battlekadscore_ = value;
  // @@protoc_insertion_point(field_set:pb.TeamScoreInfo.BattleKADScore)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoopFightInfo::kATeamsFieldNumber;
const int LoopFightInfo::kBTeamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoopFightInfo::LoopFightInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.LoopFightInfo)
}

void LoopFightInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LoopFightInfo::LoopFightInfo(const LoopFightInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.LoopFightInfo)
}

void LoopFightInfo::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

LoopFightInfo::~LoopFightInfo() {
  // @@protoc_insertion_point(destructor:pb.LoopFightInfo)
  SharedDtor();
}

void LoopFightInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoopFightInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoopFightInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoopFightInfo_descriptor_;
}

const LoopFightInfo& LoopFightInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

LoopFightInfo* LoopFightInfo::default_instance_ = NULL;

LoopFightInfo* LoopFightInfo::New(::google::protobuf::Arena* arena) const {
  LoopFightInfo* n = new LoopFightInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoopFightInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.LoopFightInfo)
  ateams_.Clear();
  bteams_.Clear();
}

bool LoopFightInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.LoopFightInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ATeams = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ateams())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_ateams())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_BTeams;
        break;
      }

      // repeated uint32 BTeams = 2;
      case 2: {
        if (tag == 18) {
         parse_BTeams:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_bteams())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_bteams())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.LoopFightInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.LoopFightInfo)
  return false;
#undef DO_
}

void LoopFightInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.LoopFightInfo)
  // repeated uint32 ATeams = 1;
  if (this->ateams_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_ateams_cached_byte_size_);
  }
  for (int i = 0; i < this->ateams_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->ateams(i), output);
  }

  // repeated uint32 BTeams = 2;
  if (this->bteams_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_bteams_cached_byte_size_);
  }
  for (int i = 0; i < this->bteams_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->bteams(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.LoopFightInfo)
}

::google::protobuf::uint8* LoopFightInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.LoopFightInfo)
  // repeated uint32 ATeams = 1;
  if (this->ateams_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _ateams_cached_byte_size_, target);
  }
  for (int i = 0; i < this->ateams_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->ateams(i), target);
  }

  // repeated uint32 BTeams = 2;
  if (this->bteams_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _bteams_cached_byte_size_, target);
  }
  for (int i = 0; i < this->bteams_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->bteams(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.LoopFightInfo)
  return target;
}

int LoopFightInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.LoopFightInfo)
  int total_size = 0;

  // repeated uint32 ATeams = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->ateams_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->ateams(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ateams_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 BTeams = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->bteams_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->bteams(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bteams_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoopFightInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.LoopFightInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LoopFightInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LoopFightInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.LoopFightInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.LoopFightInfo)
    MergeFrom(*source);
  }
}

void LoopFightInfo::MergeFrom(const LoopFightInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.LoopFightInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ateams_.MergeFrom(from.ateams_);
  bteams_.MergeFrom(from.bteams_);
}

void LoopFightInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.LoopFightInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoopFightInfo::CopyFrom(const LoopFightInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.LoopFightInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoopFightInfo::IsInitialized() const {

  return true;
}

void LoopFightInfo::Swap(LoopFightInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoopFightInfo::InternalSwap(LoopFightInfo* other) {
  ateams_.UnsafeArenaSwap(&other->ateams_);
  bteams_.UnsafeArenaSwap(&other->bteams_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoopFightInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoopFightInfo_descriptor_;
  metadata.reflection = LoopFightInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoopFightInfo

// repeated uint32 ATeams = 1;
int LoopFightInfo::ateams_size() const {
  return ateams_.size();
}
void LoopFightInfo::clear_ateams() {
  ateams_.Clear();
}
 ::google::protobuf::uint32 LoopFightInfo::ateams(int index) const {
  // @@protoc_insertion_point(field_get:pb.LoopFightInfo.ATeams)
  return ateams_.Get(index);
}
 void LoopFightInfo::set_ateams(int index, ::google::protobuf::uint32 value) {
  ateams_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.LoopFightInfo.ATeams)
}
 void LoopFightInfo::add_ateams(::google::protobuf::uint32 value) {
  ateams_.Add(value);
  // @@protoc_insertion_point(field_add:pb.LoopFightInfo.ATeams)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LoopFightInfo::ateams() const {
  // @@protoc_insertion_point(field_list:pb.LoopFightInfo.ATeams)
  return ateams_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LoopFightInfo::mutable_ateams() {
  // @@protoc_insertion_point(field_mutable_list:pb.LoopFightInfo.ATeams)
  return &ateams_;
}

// repeated uint32 BTeams = 2;
int LoopFightInfo::bteams_size() const {
  return bteams_.size();
}
void LoopFightInfo::clear_bteams() {
  bteams_.Clear();
}
 ::google::protobuf::uint32 LoopFightInfo::bteams(int index) const {
  // @@protoc_insertion_point(field_get:pb.LoopFightInfo.BTeams)
  return bteams_.Get(index);
}
 void LoopFightInfo::set_bteams(int index, ::google::protobuf::uint32 value) {
  bteams_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.LoopFightInfo.BTeams)
}
 void LoopFightInfo::add_bteams(::google::protobuf::uint32 value) {
  bteams_.Add(value);
  // @@protoc_insertion_point(field_add:pb.LoopFightInfo.BTeams)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LoopFightInfo::bteams() const {
  // @@protoc_insertion_point(field_list:pb.LoopFightInfo.BTeams)
  return bteams_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LoopFightInfo::mutable_bteams() {
  // @@protoc_insertion_point(field_mutable_list:pb.LoopFightInfo.BTeams)
  return &bteams_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SFightData_415::kContestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SFightData_415::C2SFightData_415()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SFightData_415)
}

void C2SFightData_415::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SFightData_415::C2SFightData_415(const C2SFightData_415& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SFightData_415)
}

void C2SFightData_415::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  contestid_ = 0u;
}

C2SFightData_415::~C2SFightData_415() {
  // @@protoc_insertion_point(destructor:pb.C2SFightData_415)
  SharedDtor();
}

void C2SFightData_415::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SFightData_415::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SFightData_415::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SFightData_415_descriptor_;
}

const C2SFightData_415& C2SFightData_415::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SFightData_415* C2SFightData_415::default_instance_ = NULL;

C2SFightData_415* C2SFightData_415::New(::google::protobuf::Arena* arena) const {
  C2SFightData_415* n = new C2SFightData_415;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SFightData_415::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SFightData_415)
  contestid_ = 0u;
}

bool C2SFightData_415::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SFightData_415)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ContestId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contestid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SFightData_415)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SFightData_415)
  return false;
#undef DO_
}

void C2SFightData_415::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SFightData_415)
  // optional uint32 ContestId = 1;
  if (this->contestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->contestid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SFightData_415)
}

::google::protobuf::uint8* C2SFightData_415::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SFightData_415)
  // optional uint32 ContestId = 1;
  if (this->contestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->contestid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SFightData_415)
  return target;
}

int C2SFightData_415::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SFightData_415)
  int total_size = 0;

  // optional uint32 ContestId = 1;
  if (this->contestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contestid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SFightData_415::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SFightData_415)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SFightData_415* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SFightData_415>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SFightData_415)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SFightData_415)
    MergeFrom(*source);
  }
}

void C2SFightData_415::MergeFrom(const C2SFightData_415& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SFightData_415)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.contestid() != 0) {
    set_contestid(from.contestid());
  }
}

void C2SFightData_415::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SFightData_415)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SFightData_415::CopyFrom(const C2SFightData_415& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SFightData_415)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SFightData_415::IsInitialized() const {

  return true;
}

void C2SFightData_415::Swap(C2SFightData_415* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SFightData_415::InternalSwap(C2SFightData_415* other) {
  std::swap(contestid_, other->contestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SFightData_415::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SFightData_415_descriptor_;
  metadata.reflection = C2SFightData_415_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SFightData_415

// optional uint32 ContestId = 1;
void C2SFightData_415::clear_contestid() {
  contestid_ = 0u;
}
 ::google::protobuf::uint32 C2SFightData_415::contestid() const {
  // @@protoc_insertion_point(field_get:pb.C2SFightData_415.ContestId)
  return contestid_;
}
 void C2SFightData_415::set_contestid(::google::protobuf::uint32 value) {
  
  contestid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SFightData_415.ContestId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CFightData_415::kLoopFightFieldNumber;
const int S2CFightData_415::kTeamScoreDataFieldNumber;
const int S2CFightData_415::kRankFightsFieldNumber;
const int S2CFightData_415::kOutFightsFieldNumber;
const int S2CFightData_415::kLoopFightWinTeamNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CFightData_415::S2CFightData_415()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CFightData_415)
}

void S2CFightData_415::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  loopfight_ = const_cast< ::pb::LoopFightInfo*>(&::pb::LoopFightInfo::default_instance());
}

S2CFightData_415::S2CFightData_415(const S2CFightData_415& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CFightData_415)
}

void S2CFightData_415::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  loopfight_ = NULL;
  loopfightwinteamnum_ = 0u;
}

S2CFightData_415::~S2CFightData_415() {
  // @@protoc_insertion_point(destructor:pb.S2CFightData_415)
  SharedDtor();
}

void S2CFightData_415::SharedDtor() {
  if (this != default_instance_) {
    delete loopfight_;
  }
}

void S2CFightData_415::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CFightData_415::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CFightData_415_descriptor_;
}

const S2CFightData_415& S2CFightData_415::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CFightData_415* S2CFightData_415::default_instance_ = NULL;

S2CFightData_415* S2CFightData_415::New(::google::protobuf::Arena* arena) const {
  S2CFightData_415* n = new S2CFightData_415;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CFightData_415::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CFightData_415)
  if (GetArenaNoVirtual() == NULL && loopfight_ != NULL) delete loopfight_;
  loopfight_ = NULL;
  loopfightwinteamnum_ = 0u;
  teamscoredata_.Clear();
  rankfights_.Clear();
  outfights_.Clear();
}

bool S2CFightData_415::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CFightData_415)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.LoopFightInfo loopFight = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loopfight()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_teamScoreData;
        break;
      }

      // repeated .pb.TeamScoreInfo teamScoreData = 2;
      case 2: {
        if (tag == 18) {
         parse_teamScoreData:
          DO_(input->IncrementRecursionDepth());
         parse_loop_teamScoreData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_teamscoredata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_teamScoreData;
        if (input->ExpectTag(26)) goto parse_loop_RankFights;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .pb.AteamVsBteam RankFights = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_RankFights:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rankfights()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_RankFights;
        if (input->ExpectTag(34)) goto parse_loop_OutFights;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .pb.OutVsFight OutFights = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_OutFights:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_outfights()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_OutFights;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(40)) goto parse_LoopFightWinTeamNum;
        break;
      }

      // optional uint32 LoopFightWinTeamNum = 5;
      case 5: {
        if (tag == 40) {
         parse_LoopFightWinTeamNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loopfightwinteamnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CFightData_415)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CFightData_415)
  return false;
#undef DO_
}

void S2CFightData_415::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CFightData_415)
  // optional .pb.LoopFightInfo loopFight = 1;
  if (this->has_loopfight()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->loopfight_, output);
  }

  // repeated .pb.TeamScoreInfo teamScoreData = 2;
  for (unsigned int i = 0, n = this->teamscoredata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->teamscoredata(i), output);
  }

  // repeated .pb.AteamVsBteam RankFights = 3;
  for (unsigned int i = 0, n = this->rankfights_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rankfights(i), output);
  }

  // repeated .pb.OutVsFight OutFights = 4;
  for (unsigned int i = 0, n = this->outfights_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->outfights(i), output);
  }

  // optional uint32 LoopFightWinTeamNum = 5;
  if (this->loopfightwinteamnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->loopfightwinteamnum(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CFightData_415)
}

::google::protobuf::uint8* S2CFightData_415::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CFightData_415)
  // optional .pb.LoopFightInfo loopFight = 1;
  if (this->has_loopfight()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->loopfight_, false, target);
  }

  // repeated .pb.TeamScoreInfo teamScoreData = 2;
  for (unsigned int i = 0, n = this->teamscoredata_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->teamscoredata(i), false, target);
  }

  // repeated .pb.AteamVsBteam RankFights = 3;
  for (unsigned int i = 0, n = this->rankfights_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->rankfights(i), false, target);
  }

  // repeated .pb.OutVsFight OutFights = 4;
  for (unsigned int i = 0, n = this->outfights_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->outfights(i), false, target);
  }

  // optional uint32 LoopFightWinTeamNum = 5;
  if (this->loopfightwinteamnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->loopfightwinteamnum(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CFightData_415)
  return target;
}

int S2CFightData_415::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CFightData_415)
  int total_size = 0;

  // optional .pb.LoopFightInfo loopFight = 1;
  if (this->has_loopfight()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loopfight_);
  }

  // optional uint32 LoopFightWinTeamNum = 5;
  if (this->loopfightwinteamnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loopfightwinteamnum());
  }

  // repeated .pb.TeamScoreInfo teamScoreData = 2;
  total_size += 1 * this->teamscoredata_size();
  for (int i = 0; i < this->teamscoredata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->teamscoredata(i));
  }

  // repeated .pb.AteamVsBteam RankFights = 3;
  total_size += 1 * this->rankfights_size();
  for (int i = 0; i < this->rankfights_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rankfights(i));
  }

  // repeated .pb.OutVsFight OutFights = 4;
  total_size += 1 * this->outfights_size();
  for (int i = 0; i < this->outfights_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->outfights(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CFightData_415::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CFightData_415)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CFightData_415* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CFightData_415>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CFightData_415)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CFightData_415)
    MergeFrom(*source);
  }
}

void S2CFightData_415::MergeFrom(const S2CFightData_415& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CFightData_415)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  teamscoredata_.MergeFrom(from.teamscoredata_);
  rankfights_.MergeFrom(from.rankfights_);
  outfights_.MergeFrom(from.outfights_);
  if (from.has_loopfight()) {
    mutable_loopfight()->::pb::LoopFightInfo::MergeFrom(from.loopfight());
  }
  if (from.loopfightwinteamnum() != 0) {
    set_loopfightwinteamnum(from.loopfightwinteamnum());
  }
}

void S2CFightData_415::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CFightData_415)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CFightData_415::CopyFrom(const S2CFightData_415& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CFightData_415)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CFightData_415::IsInitialized() const {

  return true;
}

void S2CFightData_415::Swap(S2CFightData_415* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CFightData_415::InternalSwap(S2CFightData_415* other) {
  std::swap(loopfight_, other->loopfight_);
  teamscoredata_.UnsafeArenaSwap(&other->teamscoredata_);
  rankfights_.UnsafeArenaSwap(&other->rankfights_);
  outfights_.UnsafeArenaSwap(&other->outfights_);
  std::swap(loopfightwinteamnum_, other->loopfightwinteamnum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CFightData_415::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CFightData_415_descriptor_;
  metadata.reflection = S2CFightData_415_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CFightData_415

// optional .pb.LoopFightInfo loopFight = 1;
bool S2CFightData_415::has_loopfight() const {
  return !_is_default_instance_ && loopfight_ != NULL;
}
void S2CFightData_415::clear_loopfight() {
  if (GetArenaNoVirtual() == NULL && loopfight_ != NULL) delete loopfight_;
  loopfight_ = NULL;
}
const ::pb::LoopFightInfo& S2CFightData_415::loopfight() const {
  // @@protoc_insertion_point(field_get:pb.S2CFightData_415.loopFight)
  return loopfight_ != NULL ? *loopfight_ : *default_instance_->loopfight_;
}
::pb::LoopFightInfo* S2CFightData_415::mutable_loopfight() {
  
  if (loopfight_ == NULL) {
    loopfight_ = new ::pb::LoopFightInfo;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CFightData_415.loopFight)
  return loopfight_;
}
::pb::LoopFightInfo* S2CFightData_415::release_loopfight() {
  // @@protoc_insertion_point(field_release:pb.S2CFightData_415.loopFight)
  
  ::pb::LoopFightInfo* temp = loopfight_;
  loopfight_ = NULL;
  return temp;
}
void S2CFightData_415::set_allocated_loopfight(::pb::LoopFightInfo* loopfight) {
  delete loopfight_;
  loopfight_ = loopfight;
  if (loopfight) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CFightData_415.loopFight)
}

// repeated .pb.TeamScoreInfo teamScoreData = 2;
int S2CFightData_415::teamscoredata_size() const {
  return teamscoredata_.size();
}
void S2CFightData_415::clear_teamscoredata() {
  teamscoredata_.Clear();
}
const ::pb::TeamScoreInfo& S2CFightData_415::teamscoredata(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CFightData_415.teamScoreData)
  return teamscoredata_.Get(index);
}
::pb::TeamScoreInfo* S2CFightData_415::mutable_teamscoredata(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CFightData_415.teamScoreData)
  return teamscoredata_.Mutable(index);
}
::pb::TeamScoreInfo* S2CFightData_415::add_teamscoredata() {
  // @@protoc_insertion_point(field_add:pb.S2CFightData_415.teamScoreData)
  return teamscoredata_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::TeamScoreInfo >*
S2CFightData_415::mutable_teamscoredata() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CFightData_415.teamScoreData)
  return &teamscoredata_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::TeamScoreInfo >&
S2CFightData_415::teamscoredata() const {
  // @@protoc_insertion_point(field_list:pb.S2CFightData_415.teamScoreData)
  return teamscoredata_;
}

// repeated .pb.AteamVsBteam RankFights = 3;
int S2CFightData_415::rankfights_size() const {
  return rankfights_.size();
}
void S2CFightData_415::clear_rankfights() {
  rankfights_.Clear();
}
const ::pb::AteamVsBteam& S2CFightData_415::rankfights(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CFightData_415.RankFights)
  return rankfights_.Get(index);
}
::pb::AteamVsBteam* S2CFightData_415::mutable_rankfights(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CFightData_415.RankFights)
  return rankfights_.Mutable(index);
}
::pb::AteamVsBteam* S2CFightData_415::add_rankfights() {
  // @@protoc_insertion_point(field_add:pb.S2CFightData_415.RankFights)
  return rankfights_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::AteamVsBteam >*
S2CFightData_415::mutable_rankfights() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CFightData_415.RankFights)
  return &rankfights_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::AteamVsBteam >&
S2CFightData_415::rankfights() const {
  // @@protoc_insertion_point(field_list:pb.S2CFightData_415.RankFights)
  return rankfights_;
}

// repeated .pb.OutVsFight OutFights = 4;
int S2CFightData_415::outfights_size() const {
  return outfights_.size();
}
void S2CFightData_415::clear_outfights() {
  outfights_.Clear();
}
const ::pb::OutVsFight& S2CFightData_415::outfights(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CFightData_415.OutFights)
  return outfights_.Get(index);
}
::pb::OutVsFight* S2CFightData_415::mutable_outfights(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CFightData_415.OutFights)
  return outfights_.Mutable(index);
}
::pb::OutVsFight* S2CFightData_415::add_outfights() {
  // @@protoc_insertion_point(field_add:pb.S2CFightData_415.OutFights)
  return outfights_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::OutVsFight >*
S2CFightData_415::mutable_outfights() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CFightData_415.OutFights)
  return &outfights_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::OutVsFight >&
S2CFightData_415::outfights() const {
  // @@protoc_insertion_point(field_list:pb.S2CFightData_415.OutFights)
  return outfights_;
}

// optional uint32 LoopFightWinTeamNum = 5;
void S2CFightData_415::clear_loopfightwinteamnum() {
  loopfightwinteamnum_ = 0u;
}
 ::google::protobuf::uint32 S2CFightData_415::loopfightwinteamnum() const {
  // @@protoc_insertion_point(field_get:pb.S2CFightData_415.LoopFightWinTeamNum)
  return loopfightwinteamnum_;
}
 void S2CFightData_415::set_loopfightwinteamnum(::google::protobuf::uint32 value) {
  
  loopfightwinteamnum_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CFightData_415.LoopFightWinTeamNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetContestInfo_414::C2SGetContestInfo_414()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetContestInfo_414)
}

void C2SGetContestInfo_414::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetContestInfo_414::C2SGetContestInfo_414(const C2SGetContestInfo_414& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetContestInfo_414)
}

void C2SGetContestInfo_414::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGetContestInfo_414::~C2SGetContestInfo_414() {
  // @@protoc_insertion_point(destructor:pb.C2SGetContestInfo_414)
  SharedDtor();
}

void C2SGetContestInfo_414::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetContestInfo_414::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetContestInfo_414::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetContestInfo_414_descriptor_;
}

const C2SGetContestInfo_414& C2SGetContestInfo_414::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetContestInfo_414* C2SGetContestInfo_414::default_instance_ = NULL;

C2SGetContestInfo_414* C2SGetContestInfo_414::New(::google::protobuf::Arena* arena) const {
  C2SGetContestInfo_414* n = new C2SGetContestInfo_414;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetContestInfo_414::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetContestInfo_414)
}

bool C2SGetContestInfo_414::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetContestInfo_414)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetContestInfo_414)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetContestInfo_414)
  return false;
#undef DO_
}

void C2SGetContestInfo_414::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetContestInfo_414)
  // @@protoc_insertion_point(serialize_end:pb.C2SGetContestInfo_414)
}

::google::protobuf::uint8* C2SGetContestInfo_414::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetContestInfo_414)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetContestInfo_414)
  return target;
}

int C2SGetContestInfo_414::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetContestInfo_414)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetContestInfo_414::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetContestInfo_414)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetContestInfo_414* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetContestInfo_414>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetContestInfo_414)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetContestInfo_414)
    MergeFrom(*source);
  }
}

void C2SGetContestInfo_414::MergeFrom(const C2SGetContestInfo_414& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetContestInfo_414)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SGetContestInfo_414::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetContestInfo_414)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetContestInfo_414::CopyFrom(const C2SGetContestInfo_414& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetContestInfo_414)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetContestInfo_414::IsInitialized() const {

  return true;
}

void C2SGetContestInfo_414::Swap(C2SGetContestInfo_414* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetContestInfo_414::InternalSwap(C2SGetContestInfo_414* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetContestInfo_414::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetContestInfo_414_descriptor_;
  metadata.reflection = C2SGetContestInfo_414_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetContestInfo_414

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetContestInfo_414::kContestInfoFieldNumber;
const int S2CGetContestInfo_414::kTeamInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetContestInfo_414::S2CGetContestInfo_414()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetContestInfo_414)
}

void S2CGetContestInfo_414::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  contestinfo_ = const_cast< ::pb::OneContestInfo*>(&::pb::OneContestInfo::default_instance());
}

S2CGetContestInfo_414::S2CGetContestInfo_414(const S2CGetContestInfo_414& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetContestInfo_414)
}

void S2CGetContestInfo_414::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  contestinfo_ = NULL;
}

S2CGetContestInfo_414::~S2CGetContestInfo_414() {
  // @@protoc_insertion_point(destructor:pb.S2CGetContestInfo_414)
  SharedDtor();
}

void S2CGetContestInfo_414::SharedDtor() {
  if (this != default_instance_) {
    delete contestinfo_;
  }
}

void S2CGetContestInfo_414::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetContestInfo_414::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetContestInfo_414_descriptor_;
}

const S2CGetContestInfo_414& S2CGetContestInfo_414::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetContestInfo_414* S2CGetContestInfo_414::default_instance_ = NULL;

S2CGetContestInfo_414* S2CGetContestInfo_414::New(::google::protobuf::Arena* arena) const {
  S2CGetContestInfo_414* n = new S2CGetContestInfo_414;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetContestInfo_414::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetContestInfo_414)
  if (GetArenaNoVirtual() == NULL && contestinfo_ != NULL) delete contestinfo_;
  contestinfo_ = NULL;
  teaminfo_.Clear();
}

bool S2CGetContestInfo_414::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetContestInfo_414)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.OneContestInfo ContestInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_contestinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_TeamInfo;
        break;
      }

      // repeated .pb.PRoomUser TeamInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_TeamInfo:
          DO_(input->IncrementRecursionDepth());
         parse_loop_TeamInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_teaminfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_TeamInfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetContestInfo_414)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetContestInfo_414)
  return false;
#undef DO_
}

void S2CGetContestInfo_414::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetContestInfo_414)
  // optional .pb.OneContestInfo ContestInfo = 1;
  if (this->has_contestinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->contestinfo_, output);
  }

  // repeated .pb.PRoomUser TeamInfo = 2;
  for (unsigned int i = 0, n = this->teaminfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->teaminfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetContestInfo_414)
}

::google::protobuf::uint8* S2CGetContestInfo_414::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetContestInfo_414)
  // optional .pb.OneContestInfo ContestInfo = 1;
  if (this->has_contestinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->contestinfo_, false, target);
  }

  // repeated .pb.PRoomUser TeamInfo = 2;
  for (unsigned int i = 0, n = this->teaminfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->teaminfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetContestInfo_414)
  return target;
}

int S2CGetContestInfo_414::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetContestInfo_414)
  int total_size = 0;

  // optional .pb.OneContestInfo ContestInfo = 1;
  if (this->has_contestinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->contestinfo_);
  }

  // repeated .pb.PRoomUser TeamInfo = 2;
  total_size += 1 * this->teaminfo_size();
  for (int i = 0; i < this->teaminfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->teaminfo(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetContestInfo_414::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetContestInfo_414)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetContestInfo_414* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetContestInfo_414>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetContestInfo_414)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetContestInfo_414)
    MergeFrom(*source);
  }
}

void S2CGetContestInfo_414::MergeFrom(const S2CGetContestInfo_414& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetContestInfo_414)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  teaminfo_.MergeFrom(from.teaminfo_);
  if (from.has_contestinfo()) {
    mutable_contestinfo()->::pb::OneContestInfo::MergeFrom(from.contestinfo());
  }
}

void S2CGetContestInfo_414::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetContestInfo_414)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetContestInfo_414::CopyFrom(const S2CGetContestInfo_414& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetContestInfo_414)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetContestInfo_414::IsInitialized() const {

  return true;
}

void S2CGetContestInfo_414::Swap(S2CGetContestInfo_414* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetContestInfo_414::InternalSwap(S2CGetContestInfo_414* other) {
  std::swap(contestinfo_, other->contestinfo_);
  teaminfo_.UnsafeArenaSwap(&other->teaminfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetContestInfo_414::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetContestInfo_414_descriptor_;
  metadata.reflection = S2CGetContestInfo_414_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetContestInfo_414

// optional .pb.OneContestInfo ContestInfo = 1;
bool S2CGetContestInfo_414::has_contestinfo() const {
  return !_is_default_instance_ && contestinfo_ != NULL;
}
void S2CGetContestInfo_414::clear_contestinfo() {
  if (GetArenaNoVirtual() == NULL && contestinfo_ != NULL) delete contestinfo_;
  contestinfo_ = NULL;
}
const ::pb::OneContestInfo& S2CGetContestInfo_414::contestinfo() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetContestInfo_414.ContestInfo)
  return contestinfo_ != NULL ? *contestinfo_ : *default_instance_->contestinfo_;
}
::pb::OneContestInfo* S2CGetContestInfo_414::mutable_contestinfo() {
  
  if (contestinfo_ == NULL) {
    contestinfo_ = new ::pb::OneContestInfo;
  }
  // @@protoc_insertion_point(field_mutable:pb.S2CGetContestInfo_414.ContestInfo)
  return contestinfo_;
}
::pb::OneContestInfo* S2CGetContestInfo_414::release_contestinfo() {
  // @@protoc_insertion_point(field_release:pb.S2CGetContestInfo_414.ContestInfo)
  
  ::pb::OneContestInfo* temp = contestinfo_;
  contestinfo_ = NULL;
  return temp;
}
void S2CGetContestInfo_414::set_allocated_contestinfo(::pb::OneContestInfo* contestinfo) {
  delete contestinfo_;
  contestinfo_ = contestinfo;
  if (contestinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pb.S2CGetContestInfo_414.ContestInfo)
}

// repeated .pb.PRoomUser TeamInfo = 2;
int S2CGetContestInfo_414::teaminfo_size() const {
  return teaminfo_.size();
}
void S2CGetContestInfo_414::clear_teaminfo() {
  teaminfo_.Clear();
}
const ::pb::PRoomUser& S2CGetContestInfo_414::teaminfo(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetContestInfo_414.TeamInfo)
  return teaminfo_.Get(index);
}
::pb::PRoomUser* S2CGetContestInfo_414::mutable_teaminfo(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetContestInfo_414.TeamInfo)
  return teaminfo_.Mutable(index);
}
::pb::PRoomUser* S2CGetContestInfo_414::add_teaminfo() {
  // @@protoc_insertion_point(field_add:pb.S2CGetContestInfo_414.TeamInfo)
  return teaminfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::PRoomUser >*
S2CGetContestInfo_414::mutable_teaminfo() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetContestInfo_414.TeamInfo)
  return &teaminfo_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::PRoomUser >&
S2CGetContestInfo_414::teaminfo() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetContestInfo_414.TeamInfo)
  return teaminfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SSetEditorContest_417::kBeginEditorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SSetEditorContest_417::C2SSetEditorContest_417()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SSetEditorContest_417)
}

void C2SSetEditorContest_417::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SSetEditorContest_417::C2SSetEditorContest_417(const C2SSetEditorContest_417& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SSetEditorContest_417)
}

void C2SSetEditorContest_417::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  begineditor_ = false;
}

C2SSetEditorContest_417::~C2SSetEditorContest_417() {
  // @@protoc_insertion_point(destructor:pb.C2SSetEditorContest_417)
  SharedDtor();
}

void C2SSetEditorContest_417::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SSetEditorContest_417::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SSetEditorContest_417::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SSetEditorContest_417_descriptor_;
}

const C2SSetEditorContest_417& C2SSetEditorContest_417::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SSetEditorContest_417* C2SSetEditorContest_417::default_instance_ = NULL;

C2SSetEditorContest_417* C2SSetEditorContest_417::New(::google::protobuf::Arena* arena) const {
  C2SSetEditorContest_417* n = new C2SSetEditorContest_417;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SSetEditorContest_417::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SSetEditorContest_417)
  begineditor_ = false;
}

bool C2SSetEditorContest_417::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SSetEditorContest_417)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool BeginEditor = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &begineditor_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SSetEditorContest_417)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SSetEditorContest_417)
  return false;
#undef DO_
}

void C2SSetEditorContest_417::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SSetEditorContest_417)
  // optional bool BeginEditor = 1;
  if (this->begineditor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->begineditor(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SSetEditorContest_417)
}

::google::protobuf::uint8* C2SSetEditorContest_417::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SSetEditorContest_417)
  // optional bool BeginEditor = 1;
  if (this->begineditor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->begineditor(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SSetEditorContest_417)
  return target;
}

int C2SSetEditorContest_417::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SSetEditorContest_417)
  int total_size = 0;

  // optional bool BeginEditor = 1;
  if (this->begineditor() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SSetEditorContest_417::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SSetEditorContest_417)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SSetEditorContest_417* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SSetEditorContest_417>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SSetEditorContest_417)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SSetEditorContest_417)
    MergeFrom(*source);
  }
}

void C2SSetEditorContest_417::MergeFrom(const C2SSetEditorContest_417& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SSetEditorContest_417)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.begineditor() != 0) {
    set_begineditor(from.begineditor());
  }
}

void C2SSetEditorContest_417::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SSetEditorContest_417)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SSetEditorContest_417::CopyFrom(const C2SSetEditorContest_417& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SSetEditorContest_417)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SSetEditorContest_417::IsInitialized() const {

  return true;
}

void C2SSetEditorContest_417::Swap(C2SSetEditorContest_417* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SSetEditorContest_417::InternalSwap(C2SSetEditorContest_417* other) {
  std::swap(begineditor_, other->begineditor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SSetEditorContest_417::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SSetEditorContest_417_descriptor_;
  metadata.reflection = C2SSetEditorContest_417_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SSetEditorContest_417

// optional bool BeginEditor = 1;
void C2SSetEditorContest_417::clear_begineditor() {
  begineditor_ = false;
}
 bool C2SSetEditorContest_417::begineditor() const {
  // @@protoc_insertion_point(field_get:pb.C2SSetEditorContest_417.BeginEditor)
  return begineditor_;
}
 void C2SSetEditorContest_417::set_begineditor(bool value) {
  
  begineditor_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SSetEditorContest_417.BeginEditor)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetContestFightBoInfo_418::kLeftTeamIdFieldNumber;
const int S2CGetContestFightBoInfo_418::kLeftTeamBoWinFieldNumber;
const int S2CGetContestFightBoInfo_418::kRightTeamIdFieldNumber;
const int S2CGetContestFightBoInfo_418::kRightTeamBoWinFieldNumber;
const int S2CGetContestFightBoInfo_418::kContestFightTypeFieldNumber;
const int S2CGetContestFightBoInfo_418::kContestFightNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetContestFightBoInfo_418::S2CGetContestFightBoInfo_418()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetContestFightBoInfo_418)
}

void S2CGetContestFightBoInfo_418::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetContestFightBoInfo_418::S2CGetContestFightBoInfo_418(const S2CGetContestFightBoInfo_418& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetContestFightBoInfo_418)
}

void S2CGetContestFightBoInfo_418::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  leftteamid_ = 0u;
  leftteambowin_ = 0u;
  rightteamid_ = 0u;
  rightteambowin_ = 0u;
  contestfighttype_ = 0u;
  contestfightnum_ = 0u;
}

S2CGetContestFightBoInfo_418::~S2CGetContestFightBoInfo_418() {
  // @@protoc_insertion_point(destructor:pb.S2CGetContestFightBoInfo_418)
  SharedDtor();
}

void S2CGetContestFightBoInfo_418::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetContestFightBoInfo_418::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetContestFightBoInfo_418::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetContestFightBoInfo_418_descriptor_;
}

const S2CGetContestFightBoInfo_418& S2CGetContestFightBoInfo_418::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetContestFightBoInfo_418* S2CGetContestFightBoInfo_418::default_instance_ = NULL;

S2CGetContestFightBoInfo_418* S2CGetContestFightBoInfo_418::New(::google::protobuf::Arena* arena) const {
  S2CGetContestFightBoInfo_418* n = new S2CGetContestFightBoInfo_418;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetContestFightBoInfo_418::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetContestFightBoInfo_418)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CGetContestFightBoInfo_418, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CGetContestFightBoInfo_418*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(leftteamid_, contestfightnum_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2CGetContestFightBoInfo_418::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetContestFightBoInfo_418)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 LeftTeamId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftteamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_LeftTeamBoWin;
        break;
      }

      // optional uint32 LeftTeamBoWin = 2;
      case 2: {
        if (tag == 16) {
         parse_LeftTeamBoWin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftteambowin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RightTeamId;
        break;
      }

      // optional uint32 RightTeamId = 3;
      case 3: {
        if (tag == 24) {
         parse_RightTeamId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightteamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_RightTeamBoWin;
        break;
      }

      // optional uint32 RightTeamBoWin = 4;
      case 4: {
        if (tag == 32) {
         parse_RightTeamBoWin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rightteambowin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ContestFightType;
        break;
      }

      // optional uint32 ContestFightType = 5;
      case 5: {
        if (tag == 40) {
         parse_ContestFightType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contestfighttype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_ContestFightNum;
        break;
      }

      // optional uint32 ContestFightNum = 6;
      case 6: {
        if (tag == 48) {
         parse_ContestFightNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contestfightnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetContestFightBoInfo_418)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetContestFightBoInfo_418)
  return false;
#undef DO_
}

void S2CGetContestFightBoInfo_418::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetContestFightBoInfo_418)
  // optional uint32 LeftTeamId = 1;
  if (this->leftteamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->leftteamid(), output);
  }

  // optional uint32 LeftTeamBoWin = 2;
  if (this->leftteambowin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->leftteambowin(), output);
  }

  // optional uint32 RightTeamId = 3;
  if (this->rightteamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->rightteamid(), output);
  }

  // optional uint32 RightTeamBoWin = 4;
  if (this->rightteambowin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->rightteambowin(), output);
  }

  // optional uint32 ContestFightType = 5;
  if (this->contestfighttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->contestfighttype(), output);
  }

  // optional uint32 ContestFightNum = 6;
  if (this->contestfightnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->contestfightnum(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetContestFightBoInfo_418)
}

::google::protobuf::uint8* S2CGetContestFightBoInfo_418::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetContestFightBoInfo_418)
  // optional uint32 LeftTeamId = 1;
  if (this->leftteamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->leftteamid(), target);
  }

  // optional uint32 LeftTeamBoWin = 2;
  if (this->leftteambowin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->leftteambowin(), target);
  }

  // optional uint32 RightTeamId = 3;
  if (this->rightteamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->rightteamid(), target);
  }

  // optional uint32 RightTeamBoWin = 4;
  if (this->rightteambowin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->rightteambowin(), target);
  }

  // optional uint32 ContestFightType = 5;
  if (this->contestfighttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->contestfighttype(), target);
  }

  // optional uint32 ContestFightNum = 6;
  if (this->contestfightnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->contestfightnum(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetContestFightBoInfo_418)
  return target;
}

int S2CGetContestFightBoInfo_418::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetContestFightBoInfo_418)
  int total_size = 0;

  // optional uint32 LeftTeamId = 1;
  if (this->leftteamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftteamid());
  }

  // optional uint32 LeftTeamBoWin = 2;
  if (this->leftteambowin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftteambowin());
  }

  // optional uint32 RightTeamId = 3;
  if (this->rightteamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rightteamid());
  }

  // optional uint32 RightTeamBoWin = 4;
  if (this->rightteambowin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rightteambowin());
  }

  // optional uint32 ContestFightType = 5;
  if (this->contestfighttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contestfighttype());
  }

  // optional uint32 ContestFightNum = 6;
  if (this->contestfightnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contestfightnum());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetContestFightBoInfo_418::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetContestFightBoInfo_418)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetContestFightBoInfo_418* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetContestFightBoInfo_418>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetContestFightBoInfo_418)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetContestFightBoInfo_418)
    MergeFrom(*source);
  }
}

void S2CGetContestFightBoInfo_418::MergeFrom(const S2CGetContestFightBoInfo_418& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetContestFightBoInfo_418)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.leftteamid() != 0) {
    set_leftteamid(from.leftteamid());
  }
  if (from.leftteambowin() != 0) {
    set_leftteambowin(from.leftteambowin());
  }
  if (from.rightteamid() != 0) {
    set_rightteamid(from.rightteamid());
  }
  if (from.rightteambowin() != 0) {
    set_rightteambowin(from.rightteambowin());
  }
  if (from.contestfighttype() != 0) {
    set_contestfighttype(from.contestfighttype());
  }
  if (from.contestfightnum() != 0) {
    set_contestfightnum(from.contestfightnum());
  }
}

void S2CGetContestFightBoInfo_418::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetContestFightBoInfo_418)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetContestFightBoInfo_418::CopyFrom(const S2CGetContestFightBoInfo_418& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetContestFightBoInfo_418)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetContestFightBoInfo_418::IsInitialized() const {

  return true;
}

void S2CGetContestFightBoInfo_418::Swap(S2CGetContestFightBoInfo_418* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetContestFightBoInfo_418::InternalSwap(S2CGetContestFightBoInfo_418* other) {
  std::swap(leftteamid_, other->leftteamid_);
  std::swap(leftteambowin_, other->leftteambowin_);
  std::swap(rightteamid_, other->rightteamid_);
  std::swap(rightteambowin_, other->rightteambowin_);
  std::swap(contestfighttype_, other->contestfighttype_);
  std::swap(contestfightnum_, other->contestfightnum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetContestFightBoInfo_418::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetContestFightBoInfo_418_descriptor_;
  metadata.reflection = S2CGetContestFightBoInfo_418_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetContestFightBoInfo_418

// optional uint32 LeftTeamId = 1;
void S2CGetContestFightBoInfo_418::clear_leftteamid() {
  leftteamid_ = 0u;
}
 ::google::protobuf::uint32 S2CGetContestFightBoInfo_418::leftteamid() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetContestFightBoInfo_418.LeftTeamId)
  return leftteamid_;
}
 void S2CGetContestFightBoInfo_418::set_leftteamid(::google::protobuf::uint32 value) {
  
  leftteamid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetContestFightBoInfo_418.LeftTeamId)
}

// optional uint32 LeftTeamBoWin = 2;
void S2CGetContestFightBoInfo_418::clear_leftteambowin() {
  leftteambowin_ = 0u;
}
 ::google::protobuf::uint32 S2CGetContestFightBoInfo_418::leftteambowin() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetContestFightBoInfo_418.LeftTeamBoWin)
  return leftteambowin_;
}
 void S2CGetContestFightBoInfo_418::set_leftteambowin(::google::protobuf::uint32 value) {
  
  leftteambowin_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetContestFightBoInfo_418.LeftTeamBoWin)
}

// optional uint32 RightTeamId = 3;
void S2CGetContestFightBoInfo_418::clear_rightteamid() {
  rightteamid_ = 0u;
}
 ::google::protobuf::uint32 S2CGetContestFightBoInfo_418::rightteamid() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetContestFightBoInfo_418.RightTeamId)
  return rightteamid_;
}
 void S2CGetContestFightBoInfo_418::set_rightteamid(::google::protobuf::uint32 value) {
  
  rightteamid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetContestFightBoInfo_418.RightTeamId)
}

// optional uint32 RightTeamBoWin = 4;
void S2CGetContestFightBoInfo_418::clear_rightteambowin() {
  rightteambowin_ = 0u;
}
 ::google::protobuf::uint32 S2CGetContestFightBoInfo_418::rightteambowin() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetContestFightBoInfo_418.RightTeamBoWin)
  return rightteambowin_;
}
 void S2CGetContestFightBoInfo_418::set_rightteambowin(::google::protobuf::uint32 value) {
  
  rightteambowin_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetContestFightBoInfo_418.RightTeamBoWin)
}

// optional uint32 ContestFightType = 5;
void S2CGetContestFightBoInfo_418::clear_contestfighttype() {
  contestfighttype_ = 0u;
}
 ::google::protobuf::uint32 S2CGetContestFightBoInfo_418::contestfighttype() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetContestFightBoInfo_418.ContestFightType)
  return contestfighttype_;
}
 void S2CGetContestFightBoInfo_418::set_contestfighttype(::google::protobuf::uint32 value) {
  
  contestfighttype_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetContestFightBoInfo_418.ContestFightType)
}

// optional uint32 ContestFightNum = 6;
void S2CGetContestFightBoInfo_418::clear_contestfightnum() {
  contestfightnum_ = 0u;
}
 ::google::protobuf::uint32 S2CGetContestFightBoInfo_418::contestfightnum() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetContestFightBoInfo_418.ContestFightNum)
  return contestfightnum_;
}
 void S2CGetContestFightBoInfo_418::set_contestfightnum(::google::protobuf::uint32 value) {
  
  contestfightnum_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetContestFightBoInfo_418.ContestFightNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetContestFightResult_416::kISLoopFightFieldNumber;
const int S2CGetContestFightResult_416::kOutFightCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetContestFightResult_416::S2CGetContestFightResult_416()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetContestFightResult_416)
}

void S2CGetContestFightResult_416::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetContestFightResult_416::S2CGetContestFightResult_416(const S2CGetContestFightResult_416& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetContestFightResult_416)
}

void S2CGetContestFightResult_416::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  isloopfight_ = false;
  outfightcode_ = 0u;
}

S2CGetContestFightResult_416::~S2CGetContestFightResult_416() {
  // @@protoc_insertion_point(destructor:pb.S2CGetContestFightResult_416)
  SharedDtor();
}

void S2CGetContestFightResult_416::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetContestFightResult_416::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetContestFightResult_416::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetContestFightResult_416_descriptor_;
}

const S2CGetContestFightResult_416& S2CGetContestFightResult_416::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetContestFightResult_416* S2CGetContestFightResult_416::default_instance_ = NULL;

S2CGetContestFightResult_416* S2CGetContestFightResult_416::New(::google::protobuf::Arena* arena) const {
  S2CGetContestFightResult_416* n = new S2CGetContestFightResult_416;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetContestFightResult_416::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetContestFightResult_416)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CGetContestFightResult_416, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CGetContestFightResult_416*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(isloopfight_, outfightcode_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2CGetContestFightResult_416::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetContestFightResult_416)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool ISLoopFight = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isloopfight_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_OutFightCode;
        break;
      }

      // optional uint32 OutFightCode = 2;
      case 2: {
        if (tag == 16) {
         parse_OutFightCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &outfightcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetContestFightResult_416)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetContestFightResult_416)
  return false;
#undef DO_
}

void S2CGetContestFightResult_416::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetContestFightResult_416)
  // optional bool ISLoopFight = 1;
  if (this->isloopfight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isloopfight(), output);
  }

  // optional uint32 OutFightCode = 2;
  if (this->outfightcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->outfightcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetContestFightResult_416)
}

::google::protobuf::uint8* S2CGetContestFightResult_416::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetContestFightResult_416)
  // optional bool ISLoopFight = 1;
  if (this->isloopfight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isloopfight(), target);
  }

  // optional uint32 OutFightCode = 2;
  if (this->outfightcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->outfightcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetContestFightResult_416)
  return target;
}

int S2CGetContestFightResult_416::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetContestFightResult_416)
  int total_size = 0;

  // optional bool ISLoopFight = 1;
  if (this->isloopfight() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 OutFightCode = 2;
  if (this->outfightcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->outfightcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetContestFightResult_416::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetContestFightResult_416)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetContestFightResult_416* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetContestFightResult_416>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetContestFightResult_416)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetContestFightResult_416)
    MergeFrom(*source);
  }
}

void S2CGetContestFightResult_416::MergeFrom(const S2CGetContestFightResult_416& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetContestFightResult_416)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.isloopfight() != 0) {
    set_isloopfight(from.isloopfight());
  }
  if (from.outfightcode() != 0) {
    set_outfightcode(from.outfightcode());
  }
}

void S2CGetContestFightResult_416::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetContestFightResult_416)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetContestFightResult_416::CopyFrom(const S2CGetContestFightResult_416& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetContestFightResult_416)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetContestFightResult_416::IsInitialized() const {

  return true;
}

void S2CGetContestFightResult_416::Swap(S2CGetContestFightResult_416* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetContestFightResult_416::InternalSwap(S2CGetContestFightResult_416* other) {
  std::swap(isloopfight_, other->isloopfight_);
  std::swap(outfightcode_, other->outfightcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetContestFightResult_416::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetContestFightResult_416_descriptor_;
  metadata.reflection = S2CGetContestFightResult_416_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetContestFightResult_416

// optional bool ISLoopFight = 1;
void S2CGetContestFightResult_416::clear_isloopfight() {
  isloopfight_ = false;
}
 bool S2CGetContestFightResult_416::isloopfight() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetContestFightResult_416.ISLoopFight)
  return isloopfight_;
}
 void S2CGetContestFightResult_416::set_isloopfight(bool value) {
  
  isloopfight_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetContestFightResult_416.ISLoopFight)
}

// optional uint32 OutFightCode = 2;
void S2CGetContestFightResult_416::clear_outfightcode() {
  outfightcode_ = 0u;
}
 ::google::protobuf::uint32 S2CGetContestFightResult_416::outfightcode() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetContestFightResult_416.OutFightCode)
  return outfightcode_;
}
 void S2CGetContestFightResult_416::set_outfightcode(::google::protobuf::uint32 value) {
  
  outfightcode_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetContestFightResult_416.OutFightCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SContestRankInfo_420::C2SContestRankInfo_420()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SContestRankInfo_420)
}

void C2SContestRankInfo_420::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SContestRankInfo_420::C2SContestRankInfo_420(const C2SContestRankInfo_420& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SContestRankInfo_420)
}

void C2SContestRankInfo_420::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SContestRankInfo_420::~C2SContestRankInfo_420() {
  // @@protoc_insertion_point(destructor:pb.C2SContestRankInfo_420)
  SharedDtor();
}

void C2SContestRankInfo_420::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SContestRankInfo_420::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SContestRankInfo_420::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SContestRankInfo_420_descriptor_;
}

const C2SContestRankInfo_420& C2SContestRankInfo_420::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SContestRankInfo_420* C2SContestRankInfo_420::default_instance_ = NULL;

C2SContestRankInfo_420* C2SContestRankInfo_420::New(::google::protobuf::Arena* arena) const {
  C2SContestRankInfo_420* n = new C2SContestRankInfo_420;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SContestRankInfo_420::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SContestRankInfo_420)
}

bool C2SContestRankInfo_420::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SContestRankInfo_420)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SContestRankInfo_420)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SContestRankInfo_420)
  return false;
#undef DO_
}

void C2SContestRankInfo_420::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SContestRankInfo_420)
  // @@protoc_insertion_point(serialize_end:pb.C2SContestRankInfo_420)
}

::google::protobuf::uint8* C2SContestRankInfo_420::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SContestRankInfo_420)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SContestRankInfo_420)
  return target;
}

int C2SContestRankInfo_420::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SContestRankInfo_420)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SContestRankInfo_420::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SContestRankInfo_420)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SContestRankInfo_420* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SContestRankInfo_420>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SContestRankInfo_420)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SContestRankInfo_420)
    MergeFrom(*source);
  }
}

void C2SContestRankInfo_420::MergeFrom(const C2SContestRankInfo_420& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SContestRankInfo_420)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SContestRankInfo_420::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SContestRankInfo_420)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SContestRankInfo_420::CopyFrom(const C2SContestRankInfo_420& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SContestRankInfo_420)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SContestRankInfo_420::IsInitialized() const {

  return true;
}

void C2SContestRankInfo_420::Swap(C2SContestRankInfo_420* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SContestRankInfo_420::InternalSwap(C2SContestRankInfo_420* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SContestRankInfo_420::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SContestRankInfo_420_descriptor_;
  metadata.reflection = C2SContestRankInfo_420_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SContestRankInfo_420

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CContestRankInfo_420::kContestRanksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CContestRankInfo_420::S2CContestRankInfo_420()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CContestRankInfo_420)
}

void S2CContestRankInfo_420::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CContestRankInfo_420::S2CContestRankInfo_420(const S2CContestRankInfo_420& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CContestRankInfo_420)
}

void S2CContestRankInfo_420::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

S2CContestRankInfo_420::~S2CContestRankInfo_420() {
  // @@protoc_insertion_point(destructor:pb.S2CContestRankInfo_420)
  SharedDtor();
}

void S2CContestRankInfo_420::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CContestRankInfo_420::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CContestRankInfo_420::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CContestRankInfo_420_descriptor_;
}

const S2CContestRankInfo_420& S2CContestRankInfo_420::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CContestRankInfo_420* S2CContestRankInfo_420::default_instance_ = NULL;

S2CContestRankInfo_420* S2CContestRankInfo_420::New(::google::protobuf::Arena* arena) const {
  S2CContestRankInfo_420* n = new S2CContestRankInfo_420;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CContestRankInfo_420::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CContestRankInfo_420)
  contestranks_.Clear();
}

bool S2CContestRankInfo_420::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CContestRankInfo_420)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string ContestRanks = 1;
      case 1: {
        if (tag == 10) {
         parse_ContestRanks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_contestranks()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contestranks(this->contestranks_size() - 1).data(),
            this->contestranks(this->contestranks_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CContestRankInfo_420.ContestRanks"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ContestRanks;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CContestRankInfo_420)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CContestRankInfo_420)
  return false;
#undef DO_
}

void S2CContestRankInfo_420::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CContestRankInfo_420)
  // repeated string ContestRanks = 1;
  for (int i = 0; i < this->contestranks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contestranks(i).data(), this->contestranks(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CContestRankInfo_420.ContestRanks");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->contestranks(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CContestRankInfo_420)
}

::google::protobuf::uint8* S2CContestRankInfo_420::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CContestRankInfo_420)
  // repeated string ContestRanks = 1;
  for (int i = 0; i < this->contestranks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contestranks(i).data(), this->contestranks(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CContestRankInfo_420.ContestRanks");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->contestranks(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CContestRankInfo_420)
  return target;
}

int S2CContestRankInfo_420::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CContestRankInfo_420)
  int total_size = 0;

  // repeated string ContestRanks = 1;
  total_size += 1 * this->contestranks_size();
  for (int i = 0; i < this->contestranks_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->contestranks(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CContestRankInfo_420::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CContestRankInfo_420)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CContestRankInfo_420* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CContestRankInfo_420>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CContestRankInfo_420)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CContestRankInfo_420)
    MergeFrom(*source);
  }
}

void S2CContestRankInfo_420::MergeFrom(const S2CContestRankInfo_420& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CContestRankInfo_420)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  contestranks_.MergeFrom(from.contestranks_);
}

void S2CContestRankInfo_420::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CContestRankInfo_420)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CContestRankInfo_420::CopyFrom(const S2CContestRankInfo_420& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CContestRankInfo_420)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CContestRankInfo_420::IsInitialized() const {

  return true;
}

void S2CContestRankInfo_420::Swap(S2CContestRankInfo_420* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CContestRankInfo_420::InternalSwap(S2CContestRankInfo_420* other) {
  contestranks_.UnsafeArenaSwap(&other->contestranks_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CContestRankInfo_420::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CContestRankInfo_420_descriptor_;
  metadata.reflection = S2CContestRankInfo_420_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CContestRankInfo_420

// repeated string ContestRanks = 1;
int S2CContestRankInfo_420::contestranks_size() const {
  return contestranks_.size();
}
void S2CContestRankInfo_420::clear_contestranks() {
  contestranks_.Clear();
}
 const ::std::string& S2CContestRankInfo_420::contestranks(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CContestRankInfo_420.ContestRanks)
  return contestranks_.Get(index);
}
 ::std::string* S2CContestRankInfo_420::mutable_contestranks(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CContestRankInfo_420.ContestRanks)
  return contestranks_.Mutable(index);
}
 void S2CContestRankInfo_420::set_contestranks(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pb.S2CContestRankInfo_420.ContestRanks)
  contestranks_.Mutable(index)->assign(value);
}
 void S2CContestRankInfo_420::set_contestranks(int index, const char* value) {
  contestranks_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.S2CContestRankInfo_420.ContestRanks)
}
 void S2CContestRankInfo_420::set_contestranks(int index, const char* value, size_t size) {
  contestranks_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.S2CContestRankInfo_420.ContestRanks)
}
 ::std::string* S2CContestRankInfo_420::add_contestranks() {
  // @@protoc_insertion_point(field_add_mutable:pb.S2CContestRankInfo_420.ContestRanks)
  return contestranks_.Add();
}
 void S2CContestRankInfo_420::add_contestranks(const ::std::string& value) {
  contestranks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pb.S2CContestRankInfo_420.ContestRanks)
}
 void S2CContestRankInfo_420::add_contestranks(const char* value) {
  contestranks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pb.S2CContestRankInfo_420.ContestRanks)
}
 void S2CContestRankInfo_420::add_contestranks(const char* value, size_t size) {
  contestranks_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pb.S2CContestRankInfo_420.ContestRanks)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
S2CContestRankInfo_420::contestranks() const {
  // @@protoc_insertion_point(field_list:pb.S2CContestRankInfo_420.ContestRanks)
  return contestranks_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
S2CContestRankInfo_420::mutable_contestranks() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CContestRankInfo_420.ContestRanks)
  return &contestranks_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SContestWaitSec_421::C2SContestWaitSec_421()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SContestWaitSec_421)
}

void C2SContestWaitSec_421::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SContestWaitSec_421::C2SContestWaitSec_421(const C2SContestWaitSec_421& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SContestWaitSec_421)
}

void C2SContestWaitSec_421::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SContestWaitSec_421::~C2SContestWaitSec_421() {
  // @@protoc_insertion_point(destructor:pb.C2SContestWaitSec_421)
  SharedDtor();
}

void C2SContestWaitSec_421::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SContestWaitSec_421::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SContestWaitSec_421::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SContestWaitSec_421_descriptor_;
}

const C2SContestWaitSec_421& C2SContestWaitSec_421::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SContestWaitSec_421* C2SContestWaitSec_421::default_instance_ = NULL;

C2SContestWaitSec_421* C2SContestWaitSec_421::New(::google::protobuf::Arena* arena) const {
  C2SContestWaitSec_421* n = new C2SContestWaitSec_421;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SContestWaitSec_421::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SContestWaitSec_421)
}

bool C2SContestWaitSec_421::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SContestWaitSec_421)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SContestWaitSec_421)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SContestWaitSec_421)
  return false;
#undef DO_
}

void C2SContestWaitSec_421::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SContestWaitSec_421)
  // @@protoc_insertion_point(serialize_end:pb.C2SContestWaitSec_421)
}

::google::protobuf::uint8* C2SContestWaitSec_421::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SContestWaitSec_421)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SContestWaitSec_421)
  return target;
}

int C2SContestWaitSec_421::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SContestWaitSec_421)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SContestWaitSec_421::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SContestWaitSec_421)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SContestWaitSec_421* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SContestWaitSec_421>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SContestWaitSec_421)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SContestWaitSec_421)
    MergeFrom(*source);
  }
}

void C2SContestWaitSec_421::MergeFrom(const C2SContestWaitSec_421& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SContestWaitSec_421)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SContestWaitSec_421::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SContestWaitSec_421)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SContestWaitSec_421::CopyFrom(const C2SContestWaitSec_421& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SContestWaitSec_421)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SContestWaitSec_421::IsInitialized() const {

  return true;
}

void C2SContestWaitSec_421::Swap(C2SContestWaitSec_421* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SContestWaitSec_421::InternalSwap(C2SContestWaitSec_421* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SContestWaitSec_421::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SContestWaitSec_421_descriptor_;
  metadata.reflection = C2SContestWaitSec_421_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SContestWaitSec_421

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CContestWaitSec_421::kSecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CContestWaitSec_421::S2CContestWaitSec_421()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CContestWaitSec_421)
}

void S2CContestWaitSec_421::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CContestWaitSec_421::S2CContestWaitSec_421(const S2CContestWaitSec_421& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CContestWaitSec_421)
}

void S2CContestWaitSec_421::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  sec_ = 0u;
}

S2CContestWaitSec_421::~S2CContestWaitSec_421() {
  // @@protoc_insertion_point(destructor:pb.S2CContestWaitSec_421)
  SharedDtor();
}

void S2CContestWaitSec_421::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CContestWaitSec_421::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CContestWaitSec_421::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CContestWaitSec_421_descriptor_;
}

const S2CContestWaitSec_421& S2CContestWaitSec_421::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CContestWaitSec_421* S2CContestWaitSec_421::default_instance_ = NULL;

S2CContestWaitSec_421* S2CContestWaitSec_421::New(::google::protobuf::Arena* arena) const {
  S2CContestWaitSec_421* n = new S2CContestWaitSec_421;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CContestWaitSec_421::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CContestWaitSec_421)
  sec_ = 0u;
}

bool S2CContestWaitSec_421::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CContestWaitSec_421)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Sec = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sec_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CContestWaitSec_421)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CContestWaitSec_421)
  return false;
#undef DO_
}

void S2CContestWaitSec_421::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CContestWaitSec_421)
  // optional uint32 Sec = 1;
  if (this->sec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sec(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CContestWaitSec_421)
}

::google::protobuf::uint8* S2CContestWaitSec_421::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CContestWaitSec_421)
  // optional uint32 Sec = 1;
  if (this->sec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sec(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CContestWaitSec_421)
  return target;
}

int S2CContestWaitSec_421::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CContestWaitSec_421)
  int total_size = 0;

  // optional uint32 Sec = 1;
  if (this->sec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sec());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CContestWaitSec_421::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CContestWaitSec_421)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CContestWaitSec_421* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CContestWaitSec_421>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CContestWaitSec_421)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CContestWaitSec_421)
    MergeFrom(*source);
  }
}

void S2CContestWaitSec_421::MergeFrom(const S2CContestWaitSec_421& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CContestWaitSec_421)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sec() != 0) {
    set_sec(from.sec());
  }
}

void S2CContestWaitSec_421::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CContestWaitSec_421)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CContestWaitSec_421::CopyFrom(const S2CContestWaitSec_421& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CContestWaitSec_421)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CContestWaitSec_421::IsInitialized() const {

  return true;
}

void S2CContestWaitSec_421::Swap(S2CContestWaitSec_421* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CContestWaitSec_421::InternalSwap(S2CContestWaitSec_421* other) {
  std::swap(sec_, other->sec_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CContestWaitSec_421::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CContestWaitSec_421_descriptor_;
  metadata.reflection = S2CContestWaitSec_421_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CContestWaitSec_421

// optional uint32 Sec = 1;
void S2CContestWaitSec_421::clear_sec() {
  sec_ = 0u;
}
 ::google::protobuf::uint32 S2CContestWaitSec_421::sec() const {
  // @@protoc_insertion_point(field_get:pb.S2CContestWaitSec_421.Sec)
  return sec_;
}
 void S2CContestWaitSec_421::set_sec(::google::protobuf::uint32 value) {
  
  sec_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CContestWaitSec_421.Sec)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SContestDissmis_422::C2SContestDissmis_422()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SContestDissmis_422)
}

void C2SContestDissmis_422::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SContestDissmis_422::C2SContestDissmis_422(const C2SContestDissmis_422& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SContestDissmis_422)
}

void C2SContestDissmis_422::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SContestDissmis_422::~C2SContestDissmis_422() {
  // @@protoc_insertion_point(destructor:pb.C2SContestDissmis_422)
  SharedDtor();
}

void C2SContestDissmis_422::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SContestDissmis_422::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SContestDissmis_422::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SContestDissmis_422_descriptor_;
}

const C2SContestDissmis_422& C2SContestDissmis_422::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SContestDissmis_422* C2SContestDissmis_422::default_instance_ = NULL;

C2SContestDissmis_422* C2SContestDissmis_422::New(::google::protobuf::Arena* arena) const {
  C2SContestDissmis_422* n = new C2SContestDissmis_422;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SContestDissmis_422::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SContestDissmis_422)
}

bool C2SContestDissmis_422::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SContestDissmis_422)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SContestDissmis_422)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SContestDissmis_422)
  return false;
#undef DO_
}

void C2SContestDissmis_422::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SContestDissmis_422)
  // @@protoc_insertion_point(serialize_end:pb.C2SContestDissmis_422)
}

::google::protobuf::uint8* C2SContestDissmis_422::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SContestDissmis_422)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SContestDissmis_422)
  return target;
}

int C2SContestDissmis_422::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SContestDissmis_422)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SContestDissmis_422::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SContestDissmis_422)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SContestDissmis_422* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SContestDissmis_422>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SContestDissmis_422)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SContestDissmis_422)
    MergeFrom(*source);
  }
}

void C2SContestDissmis_422::MergeFrom(const C2SContestDissmis_422& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SContestDissmis_422)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SContestDissmis_422::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SContestDissmis_422)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SContestDissmis_422::CopyFrom(const C2SContestDissmis_422& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SContestDissmis_422)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SContestDissmis_422::IsInitialized() const {

  return true;
}

void C2SContestDissmis_422::Swap(C2SContestDissmis_422* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SContestDissmis_422::InternalSwap(C2SContestDissmis_422* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SContestDissmis_422::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SContestDissmis_422_descriptor_;
  metadata.reflection = C2SContestDissmis_422_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SContestDissmis_422

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CContestDissmis_422::S2CContestDissmis_422()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CContestDissmis_422)
}

void S2CContestDissmis_422::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CContestDissmis_422::S2CContestDissmis_422(const S2CContestDissmis_422& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CContestDissmis_422)
}

void S2CContestDissmis_422::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CContestDissmis_422::~S2CContestDissmis_422() {
  // @@protoc_insertion_point(destructor:pb.S2CContestDissmis_422)
  SharedDtor();
}

void S2CContestDissmis_422::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CContestDissmis_422::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CContestDissmis_422::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CContestDissmis_422_descriptor_;
}

const S2CContestDissmis_422& S2CContestDissmis_422::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CContestDissmis_422* S2CContestDissmis_422::default_instance_ = NULL;

S2CContestDissmis_422* S2CContestDissmis_422::New(::google::protobuf::Arena* arena) const {
  S2CContestDissmis_422* n = new S2CContestDissmis_422;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CContestDissmis_422::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CContestDissmis_422)
}

bool S2CContestDissmis_422::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CContestDissmis_422)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CContestDissmis_422)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CContestDissmis_422)
  return false;
#undef DO_
}

void S2CContestDissmis_422::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CContestDissmis_422)
  // @@protoc_insertion_point(serialize_end:pb.S2CContestDissmis_422)
}

::google::protobuf::uint8* S2CContestDissmis_422::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CContestDissmis_422)
  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CContestDissmis_422)
  return target;
}

int S2CContestDissmis_422::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CContestDissmis_422)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CContestDissmis_422::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CContestDissmis_422)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CContestDissmis_422* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CContestDissmis_422>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CContestDissmis_422)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CContestDissmis_422)
    MergeFrom(*source);
  }
}

void S2CContestDissmis_422::MergeFrom(const S2CContestDissmis_422& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CContestDissmis_422)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void S2CContestDissmis_422::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CContestDissmis_422)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CContestDissmis_422::CopyFrom(const S2CContestDissmis_422& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CContestDissmis_422)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CContestDissmis_422::IsInitialized() const {

  return true;
}

void S2CContestDissmis_422::Swap(S2CContestDissmis_422* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CContestDissmis_422::InternalSwap(S2CContestDissmis_422* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CContestDissmis_422::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CContestDissmis_422_descriptor_;
  metadata.reflection = S2CContestDissmis_422_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CContestDissmis_422

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SWatchContestBat_423::kLeftTeamIdFieldNumber;
const int C2SWatchContestBat_423::kContestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SWatchContestBat_423::C2SWatchContestBat_423()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SWatchContestBat_423)
}

void C2SWatchContestBat_423::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SWatchContestBat_423::C2SWatchContestBat_423(const C2SWatchContestBat_423& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SWatchContestBat_423)
}

void C2SWatchContestBat_423::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  leftteamid_ = 0u;
  contestid_ = 0u;
}

C2SWatchContestBat_423::~C2SWatchContestBat_423() {
  // @@protoc_insertion_point(destructor:pb.C2SWatchContestBat_423)
  SharedDtor();
}

void C2SWatchContestBat_423::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SWatchContestBat_423::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SWatchContestBat_423::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SWatchContestBat_423_descriptor_;
}

const C2SWatchContestBat_423& C2SWatchContestBat_423::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SWatchContestBat_423* C2SWatchContestBat_423::default_instance_ = NULL;

C2SWatchContestBat_423* C2SWatchContestBat_423::New(::google::protobuf::Arena* arena) const {
  C2SWatchContestBat_423* n = new C2SWatchContestBat_423;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SWatchContestBat_423::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SWatchContestBat_423)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(C2SWatchContestBat_423, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<C2SWatchContestBat_423*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(leftteamid_, contestid_);

#undef ZR_HELPER_
#undef ZR_

}

bool C2SWatchContestBat_423::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SWatchContestBat_423)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 LeftTeamId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftteamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ContestId;
        break;
      }

      // optional uint32 ContestId = 2;
      case 2: {
        if (tag == 16) {
         parse_ContestId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contestid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SWatchContestBat_423)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SWatchContestBat_423)
  return false;
#undef DO_
}

void C2SWatchContestBat_423::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SWatchContestBat_423)
  // optional uint32 LeftTeamId = 1;
  if (this->leftteamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->leftteamid(), output);
  }

  // optional uint32 ContestId = 2;
  if (this->contestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->contestid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SWatchContestBat_423)
}

::google::protobuf::uint8* C2SWatchContestBat_423::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SWatchContestBat_423)
  // optional uint32 LeftTeamId = 1;
  if (this->leftteamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->leftteamid(), target);
  }

  // optional uint32 ContestId = 2;
  if (this->contestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->contestid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SWatchContestBat_423)
  return target;
}

int C2SWatchContestBat_423::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SWatchContestBat_423)
  int total_size = 0;

  // optional uint32 LeftTeamId = 1;
  if (this->leftteamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leftteamid());
  }

  // optional uint32 ContestId = 2;
  if (this->contestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contestid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SWatchContestBat_423::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SWatchContestBat_423)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SWatchContestBat_423* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SWatchContestBat_423>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SWatchContestBat_423)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SWatchContestBat_423)
    MergeFrom(*source);
  }
}

void C2SWatchContestBat_423::MergeFrom(const C2SWatchContestBat_423& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SWatchContestBat_423)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.leftteamid() != 0) {
    set_leftteamid(from.leftteamid());
  }
  if (from.contestid() != 0) {
    set_contestid(from.contestid());
  }
}

void C2SWatchContestBat_423::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SWatchContestBat_423)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SWatchContestBat_423::CopyFrom(const C2SWatchContestBat_423& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SWatchContestBat_423)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SWatchContestBat_423::IsInitialized() const {

  return true;
}

void C2SWatchContestBat_423::Swap(C2SWatchContestBat_423* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SWatchContestBat_423::InternalSwap(C2SWatchContestBat_423* other) {
  std::swap(leftteamid_, other->leftteamid_);
  std::swap(contestid_, other->contestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SWatchContestBat_423::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SWatchContestBat_423_descriptor_;
  metadata.reflection = C2SWatchContestBat_423_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SWatchContestBat_423

// optional uint32 LeftTeamId = 1;
void C2SWatchContestBat_423::clear_leftteamid() {
  leftteamid_ = 0u;
}
 ::google::protobuf::uint32 C2SWatchContestBat_423::leftteamid() const {
  // @@protoc_insertion_point(field_get:pb.C2SWatchContestBat_423.LeftTeamId)
  return leftteamid_;
}
 void C2SWatchContestBat_423::set_leftteamid(::google::protobuf::uint32 value) {
  
  leftteamid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SWatchContestBat_423.LeftTeamId)
}

// optional uint32 ContestId = 2;
void C2SWatchContestBat_423::clear_contestid() {
  contestid_ = 0u;
}
 ::google::protobuf::uint32 C2SWatchContestBat_423::contestid() const {
  // @@protoc_insertion_point(field_get:pb.C2SWatchContestBat_423.ContestId)
  return contestid_;
}
 void C2SWatchContestBat_423::set_contestid(::google::protobuf::uint32 value) {
  
  contestid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SWatchContestBat_423.ContestId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CContestReward_424::kRewardStrFieldNumber;
const int S2CContestReward_424::kRankingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CContestReward_424::S2CContestReward_424()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CContestReward_424)
}

void S2CContestReward_424::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CContestReward_424::S2CContestReward_424(const S2CContestReward_424& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CContestReward_424)
}

void S2CContestReward_424::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rewardstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ranking_ = 0u;
}

S2CContestReward_424::~S2CContestReward_424() {
  // @@protoc_insertion_point(destructor:pb.S2CContestReward_424)
  SharedDtor();
}

void S2CContestReward_424::SharedDtor() {
  rewardstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void S2CContestReward_424::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CContestReward_424::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CContestReward_424_descriptor_;
}

const S2CContestReward_424& S2CContestReward_424::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CContestReward_424* S2CContestReward_424::default_instance_ = NULL;

S2CContestReward_424* S2CContestReward_424::New(::google::protobuf::Arena* arena) const {
  S2CContestReward_424* n = new S2CContestReward_424;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CContestReward_424::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CContestReward_424)
  rewardstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ranking_ = 0u;
}

bool S2CContestReward_424::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CContestReward_424)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string RewardStr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rewardstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rewardstr().data(), this->rewardstr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.S2CContestReward_424.RewardStr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Ranking;
        break;
      }

      // optional uint32 Ranking = 2;
      case 2: {
        if (tag == 16) {
         parse_Ranking:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ranking_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CContestReward_424)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CContestReward_424)
  return false;
#undef DO_
}

void S2CContestReward_424::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CContestReward_424)
  // optional string RewardStr = 1;
  if (this->rewardstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rewardstr().data(), this->rewardstr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CContestReward_424.RewardStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->rewardstr(), output);
  }

  // optional uint32 Ranking = 2;
  if (this->ranking() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ranking(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CContestReward_424)
}

::google::protobuf::uint8* S2CContestReward_424::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CContestReward_424)
  // optional string RewardStr = 1;
  if (this->rewardstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rewardstr().data(), this->rewardstr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.S2CContestReward_424.RewardStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rewardstr(), target);
  }

  // optional uint32 Ranking = 2;
  if (this->ranking() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ranking(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CContestReward_424)
  return target;
}

int S2CContestReward_424::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CContestReward_424)
  int total_size = 0;

  // optional string RewardStr = 1;
  if (this->rewardstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rewardstr());
  }

  // optional uint32 Ranking = 2;
  if (this->ranking() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ranking());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CContestReward_424::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CContestReward_424)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CContestReward_424* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CContestReward_424>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CContestReward_424)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CContestReward_424)
    MergeFrom(*source);
  }
}

void S2CContestReward_424::MergeFrom(const S2CContestReward_424& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CContestReward_424)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rewardstr().size() > 0) {

    rewardstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rewardstr_);
  }
  if (from.ranking() != 0) {
    set_ranking(from.ranking());
  }
}

void S2CContestReward_424::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CContestReward_424)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CContestReward_424::CopyFrom(const S2CContestReward_424& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CContestReward_424)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CContestReward_424::IsInitialized() const {

  return true;
}

void S2CContestReward_424::Swap(S2CContestReward_424* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CContestReward_424::InternalSwap(S2CContestReward_424* other) {
  rewardstr_.Swap(&other->rewardstr_);
  std::swap(ranking_, other->ranking_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CContestReward_424::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CContestReward_424_descriptor_;
  metadata.reflection = S2CContestReward_424_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CContestReward_424

// optional string RewardStr = 1;
void S2CContestReward_424::clear_rewardstr() {
  rewardstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& S2CContestReward_424::rewardstr() const {
  // @@protoc_insertion_point(field_get:pb.S2CContestReward_424.RewardStr)
  return rewardstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CContestReward_424::set_rewardstr(const ::std::string& value) {
  
  rewardstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.S2CContestReward_424.RewardStr)
}
 void S2CContestReward_424::set_rewardstr(const char* value) {
  
  rewardstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.S2CContestReward_424.RewardStr)
}
 void S2CContestReward_424::set_rewardstr(const char* value, size_t size) {
  
  rewardstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.S2CContestReward_424.RewardStr)
}
 ::std::string* S2CContestReward_424::mutable_rewardstr() {
  
  // @@protoc_insertion_point(field_mutable:pb.S2CContestReward_424.RewardStr)
  return rewardstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* S2CContestReward_424::release_rewardstr() {
  // @@protoc_insertion_point(field_release:pb.S2CContestReward_424.RewardStr)
  
  return rewardstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void S2CContestReward_424::set_allocated_rewardstr(::std::string* rewardstr) {
  if (rewardstr != NULL) {
    
  } else {
    
  }
  rewardstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rewardstr);
  // @@protoc_insertion_point(field_set_allocated:pb.S2CContestReward_424.RewardStr)
}

// optional uint32 Ranking = 2;
void S2CContestReward_424::clear_ranking() {
  ranking_ = 0u;
}
 ::google::protobuf::uint32 S2CContestReward_424::ranking() const {
  // @@protoc_insertion_point(field_get:pb.S2CContestReward_424.Ranking)
  return ranking_;
}
 void S2CContestReward_424::set_ranking(::google::protobuf::uint32 value) {
  
  ranking_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CContestReward_424.Ranking)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CFreshenFightData_425::S2CFreshenFightData_425()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CFreshenFightData_425)
}

void S2CFreshenFightData_425::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CFreshenFightData_425::S2CFreshenFightData_425(const S2CFreshenFightData_425& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CFreshenFightData_425)
}

void S2CFreshenFightData_425::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CFreshenFightData_425::~S2CFreshenFightData_425() {
  // @@protoc_insertion_point(destructor:pb.S2CFreshenFightData_425)
  SharedDtor();
}

void S2CFreshenFightData_425::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CFreshenFightData_425::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CFreshenFightData_425::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CFreshenFightData_425_descriptor_;
}

const S2CFreshenFightData_425& S2CFreshenFightData_425::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CFreshenFightData_425* S2CFreshenFightData_425::default_instance_ = NULL;

S2CFreshenFightData_425* S2CFreshenFightData_425::New(::google::protobuf::Arena* arena) const {
  S2CFreshenFightData_425* n = new S2CFreshenFightData_425;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CFreshenFightData_425::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CFreshenFightData_425)
}

bool S2CFreshenFightData_425::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CFreshenFightData_425)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CFreshenFightData_425)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CFreshenFightData_425)
  return false;
#undef DO_
}

void S2CFreshenFightData_425::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CFreshenFightData_425)
  // @@protoc_insertion_point(serialize_end:pb.S2CFreshenFightData_425)
}

::google::protobuf::uint8* S2CFreshenFightData_425::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CFreshenFightData_425)
  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CFreshenFightData_425)
  return target;
}

int S2CFreshenFightData_425::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CFreshenFightData_425)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CFreshenFightData_425::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CFreshenFightData_425)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CFreshenFightData_425* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CFreshenFightData_425>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CFreshenFightData_425)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CFreshenFightData_425)
    MergeFrom(*source);
  }
}

void S2CFreshenFightData_425::MergeFrom(const S2CFreshenFightData_425& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CFreshenFightData_425)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void S2CFreshenFightData_425::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CFreshenFightData_425)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CFreshenFightData_425::CopyFrom(const S2CFreshenFightData_425& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CFreshenFightData_425)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CFreshenFightData_425::IsInitialized() const {

  return true;
}

void S2CFreshenFightData_425::Swap(S2CFreshenFightData_425* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CFreshenFightData_425::InternalSwap(S2CFreshenFightData_425* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CFreshenFightData_425::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CFreshenFightData_425_descriptor_;
  metadata.reflection = S2CFreshenFightData_425_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CFreshenFightData_425

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGiveup_426::C2SGiveup_426()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGiveup_426)
}

void C2SGiveup_426::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGiveup_426::C2SGiveup_426(const C2SGiveup_426& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGiveup_426)
}

void C2SGiveup_426::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGiveup_426::~C2SGiveup_426() {
  // @@protoc_insertion_point(destructor:pb.C2SGiveup_426)
  SharedDtor();
}

void C2SGiveup_426::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGiveup_426::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGiveup_426::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGiveup_426_descriptor_;
}

const C2SGiveup_426& C2SGiveup_426::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGiveup_426* C2SGiveup_426::default_instance_ = NULL;

C2SGiveup_426* C2SGiveup_426::New(::google::protobuf::Arena* arena) const {
  C2SGiveup_426* n = new C2SGiveup_426;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGiveup_426::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGiveup_426)
}

bool C2SGiveup_426::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGiveup_426)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGiveup_426)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGiveup_426)
  return false;
#undef DO_
}

void C2SGiveup_426::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGiveup_426)
  // @@protoc_insertion_point(serialize_end:pb.C2SGiveup_426)
}

::google::protobuf::uint8* C2SGiveup_426::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGiveup_426)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGiveup_426)
  return target;
}

int C2SGiveup_426::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGiveup_426)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGiveup_426::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGiveup_426)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGiveup_426* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGiveup_426>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGiveup_426)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGiveup_426)
    MergeFrom(*source);
  }
}

void C2SGiveup_426::MergeFrom(const C2SGiveup_426& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGiveup_426)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SGiveup_426::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGiveup_426)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGiveup_426::CopyFrom(const C2SGiveup_426& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGiveup_426)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGiveup_426::IsInitialized() const {

  return true;
}

void C2SGiveup_426::Swap(C2SGiveup_426* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGiveup_426::InternalSwap(C2SGiveup_426* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGiveup_426::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGiveup_426_descriptor_;
  metadata.reflection = C2SGiveup_426_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGiveup_426

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGiveup_426::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGiveup_426::S2CGiveup_426()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGiveup_426)
}

void S2CGiveup_426::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGiveup_426::S2CGiveup_426(const S2CGiveup_426& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGiveup_426)
}

void S2CGiveup_426::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rid_ = GOOGLE_ULONGLONG(0);
}

S2CGiveup_426::~S2CGiveup_426() {
  // @@protoc_insertion_point(destructor:pb.S2CGiveup_426)
  SharedDtor();
}

void S2CGiveup_426::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGiveup_426::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGiveup_426::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGiveup_426_descriptor_;
}

const S2CGiveup_426& S2CGiveup_426::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGiveup_426* S2CGiveup_426::default_instance_ = NULL;

S2CGiveup_426* S2CGiveup_426::New(::google::protobuf::Arena* arena) const {
  S2CGiveup_426* n = new S2CGiveup_426;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGiveup_426::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGiveup_426)
  rid_ = GOOGLE_ULONGLONG(0);
}

bool S2CGiveup_426::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGiveup_426)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGiveup_426)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGiveup_426)
  return false;
#undef DO_
}

void S2CGiveup_426::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGiveup_426)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGiveup_426)
}

::google::protobuf::uint8* S2CGiveup_426::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGiveup_426)
  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGiveup_426)
  return target;
}

int S2CGiveup_426::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGiveup_426)
  int total_size = 0;

  // optional uint64 Rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGiveup_426::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGiveup_426)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGiveup_426* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGiveup_426>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGiveup_426)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGiveup_426)
    MergeFrom(*source);
  }
}

void S2CGiveup_426::MergeFrom(const S2CGiveup_426& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGiveup_426)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void S2CGiveup_426::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGiveup_426)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGiveup_426::CopyFrom(const S2CGiveup_426& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGiveup_426)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGiveup_426::IsInitialized() const {

  return true;
}

void S2CGiveup_426::Swap(S2CGiveup_426* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGiveup_426::InternalSwap(S2CGiveup_426* other) {
  std::swap(rid_, other->rid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGiveup_426::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGiveup_426_descriptor_;
  metadata.reflection = S2CGiveup_426_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGiveup_426

// optional uint64 Rid = 1;
void S2CGiveup_426::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 S2CGiveup_426::rid() const {
  // @@protoc_insertion_point(field_get:pb.S2CGiveup_426.Rid)
  return rid_;
}
 void S2CGiveup_426::set_rid(::google::protobuf::uint64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGiveup_426.Rid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SSetSetPassword_427::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SSetSetPassword_427::C2SSetSetPassword_427()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SSetSetPassword_427)
}

void C2SSetSetPassword_427::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SSetSetPassword_427::C2SSetSetPassword_427(const C2SSetSetPassword_427& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SSetSetPassword_427)
}

void C2SSetSetPassword_427::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2SSetSetPassword_427::~C2SSetSetPassword_427() {
  // @@protoc_insertion_point(destructor:pb.C2SSetSetPassword_427)
  SharedDtor();
}

void C2SSetSetPassword_427::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void C2SSetSetPassword_427::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SSetSetPassword_427::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SSetSetPassword_427_descriptor_;
}

const C2SSetSetPassword_427& C2SSetSetPassword_427::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SSetSetPassword_427* C2SSetSetPassword_427::default_instance_ = NULL;

C2SSetSetPassword_427* C2SSetSetPassword_427::New(::google::protobuf::Arena* arena) const {
  C2SSetSetPassword_427* n = new C2SSetSetPassword_427;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SSetSetPassword_427::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SSetSetPassword_427)
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool C2SSetSetPassword_427::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SSetSetPassword_427)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Password = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.C2SSetSetPassword_427.Password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SSetSetPassword_427)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SSetSetPassword_427)
  return false;
#undef DO_
}

void C2SSetSetPassword_427::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SSetSetPassword_427)
  // optional string Password = 1;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SSetSetPassword_427.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SSetSetPassword_427)
}

::google::protobuf::uint8* C2SSetSetPassword_427::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SSetSetPassword_427)
  // optional string Password = 1;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.C2SSetSetPassword_427.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SSetSetPassword_427)
  return target;
}

int C2SSetSetPassword_427::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SSetSetPassword_427)
  int total_size = 0;

  // optional string Password = 1;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SSetSetPassword_427::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SSetSetPassword_427)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SSetSetPassword_427* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SSetSetPassword_427>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SSetSetPassword_427)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SSetSetPassword_427)
    MergeFrom(*source);
  }
}

void C2SSetSetPassword_427::MergeFrom(const C2SSetSetPassword_427& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SSetSetPassword_427)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void C2SSetSetPassword_427::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SSetSetPassword_427)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SSetSetPassword_427::CopyFrom(const C2SSetSetPassword_427& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SSetSetPassword_427)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SSetSetPassword_427::IsInitialized() const {

  return true;
}

void C2SSetSetPassword_427::Swap(C2SSetSetPassword_427* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SSetSetPassword_427::InternalSwap(C2SSetSetPassword_427* other) {
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SSetSetPassword_427::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SSetSetPassword_427_descriptor_;
  metadata.reflection = C2SSetSetPassword_427_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SSetSetPassword_427

// optional string Password = 1;
void C2SSetSetPassword_427::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& C2SSetSetPassword_427::password() const {
  // @@protoc_insertion_point(field_get:pb.C2SSetSetPassword_427.Password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SSetSetPassword_427::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.C2SSetSetPassword_427.Password)
}
 void C2SSetSetPassword_427::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.C2SSetSetPassword_427.Password)
}
 void C2SSetSetPassword_427::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.C2SSetSetPassword_427.Password)
}
 ::std::string* C2SSetSetPassword_427::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:pb.C2SSetSetPassword_427.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* C2SSetSetPassword_427::release_password() {
  // @@protoc_insertion_point(field_release:pb.C2SSetSetPassword_427.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void C2SSetSetPassword_427::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:pb.C2SSetSetPassword_427.Password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetSignInActivaty_500::C2SGetSignInActivaty_500()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetSignInActivaty_500)
}

void C2SGetSignInActivaty_500::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetSignInActivaty_500::C2SGetSignInActivaty_500(const C2SGetSignInActivaty_500& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetSignInActivaty_500)
}

void C2SGetSignInActivaty_500::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGetSignInActivaty_500::~C2SGetSignInActivaty_500() {
  // @@protoc_insertion_point(destructor:pb.C2SGetSignInActivaty_500)
  SharedDtor();
}

void C2SGetSignInActivaty_500::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetSignInActivaty_500::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetSignInActivaty_500::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetSignInActivaty_500_descriptor_;
}

const C2SGetSignInActivaty_500& C2SGetSignInActivaty_500::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetSignInActivaty_500* C2SGetSignInActivaty_500::default_instance_ = NULL;

C2SGetSignInActivaty_500* C2SGetSignInActivaty_500::New(::google::protobuf::Arena* arena) const {
  C2SGetSignInActivaty_500* n = new C2SGetSignInActivaty_500;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetSignInActivaty_500::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetSignInActivaty_500)
}

bool C2SGetSignInActivaty_500::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetSignInActivaty_500)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetSignInActivaty_500)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetSignInActivaty_500)
  return false;
#undef DO_
}

void C2SGetSignInActivaty_500::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetSignInActivaty_500)
  // @@protoc_insertion_point(serialize_end:pb.C2SGetSignInActivaty_500)
}

::google::protobuf::uint8* C2SGetSignInActivaty_500::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetSignInActivaty_500)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetSignInActivaty_500)
  return target;
}

int C2SGetSignInActivaty_500::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetSignInActivaty_500)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetSignInActivaty_500::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetSignInActivaty_500)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetSignInActivaty_500* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetSignInActivaty_500>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetSignInActivaty_500)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetSignInActivaty_500)
    MergeFrom(*source);
  }
}

void C2SGetSignInActivaty_500::MergeFrom(const C2SGetSignInActivaty_500& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetSignInActivaty_500)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SGetSignInActivaty_500::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetSignInActivaty_500)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetSignInActivaty_500::CopyFrom(const C2SGetSignInActivaty_500& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetSignInActivaty_500)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetSignInActivaty_500::IsInitialized() const {

  return true;
}

void C2SGetSignInActivaty_500::Swap(C2SGetSignInActivaty_500* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetSignInActivaty_500::InternalSwap(C2SGetSignInActivaty_500* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetSignInActivaty_500::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetSignInActivaty_500_descriptor_;
  metadata.reflection = C2SGetSignInActivaty_500_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetSignInActivaty_500

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetSignInActivaty_500::kBeginTimeFieldNumber;
const int S2CGetSignInActivaty_500::kEndTimeFieldNumber;
const int S2CGetSignInActivaty_500::kItemListFieldNumber;
const int S2CGetSignInActivaty_500::kSignedIdxFieldNumber;
const int S2CGetSignInActivaty_500::kRemedyCostFieldNumber;
const int S2CGetSignInActivaty_500::kRemedyTimesFieldNumber;
const int S2CGetSignInActivaty_500::kSignedTodayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetSignInActivaty_500::S2CGetSignInActivaty_500()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetSignInActivaty_500)
}

void S2CGetSignInActivaty_500::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetSignInActivaty_500::S2CGetSignInActivaty_500(const S2CGetSignInActivaty_500& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetSignInActivaty_500)
}

void S2CGetSignInActivaty_500::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  begintime_ = 0u;
  endtime_ = 0u;
  signedidx_ = 0u;
  remedycost_ = 0u;
  remedytimes_ = 0u;
  signedtoday_ = false;
}

S2CGetSignInActivaty_500::~S2CGetSignInActivaty_500() {
  // @@protoc_insertion_point(destructor:pb.S2CGetSignInActivaty_500)
  SharedDtor();
}

void S2CGetSignInActivaty_500::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetSignInActivaty_500::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetSignInActivaty_500::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetSignInActivaty_500_descriptor_;
}

const S2CGetSignInActivaty_500& S2CGetSignInActivaty_500::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetSignInActivaty_500* S2CGetSignInActivaty_500::default_instance_ = NULL;

S2CGetSignInActivaty_500* S2CGetSignInActivaty_500::New(::google::protobuf::Arena* arena) const {
  S2CGetSignInActivaty_500* n = new S2CGetSignInActivaty_500;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetSignInActivaty_500::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetSignInActivaty_500)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CGetSignInActivaty_500, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CGetSignInActivaty_500*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(begintime_, endtime_);
  ZR_(signedidx_, signedtoday_);

#undef ZR_HELPER_
#undef ZR_

  itemlist_.Clear();
}

bool S2CGetSignInActivaty_500::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetSignInActivaty_500)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 BeginTime = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &begintime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_EndTime;
        break;
      }

      // optional uint32 EndTime = 2;
      case 2: {
        if (tag == 16) {
         parse_EndTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &endtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ItemList;
        break;
      }

      // repeated .pb.MallBagItemData ItemList = 3;
      case 3: {
        if (tag == 26) {
         parse_ItemList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_ItemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_itemlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_ItemList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_SignedIdx;
        break;
      }

      // optional uint32 SignedIdx = 4;
      case 4: {
        if (tag == 32) {
         parse_SignedIdx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &signedidx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_RemedyCost;
        break;
      }

      // optional uint32 RemedyCost = 5;
      case 5: {
        if (tag == 40) {
         parse_RemedyCost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remedycost_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_RemedyTimes;
        break;
      }

      // optional uint32 RemedyTimes = 6;
      case 6: {
        if (tag == 48) {
         parse_RemedyTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remedytimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_SignedToday;
        break;
      }

      // optional bool SignedToday = 7;
      case 7: {
        if (tag == 56) {
         parse_SignedToday:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &signedtoday_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetSignInActivaty_500)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetSignInActivaty_500)
  return false;
#undef DO_
}

void S2CGetSignInActivaty_500::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetSignInActivaty_500)
  // optional uint32 BeginTime = 1;
  if (this->begintime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->begintime(), output);
  }

  // optional uint32 EndTime = 2;
  if (this->endtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->endtime(), output);
  }

  // repeated .pb.MallBagItemData ItemList = 3;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->itemlist(i), output);
  }

  // optional uint32 SignedIdx = 4;
  if (this->signedidx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->signedidx(), output);
  }

  // optional uint32 RemedyCost = 5;
  if (this->remedycost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->remedycost(), output);
  }

  // optional uint32 RemedyTimes = 6;
  if (this->remedytimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->remedytimes(), output);
  }

  // optional bool SignedToday = 7;
  if (this->signedtoday() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->signedtoday(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetSignInActivaty_500)
}

::google::protobuf::uint8* S2CGetSignInActivaty_500::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetSignInActivaty_500)
  // optional uint32 BeginTime = 1;
  if (this->begintime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->begintime(), target);
  }

  // optional uint32 EndTime = 2;
  if (this->endtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->endtime(), target);
  }

  // repeated .pb.MallBagItemData ItemList = 3;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->itemlist(i), false, target);
  }

  // optional uint32 SignedIdx = 4;
  if (this->signedidx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->signedidx(), target);
  }

  // optional uint32 RemedyCost = 5;
  if (this->remedycost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->remedycost(), target);
  }

  // optional uint32 RemedyTimes = 6;
  if (this->remedytimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->remedytimes(), target);
  }

  // optional bool SignedToday = 7;
  if (this->signedtoday() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->signedtoday(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetSignInActivaty_500)
  return target;
}

int S2CGetSignInActivaty_500::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetSignInActivaty_500)
  int total_size = 0;

  // optional uint32 BeginTime = 1;
  if (this->begintime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->begintime());
  }

  // optional uint32 EndTime = 2;
  if (this->endtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->endtime());
  }

  // optional uint32 SignedIdx = 4;
  if (this->signedidx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->signedidx());
  }

  // optional uint32 RemedyCost = 5;
  if (this->remedycost() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->remedycost());
  }

  // optional uint32 RemedyTimes = 6;
  if (this->remedytimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->remedytimes());
  }

  // optional bool SignedToday = 7;
  if (this->signedtoday() != 0) {
    total_size += 1 + 1;
  }

  // repeated .pb.MallBagItemData ItemList = 3;
  total_size += 1 * this->itemlist_size();
  for (int i = 0; i < this->itemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetSignInActivaty_500::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetSignInActivaty_500)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetSignInActivaty_500* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetSignInActivaty_500>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetSignInActivaty_500)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetSignInActivaty_500)
    MergeFrom(*source);
  }
}

void S2CGetSignInActivaty_500::MergeFrom(const S2CGetSignInActivaty_500& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetSignInActivaty_500)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  itemlist_.MergeFrom(from.itemlist_);
  if (from.begintime() != 0) {
    set_begintime(from.begintime());
  }
  if (from.endtime() != 0) {
    set_endtime(from.endtime());
  }
  if (from.signedidx() != 0) {
    set_signedidx(from.signedidx());
  }
  if (from.remedycost() != 0) {
    set_remedycost(from.remedycost());
  }
  if (from.remedytimes() != 0) {
    set_remedytimes(from.remedytimes());
  }
  if (from.signedtoday() != 0) {
    set_signedtoday(from.signedtoday());
  }
}

void S2CGetSignInActivaty_500::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetSignInActivaty_500)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetSignInActivaty_500::CopyFrom(const S2CGetSignInActivaty_500& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetSignInActivaty_500)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetSignInActivaty_500::IsInitialized() const {

  return true;
}

void S2CGetSignInActivaty_500::Swap(S2CGetSignInActivaty_500* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetSignInActivaty_500::InternalSwap(S2CGetSignInActivaty_500* other) {
  std::swap(begintime_, other->begintime_);
  std::swap(endtime_, other->endtime_);
  itemlist_.UnsafeArenaSwap(&other->itemlist_);
  std::swap(signedidx_, other->signedidx_);
  std::swap(remedycost_, other->remedycost_);
  std::swap(remedytimes_, other->remedytimes_);
  std::swap(signedtoday_, other->signedtoday_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetSignInActivaty_500::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetSignInActivaty_500_descriptor_;
  metadata.reflection = S2CGetSignInActivaty_500_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetSignInActivaty_500

// optional uint32 BeginTime = 1;
void S2CGetSignInActivaty_500::clear_begintime() {
  begintime_ = 0u;
}
 ::google::protobuf::uint32 S2CGetSignInActivaty_500::begintime() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetSignInActivaty_500.BeginTime)
  return begintime_;
}
 void S2CGetSignInActivaty_500::set_begintime(::google::protobuf::uint32 value) {
  
  begintime_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetSignInActivaty_500.BeginTime)
}

// optional uint32 EndTime = 2;
void S2CGetSignInActivaty_500::clear_endtime() {
  endtime_ = 0u;
}
 ::google::protobuf::uint32 S2CGetSignInActivaty_500::endtime() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetSignInActivaty_500.EndTime)
  return endtime_;
}
 void S2CGetSignInActivaty_500::set_endtime(::google::protobuf::uint32 value) {
  
  endtime_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetSignInActivaty_500.EndTime)
}

// repeated .pb.MallBagItemData ItemList = 3;
int S2CGetSignInActivaty_500::itemlist_size() const {
  return itemlist_.size();
}
void S2CGetSignInActivaty_500::clear_itemlist() {
  itemlist_.Clear();
}
const ::pb::MallBagItemData& S2CGetSignInActivaty_500::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetSignInActivaty_500.ItemList)
  return itemlist_.Get(index);
}
::pb::MallBagItemData* S2CGetSignInActivaty_500::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetSignInActivaty_500.ItemList)
  return itemlist_.Mutable(index);
}
::pb::MallBagItemData* S2CGetSignInActivaty_500::add_itemlist() {
  // @@protoc_insertion_point(field_add:pb.S2CGetSignInActivaty_500.ItemList)
  return itemlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::MallBagItemData >*
S2CGetSignInActivaty_500::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetSignInActivaty_500.ItemList)
  return &itemlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::MallBagItemData >&
S2CGetSignInActivaty_500::itemlist() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetSignInActivaty_500.ItemList)
  return itemlist_;
}

// optional uint32 SignedIdx = 4;
void S2CGetSignInActivaty_500::clear_signedidx() {
  signedidx_ = 0u;
}
 ::google::protobuf::uint32 S2CGetSignInActivaty_500::signedidx() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetSignInActivaty_500.SignedIdx)
  return signedidx_;
}
 void S2CGetSignInActivaty_500::set_signedidx(::google::protobuf::uint32 value) {
  
  signedidx_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetSignInActivaty_500.SignedIdx)
}

// optional uint32 RemedyCost = 5;
void S2CGetSignInActivaty_500::clear_remedycost() {
  remedycost_ = 0u;
}
 ::google::protobuf::uint32 S2CGetSignInActivaty_500::remedycost() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetSignInActivaty_500.RemedyCost)
  return remedycost_;
}
 void S2CGetSignInActivaty_500::set_remedycost(::google::protobuf::uint32 value) {
  
  remedycost_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetSignInActivaty_500.RemedyCost)
}

// optional uint32 RemedyTimes = 6;
void S2CGetSignInActivaty_500::clear_remedytimes() {
  remedytimes_ = 0u;
}
 ::google::protobuf::uint32 S2CGetSignInActivaty_500::remedytimes() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetSignInActivaty_500.RemedyTimes)
  return remedytimes_;
}
 void S2CGetSignInActivaty_500::set_remedytimes(::google::protobuf::uint32 value) {
  
  remedytimes_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetSignInActivaty_500.RemedyTimes)
}

// optional bool SignedToday = 7;
void S2CGetSignInActivaty_500::clear_signedtoday() {
  signedtoday_ = false;
}
 bool S2CGetSignInActivaty_500::signedtoday() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetSignInActivaty_500.SignedToday)
  return signedtoday_;
}
 void S2CGetSignInActivaty_500::set_signedtoday(bool value) {
  
  signedtoday_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetSignInActivaty_500.SignedToday)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SSignInActivaty_501::C2SSignInActivaty_501()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SSignInActivaty_501)
}

void C2SSignInActivaty_501::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SSignInActivaty_501::C2SSignInActivaty_501(const C2SSignInActivaty_501& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SSignInActivaty_501)
}

void C2SSignInActivaty_501::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SSignInActivaty_501::~C2SSignInActivaty_501() {
  // @@protoc_insertion_point(destructor:pb.C2SSignInActivaty_501)
  SharedDtor();
}

void C2SSignInActivaty_501::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SSignInActivaty_501::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SSignInActivaty_501::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SSignInActivaty_501_descriptor_;
}

const C2SSignInActivaty_501& C2SSignInActivaty_501::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SSignInActivaty_501* C2SSignInActivaty_501::default_instance_ = NULL;

C2SSignInActivaty_501* C2SSignInActivaty_501::New(::google::protobuf::Arena* arena) const {
  C2SSignInActivaty_501* n = new C2SSignInActivaty_501;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SSignInActivaty_501::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SSignInActivaty_501)
}

bool C2SSignInActivaty_501::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SSignInActivaty_501)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SSignInActivaty_501)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SSignInActivaty_501)
  return false;
#undef DO_
}

void C2SSignInActivaty_501::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SSignInActivaty_501)
  // @@protoc_insertion_point(serialize_end:pb.C2SSignInActivaty_501)
}

::google::protobuf::uint8* C2SSignInActivaty_501::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SSignInActivaty_501)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SSignInActivaty_501)
  return target;
}

int C2SSignInActivaty_501::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SSignInActivaty_501)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SSignInActivaty_501::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SSignInActivaty_501)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SSignInActivaty_501* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SSignInActivaty_501>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SSignInActivaty_501)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SSignInActivaty_501)
    MergeFrom(*source);
  }
}

void C2SSignInActivaty_501::MergeFrom(const C2SSignInActivaty_501& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SSignInActivaty_501)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SSignInActivaty_501::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SSignInActivaty_501)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SSignInActivaty_501::CopyFrom(const C2SSignInActivaty_501& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SSignInActivaty_501)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SSignInActivaty_501::IsInitialized() const {

  return true;
}

void C2SSignInActivaty_501::Swap(C2SSignInActivaty_501* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SSignInActivaty_501::InternalSwap(C2SSignInActivaty_501* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SSignInActivaty_501::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SSignInActivaty_501_descriptor_;
  metadata.reflection = C2SSignInActivaty_501_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SSignInActivaty_501

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SRemedialSignInAct_502::C2SRemedialSignInAct_502()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SRemedialSignInAct_502)
}

void C2SRemedialSignInAct_502::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SRemedialSignInAct_502::C2SRemedialSignInAct_502(const C2SRemedialSignInAct_502& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SRemedialSignInAct_502)
}

void C2SRemedialSignInAct_502::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SRemedialSignInAct_502::~C2SRemedialSignInAct_502() {
  // @@protoc_insertion_point(destructor:pb.C2SRemedialSignInAct_502)
  SharedDtor();
}

void C2SRemedialSignInAct_502::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SRemedialSignInAct_502::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SRemedialSignInAct_502::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SRemedialSignInAct_502_descriptor_;
}

const C2SRemedialSignInAct_502& C2SRemedialSignInAct_502::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SRemedialSignInAct_502* C2SRemedialSignInAct_502::default_instance_ = NULL;

C2SRemedialSignInAct_502* C2SRemedialSignInAct_502::New(::google::protobuf::Arena* arena) const {
  C2SRemedialSignInAct_502* n = new C2SRemedialSignInAct_502;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SRemedialSignInAct_502::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SRemedialSignInAct_502)
}

bool C2SRemedialSignInAct_502::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SRemedialSignInAct_502)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SRemedialSignInAct_502)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SRemedialSignInAct_502)
  return false;
#undef DO_
}

void C2SRemedialSignInAct_502::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SRemedialSignInAct_502)
  // @@protoc_insertion_point(serialize_end:pb.C2SRemedialSignInAct_502)
}

::google::protobuf::uint8* C2SRemedialSignInAct_502::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SRemedialSignInAct_502)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SRemedialSignInAct_502)
  return target;
}

int C2SRemedialSignInAct_502::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SRemedialSignInAct_502)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SRemedialSignInAct_502::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SRemedialSignInAct_502)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SRemedialSignInAct_502* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SRemedialSignInAct_502>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SRemedialSignInAct_502)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SRemedialSignInAct_502)
    MergeFrom(*source);
  }
}

void C2SRemedialSignInAct_502::MergeFrom(const C2SRemedialSignInAct_502& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SRemedialSignInAct_502)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SRemedialSignInAct_502::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SRemedialSignInAct_502)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SRemedialSignInAct_502::CopyFrom(const C2SRemedialSignInAct_502& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SRemedialSignInAct_502)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SRemedialSignInAct_502::IsInitialized() const {

  return true;
}

void C2SRemedialSignInAct_502::Swap(C2SRemedialSignInAct_502* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SRemedialSignInAct_502::InternalSwap(C2SRemedialSignInAct_502* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SRemedialSignInAct_502::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SRemedialSignInAct_502_descriptor_;
  metadata.reflection = C2SRemedialSignInAct_502_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SRemedialSignInAct_502

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CRemedialSignInAct_502::kRemedyCostFieldNumber;
const int S2CRemedialSignInAct_502::kRemedyTimesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CRemedialSignInAct_502::S2CRemedialSignInAct_502()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CRemedialSignInAct_502)
}

void S2CRemedialSignInAct_502::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CRemedialSignInAct_502::S2CRemedialSignInAct_502(const S2CRemedialSignInAct_502& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CRemedialSignInAct_502)
}

void S2CRemedialSignInAct_502::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  remedycost_ = 0u;
  remedytimes_ = 0u;
}

S2CRemedialSignInAct_502::~S2CRemedialSignInAct_502() {
  // @@protoc_insertion_point(destructor:pb.S2CRemedialSignInAct_502)
  SharedDtor();
}

void S2CRemedialSignInAct_502::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CRemedialSignInAct_502::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CRemedialSignInAct_502::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CRemedialSignInAct_502_descriptor_;
}

const S2CRemedialSignInAct_502& S2CRemedialSignInAct_502::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CRemedialSignInAct_502* S2CRemedialSignInAct_502::default_instance_ = NULL;

S2CRemedialSignInAct_502* S2CRemedialSignInAct_502::New(::google::protobuf::Arena* arena) const {
  S2CRemedialSignInAct_502* n = new S2CRemedialSignInAct_502;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CRemedialSignInAct_502::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CRemedialSignInAct_502)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CRemedialSignInAct_502, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CRemedialSignInAct_502*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(remedycost_, remedytimes_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2CRemedialSignInAct_502::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CRemedialSignInAct_502)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RemedyCost = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remedycost_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RemedyTimes;
        break;
      }

      // optional uint32 RemedyTimes = 2;
      case 2: {
        if (tag == 16) {
         parse_RemedyTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remedytimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CRemedialSignInAct_502)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CRemedialSignInAct_502)
  return false;
#undef DO_
}

void S2CRemedialSignInAct_502::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CRemedialSignInAct_502)
  // optional uint32 RemedyCost = 1;
  if (this->remedycost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->remedycost(), output);
  }

  // optional uint32 RemedyTimes = 2;
  if (this->remedytimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->remedytimes(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CRemedialSignInAct_502)
}

::google::protobuf::uint8* S2CRemedialSignInAct_502::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CRemedialSignInAct_502)
  // optional uint32 RemedyCost = 1;
  if (this->remedycost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->remedycost(), target);
  }

  // optional uint32 RemedyTimes = 2;
  if (this->remedytimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->remedytimes(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CRemedialSignInAct_502)
  return target;
}

int S2CRemedialSignInAct_502::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CRemedialSignInAct_502)
  int total_size = 0;

  // optional uint32 RemedyCost = 1;
  if (this->remedycost() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->remedycost());
  }

  // optional uint32 RemedyTimes = 2;
  if (this->remedytimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->remedytimes());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CRemedialSignInAct_502::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CRemedialSignInAct_502)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CRemedialSignInAct_502* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CRemedialSignInAct_502>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CRemedialSignInAct_502)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CRemedialSignInAct_502)
    MergeFrom(*source);
  }
}

void S2CRemedialSignInAct_502::MergeFrom(const S2CRemedialSignInAct_502& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CRemedialSignInAct_502)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.remedycost() != 0) {
    set_remedycost(from.remedycost());
  }
  if (from.remedytimes() != 0) {
    set_remedytimes(from.remedytimes());
  }
}

void S2CRemedialSignInAct_502::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CRemedialSignInAct_502)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CRemedialSignInAct_502::CopyFrom(const S2CRemedialSignInAct_502& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CRemedialSignInAct_502)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CRemedialSignInAct_502::IsInitialized() const {

  return true;
}

void S2CRemedialSignInAct_502::Swap(S2CRemedialSignInAct_502* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CRemedialSignInAct_502::InternalSwap(S2CRemedialSignInAct_502* other) {
  std::swap(remedycost_, other->remedycost_);
  std::swap(remedytimes_, other->remedytimes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CRemedialSignInAct_502::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CRemedialSignInAct_502_descriptor_;
  metadata.reflection = S2CRemedialSignInAct_502_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CRemedialSignInAct_502

// optional uint32 RemedyCost = 1;
void S2CRemedialSignInAct_502::clear_remedycost() {
  remedycost_ = 0u;
}
 ::google::protobuf::uint32 S2CRemedialSignInAct_502::remedycost() const {
  // @@protoc_insertion_point(field_get:pb.S2CRemedialSignInAct_502.RemedyCost)
  return remedycost_;
}
 void S2CRemedialSignInAct_502::set_remedycost(::google::protobuf::uint32 value) {
  
  remedycost_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CRemedialSignInAct_502.RemedyCost)
}

// optional uint32 RemedyTimes = 2;
void S2CRemedialSignInAct_502::clear_remedytimes() {
  remedytimes_ = 0u;
}
 ::google::protobuf::uint32 S2CRemedialSignInAct_502::remedytimes() const {
  // @@protoc_insertion_point(field_get:pb.S2CRemedialSignInAct_502.RemedyTimes)
  return remedytimes_;
}
 void S2CRemedialSignInAct_502::set_remedytimes(::google::protobuf::uint32 value) {
  
  remedytimes_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CRemedialSignInAct_502.RemedyTimes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CShowRedPoint_503::kIdFieldNumber;
const int S2CShowRedPoint_503::kTypeFieldNumber;
const int S2CShowRedPoint_503::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CShowRedPoint_503::S2CShowRedPoint_503()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CShowRedPoint_503)
}

void S2CShowRedPoint_503::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CShowRedPoint_503::S2CShowRedPoint_503(const S2CShowRedPoint_503& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CShowRedPoint_503)
}

void S2CShowRedPoint_503::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0u;
  type_ = 0u;
  num_ = 0u;
}

S2CShowRedPoint_503::~S2CShowRedPoint_503() {
  // @@protoc_insertion_point(destructor:pb.S2CShowRedPoint_503)
  SharedDtor();
}

void S2CShowRedPoint_503::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CShowRedPoint_503::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CShowRedPoint_503::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CShowRedPoint_503_descriptor_;
}

const S2CShowRedPoint_503& S2CShowRedPoint_503::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CShowRedPoint_503* S2CShowRedPoint_503::default_instance_ = NULL;

S2CShowRedPoint_503* S2CShowRedPoint_503::New(::google::protobuf::Arena* arena) const {
  S2CShowRedPoint_503* n = new S2CShowRedPoint_503;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CShowRedPoint_503::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CShowRedPoint_503)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CShowRedPoint_503, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CShowRedPoint_503*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, num_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2CShowRedPoint_503::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CShowRedPoint_503)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Type;
        break;
      }

      // optional uint32 Type = 2;
      case 2: {
        if (tag == 16) {
         parse_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 3;
      case 3: {
        if (tag == 24) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CShowRedPoint_503)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CShowRedPoint_503)
  return false;
#undef DO_
}

void S2CShowRedPoint_503::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CShowRedPoint_503)
  // optional uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 Type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // optional uint32 Num = 3;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CShowRedPoint_503)
}

::google::protobuf::uint8* S2CShowRedPoint_503::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CShowRedPoint_503)
  // optional uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 Type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // optional uint32 Num = 3;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CShowRedPoint_503)
  return target;
}

int S2CShowRedPoint_503::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CShowRedPoint_503)
  int total_size = 0;

  // optional uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // optional uint32 Type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // optional uint32 Num = 3;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CShowRedPoint_503::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CShowRedPoint_503)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CShowRedPoint_503* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CShowRedPoint_503>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CShowRedPoint_503)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CShowRedPoint_503)
    MergeFrom(*source);
  }
}

void S2CShowRedPoint_503::MergeFrom(const S2CShowRedPoint_503& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CShowRedPoint_503)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void S2CShowRedPoint_503::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CShowRedPoint_503)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CShowRedPoint_503::CopyFrom(const S2CShowRedPoint_503& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CShowRedPoint_503)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CShowRedPoint_503::IsInitialized() const {

  return true;
}

void S2CShowRedPoint_503::Swap(S2CShowRedPoint_503* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CShowRedPoint_503::InternalSwap(S2CShowRedPoint_503* other) {
  std::swap(id_, other->id_);
  std::swap(type_, other->type_);
  std::swap(num_, other->num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CShowRedPoint_503::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CShowRedPoint_503_descriptor_;
  metadata.reflection = S2CShowRedPoint_503_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CShowRedPoint_503

// optional uint32 Id = 1;
void S2CShowRedPoint_503::clear_id() {
  id_ = 0u;
}
 ::google::protobuf::uint32 S2CShowRedPoint_503::id() const {
  // @@protoc_insertion_point(field_get:pb.S2CShowRedPoint_503.Id)
  return id_;
}
 void S2CShowRedPoint_503::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CShowRedPoint_503.Id)
}

// optional uint32 Type = 2;
void S2CShowRedPoint_503::clear_type() {
  type_ = 0u;
}
 ::google::protobuf::uint32 S2CShowRedPoint_503::type() const {
  // @@protoc_insertion_point(field_get:pb.S2CShowRedPoint_503.Type)
  return type_;
}
 void S2CShowRedPoint_503::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CShowRedPoint_503.Type)
}

// optional uint32 Num = 3;
void S2CShowRedPoint_503::clear_num() {
  num_ = 0u;
}
 ::google::protobuf::uint32 S2CShowRedPoint_503::num() const {
  // @@protoc_insertion_point(field_get:pb.S2CShowRedPoint_503.Num)
  return num_;
}
 void S2CShowRedPoint_503::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CShowRedPoint_503.Num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetActDegree_520::C2SGetActDegree_520()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetActDegree_520)
}

void C2SGetActDegree_520::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetActDegree_520::C2SGetActDegree_520(const C2SGetActDegree_520& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetActDegree_520)
}

void C2SGetActDegree_520::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGetActDegree_520::~C2SGetActDegree_520() {
  // @@protoc_insertion_point(destructor:pb.C2SGetActDegree_520)
  SharedDtor();
}

void C2SGetActDegree_520::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetActDegree_520::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetActDegree_520::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetActDegree_520_descriptor_;
}

const C2SGetActDegree_520& C2SGetActDegree_520::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetActDegree_520* C2SGetActDegree_520::default_instance_ = NULL;

C2SGetActDegree_520* C2SGetActDegree_520::New(::google::protobuf::Arena* arena) const {
  C2SGetActDegree_520* n = new C2SGetActDegree_520;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetActDegree_520::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetActDegree_520)
}

bool C2SGetActDegree_520::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetActDegree_520)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetActDegree_520)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetActDegree_520)
  return false;
#undef DO_
}

void C2SGetActDegree_520::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetActDegree_520)
  // @@protoc_insertion_point(serialize_end:pb.C2SGetActDegree_520)
}

::google::protobuf::uint8* C2SGetActDegree_520::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetActDegree_520)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetActDegree_520)
  return target;
}

int C2SGetActDegree_520::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetActDegree_520)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetActDegree_520::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetActDegree_520)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetActDegree_520* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetActDegree_520>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetActDegree_520)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetActDegree_520)
    MergeFrom(*source);
  }
}

void C2SGetActDegree_520::MergeFrom(const C2SGetActDegree_520& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetActDegree_520)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SGetActDegree_520::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetActDegree_520)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetActDegree_520::CopyFrom(const C2SGetActDegree_520& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetActDegree_520)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetActDegree_520::IsInitialized() const {

  return true;
}

void C2SGetActDegree_520::Swap(C2SGetActDegree_520* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetActDegree_520::InternalSwap(C2SGetActDegree_520* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetActDegree_520::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetActDegree_520_descriptor_;
  metadata.reflection = C2SGetActDegree_520_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetActDegree_520

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActDegreeItem::kItemIdFieldNumber;
const int ActDegreeItem::kAchvTimesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActDegreeItem::ActDegreeItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ActDegreeItem)
}

void ActDegreeItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ActDegreeItem::ActDegreeItem(const ActDegreeItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.ActDegreeItem)
}

void ActDegreeItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  itemid_ = 0u;
  achvtimes_ = 0u;
}

ActDegreeItem::~ActDegreeItem() {
  // @@protoc_insertion_point(destructor:pb.ActDegreeItem)
  SharedDtor();
}

void ActDegreeItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActDegreeItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActDegreeItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActDegreeItem_descriptor_;
}

const ActDegreeItem& ActDegreeItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

ActDegreeItem* ActDegreeItem::default_instance_ = NULL;

ActDegreeItem* ActDegreeItem::New(::google::protobuf::Arena* arena) const {
  ActDegreeItem* n = new ActDegreeItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActDegreeItem::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ActDegreeItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ActDegreeItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ActDegreeItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(itemid_, achvtimes_);

#undef ZR_HELPER_
#undef ZR_

}

bool ActDegreeItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ActDegreeItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AchvTimes;
        break;
      }

      // optional uint32 AchvTimes = 2;
      case 2: {
        if (tag == 16) {
         parse_AchvTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &achvtimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ActDegreeItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ActDegreeItem)
  return false;
#undef DO_
}

void ActDegreeItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ActDegreeItem)
  // optional uint32 ItemId = 1;
  if (this->itemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 AchvTimes = 2;
  if (this->achvtimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->achvtimes(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.ActDegreeItem)
}

::google::protobuf::uint8* ActDegreeItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ActDegreeItem)
  // optional uint32 ItemId = 1;
  if (this->itemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 AchvTimes = 2;
  if (this->achvtimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->achvtimes(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.ActDegreeItem)
  return target;
}

int ActDegreeItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ActDegreeItem)
  int total_size = 0;

  // optional uint32 ItemId = 1;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemid());
  }

  // optional uint32 AchvTimes = 2;
  if (this->achvtimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->achvtimes());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActDegreeItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ActDegreeItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ActDegreeItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ActDegreeItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ActDegreeItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ActDegreeItem)
    MergeFrom(*source);
  }
}

void ActDegreeItem::MergeFrom(const ActDegreeItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ActDegreeItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.itemid() != 0) {
    set_itemid(from.itemid());
  }
  if (from.achvtimes() != 0) {
    set_achvtimes(from.achvtimes());
  }
}

void ActDegreeItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ActDegreeItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActDegreeItem::CopyFrom(const ActDegreeItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ActDegreeItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActDegreeItem::IsInitialized() const {

  return true;
}

void ActDegreeItem::Swap(ActDegreeItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActDegreeItem::InternalSwap(ActDegreeItem* other) {
  std::swap(itemid_, other->itemid_);
  std::swap(achvtimes_, other->achvtimes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActDegreeItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActDegreeItem_descriptor_;
  metadata.reflection = ActDegreeItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActDegreeItem

// optional uint32 ItemId = 1;
void ActDegreeItem::clear_itemid() {
  itemid_ = 0u;
}
 ::google::protobuf::uint32 ActDegreeItem::itemid() const {
  // @@protoc_insertion_point(field_get:pb.ActDegreeItem.ItemId)
  return itemid_;
}
 void ActDegreeItem::set_itemid(::google::protobuf::uint32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:pb.ActDegreeItem.ItemId)
}

// optional uint32 AchvTimes = 2;
void ActDegreeItem::clear_achvtimes() {
  achvtimes_ = 0u;
}
 ::google::protobuf::uint32 ActDegreeItem::achvtimes() const {
  // @@protoc_insertion_point(field_get:pb.ActDegreeItem.AchvTimes)
  return achvtimes_;
}
 void ActDegreeItem::set_achvtimes(::google::protobuf::uint32 value) {
  
  achvtimes_ = value;
  // @@protoc_insertion_point(field_set:pb.ActDegreeItem.AchvTimes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActDegreeAward::kActDegreeFieldNumber;
const int ActDegreeAward::kItemListFieldNumber;
const int ActDegreeAward::kIsGetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActDegreeAward::ActDegreeAward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ActDegreeAward)
}

void ActDegreeAward::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ActDegreeAward::ActDegreeAward(const ActDegreeAward& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.ActDegreeAward)
}

void ActDegreeAward::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  actdegree_ = 0u;
  isget_ = false;
}

ActDegreeAward::~ActDegreeAward() {
  // @@protoc_insertion_point(destructor:pb.ActDegreeAward)
  SharedDtor();
}

void ActDegreeAward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActDegreeAward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActDegreeAward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActDegreeAward_descriptor_;
}

const ActDegreeAward& ActDegreeAward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

ActDegreeAward* ActDegreeAward::default_instance_ = NULL;

ActDegreeAward* ActDegreeAward::New(::google::protobuf::Arena* arena) const {
  ActDegreeAward* n = new ActDegreeAward;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActDegreeAward::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ActDegreeAward)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ActDegreeAward, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ActDegreeAward*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(actdegree_, isget_);

#undef ZR_HELPER_
#undef ZR_

  itemlist_.Clear();
}

bool ActDegreeAward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ActDegreeAward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ActDegree = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &actdegree_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ItemList;
        break;
      }

      // repeated .pb.MallBagItemData ItemList = 2;
      case 2: {
        if (tag == 18) {
         parse_ItemList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_ItemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_itemlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_ItemList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_IsGet;
        break;
      }

      // optional bool IsGet = 3;
      case 3: {
        if (tag == 24) {
         parse_IsGet:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isget_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ActDegreeAward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ActDegreeAward)
  return false;
#undef DO_
}

void ActDegreeAward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ActDegreeAward)
  // optional uint32 ActDegree = 1;
  if (this->actdegree() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->actdegree(), output);
  }

  // repeated .pb.MallBagItemData ItemList = 2;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->itemlist(i), output);
  }

  // optional bool IsGet = 3;
  if (this->isget() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isget(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.ActDegreeAward)
}

::google::protobuf::uint8* ActDegreeAward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ActDegreeAward)
  // optional uint32 ActDegree = 1;
  if (this->actdegree() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->actdegree(), target);
  }

  // repeated .pb.MallBagItemData ItemList = 2;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->itemlist(i), false, target);
  }

  // optional bool IsGet = 3;
  if (this->isget() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isget(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.ActDegreeAward)
  return target;
}

int ActDegreeAward::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ActDegreeAward)
  int total_size = 0;

  // optional uint32 ActDegree = 1;
  if (this->actdegree() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->actdegree());
  }

  // optional bool IsGet = 3;
  if (this->isget() != 0) {
    total_size += 1 + 1;
  }

  // repeated .pb.MallBagItemData ItemList = 2;
  total_size += 1 * this->itemlist_size();
  for (int i = 0; i < this->itemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActDegreeAward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ActDegreeAward)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ActDegreeAward* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ActDegreeAward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ActDegreeAward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ActDegreeAward)
    MergeFrom(*source);
  }
}

void ActDegreeAward::MergeFrom(const ActDegreeAward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ActDegreeAward)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  itemlist_.MergeFrom(from.itemlist_);
  if (from.actdegree() != 0) {
    set_actdegree(from.actdegree());
  }
  if (from.isget() != 0) {
    set_isget(from.isget());
  }
}

void ActDegreeAward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ActDegreeAward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActDegreeAward::CopyFrom(const ActDegreeAward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ActDegreeAward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActDegreeAward::IsInitialized() const {

  return true;
}

void ActDegreeAward::Swap(ActDegreeAward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActDegreeAward::InternalSwap(ActDegreeAward* other) {
  std::swap(actdegree_, other->actdegree_);
  itemlist_.UnsafeArenaSwap(&other->itemlist_);
  std::swap(isget_, other->isget_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActDegreeAward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActDegreeAward_descriptor_;
  metadata.reflection = ActDegreeAward_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActDegreeAward

// optional uint32 ActDegree = 1;
void ActDegreeAward::clear_actdegree() {
  actdegree_ = 0u;
}
 ::google::protobuf::uint32 ActDegreeAward::actdegree() const {
  // @@protoc_insertion_point(field_get:pb.ActDegreeAward.ActDegree)
  return actdegree_;
}
 void ActDegreeAward::set_actdegree(::google::protobuf::uint32 value) {
  
  actdegree_ = value;
  // @@protoc_insertion_point(field_set:pb.ActDegreeAward.ActDegree)
}

// repeated .pb.MallBagItemData ItemList = 2;
int ActDegreeAward::itemlist_size() const {
  return itemlist_.size();
}
void ActDegreeAward::clear_itemlist() {
  itemlist_.Clear();
}
const ::pb::MallBagItemData& ActDegreeAward::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.ActDegreeAward.ItemList)
  return itemlist_.Get(index);
}
::pb::MallBagItemData* ActDegreeAward::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.ActDegreeAward.ItemList)
  return itemlist_.Mutable(index);
}
::pb::MallBagItemData* ActDegreeAward::add_itemlist() {
  // @@protoc_insertion_point(field_add:pb.ActDegreeAward.ItemList)
  return itemlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::MallBagItemData >*
ActDegreeAward::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.ActDegreeAward.ItemList)
  return &itemlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::MallBagItemData >&
ActDegreeAward::itemlist() const {
  // @@protoc_insertion_point(field_list:pb.ActDegreeAward.ItemList)
  return itemlist_;
}

// optional bool IsGet = 3;
void ActDegreeAward::clear_isget() {
  isget_ = false;
}
 bool ActDegreeAward::isget() const {
  // @@protoc_insertion_point(field_get:pb.ActDegreeAward.IsGet)
  return isget_;
}
 void ActDegreeAward::set_isget(bool value) {
  
  isget_ = value;
  // @@protoc_insertion_point(field_set:pb.ActDegreeAward.IsGet)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetActDegree_520::kDailyFieldNumber;
const int S2CGetActDegree_520::kWeeklyFieldNumber;
const int S2CGetActDegree_520::kItemListFieldNumber;
const int S2CGetActDegree_520::kDailyAwardFieldNumber;
const int S2CGetActDegree_520::kWeeklyAwardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetActDegree_520::S2CGetActDegree_520()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetActDegree_520)
}

void S2CGetActDegree_520::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetActDegree_520::S2CGetActDegree_520(const S2CGetActDegree_520& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetActDegree_520)
}

void S2CGetActDegree_520::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  daily_ = 0u;
  weekly_ = 0u;
}

S2CGetActDegree_520::~S2CGetActDegree_520() {
  // @@protoc_insertion_point(destructor:pb.S2CGetActDegree_520)
  SharedDtor();
}

void S2CGetActDegree_520::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetActDegree_520::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetActDegree_520::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetActDegree_520_descriptor_;
}

const S2CGetActDegree_520& S2CGetActDegree_520::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetActDegree_520* S2CGetActDegree_520::default_instance_ = NULL;

S2CGetActDegree_520* S2CGetActDegree_520::New(::google::protobuf::Arena* arena) const {
  S2CGetActDegree_520* n = new S2CGetActDegree_520;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetActDegree_520::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetActDegree_520)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CGetActDegree_520, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CGetActDegree_520*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(daily_, weekly_);

#undef ZR_HELPER_
#undef ZR_

  itemlist_.Clear();
  dailyaward_.Clear();
  weeklyaward_.Clear();
}

bool S2CGetActDegree_520::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetActDegree_520)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Daily = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &daily_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Weekly;
        break;
      }

      // optional uint32 Weekly = 2;
      case 2: {
        if (tag == 16) {
         parse_Weekly:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weekly_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ItemList;
        break;
      }

      // repeated .pb.ActDegreeItem ItemList = 3;
      case 3: {
        if (tag == 26) {
         parse_ItemList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_ItemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_itemlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_ItemList;
        if (input->ExpectTag(34)) goto parse_loop_DailyAward;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .pb.ActDegreeAward DailyAward = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_DailyAward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_dailyaward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_DailyAward;
        if (input->ExpectTag(42)) goto parse_loop_WeeklyAward;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .pb.ActDegreeAward WeeklyAward = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_WeeklyAward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_weeklyaward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_WeeklyAward;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetActDegree_520)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetActDegree_520)
  return false;
#undef DO_
}

void S2CGetActDegree_520::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetActDegree_520)
  // optional uint32 Daily = 1;
  if (this->daily() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->daily(), output);
  }

  // optional uint32 Weekly = 2;
  if (this->weekly() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->weekly(), output);
  }

  // repeated .pb.ActDegreeItem ItemList = 3;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->itemlist(i), output);
  }

  // repeated .pb.ActDegreeAward DailyAward = 4;
  for (unsigned int i = 0, n = this->dailyaward_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->dailyaward(i), output);
  }

  // repeated .pb.ActDegreeAward WeeklyAward = 5;
  for (unsigned int i = 0, n = this->weeklyaward_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->weeklyaward(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetActDegree_520)
}

::google::protobuf::uint8* S2CGetActDegree_520::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetActDegree_520)
  // optional uint32 Daily = 1;
  if (this->daily() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->daily(), target);
  }

  // optional uint32 Weekly = 2;
  if (this->weekly() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->weekly(), target);
  }

  // repeated .pb.ActDegreeItem ItemList = 3;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->itemlist(i), false, target);
  }

  // repeated .pb.ActDegreeAward DailyAward = 4;
  for (unsigned int i = 0, n = this->dailyaward_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->dailyaward(i), false, target);
  }

  // repeated .pb.ActDegreeAward WeeklyAward = 5;
  for (unsigned int i = 0, n = this->weeklyaward_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->weeklyaward(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetActDegree_520)
  return target;
}

int S2CGetActDegree_520::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetActDegree_520)
  int total_size = 0;

  // optional uint32 Daily = 1;
  if (this->daily() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->daily());
  }

  // optional uint32 Weekly = 2;
  if (this->weekly() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weekly());
  }

  // repeated .pb.ActDegreeItem ItemList = 3;
  total_size += 1 * this->itemlist_size();
  for (int i = 0; i < this->itemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemlist(i));
  }

  // repeated .pb.ActDegreeAward DailyAward = 4;
  total_size += 1 * this->dailyaward_size();
  for (int i = 0; i < this->dailyaward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dailyaward(i));
  }

  // repeated .pb.ActDegreeAward WeeklyAward = 5;
  total_size += 1 * this->weeklyaward_size();
  for (int i = 0; i < this->weeklyaward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->weeklyaward(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetActDegree_520::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetActDegree_520)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetActDegree_520* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetActDegree_520>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetActDegree_520)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetActDegree_520)
    MergeFrom(*source);
  }
}

void S2CGetActDegree_520::MergeFrom(const S2CGetActDegree_520& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetActDegree_520)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  itemlist_.MergeFrom(from.itemlist_);
  dailyaward_.MergeFrom(from.dailyaward_);
  weeklyaward_.MergeFrom(from.weeklyaward_);
  if (from.daily() != 0) {
    set_daily(from.daily());
  }
  if (from.weekly() != 0) {
    set_weekly(from.weekly());
  }
}

void S2CGetActDegree_520::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetActDegree_520)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetActDegree_520::CopyFrom(const S2CGetActDegree_520& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetActDegree_520)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetActDegree_520::IsInitialized() const {

  return true;
}

void S2CGetActDegree_520::Swap(S2CGetActDegree_520* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetActDegree_520::InternalSwap(S2CGetActDegree_520* other) {
  std::swap(daily_, other->daily_);
  std::swap(weekly_, other->weekly_);
  itemlist_.UnsafeArenaSwap(&other->itemlist_);
  dailyaward_.UnsafeArenaSwap(&other->dailyaward_);
  weeklyaward_.UnsafeArenaSwap(&other->weeklyaward_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetActDegree_520::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetActDegree_520_descriptor_;
  metadata.reflection = S2CGetActDegree_520_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetActDegree_520

// optional uint32 Daily = 1;
void S2CGetActDegree_520::clear_daily() {
  daily_ = 0u;
}
 ::google::protobuf::uint32 S2CGetActDegree_520::daily() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetActDegree_520.Daily)
  return daily_;
}
 void S2CGetActDegree_520::set_daily(::google::protobuf::uint32 value) {
  
  daily_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetActDegree_520.Daily)
}

// optional uint32 Weekly = 2;
void S2CGetActDegree_520::clear_weekly() {
  weekly_ = 0u;
}
 ::google::protobuf::uint32 S2CGetActDegree_520::weekly() const {
  // @@protoc_insertion_point(field_get:pb.S2CGetActDegree_520.Weekly)
  return weekly_;
}
 void S2CGetActDegree_520::set_weekly(::google::protobuf::uint32 value) {
  
  weekly_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CGetActDegree_520.Weekly)
}

// repeated .pb.ActDegreeItem ItemList = 3;
int S2CGetActDegree_520::itemlist_size() const {
  return itemlist_.size();
}
void S2CGetActDegree_520::clear_itemlist() {
  itemlist_.Clear();
}
const ::pb::ActDegreeItem& S2CGetActDegree_520::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetActDegree_520.ItemList)
  return itemlist_.Get(index);
}
::pb::ActDegreeItem* S2CGetActDegree_520::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetActDegree_520.ItemList)
  return itemlist_.Mutable(index);
}
::pb::ActDegreeItem* S2CGetActDegree_520::add_itemlist() {
  // @@protoc_insertion_point(field_add:pb.S2CGetActDegree_520.ItemList)
  return itemlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::ActDegreeItem >*
S2CGetActDegree_520::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetActDegree_520.ItemList)
  return &itemlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::ActDegreeItem >&
S2CGetActDegree_520::itemlist() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetActDegree_520.ItemList)
  return itemlist_;
}

// repeated .pb.ActDegreeAward DailyAward = 4;
int S2CGetActDegree_520::dailyaward_size() const {
  return dailyaward_.size();
}
void S2CGetActDegree_520::clear_dailyaward() {
  dailyaward_.Clear();
}
const ::pb::ActDegreeAward& S2CGetActDegree_520::dailyaward(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetActDegree_520.DailyAward)
  return dailyaward_.Get(index);
}
::pb::ActDegreeAward* S2CGetActDegree_520::mutable_dailyaward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetActDegree_520.DailyAward)
  return dailyaward_.Mutable(index);
}
::pb::ActDegreeAward* S2CGetActDegree_520::add_dailyaward() {
  // @@protoc_insertion_point(field_add:pb.S2CGetActDegree_520.DailyAward)
  return dailyaward_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::ActDegreeAward >*
S2CGetActDegree_520::mutable_dailyaward() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetActDegree_520.DailyAward)
  return &dailyaward_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::ActDegreeAward >&
S2CGetActDegree_520::dailyaward() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetActDegree_520.DailyAward)
  return dailyaward_;
}

// repeated .pb.ActDegreeAward WeeklyAward = 5;
int S2CGetActDegree_520::weeklyaward_size() const {
  return weeklyaward_.size();
}
void S2CGetActDegree_520::clear_weeklyaward() {
  weeklyaward_.Clear();
}
const ::pb::ActDegreeAward& S2CGetActDegree_520::weeklyaward(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetActDegree_520.WeeklyAward)
  return weeklyaward_.Get(index);
}
::pb::ActDegreeAward* S2CGetActDegree_520::mutable_weeklyaward(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetActDegree_520.WeeklyAward)
  return weeklyaward_.Mutable(index);
}
::pb::ActDegreeAward* S2CGetActDegree_520::add_weeklyaward() {
  // @@protoc_insertion_point(field_add:pb.S2CGetActDegree_520.WeeklyAward)
  return weeklyaward_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::ActDegreeAward >*
S2CGetActDegree_520::mutable_weeklyaward() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetActDegree_520.WeeklyAward)
  return &weeklyaward_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::ActDegreeAward >&
S2CGetActDegree_520::weeklyaward() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetActDegree_520.WeeklyAward)
  return weeklyaward_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CSyncActDegreeSched_521::kDailyFieldNumber;
const int S2CSyncActDegreeSched_521::kWeeklyFieldNumber;
const int S2CSyncActDegreeSched_521::kItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CSyncActDegreeSched_521::S2CSyncActDegreeSched_521()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CSyncActDegreeSched_521)
}

void S2CSyncActDegreeSched_521::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CSyncActDegreeSched_521::S2CSyncActDegreeSched_521(const S2CSyncActDegreeSched_521& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CSyncActDegreeSched_521)
}

void S2CSyncActDegreeSched_521::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  daily_ = 0u;
  weekly_ = 0u;
}

S2CSyncActDegreeSched_521::~S2CSyncActDegreeSched_521() {
  // @@protoc_insertion_point(destructor:pb.S2CSyncActDegreeSched_521)
  SharedDtor();
}

void S2CSyncActDegreeSched_521::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CSyncActDegreeSched_521::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CSyncActDegreeSched_521::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CSyncActDegreeSched_521_descriptor_;
}

const S2CSyncActDegreeSched_521& S2CSyncActDegreeSched_521::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CSyncActDegreeSched_521* S2CSyncActDegreeSched_521::default_instance_ = NULL;

S2CSyncActDegreeSched_521* S2CSyncActDegreeSched_521::New(::google::protobuf::Arena* arena) const {
  S2CSyncActDegreeSched_521* n = new S2CSyncActDegreeSched_521;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CSyncActDegreeSched_521::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CSyncActDegreeSched_521)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CSyncActDegreeSched_521, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CSyncActDegreeSched_521*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(daily_, weekly_);

#undef ZR_HELPER_
#undef ZR_

  itemlist_.Clear();
}

bool S2CSyncActDegreeSched_521::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CSyncActDegreeSched_521)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Daily = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &daily_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Weekly;
        break;
      }

      // optional uint32 Weekly = 2;
      case 2: {
        if (tag == 16) {
         parse_Weekly:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weekly_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ItemList;
        break;
      }

      // repeated .pb.ActDegreeItem ItemList = 3;
      case 3: {
        if (tag == 26) {
         parse_ItemList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_ItemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_itemlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_ItemList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CSyncActDegreeSched_521)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CSyncActDegreeSched_521)
  return false;
#undef DO_
}

void S2CSyncActDegreeSched_521::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CSyncActDegreeSched_521)
  // optional uint32 Daily = 1;
  if (this->daily() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->daily(), output);
  }

  // optional uint32 Weekly = 2;
  if (this->weekly() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->weekly(), output);
  }

  // repeated .pb.ActDegreeItem ItemList = 3;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->itemlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CSyncActDegreeSched_521)
}

::google::protobuf::uint8* S2CSyncActDegreeSched_521::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CSyncActDegreeSched_521)
  // optional uint32 Daily = 1;
  if (this->daily() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->daily(), target);
  }

  // optional uint32 Weekly = 2;
  if (this->weekly() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->weekly(), target);
  }

  // repeated .pb.ActDegreeItem ItemList = 3;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->itemlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CSyncActDegreeSched_521)
  return target;
}

int S2CSyncActDegreeSched_521::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CSyncActDegreeSched_521)
  int total_size = 0;

  // optional uint32 Daily = 1;
  if (this->daily() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->daily());
  }

  // optional uint32 Weekly = 2;
  if (this->weekly() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weekly());
  }

  // repeated .pb.ActDegreeItem ItemList = 3;
  total_size += 1 * this->itemlist_size();
  for (int i = 0; i < this->itemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CSyncActDegreeSched_521::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CSyncActDegreeSched_521)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CSyncActDegreeSched_521* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CSyncActDegreeSched_521>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CSyncActDegreeSched_521)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CSyncActDegreeSched_521)
    MergeFrom(*source);
  }
}

void S2CSyncActDegreeSched_521::MergeFrom(const S2CSyncActDegreeSched_521& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CSyncActDegreeSched_521)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  itemlist_.MergeFrom(from.itemlist_);
  if (from.daily() != 0) {
    set_daily(from.daily());
  }
  if (from.weekly() != 0) {
    set_weekly(from.weekly());
  }
}

void S2CSyncActDegreeSched_521::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CSyncActDegreeSched_521)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CSyncActDegreeSched_521::CopyFrom(const S2CSyncActDegreeSched_521& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CSyncActDegreeSched_521)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CSyncActDegreeSched_521::IsInitialized() const {

  return true;
}

void S2CSyncActDegreeSched_521::Swap(S2CSyncActDegreeSched_521* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CSyncActDegreeSched_521::InternalSwap(S2CSyncActDegreeSched_521* other) {
  std::swap(daily_, other->daily_);
  std::swap(weekly_, other->weekly_);
  itemlist_.UnsafeArenaSwap(&other->itemlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CSyncActDegreeSched_521::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CSyncActDegreeSched_521_descriptor_;
  metadata.reflection = S2CSyncActDegreeSched_521_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CSyncActDegreeSched_521

// optional uint32 Daily = 1;
void S2CSyncActDegreeSched_521::clear_daily() {
  daily_ = 0u;
}
 ::google::protobuf::uint32 S2CSyncActDegreeSched_521::daily() const {
  // @@protoc_insertion_point(field_get:pb.S2CSyncActDegreeSched_521.Daily)
  return daily_;
}
 void S2CSyncActDegreeSched_521::set_daily(::google::protobuf::uint32 value) {
  
  daily_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CSyncActDegreeSched_521.Daily)
}

// optional uint32 Weekly = 2;
void S2CSyncActDegreeSched_521::clear_weekly() {
  weekly_ = 0u;
}
 ::google::protobuf::uint32 S2CSyncActDegreeSched_521::weekly() const {
  // @@protoc_insertion_point(field_get:pb.S2CSyncActDegreeSched_521.Weekly)
  return weekly_;
}
 void S2CSyncActDegreeSched_521::set_weekly(::google::protobuf::uint32 value) {
  
  weekly_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CSyncActDegreeSched_521.Weekly)
}

// repeated .pb.ActDegreeItem ItemList = 3;
int S2CSyncActDegreeSched_521::itemlist_size() const {
  return itemlist_.size();
}
void S2CSyncActDegreeSched_521::clear_itemlist() {
  itemlist_.Clear();
}
const ::pb::ActDegreeItem& S2CSyncActDegreeSched_521::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CSyncActDegreeSched_521.ItemList)
  return itemlist_.Get(index);
}
::pb::ActDegreeItem* S2CSyncActDegreeSched_521::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CSyncActDegreeSched_521.ItemList)
  return itemlist_.Mutable(index);
}
::pb::ActDegreeItem* S2CSyncActDegreeSched_521::add_itemlist() {
  // @@protoc_insertion_point(field_add:pb.S2CSyncActDegreeSched_521.ItemList)
  return itemlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::ActDegreeItem >*
S2CSyncActDegreeSched_521::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CSyncActDegreeSched_521.ItemList)
  return &itemlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::ActDegreeItem >&
S2CSyncActDegreeSched_521::itemlist() const {
  // @@protoc_insertion_point(field_list:pb.S2CSyncActDegreeSched_521.ItemList)
  return itemlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SRecvActDegreeAward_522::kTypeFieldNumber;
const int C2SRecvActDegreeAward_522::kDegreeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SRecvActDegreeAward_522::C2SRecvActDegreeAward_522()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SRecvActDegreeAward_522)
}

void C2SRecvActDegreeAward_522::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SRecvActDegreeAward_522::C2SRecvActDegreeAward_522(const C2SRecvActDegreeAward_522& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SRecvActDegreeAward_522)
}

void C2SRecvActDegreeAward_522::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  type_ = 0u;
  degree_ = 0u;
}

C2SRecvActDegreeAward_522::~C2SRecvActDegreeAward_522() {
  // @@protoc_insertion_point(destructor:pb.C2SRecvActDegreeAward_522)
  SharedDtor();
}

void C2SRecvActDegreeAward_522::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SRecvActDegreeAward_522::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SRecvActDegreeAward_522::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SRecvActDegreeAward_522_descriptor_;
}

const C2SRecvActDegreeAward_522& C2SRecvActDegreeAward_522::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SRecvActDegreeAward_522* C2SRecvActDegreeAward_522::default_instance_ = NULL;

C2SRecvActDegreeAward_522* C2SRecvActDegreeAward_522::New(::google::protobuf::Arena* arena) const {
  C2SRecvActDegreeAward_522* n = new C2SRecvActDegreeAward_522;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SRecvActDegreeAward_522::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SRecvActDegreeAward_522)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(C2SRecvActDegreeAward_522, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<C2SRecvActDegreeAward_522*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, degree_);

#undef ZR_HELPER_
#undef ZR_

}

bool C2SRecvActDegreeAward_522::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SRecvActDegreeAward_522)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Degree;
        break;
      }

      // optional uint32 Degree = 2;
      case 2: {
        if (tag == 16) {
         parse_Degree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &degree_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SRecvActDegreeAward_522)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SRecvActDegreeAward_522)
  return false;
#undef DO_
}

void C2SRecvActDegreeAward_522::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SRecvActDegreeAward_522)
  // optional uint32 Type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional uint32 Degree = 2;
  if (this->degree() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->degree(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SRecvActDegreeAward_522)
}

::google::protobuf::uint8* C2SRecvActDegreeAward_522::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SRecvActDegreeAward_522)
  // optional uint32 Type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional uint32 Degree = 2;
  if (this->degree() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->degree(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SRecvActDegreeAward_522)
  return target;
}

int C2SRecvActDegreeAward_522::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SRecvActDegreeAward_522)
  int total_size = 0;

  // optional uint32 Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // optional uint32 Degree = 2;
  if (this->degree() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->degree());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SRecvActDegreeAward_522::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SRecvActDegreeAward_522)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SRecvActDegreeAward_522* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SRecvActDegreeAward_522>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SRecvActDegreeAward_522)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SRecvActDegreeAward_522)
    MergeFrom(*source);
  }
}

void C2SRecvActDegreeAward_522::MergeFrom(const C2SRecvActDegreeAward_522& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SRecvActDegreeAward_522)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.degree() != 0) {
    set_degree(from.degree());
  }
}

void C2SRecvActDegreeAward_522::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SRecvActDegreeAward_522)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SRecvActDegreeAward_522::CopyFrom(const C2SRecvActDegreeAward_522& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SRecvActDegreeAward_522)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SRecvActDegreeAward_522::IsInitialized() const {

  return true;
}

void C2SRecvActDegreeAward_522::Swap(C2SRecvActDegreeAward_522* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SRecvActDegreeAward_522::InternalSwap(C2SRecvActDegreeAward_522* other) {
  std::swap(type_, other->type_);
  std::swap(degree_, other->degree_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SRecvActDegreeAward_522::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SRecvActDegreeAward_522_descriptor_;
  metadata.reflection = C2SRecvActDegreeAward_522_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SRecvActDegreeAward_522

// optional uint32 Type = 1;
void C2SRecvActDegreeAward_522::clear_type() {
  type_ = 0u;
}
 ::google::protobuf::uint32 C2SRecvActDegreeAward_522::type() const {
  // @@protoc_insertion_point(field_get:pb.C2SRecvActDegreeAward_522.Type)
  return type_;
}
 void C2SRecvActDegreeAward_522::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SRecvActDegreeAward_522.Type)
}

// optional uint32 Degree = 2;
void C2SRecvActDegreeAward_522::clear_degree() {
  degree_ = 0u;
}
 ::google::protobuf::uint32 C2SRecvActDegreeAward_522::degree() const {
  // @@protoc_insertion_point(field_get:pb.C2SRecvActDegreeAward_522.Degree)
  return degree_;
}
 void C2SRecvActDegreeAward_522::set_degree(::google::protobuf::uint32 value) {
  
  degree_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SRecvActDegreeAward_522.Degree)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CRecvActDegreeAward_522::kTypeFieldNumber;
const int S2CRecvActDegreeAward_522::kDegreeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CRecvActDegreeAward_522::S2CRecvActDegreeAward_522()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CRecvActDegreeAward_522)
}

void S2CRecvActDegreeAward_522::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CRecvActDegreeAward_522::S2CRecvActDegreeAward_522(const S2CRecvActDegreeAward_522& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CRecvActDegreeAward_522)
}

void S2CRecvActDegreeAward_522::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  type_ = 0u;
  degree_ = 0u;
}

S2CRecvActDegreeAward_522::~S2CRecvActDegreeAward_522() {
  // @@protoc_insertion_point(destructor:pb.S2CRecvActDegreeAward_522)
  SharedDtor();
}

void S2CRecvActDegreeAward_522::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CRecvActDegreeAward_522::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CRecvActDegreeAward_522::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CRecvActDegreeAward_522_descriptor_;
}

const S2CRecvActDegreeAward_522& S2CRecvActDegreeAward_522::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CRecvActDegreeAward_522* S2CRecvActDegreeAward_522::default_instance_ = NULL;

S2CRecvActDegreeAward_522* S2CRecvActDegreeAward_522::New(::google::protobuf::Arena* arena) const {
  S2CRecvActDegreeAward_522* n = new S2CRecvActDegreeAward_522;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CRecvActDegreeAward_522::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CRecvActDegreeAward_522)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CRecvActDegreeAward_522, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CRecvActDegreeAward_522*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, degree_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2CRecvActDegreeAward_522::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CRecvActDegreeAward_522)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Degree;
        break;
      }

      // optional uint32 Degree = 2;
      case 2: {
        if (tag == 16) {
         parse_Degree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &degree_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CRecvActDegreeAward_522)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CRecvActDegreeAward_522)
  return false;
#undef DO_
}

void S2CRecvActDegreeAward_522::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CRecvActDegreeAward_522)
  // optional uint32 Type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional uint32 Degree = 2;
  if (this->degree() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->degree(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CRecvActDegreeAward_522)
}

::google::protobuf::uint8* S2CRecvActDegreeAward_522::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CRecvActDegreeAward_522)
  // optional uint32 Type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional uint32 Degree = 2;
  if (this->degree() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->degree(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CRecvActDegreeAward_522)
  return target;
}

int S2CRecvActDegreeAward_522::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CRecvActDegreeAward_522)
  int total_size = 0;

  // optional uint32 Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // optional uint32 Degree = 2;
  if (this->degree() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->degree());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CRecvActDegreeAward_522::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CRecvActDegreeAward_522)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CRecvActDegreeAward_522* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CRecvActDegreeAward_522>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CRecvActDegreeAward_522)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CRecvActDegreeAward_522)
    MergeFrom(*source);
  }
}

void S2CRecvActDegreeAward_522::MergeFrom(const S2CRecvActDegreeAward_522& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CRecvActDegreeAward_522)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.degree() != 0) {
    set_degree(from.degree());
  }
}

void S2CRecvActDegreeAward_522::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CRecvActDegreeAward_522)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CRecvActDegreeAward_522::CopyFrom(const S2CRecvActDegreeAward_522& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CRecvActDegreeAward_522)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CRecvActDegreeAward_522::IsInitialized() const {

  return true;
}

void S2CRecvActDegreeAward_522::Swap(S2CRecvActDegreeAward_522* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CRecvActDegreeAward_522::InternalSwap(S2CRecvActDegreeAward_522* other) {
  std::swap(type_, other->type_);
  std::swap(degree_, other->degree_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CRecvActDegreeAward_522::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CRecvActDegreeAward_522_descriptor_;
  metadata.reflection = S2CRecvActDegreeAward_522_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CRecvActDegreeAward_522

// optional uint32 Type = 1;
void S2CRecvActDegreeAward_522::clear_type() {
  type_ = 0u;
}
 ::google::protobuf::uint32 S2CRecvActDegreeAward_522::type() const {
  // @@protoc_insertion_point(field_get:pb.S2CRecvActDegreeAward_522.Type)
  return type_;
}
 void S2CRecvActDegreeAward_522::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CRecvActDegreeAward_522.Type)
}

// optional uint32 Degree = 2;
void S2CRecvActDegreeAward_522::clear_degree() {
  degree_ = 0u;
}
 ::google::protobuf::uint32 S2CRecvActDegreeAward_522::degree() const {
  // @@protoc_insertion_point(field_get:pb.S2CRecvActDegreeAward_522.Degree)
  return degree_;
}
 void S2CRecvActDegreeAward_522::set_degree(::google::protobuf::uint32 value) {
  
  degree_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CRecvActDegreeAward_522.Degree)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetCommonAct_540::C2SGetCommonAct_540()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetCommonAct_540)
}

void C2SGetCommonAct_540::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetCommonAct_540::C2SGetCommonAct_540(const C2SGetCommonAct_540& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetCommonAct_540)
}

void C2SGetCommonAct_540::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGetCommonAct_540::~C2SGetCommonAct_540() {
  // @@protoc_insertion_point(destructor:pb.C2SGetCommonAct_540)
  SharedDtor();
}

void C2SGetCommonAct_540::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetCommonAct_540::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetCommonAct_540::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetCommonAct_540_descriptor_;
}

const C2SGetCommonAct_540& C2SGetCommonAct_540::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetCommonAct_540* C2SGetCommonAct_540::default_instance_ = NULL;

C2SGetCommonAct_540* C2SGetCommonAct_540::New(::google::protobuf::Arena* arena) const {
  C2SGetCommonAct_540* n = new C2SGetCommonAct_540;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetCommonAct_540::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetCommonAct_540)
}

bool C2SGetCommonAct_540::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetCommonAct_540)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetCommonAct_540)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetCommonAct_540)
  return false;
#undef DO_
}

void C2SGetCommonAct_540::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetCommonAct_540)
  // @@protoc_insertion_point(serialize_end:pb.C2SGetCommonAct_540)
}

::google::protobuf::uint8* C2SGetCommonAct_540::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetCommonAct_540)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetCommonAct_540)
  return target;
}

int C2SGetCommonAct_540::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetCommonAct_540)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetCommonAct_540::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetCommonAct_540)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetCommonAct_540* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetCommonAct_540>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetCommonAct_540)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetCommonAct_540)
    MergeFrom(*source);
  }
}

void C2SGetCommonAct_540::MergeFrom(const C2SGetCommonAct_540& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetCommonAct_540)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SGetCommonAct_540::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetCommonAct_540)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetCommonAct_540::CopyFrom(const C2SGetCommonAct_540& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetCommonAct_540)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetCommonAct_540::IsInitialized() const {

  return true;
}

void C2SGetCommonAct_540::Swap(C2SGetCommonAct_540* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetCommonAct_540::InternalSwap(C2SGetCommonAct_540* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetCommonAct_540::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetCommonAct_540_descriptor_;
  metadata.reflection = C2SGetCommonAct_540_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetCommonAct_540

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommonAct::kIdFieldNumber;
const int CommonAct::kNameFieldNumber;
const int CommonAct::kBeginTimeFieldNumber;
const int CommonAct::kEndTimeFieldNumber;
const int CommonAct::kDescFieldNumber;
const int CommonAct::kSubListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommonAct::CommonAct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CommonAct)
}

void CommonAct::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CommonAct::CommonAct(const CommonAct& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.CommonAct)
}

void CommonAct::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0u;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  begintime_ = 0u;
  endtime_ = 0u;
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CommonAct::~CommonAct() {
  // @@protoc_insertion_point(destructor:pb.CommonAct)
  SharedDtor();
}

void CommonAct::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CommonAct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommonAct::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommonAct_descriptor_;
}

const CommonAct& CommonAct::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

CommonAct* CommonAct::default_instance_ = NULL;

CommonAct* CommonAct::New(::google::protobuf::Arena* arena) const {
  CommonAct* n = new CommonAct;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommonAct::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CommonAct)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CommonAct, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CommonAct*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, begintime_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endtime_ = 0u;
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  sublist_.Clear();
}

bool CommonAct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CommonAct)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Name;
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (tag == 18) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CommonAct.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BeginTime;
        break;
      }

      // optional uint32 BeginTime = 3;
      case 3: {
        if (tag == 24) {
         parse_BeginTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &begintime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_EndTime;
        break;
      }

      // optional uint32 EndTime = 4;
      case 4: {
        if (tag == 32) {
         parse_EndTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &endtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Desc;
        break;
      }

      // optional string Desc = 5;
      case 5: {
        if (tag == 42) {
         parse_Desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CommonAct.Desc"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_SubList;
        break;
      }

      // repeated .pb.CommonSubAct SubList = 6;
      case 6: {
        if (tag == 50) {
         parse_SubList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_SubList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_sublist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_SubList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CommonAct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CommonAct)
  return false;
#undef DO_
}

void CommonAct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CommonAct)
  // optional uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CommonAct.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional uint32 BeginTime = 3;
  if (this->begintime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->begintime(), output);
  }

  // optional uint32 EndTime = 4;
  if (this->endtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->endtime(), output);
  }

  // optional string Desc = 5;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CommonAct.Desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->desc(), output);
  }

  // repeated .pb.CommonSubAct SubList = 6;
  for (unsigned int i = 0, n = this->sublist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->sublist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.CommonAct)
}

::google::protobuf::uint8* CommonAct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CommonAct)
  // optional uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CommonAct.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional uint32 BeginTime = 3;
  if (this->begintime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->begintime(), target);
  }

  // optional uint32 EndTime = 4;
  if (this->endtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->endtime(), target);
  }

  // optional string Desc = 5;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CommonAct.Desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->desc(), target);
  }

  // repeated .pb.CommonSubAct SubList = 6;
  for (unsigned int i = 0, n = this->sublist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->sublist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.CommonAct)
  return target;
}

int CommonAct::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CommonAct)
  int total_size = 0;

  // optional uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional uint32 BeginTime = 3;
  if (this->begintime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->begintime());
  }

  // optional uint32 EndTime = 4;
  if (this->endtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->endtime());
  }

  // optional string Desc = 5;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  // repeated .pb.CommonSubAct SubList = 6;
  total_size += 1 * this->sublist_size();
  for (int i = 0; i < this->sublist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sublist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommonAct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CommonAct)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CommonAct* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CommonAct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CommonAct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CommonAct)
    MergeFrom(*source);
  }
}

void CommonAct::MergeFrom(const CommonAct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CommonAct)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  sublist_.MergeFrom(from.sublist_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.begintime() != 0) {
    set_begintime(from.begintime());
  }
  if (from.endtime() != 0) {
    set_endtime(from.endtime());
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
}

void CommonAct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CommonAct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonAct::CopyFrom(const CommonAct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CommonAct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonAct::IsInitialized() const {

  return true;
}

void CommonAct::Swap(CommonAct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonAct::InternalSwap(CommonAct* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  std::swap(begintime_, other->begintime_);
  std::swap(endtime_, other->endtime_);
  desc_.Swap(&other->desc_);
  sublist_.UnsafeArenaSwap(&other->sublist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommonAct::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommonAct_descriptor_;
  metadata.reflection = CommonAct_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommonAct

// optional uint32 Id = 1;
void CommonAct::clear_id() {
  id_ = 0u;
}
 ::google::protobuf::uint32 CommonAct::id() const {
  // @@protoc_insertion_point(field_get:pb.CommonAct.Id)
  return id_;
}
 void CommonAct::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.CommonAct.Id)
}

// optional string Name = 2;
void CommonAct::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CommonAct::name() const {
  // @@protoc_insertion_point(field_get:pb.CommonAct.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CommonAct::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CommonAct.Name)
}
 void CommonAct::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CommonAct.Name)
}
 void CommonAct::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CommonAct.Name)
}
 ::std::string* CommonAct::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.CommonAct.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CommonAct::release_name() {
  // @@protoc_insertion_point(field_release:pb.CommonAct.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CommonAct::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.CommonAct.Name)
}

// optional uint32 BeginTime = 3;
void CommonAct::clear_begintime() {
  begintime_ = 0u;
}
 ::google::protobuf::uint32 CommonAct::begintime() const {
  // @@protoc_insertion_point(field_get:pb.CommonAct.BeginTime)
  return begintime_;
}
 void CommonAct::set_begintime(::google::protobuf::uint32 value) {
  
  begintime_ = value;
  // @@protoc_insertion_point(field_set:pb.CommonAct.BeginTime)
}

// optional uint32 EndTime = 4;
void CommonAct::clear_endtime() {
  endtime_ = 0u;
}
 ::google::protobuf::uint32 CommonAct::endtime() const {
  // @@protoc_insertion_point(field_get:pb.CommonAct.EndTime)
  return endtime_;
}
 void CommonAct::set_endtime(::google::protobuf::uint32 value) {
  
  endtime_ = value;
  // @@protoc_insertion_point(field_set:pb.CommonAct.EndTime)
}

// optional string Desc = 5;
void CommonAct::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CommonAct::desc() const {
  // @@protoc_insertion_point(field_get:pb.CommonAct.Desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CommonAct::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CommonAct.Desc)
}
 void CommonAct::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CommonAct.Desc)
}
 void CommonAct::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CommonAct.Desc)
}
 ::std::string* CommonAct::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:pb.CommonAct.Desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CommonAct::release_desc() {
  // @@protoc_insertion_point(field_release:pb.CommonAct.Desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CommonAct::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:pb.CommonAct.Desc)
}

// repeated .pb.CommonSubAct SubList = 6;
int CommonAct::sublist_size() const {
  return sublist_.size();
}
void CommonAct::clear_sublist() {
  sublist_.Clear();
}
const ::pb::CommonSubAct& CommonAct::sublist(int index) const {
  // @@protoc_insertion_point(field_get:pb.CommonAct.SubList)
  return sublist_.Get(index);
}
::pb::CommonSubAct* CommonAct::mutable_sublist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.CommonAct.SubList)
  return sublist_.Mutable(index);
}
::pb::CommonSubAct* CommonAct::add_sublist() {
  // @@protoc_insertion_point(field_add:pb.CommonAct.SubList)
  return sublist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::CommonSubAct >*
CommonAct::mutable_sublist() {
  // @@protoc_insertion_point(field_mutable_list:pb.CommonAct.SubList)
  return &sublist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::CommonSubAct >&
CommonAct::sublist() const {
  // @@protoc_insertion_point(field_list:pb.CommonAct.SubList)
  return sublist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommonSubAct::kIdFieldNumber;
const int CommonSubAct::kWordingFieldNumber;
const int CommonSubAct::kAwardListFieldNumber;
const int CommonSubAct::kLimitTimesFieldNumber;
const int CommonSubAct::kAchvTimesFieldNumber;
const int CommonSubAct::kIsGetFieldNumber;
const int CommonSubAct::kCondIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommonSubAct::CommonSubAct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CommonSubAct)
}

void CommonSubAct::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CommonSubAct::CommonSubAct(const CommonSubAct& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.CommonSubAct)
}

void CommonSubAct::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0u;
  wording_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  limittimes_ = 0u;
  achvtimes_ = 0u;
  isget_ = false;
  condid_ = 0u;
}

CommonSubAct::~CommonSubAct() {
  // @@protoc_insertion_point(destructor:pb.CommonSubAct)
  SharedDtor();
}

void CommonSubAct::SharedDtor() {
  wording_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CommonSubAct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommonSubAct::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommonSubAct_descriptor_;
}

const CommonSubAct& CommonSubAct::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

CommonSubAct* CommonSubAct::default_instance_ = NULL;

CommonSubAct* CommonSubAct::New(::google::protobuf::Arena* arena) const {
  CommonSubAct* n = new CommonSubAct;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommonSubAct::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CommonSubAct)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CommonSubAct, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CommonSubAct*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, limittimes_);
  ZR_(achvtimes_, condid_);
  wording_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  awardlist_.Clear();
}

bool CommonSubAct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CommonSubAct)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Wording;
        break;
      }

      // optional string Wording = 2;
      case 2: {
        if (tag == 18) {
         parse_Wording:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wording()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wording().data(), this->wording().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.CommonSubAct.Wording"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_AwardList;
        break;
      }

      // repeated .pb.MallBagItemData AwardList = 3;
      case 3: {
        if (tag == 26) {
         parse_AwardList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_AwardList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_awardlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_AwardList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_LimitTimes;
        break;
      }

      // optional uint32 LimitTimes = 4;
      case 4: {
        if (tag == 32) {
         parse_LimitTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limittimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_AchvTimes;
        break;
      }

      // optional uint32 AchvTimes = 5;
      case 5: {
        if (tag == 40) {
         parse_AchvTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &achvtimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_IsGet;
        break;
      }

      // optional bool IsGet = 6;
      case 6: {
        if (tag == 48) {
         parse_IsGet:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isget_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_CondId;
        break;
      }

      // optional uint32 CondId = 7;
      case 7: {
        if (tag == 56) {
         parse_CondId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &condid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CommonSubAct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CommonSubAct)
  return false;
#undef DO_
}

void CommonSubAct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CommonSubAct)
  // optional uint32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional string Wording = 2;
  if (this->wording().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wording().data(), this->wording().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CommonSubAct.Wording");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->wording(), output);
  }

  // repeated .pb.MallBagItemData AwardList = 3;
  for (unsigned int i = 0, n = this->awardlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->awardlist(i), output);
  }

  // optional uint32 LimitTimes = 4;
  if (this->limittimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->limittimes(), output);
  }

  // optional uint32 AchvTimes = 5;
  if (this->achvtimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->achvtimes(), output);
  }

  // optional bool IsGet = 6;
  if (this->isget() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->isget(), output);
  }

  // optional uint32 CondId = 7;
  if (this->condid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->condid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.CommonSubAct)
}

::google::protobuf::uint8* CommonSubAct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CommonSubAct)
  // optional uint32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional string Wording = 2;
  if (this->wording().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wording().data(), this->wording().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.CommonSubAct.Wording");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->wording(), target);
  }

  // repeated .pb.MallBagItemData AwardList = 3;
  for (unsigned int i = 0, n = this->awardlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->awardlist(i), false, target);
  }

  // optional uint32 LimitTimes = 4;
  if (this->limittimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->limittimes(), target);
  }

  // optional uint32 AchvTimes = 5;
  if (this->achvtimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->achvtimes(), target);
  }

  // optional bool IsGet = 6;
  if (this->isget() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->isget(), target);
  }

  // optional uint32 CondId = 7;
  if (this->condid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->condid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.CommonSubAct)
  return target;
}

int CommonSubAct::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CommonSubAct)
  int total_size = 0;

  // optional uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // optional string Wording = 2;
  if (this->wording().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wording());
  }

  // optional uint32 LimitTimes = 4;
  if (this->limittimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limittimes());
  }

  // optional uint32 AchvTimes = 5;
  if (this->achvtimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->achvtimes());
  }

  // optional bool IsGet = 6;
  if (this->isget() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 CondId = 7;
  if (this->condid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->condid());
  }

  // repeated .pb.MallBagItemData AwardList = 3;
  total_size += 1 * this->awardlist_size();
  for (int i = 0; i < this->awardlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->awardlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommonSubAct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CommonSubAct)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CommonSubAct* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CommonSubAct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CommonSubAct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CommonSubAct)
    MergeFrom(*source);
  }
}

void CommonSubAct::MergeFrom(const CommonSubAct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CommonSubAct)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  awardlist_.MergeFrom(from.awardlist_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.wording().size() > 0) {

    wording_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wording_);
  }
  if (from.limittimes() != 0) {
    set_limittimes(from.limittimes());
  }
  if (from.achvtimes() != 0) {
    set_achvtimes(from.achvtimes());
  }
  if (from.isget() != 0) {
    set_isget(from.isget());
  }
  if (from.condid() != 0) {
    set_condid(from.condid());
  }
}

void CommonSubAct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CommonSubAct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonSubAct::CopyFrom(const CommonSubAct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CommonSubAct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonSubAct::IsInitialized() const {

  return true;
}

void CommonSubAct::Swap(CommonSubAct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonSubAct::InternalSwap(CommonSubAct* other) {
  std::swap(id_, other->id_);
  wording_.Swap(&other->wording_);
  awardlist_.UnsafeArenaSwap(&other->awardlist_);
  std::swap(limittimes_, other->limittimes_);
  std::swap(achvtimes_, other->achvtimes_);
  std::swap(isget_, other->isget_);
  std::swap(condid_, other->condid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommonSubAct::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommonSubAct_descriptor_;
  metadata.reflection = CommonSubAct_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommonSubAct

// optional uint32 Id = 1;
void CommonSubAct::clear_id() {
  id_ = 0u;
}
 ::google::protobuf::uint32 CommonSubAct::id() const {
  // @@protoc_insertion_point(field_get:pb.CommonSubAct.Id)
  return id_;
}
 void CommonSubAct::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.CommonSubAct.Id)
}

// optional string Wording = 2;
void CommonSubAct::clear_wording() {
  wording_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CommonSubAct::wording() const {
  // @@protoc_insertion_point(field_get:pb.CommonSubAct.Wording)
  return wording_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CommonSubAct::set_wording(const ::std::string& value) {
  
  wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.CommonSubAct.Wording)
}
 void CommonSubAct::set_wording(const char* value) {
  
  wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.CommonSubAct.Wording)
}
 void CommonSubAct::set_wording(const char* value, size_t size) {
  
  wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.CommonSubAct.Wording)
}
 ::std::string* CommonSubAct::mutable_wording() {
  
  // @@protoc_insertion_point(field_mutable:pb.CommonSubAct.Wording)
  return wording_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CommonSubAct::release_wording() {
  // @@protoc_insertion_point(field_release:pb.CommonSubAct.Wording)
  
  return wording_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CommonSubAct::set_allocated_wording(::std::string* wording) {
  if (wording != NULL) {
    
  } else {
    
  }
  wording_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wording);
  // @@protoc_insertion_point(field_set_allocated:pb.CommonSubAct.Wording)
}

// repeated .pb.MallBagItemData AwardList = 3;
int CommonSubAct::awardlist_size() const {
  return awardlist_.size();
}
void CommonSubAct::clear_awardlist() {
  awardlist_.Clear();
}
const ::pb::MallBagItemData& CommonSubAct::awardlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.CommonSubAct.AwardList)
  return awardlist_.Get(index);
}
::pb::MallBagItemData* CommonSubAct::mutable_awardlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.CommonSubAct.AwardList)
  return awardlist_.Mutable(index);
}
::pb::MallBagItemData* CommonSubAct::add_awardlist() {
  // @@protoc_insertion_point(field_add:pb.CommonSubAct.AwardList)
  return awardlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::MallBagItemData >*
CommonSubAct::mutable_awardlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.CommonSubAct.AwardList)
  return &awardlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::MallBagItemData >&
CommonSubAct::awardlist() const {
  // @@protoc_insertion_point(field_list:pb.CommonSubAct.AwardList)
  return awardlist_;
}

// optional uint32 LimitTimes = 4;
void CommonSubAct::clear_limittimes() {
  limittimes_ = 0u;
}
 ::google::protobuf::uint32 CommonSubAct::limittimes() const {
  // @@protoc_insertion_point(field_get:pb.CommonSubAct.LimitTimes)
  return limittimes_;
}
 void CommonSubAct::set_limittimes(::google::protobuf::uint32 value) {
  
  limittimes_ = value;
  // @@protoc_insertion_point(field_set:pb.CommonSubAct.LimitTimes)
}

// optional uint32 AchvTimes = 5;
void CommonSubAct::clear_achvtimes() {
  achvtimes_ = 0u;
}
 ::google::protobuf::uint32 CommonSubAct::achvtimes() const {
  // @@protoc_insertion_point(field_get:pb.CommonSubAct.AchvTimes)
  return achvtimes_;
}
 void CommonSubAct::set_achvtimes(::google::protobuf::uint32 value) {
  
  achvtimes_ = value;
  // @@protoc_insertion_point(field_set:pb.CommonSubAct.AchvTimes)
}

// optional bool IsGet = 6;
void CommonSubAct::clear_isget() {
  isget_ = false;
}
 bool CommonSubAct::isget() const {
  // @@protoc_insertion_point(field_get:pb.CommonSubAct.IsGet)
  return isget_;
}
 void CommonSubAct::set_isget(bool value) {
  
  isget_ = value;
  // @@protoc_insertion_point(field_set:pb.CommonSubAct.IsGet)
}

// optional uint32 CondId = 7;
void CommonSubAct::clear_condid() {
  condid_ = 0u;
}
 ::google::protobuf::uint32 CommonSubAct::condid() const {
  // @@protoc_insertion_point(field_get:pb.CommonSubAct.CondId)
  return condid_;
}
 void CommonSubAct::set_condid(::google::protobuf::uint32 value) {
  
  condid_ = value;
  // @@protoc_insertion_point(field_set:pb.CommonSubAct.CondId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CGetCommonAct_540::kActListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CGetCommonAct_540::S2CGetCommonAct_540()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CGetCommonAct_540)
}

void S2CGetCommonAct_540::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CGetCommonAct_540::S2CGetCommonAct_540(const S2CGetCommonAct_540& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CGetCommonAct_540)
}

void S2CGetCommonAct_540::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S2CGetCommonAct_540::~S2CGetCommonAct_540() {
  // @@protoc_insertion_point(destructor:pb.S2CGetCommonAct_540)
  SharedDtor();
}

void S2CGetCommonAct_540::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CGetCommonAct_540::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CGetCommonAct_540::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CGetCommonAct_540_descriptor_;
}

const S2CGetCommonAct_540& S2CGetCommonAct_540::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CGetCommonAct_540* S2CGetCommonAct_540::default_instance_ = NULL;

S2CGetCommonAct_540* S2CGetCommonAct_540::New(::google::protobuf::Arena* arena) const {
  S2CGetCommonAct_540* n = new S2CGetCommonAct_540;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CGetCommonAct_540::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CGetCommonAct_540)
  actlist_.Clear();
}

bool S2CGetCommonAct_540::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CGetCommonAct_540)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.CommonAct ActList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ActList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_actlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_ActList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CGetCommonAct_540)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CGetCommonAct_540)
  return false;
#undef DO_
}

void S2CGetCommonAct_540::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CGetCommonAct_540)
  // repeated .pb.CommonAct ActList = 1;
  for (unsigned int i = 0, n = this->actlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->actlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CGetCommonAct_540)
}

::google::protobuf::uint8* S2CGetCommonAct_540::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CGetCommonAct_540)
  // repeated .pb.CommonAct ActList = 1;
  for (unsigned int i = 0, n = this->actlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->actlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CGetCommonAct_540)
  return target;
}

int S2CGetCommonAct_540::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CGetCommonAct_540)
  int total_size = 0;

  // repeated .pb.CommonAct ActList = 1;
  total_size += 1 * this->actlist_size();
  for (int i = 0; i < this->actlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->actlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CGetCommonAct_540::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CGetCommonAct_540)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CGetCommonAct_540* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CGetCommonAct_540>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CGetCommonAct_540)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CGetCommonAct_540)
    MergeFrom(*source);
  }
}

void S2CGetCommonAct_540::MergeFrom(const S2CGetCommonAct_540& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CGetCommonAct_540)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  actlist_.MergeFrom(from.actlist_);
}

void S2CGetCommonAct_540::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CGetCommonAct_540)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CGetCommonAct_540::CopyFrom(const S2CGetCommonAct_540& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CGetCommonAct_540)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CGetCommonAct_540::IsInitialized() const {

  return true;
}

void S2CGetCommonAct_540::Swap(S2CGetCommonAct_540* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CGetCommonAct_540::InternalSwap(S2CGetCommonAct_540* other) {
  actlist_.UnsafeArenaSwap(&other->actlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CGetCommonAct_540::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CGetCommonAct_540_descriptor_;
  metadata.reflection = S2CGetCommonAct_540_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CGetCommonAct_540

// repeated .pb.CommonAct ActList = 1;
int S2CGetCommonAct_540::actlist_size() const {
  return actlist_.size();
}
void S2CGetCommonAct_540::clear_actlist() {
  actlist_.Clear();
}
const ::pb::CommonAct& S2CGetCommonAct_540::actlist(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CGetCommonAct_540.ActList)
  return actlist_.Get(index);
}
::pb::CommonAct* S2CGetCommonAct_540::mutable_actlist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.S2CGetCommonAct_540.ActList)
  return actlist_.Mutable(index);
}
::pb::CommonAct* S2CGetCommonAct_540::add_actlist() {
  // @@protoc_insertion_point(field_add:pb.S2CGetCommonAct_540.ActList)
  return actlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::CommonAct >*
S2CGetCommonAct_540::mutable_actlist() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CGetCommonAct_540.ActList)
  return &actlist_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::CommonAct >&
S2CGetCommonAct_540::actlist() const {
  // @@protoc_insertion_point(field_list:pb.S2CGetCommonAct_540.ActList)
  return actlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CSyncCommonActSched_541::kActIdFieldNumber;
const int S2CSyncCommonActSched_541::kSubIdFieldNumber;
const int S2CSyncCommonActSched_541::kAchvTimesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CSyncCommonActSched_541::S2CSyncCommonActSched_541()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CSyncCommonActSched_541)
}

void S2CSyncCommonActSched_541::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CSyncCommonActSched_541::S2CSyncCommonActSched_541(const S2CSyncCommonActSched_541& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CSyncCommonActSched_541)
}

void S2CSyncCommonActSched_541::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  actid_ = 0u;
}

S2CSyncCommonActSched_541::~S2CSyncCommonActSched_541() {
  // @@protoc_insertion_point(destructor:pb.S2CSyncCommonActSched_541)
  SharedDtor();
}

void S2CSyncCommonActSched_541::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CSyncCommonActSched_541::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CSyncCommonActSched_541::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CSyncCommonActSched_541_descriptor_;
}

const S2CSyncCommonActSched_541& S2CSyncCommonActSched_541::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CSyncCommonActSched_541* S2CSyncCommonActSched_541::default_instance_ = NULL;

S2CSyncCommonActSched_541* S2CSyncCommonActSched_541::New(::google::protobuf::Arena* arena) const {
  S2CSyncCommonActSched_541* n = new S2CSyncCommonActSched_541;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CSyncCommonActSched_541::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CSyncCommonActSched_541)
  actid_ = 0u;
  subid_.Clear();
  achvtimes_.Clear();
}

bool S2CSyncCommonActSched_541::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CSyncCommonActSched_541)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ActId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &actid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SubId;
        break;
      }

      // repeated uint32 SubId = 2;
      case 2: {
        if (tag == 18) {
         parse_SubId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_subid())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_subid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_AchvTimes;
        break;
      }

      // repeated uint32 AchvTimes = 3;
      case 3: {
        if (tag == 26) {
         parse_AchvTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_achvtimes())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26, input, this->mutable_achvtimes())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CSyncCommonActSched_541)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CSyncCommonActSched_541)
  return false;
#undef DO_
}

void S2CSyncCommonActSched_541::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CSyncCommonActSched_541)
  // optional uint32 ActId = 1;
  if (this->actid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->actid(), output);
  }

  // repeated uint32 SubId = 2;
  if (this->subid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_subid_cached_byte_size_);
  }
  for (int i = 0; i < this->subid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->subid(i), output);
  }

  // repeated uint32 AchvTimes = 3;
  if (this->achvtimes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_achvtimes_cached_byte_size_);
  }
  for (int i = 0; i < this->achvtimes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->achvtimes(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CSyncCommonActSched_541)
}

::google::protobuf::uint8* S2CSyncCommonActSched_541::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CSyncCommonActSched_541)
  // optional uint32 ActId = 1;
  if (this->actid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->actid(), target);
  }

  // repeated uint32 SubId = 2;
  if (this->subid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _subid_cached_byte_size_, target);
  }
  for (int i = 0; i < this->subid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->subid(i), target);
  }

  // repeated uint32 AchvTimes = 3;
  if (this->achvtimes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _achvtimes_cached_byte_size_, target);
  }
  for (int i = 0; i < this->achvtimes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->achvtimes(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CSyncCommonActSched_541)
  return target;
}

int S2CSyncCommonActSched_541::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CSyncCommonActSched_541)
  int total_size = 0;

  // optional uint32 ActId = 1;
  if (this->actid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->actid());
  }

  // repeated uint32 SubId = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->subid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->subid(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _subid_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 AchvTimes = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->achvtimes_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->achvtimes(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _achvtimes_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CSyncCommonActSched_541::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CSyncCommonActSched_541)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CSyncCommonActSched_541* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CSyncCommonActSched_541>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CSyncCommonActSched_541)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CSyncCommonActSched_541)
    MergeFrom(*source);
  }
}

void S2CSyncCommonActSched_541::MergeFrom(const S2CSyncCommonActSched_541& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CSyncCommonActSched_541)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  subid_.MergeFrom(from.subid_);
  achvtimes_.MergeFrom(from.achvtimes_);
  if (from.actid() != 0) {
    set_actid(from.actid());
  }
}

void S2CSyncCommonActSched_541::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CSyncCommonActSched_541)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CSyncCommonActSched_541::CopyFrom(const S2CSyncCommonActSched_541& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CSyncCommonActSched_541)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CSyncCommonActSched_541::IsInitialized() const {

  return true;
}

void S2CSyncCommonActSched_541::Swap(S2CSyncCommonActSched_541* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CSyncCommonActSched_541::InternalSwap(S2CSyncCommonActSched_541* other) {
  std::swap(actid_, other->actid_);
  subid_.UnsafeArenaSwap(&other->subid_);
  achvtimes_.UnsafeArenaSwap(&other->achvtimes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CSyncCommonActSched_541::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CSyncCommonActSched_541_descriptor_;
  metadata.reflection = S2CSyncCommonActSched_541_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CSyncCommonActSched_541

// optional uint32 ActId = 1;
void S2CSyncCommonActSched_541::clear_actid() {
  actid_ = 0u;
}
 ::google::protobuf::uint32 S2CSyncCommonActSched_541::actid() const {
  // @@protoc_insertion_point(field_get:pb.S2CSyncCommonActSched_541.ActId)
  return actid_;
}
 void S2CSyncCommonActSched_541::set_actid(::google::protobuf::uint32 value) {
  
  actid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CSyncCommonActSched_541.ActId)
}

// repeated uint32 SubId = 2;
int S2CSyncCommonActSched_541::subid_size() const {
  return subid_.size();
}
void S2CSyncCommonActSched_541::clear_subid() {
  subid_.Clear();
}
 ::google::protobuf::uint32 S2CSyncCommonActSched_541::subid(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CSyncCommonActSched_541.SubId)
  return subid_.Get(index);
}
 void S2CSyncCommonActSched_541::set_subid(int index, ::google::protobuf::uint32 value) {
  subid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.S2CSyncCommonActSched_541.SubId)
}
 void S2CSyncCommonActSched_541::add_subid(::google::protobuf::uint32 value) {
  subid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.S2CSyncCommonActSched_541.SubId)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
S2CSyncCommonActSched_541::subid() const {
  // @@protoc_insertion_point(field_list:pb.S2CSyncCommonActSched_541.SubId)
  return subid_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
S2CSyncCommonActSched_541::mutable_subid() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CSyncCommonActSched_541.SubId)
  return &subid_;
}

// repeated uint32 AchvTimes = 3;
int S2CSyncCommonActSched_541::achvtimes_size() const {
  return achvtimes_.size();
}
void S2CSyncCommonActSched_541::clear_achvtimes() {
  achvtimes_.Clear();
}
 ::google::protobuf::uint32 S2CSyncCommonActSched_541::achvtimes(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CSyncCommonActSched_541.AchvTimes)
  return achvtimes_.Get(index);
}
 void S2CSyncCommonActSched_541::set_achvtimes(int index, ::google::protobuf::uint32 value) {
  achvtimes_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.S2CSyncCommonActSched_541.AchvTimes)
}
 void S2CSyncCommonActSched_541::add_achvtimes(::google::protobuf::uint32 value) {
  achvtimes_.Add(value);
  // @@protoc_insertion_point(field_add:pb.S2CSyncCommonActSched_541.AchvTimes)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
S2CSyncCommonActSched_541::achvtimes() const {
  // @@protoc_insertion_point(field_list:pb.S2CSyncCommonActSched_541.AchvTimes)
  return achvtimes_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
S2CSyncCommonActSched_541::mutable_achvtimes() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CSyncCommonActSched_541.AchvTimes)
  return &achvtimes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SRecvCommonActAward_542::kSubIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SRecvCommonActAward_542::C2SRecvCommonActAward_542()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SRecvCommonActAward_542)
}

void C2SRecvCommonActAward_542::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SRecvCommonActAward_542::C2SRecvCommonActAward_542(const C2SRecvCommonActAward_542& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SRecvCommonActAward_542)
}

void C2SRecvCommonActAward_542::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  subid_ = 0u;
}

C2SRecvCommonActAward_542::~C2SRecvCommonActAward_542() {
  // @@protoc_insertion_point(destructor:pb.C2SRecvCommonActAward_542)
  SharedDtor();
}

void C2SRecvCommonActAward_542::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SRecvCommonActAward_542::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SRecvCommonActAward_542::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SRecvCommonActAward_542_descriptor_;
}

const C2SRecvCommonActAward_542& C2SRecvCommonActAward_542::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SRecvCommonActAward_542* C2SRecvCommonActAward_542::default_instance_ = NULL;

C2SRecvCommonActAward_542* C2SRecvCommonActAward_542::New(::google::protobuf::Arena* arena) const {
  C2SRecvCommonActAward_542* n = new C2SRecvCommonActAward_542;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SRecvCommonActAward_542::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SRecvCommonActAward_542)
  subid_ = 0u;
}

bool C2SRecvCommonActAward_542::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SRecvCommonActAward_542)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 SubId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &subid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SRecvCommonActAward_542)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SRecvCommonActAward_542)
  return false;
#undef DO_
}

void C2SRecvCommonActAward_542::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SRecvCommonActAward_542)
  // optional uint32 SubId = 1;
  if (this->subid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->subid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SRecvCommonActAward_542)
}

::google::protobuf::uint8* C2SRecvCommonActAward_542::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SRecvCommonActAward_542)
  // optional uint32 SubId = 1;
  if (this->subid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->subid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SRecvCommonActAward_542)
  return target;
}

int C2SRecvCommonActAward_542::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SRecvCommonActAward_542)
  int total_size = 0;

  // optional uint32 SubId = 1;
  if (this->subid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->subid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SRecvCommonActAward_542::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SRecvCommonActAward_542)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SRecvCommonActAward_542* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SRecvCommonActAward_542>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SRecvCommonActAward_542)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SRecvCommonActAward_542)
    MergeFrom(*source);
  }
}

void C2SRecvCommonActAward_542::MergeFrom(const C2SRecvCommonActAward_542& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SRecvCommonActAward_542)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.subid() != 0) {
    set_subid(from.subid());
  }
}

void C2SRecvCommonActAward_542::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SRecvCommonActAward_542)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SRecvCommonActAward_542::CopyFrom(const C2SRecvCommonActAward_542& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SRecvCommonActAward_542)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SRecvCommonActAward_542::IsInitialized() const {

  return true;
}

void C2SRecvCommonActAward_542::Swap(C2SRecvCommonActAward_542* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SRecvCommonActAward_542::InternalSwap(C2SRecvCommonActAward_542* other) {
  std::swap(subid_, other->subid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SRecvCommonActAward_542::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SRecvCommonActAward_542_descriptor_;
  metadata.reflection = C2SRecvCommonActAward_542_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SRecvCommonActAward_542

// optional uint32 SubId = 1;
void C2SRecvCommonActAward_542::clear_subid() {
  subid_ = 0u;
}
 ::google::protobuf::uint32 C2SRecvCommonActAward_542::subid() const {
  // @@protoc_insertion_point(field_get:pb.C2SRecvCommonActAward_542.SubId)
  return subid_;
}
 void C2SRecvCommonActAward_542::set_subid(::google::protobuf::uint32 value) {
  
  subid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SRecvCommonActAward_542.SubId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CRecvCommonActAward_542::kSubIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CRecvCommonActAward_542::S2CRecvCommonActAward_542()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CRecvCommonActAward_542)
}

void S2CRecvCommonActAward_542::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CRecvCommonActAward_542::S2CRecvCommonActAward_542(const S2CRecvCommonActAward_542& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CRecvCommonActAward_542)
}

void S2CRecvCommonActAward_542::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  subid_ = 0u;
}

S2CRecvCommonActAward_542::~S2CRecvCommonActAward_542() {
  // @@protoc_insertion_point(destructor:pb.S2CRecvCommonActAward_542)
  SharedDtor();
}

void S2CRecvCommonActAward_542::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CRecvCommonActAward_542::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CRecvCommonActAward_542::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CRecvCommonActAward_542_descriptor_;
}

const S2CRecvCommonActAward_542& S2CRecvCommonActAward_542::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CRecvCommonActAward_542* S2CRecvCommonActAward_542::default_instance_ = NULL;

S2CRecvCommonActAward_542* S2CRecvCommonActAward_542::New(::google::protobuf::Arena* arena) const {
  S2CRecvCommonActAward_542* n = new S2CRecvCommonActAward_542;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CRecvCommonActAward_542::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CRecvCommonActAward_542)
  subid_ = 0u;
}

bool S2CRecvCommonActAward_542::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CRecvCommonActAward_542)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 SubId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &subid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CRecvCommonActAward_542)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CRecvCommonActAward_542)
  return false;
#undef DO_
}

void S2CRecvCommonActAward_542::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CRecvCommonActAward_542)
  // optional uint32 SubId = 1;
  if (this->subid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->subid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CRecvCommonActAward_542)
}

::google::protobuf::uint8* S2CRecvCommonActAward_542::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CRecvCommonActAward_542)
  // optional uint32 SubId = 1;
  if (this->subid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->subid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CRecvCommonActAward_542)
  return target;
}

int S2CRecvCommonActAward_542::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CRecvCommonActAward_542)
  int total_size = 0;

  // optional uint32 SubId = 1;
  if (this->subid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->subid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CRecvCommonActAward_542::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CRecvCommonActAward_542)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CRecvCommonActAward_542* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CRecvCommonActAward_542>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CRecvCommonActAward_542)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CRecvCommonActAward_542)
    MergeFrom(*source);
  }
}

void S2CRecvCommonActAward_542::MergeFrom(const S2CRecvCommonActAward_542& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CRecvCommonActAward_542)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.subid() != 0) {
    set_subid(from.subid());
  }
}

void S2CRecvCommonActAward_542::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CRecvCommonActAward_542)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CRecvCommonActAward_542::CopyFrom(const S2CRecvCommonActAward_542& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CRecvCommonActAward_542)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CRecvCommonActAward_542::IsInitialized() const {

  return true;
}

void S2CRecvCommonActAward_542::Swap(S2CRecvCommonActAward_542* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CRecvCommonActAward_542::InternalSwap(S2CRecvCommonActAward_542* other) {
  std::swap(subid_, other->subid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CRecvCommonActAward_542::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CRecvCommonActAward_542_descriptor_;
  metadata.reflection = S2CRecvCommonActAward_542_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CRecvCommonActAward_542

// optional uint32 SubId = 1;
void S2CRecvCommonActAward_542::clear_subid() {
  subid_ = 0u;
}
 ::google::protobuf::uint32 S2CRecvCommonActAward_542::subid() const {
  // @@protoc_insertion_point(field_get:pb.S2CRecvCommonActAward_542.SubId)
  return subid_;
}
 void S2CRecvCommonActAward_542::set_subid(::google::protobuf::uint32 value) {
  
  subid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CRecvCommonActAward_542.SubId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SAchievementList_600::C2SAchievementList_600()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SAchievementList_600)
}

void C2SAchievementList_600::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SAchievementList_600::C2SAchievementList_600(const C2SAchievementList_600& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SAchievementList_600)
}

void C2SAchievementList_600::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SAchievementList_600::~C2SAchievementList_600() {
  // @@protoc_insertion_point(destructor:pb.C2SAchievementList_600)
  SharedDtor();
}

void C2SAchievementList_600::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SAchievementList_600::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SAchievementList_600::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SAchievementList_600_descriptor_;
}

const C2SAchievementList_600& C2SAchievementList_600::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SAchievementList_600* C2SAchievementList_600::default_instance_ = NULL;

C2SAchievementList_600* C2SAchievementList_600::New(::google::protobuf::Arena* arena) const {
  C2SAchievementList_600* n = new C2SAchievementList_600;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SAchievementList_600::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SAchievementList_600)
}

bool C2SAchievementList_600::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SAchievementList_600)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SAchievementList_600)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SAchievementList_600)
  return false;
#undef DO_
}

void C2SAchievementList_600::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SAchievementList_600)
  // @@protoc_insertion_point(serialize_end:pb.C2SAchievementList_600)
}

::google::protobuf::uint8* C2SAchievementList_600::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SAchievementList_600)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SAchievementList_600)
  return target;
}

int C2SAchievementList_600::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SAchievementList_600)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SAchievementList_600::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SAchievementList_600)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SAchievementList_600* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SAchievementList_600>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SAchievementList_600)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SAchievementList_600)
    MergeFrom(*source);
  }
}

void C2SAchievementList_600::MergeFrom(const C2SAchievementList_600& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SAchievementList_600)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SAchievementList_600::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SAchievementList_600)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SAchievementList_600::CopyFrom(const C2SAchievementList_600& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SAchievementList_600)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SAchievementList_600::IsInitialized() const {

  return true;
}

void C2SAchievementList_600::Swap(C2SAchievementList_600* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SAchievementList_600::InternalSwap(C2SAchievementList_600* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SAchievementList_600::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SAchievementList_600_descriptor_;
  metadata.reflection = C2SAchievementList_600_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SAchievementList_600

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CAchievementList_600::kAchvLevelFieldNumber;
const int S2CAchievementList_600::kAchvExpFieldNumber;
const int S2CAchievementList_600::kAchvAwardIdxFieldNumber;
const int S2CAchievementList_600::kIdFieldNumber;
const int S2CAchievementList_600::kAchvTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CAchievementList_600::S2CAchievementList_600()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CAchievementList_600)
}

void S2CAchievementList_600::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CAchievementList_600::S2CAchievementList_600(const S2CAchievementList_600& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CAchievementList_600)
}

void S2CAchievementList_600::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  achvlevel_ = 0u;
  achvexp_ = 0u;
  achvawardidx_ = 0u;
}

S2CAchievementList_600::~S2CAchievementList_600() {
  // @@protoc_insertion_point(destructor:pb.S2CAchievementList_600)
  SharedDtor();
}

void S2CAchievementList_600::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CAchievementList_600::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CAchievementList_600::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CAchievementList_600_descriptor_;
}

const S2CAchievementList_600& S2CAchievementList_600::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CAchievementList_600* S2CAchievementList_600::default_instance_ = NULL;

S2CAchievementList_600* S2CAchievementList_600::New(::google::protobuf::Arena* arena) const {
  S2CAchievementList_600* n = new S2CAchievementList_600;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CAchievementList_600::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CAchievementList_600)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CAchievementList_600, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CAchievementList_600*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(achvlevel_, achvexp_);
  achvawardidx_ = 0u;

#undef ZR_HELPER_
#undef ZR_

  id_.Clear();
  achvtime_.Clear();
}

bool S2CAchievementList_600::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CAchievementList_600)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 AchvLevel = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &achvlevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AchvExp;
        break;
      }

      // optional uint32 AchvExp = 2;
      case 2: {
        if (tag == 16) {
         parse_AchvExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &achvexp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_AchvAwardIdx;
        break;
      }

      // optional uint32 AchvAwardIdx = 3;
      case 3: {
        if (tag == 24) {
         parse_AchvAwardIdx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &achvawardidx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Id;
        break;
      }

      // repeated uint32 Id = 4;
      case 4: {
        if (tag == 34) {
         parse_Id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_id())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34, input, this->mutable_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_AchvTime;
        break;
      }

      // repeated uint32 AchvTime = 5;
      case 5: {
        if (tag == 42) {
         parse_AchvTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_achvtime())));
        } else if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42, input, this->mutable_achvtime())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CAchievementList_600)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CAchievementList_600)
  return false;
#undef DO_
}

void S2CAchievementList_600::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CAchievementList_600)
  // optional uint32 AchvLevel = 1;
  if (this->achvlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->achvlevel(), output);
  }

  // optional uint32 AchvExp = 2;
  if (this->achvexp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->achvexp(), output);
  }

  // optional uint32 AchvAwardIdx = 3;
  if (this->achvawardidx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->achvawardidx(), output);
  }

  // repeated uint32 Id = 4;
  if (this->id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_id_cached_byte_size_);
  }
  for (int i = 0; i < this->id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->id(i), output);
  }

  // repeated uint32 AchvTime = 5;
  if (this->achvtime_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_achvtime_cached_byte_size_);
  }
  for (int i = 0; i < this->achvtime_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->achvtime(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CAchievementList_600)
}

::google::protobuf::uint8* S2CAchievementList_600::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CAchievementList_600)
  // optional uint32 AchvLevel = 1;
  if (this->achvlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->achvlevel(), target);
  }

  // optional uint32 AchvExp = 2;
  if (this->achvexp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->achvexp(), target);
  }

  // optional uint32 AchvAwardIdx = 3;
  if (this->achvawardidx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->achvawardidx(), target);
  }

  // repeated uint32 Id = 4;
  if (this->id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _id_cached_byte_size_, target);
  }
  for (int i = 0; i < this->id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->id(i), target);
  }

  // repeated uint32 AchvTime = 5;
  if (this->achvtime_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _achvtime_cached_byte_size_, target);
  }
  for (int i = 0; i < this->achvtime_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->achvtime(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CAchievementList_600)
  return target;
}

int S2CAchievementList_600::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CAchievementList_600)
  int total_size = 0;

  // optional uint32 AchvLevel = 1;
  if (this->achvlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->achvlevel());
  }

  // optional uint32 AchvExp = 2;
  if (this->achvexp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->achvexp());
  }

  // optional uint32 AchvAwardIdx = 3;
  if (this->achvawardidx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->achvawardidx());
  }

  // repeated uint32 Id = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->id(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _id_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 AchvTime = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->achvtime_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->achvtime(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _achvtime_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CAchievementList_600::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CAchievementList_600)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CAchievementList_600* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CAchievementList_600>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CAchievementList_600)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CAchievementList_600)
    MergeFrom(*source);
  }
}

void S2CAchievementList_600::MergeFrom(const S2CAchievementList_600& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CAchievementList_600)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  id_.MergeFrom(from.id_);
  achvtime_.MergeFrom(from.achvtime_);
  if (from.achvlevel() != 0) {
    set_achvlevel(from.achvlevel());
  }
  if (from.achvexp() != 0) {
    set_achvexp(from.achvexp());
  }
  if (from.achvawardidx() != 0) {
    set_achvawardidx(from.achvawardidx());
  }
}

void S2CAchievementList_600::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CAchievementList_600)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CAchievementList_600::CopyFrom(const S2CAchievementList_600& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CAchievementList_600)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CAchievementList_600::IsInitialized() const {

  return true;
}

void S2CAchievementList_600::Swap(S2CAchievementList_600* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CAchievementList_600::InternalSwap(S2CAchievementList_600* other) {
  std::swap(achvlevel_, other->achvlevel_);
  std::swap(achvexp_, other->achvexp_);
  std::swap(achvawardidx_, other->achvawardidx_);
  id_.UnsafeArenaSwap(&other->id_);
  achvtime_.UnsafeArenaSwap(&other->achvtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CAchievementList_600::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CAchievementList_600_descriptor_;
  metadata.reflection = S2CAchievementList_600_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CAchievementList_600

// optional uint32 AchvLevel = 1;
void S2CAchievementList_600::clear_achvlevel() {
  achvlevel_ = 0u;
}
 ::google::protobuf::uint32 S2CAchievementList_600::achvlevel() const {
  // @@protoc_insertion_point(field_get:pb.S2CAchievementList_600.AchvLevel)
  return achvlevel_;
}
 void S2CAchievementList_600::set_achvlevel(::google::protobuf::uint32 value) {
  
  achvlevel_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CAchievementList_600.AchvLevel)
}

// optional uint32 AchvExp = 2;
void S2CAchievementList_600::clear_achvexp() {
  achvexp_ = 0u;
}
 ::google::protobuf::uint32 S2CAchievementList_600::achvexp() const {
  // @@protoc_insertion_point(field_get:pb.S2CAchievementList_600.AchvExp)
  return achvexp_;
}
 void S2CAchievementList_600::set_achvexp(::google::protobuf::uint32 value) {
  
  achvexp_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CAchievementList_600.AchvExp)
}

// optional uint32 AchvAwardIdx = 3;
void S2CAchievementList_600::clear_achvawardidx() {
  achvawardidx_ = 0u;
}
 ::google::protobuf::uint32 S2CAchievementList_600::achvawardidx() const {
  // @@protoc_insertion_point(field_get:pb.S2CAchievementList_600.AchvAwardIdx)
  return achvawardidx_;
}
 void S2CAchievementList_600::set_achvawardidx(::google::protobuf::uint32 value) {
  
  achvawardidx_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CAchievementList_600.AchvAwardIdx)
}

// repeated uint32 Id = 4;
int S2CAchievementList_600::id_size() const {
  return id_.size();
}
void S2CAchievementList_600::clear_id() {
  id_.Clear();
}
 ::google::protobuf::uint32 S2CAchievementList_600::id(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CAchievementList_600.Id)
  return id_.Get(index);
}
 void S2CAchievementList_600::set_id(int index, ::google::protobuf::uint32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.S2CAchievementList_600.Id)
}
 void S2CAchievementList_600::add_id(::google::protobuf::uint32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:pb.S2CAchievementList_600.Id)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
S2CAchievementList_600::id() const {
  // @@protoc_insertion_point(field_list:pb.S2CAchievementList_600.Id)
  return id_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
S2CAchievementList_600::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CAchievementList_600.Id)
  return &id_;
}

// repeated uint32 AchvTime = 5;
int S2CAchievementList_600::achvtime_size() const {
  return achvtime_.size();
}
void S2CAchievementList_600::clear_achvtime() {
  achvtime_.Clear();
}
 ::google::protobuf::uint32 S2CAchievementList_600::achvtime(int index) const {
  // @@protoc_insertion_point(field_get:pb.S2CAchievementList_600.AchvTime)
  return achvtime_.Get(index);
}
 void S2CAchievementList_600::set_achvtime(int index, ::google::protobuf::uint32 value) {
  achvtime_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.S2CAchievementList_600.AchvTime)
}
 void S2CAchievementList_600::add_achvtime(::google::protobuf::uint32 value) {
  achvtime_.Add(value);
  // @@protoc_insertion_point(field_add:pb.S2CAchievementList_600.AchvTime)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
S2CAchievementList_600::achvtime() const {
  // @@protoc_insertion_point(field_list:pb.S2CAchievementList_600.AchvTime)
  return achvtime_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
S2CAchievementList_600::mutable_achvtime() {
  // @@protoc_insertion_point(field_mutable_list:pb.S2CAchievementList_600.AchvTime)
  return &achvtime_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SAchievementProgress_601::kCondIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SAchievementProgress_601::C2SAchievementProgress_601()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SAchievementProgress_601)
}

void C2SAchievementProgress_601::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SAchievementProgress_601::C2SAchievementProgress_601(const C2SAchievementProgress_601& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SAchievementProgress_601)
}

void C2SAchievementProgress_601::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  condid_ = 0u;
}

C2SAchievementProgress_601::~C2SAchievementProgress_601() {
  // @@protoc_insertion_point(destructor:pb.C2SAchievementProgress_601)
  SharedDtor();
}

void C2SAchievementProgress_601::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SAchievementProgress_601::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SAchievementProgress_601::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SAchievementProgress_601_descriptor_;
}

const C2SAchievementProgress_601& C2SAchievementProgress_601::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SAchievementProgress_601* C2SAchievementProgress_601::default_instance_ = NULL;

C2SAchievementProgress_601* C2SAchievementProgress_601::New(::google::protobuf::Arena* arena) const {
  C2SAchievementProgress_601* n = new C2SAchievementProgress_601;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SAchievementProgress_601::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SAchievementProgress_601)
  condid_ = 0u;
}

bool C2SAchievementProgress_601::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SAchievementProgress_601)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 CondId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &condid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SAchievementProgress_601)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SAchievementProgress_601)
  return false;
#undef DO_
}

void C2SAchievementProgress_601::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SAchievementProgress_601)
  // optional uint32 CondId = 1;
  if (this->condid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->condid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SAchievementProgress_601)
}

::google::protobuf::uint8* C2SAchievementProgress_601::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SAchievementProgress_601)
  // optional uint32 CondId = 1;
  if (this->condid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->condid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SAchievementProgress_601)
  return target;
}

int C2SAchievementProgress_601::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SAchievementProgress_601)
  int total_size = 0;

  // optional uint32 CondId = 1;
  if (this->condid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->condid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SAchievementProgress_601::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SAchievementProgress_601)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SAchievementProgress_601* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SAchievementProgress_601>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SAchievementProgress_601)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SAchievementProgress_601)
    MergeFrom(*source);
  }
}

void C2SAchievementProgress_601::MergeFrom(const C2SAchievementProgress_601& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SAchievementProgress_601)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.condid() != 0) {
    set_condid(from.condid());
  }
}

void C2SAchievementProgress_601::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SAchievementProgress_601)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SAchievementProgress_601::CopyFrom(const C2SAchievementProgress_601& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SAchievementProgress_601)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SAchievementProgress_601::IsInitialized() const {

  return true;
}

void C2SAchievementProgress_601::Swap(C2SAchievementProgress_601* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SAchievementProgress_601::InternalSwap(C2SAchievementProgress_601* other) {
  std::swap(condid_, other->condid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SAchievementProgress_601::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SAchievementProgress_601_descriptor_;
  metadata.reflection = C2SAchievementProgress_601_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SAchievementProgress_601

// optional uint32 CondId = 1;
void C2SAchievementProgress_601::clear_condid() {
  condid_ = 0u;
}
 ::google::protobuf::uint32 C2SAchievementProgress_601::condid() const {
  // @@protoc_insertion_point(field_get:pb.C2SAchievementProgress_601.CondId)
  return condid_;
}
 void C2SAchievementProgress_601::set_condid(::google::protobuf::uint32 value) {
  
  condid_ = value;
  // @@protoc_insertion_point(field_set:pb.C2SAchievementProgress_601.CondId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CAchievementProgress_601::kAchvTimesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CAchievementProgress_601::S2CAchievementProgress_601()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CAchievementProgress_601)
}

void S2CAchievementProgress_601::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CAchievementProgress_601::S2CAchievementProgress_601(const S2CAchievementProgress_601& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CAchievementProgress_601)
}

void S2CAchievementProgress_601::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  achvtimes_ = 0u;
}

S2CAchievementProgress_601::~S2CAchievementProgress_601() {
  // @@protoc_insertion_point(destructor:pb.S2CAchievementProgress_601)
  SharedDtor();
}

void S2CAchievementProgress_601::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CAchievementProgress_601::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CAchievementProgress_601::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CAchievementProgress_601_descriptor_;
}

const S2CAchievementProgress_601& S2CAchievementProgress_601::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CAchievementProgress_601* S2CAchievementProgress_601::default_instance_ = NULL;

S2CAchievementProgress_601* S2CAchievementProgress_601::New(::google::protobuf::Arena* arena) const {
  S2CAchievementProgress_601* n = new S2CAchievementProgress_601;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CAchievementProgress_601::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CAchievementProgress_601)
  achvtimes_ = 0u;
}

bool S2CAchievementProgress_601::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CAchievementProgress_601)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 AchvTimes = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &achvtimes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CAchievementProgress_601)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CAchievementProgress_601)
  return false;
#undef DO_
}

void S2CAchievementProgress_601::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CAchievementProgress_601)
  // optional uint32 AchvTimes = 1;
  if (this->achvtimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->achvtimes(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CAchievementProgress_601)
}

::google::protobuf::uint8* S2CAchievementProgress_601::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CAchievementProgress_601)
  // optional uint32 AchvTimes = 1;
  if (this->achvtimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->achvtimes(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CAchievementProgress_601)
  return target;
}

int S2CAchievementProgress_601::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CAchievementProgress_601)
  int total_size = 0;

  // optional uint32 AchvTimes = 1;
  if (this->achvtimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->achvtimes());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CAchievementProgress_601::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CAchievementProgress_601)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CAchievementProgress_601* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CAchievementProgress_601>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CAchievementProgress_601)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CAchievementProgress_601)
    MergeFrom(*source);
  }
}

void S2CAchievementProgress_601::MergeFrom(const S2CAchievementProgress_601& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CAchievementProgress_601)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.achvtimes() != 0) {
    set_achvtimes(from.achvtimes());
  }
}

void S2CAchievementProgress_601::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CAchievementProgress_601)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CAchievementProgress_601::CopyFrom(const S2CAchievementProgress_601& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CAchievementProgress_601)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CAchievementProgress_601::IsInitialized() const {

  return true;
}

void S2CAchievementProgress_601::Swap(S2CAchievementProgress_601* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CAchievementProgress_601::InternalSwap(S2CAchievementProgress_601* other) {
  std::swap(achvtimes_, other->achvtimes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CAchievementProgress_601::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CAchievementProgress_601_descriptor_;
  metadata.reflection = S2CAchievementProgress_601_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CAchievementProgress_601

// optional uint32 AchvTimes = 1;
void S2CAchievementProgress_601::clear_achvtimes() {
  achvtimes_ = 0u;
}
 ::google::protobuf::uint32 S2CAchievementProgress_601::achvtimes() const {
  // @@protoc_insertion_point(field_get:pb.S2CAchievementProgress_601.AchvTimes)
  return achvtimes_;
}
 void S2CAchievementProgress_601::set_achvtimes(::google::protobuf::uint32 value) {
  
  achvtimes_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CAchievementProgress_601.AchvTimes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2CPushAchievement_602::kAchvLevelFieldNumber;
const int S2CPushAchievement_602::kAchvExpFieldNumber;
const int S2CPushAchievement_602::kAchvIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2CPushAchievement_602::S2CPushAchievement_602()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.S2CPushAchievement_602)
}

void S2CPushAchievement_602::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S2CPushAchievement_602::S2CPushAchievement_602(const S2CPushAchievement_602& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.S2CPushAchievement_602)
}

void S2CPushAchievement_602::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  achvlevel_ = 0u;
  achvexp_ = 0u;
  achvid_ = 0u;
}

S2CPushAchievement_602::~S2CPushAchievement_602() {
  // @@protoc_insertion_point(destructor:pb.S2CPushAchievement_602)
  SharedDtor();
}

void S2CPushAchievement_602::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S2CPushAchievement_602::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2CPushAchievement_602::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2CPushAchievement_602_descriptor_;
}

const S2CPushAchievement_602& S2CPushAchievement_602::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

S2CPushAchievement_602* S2CPushAchievement_602::default_instance_ = NULL;

S2CPushAchievement_602* S2CPushAchievement_602::New(::google::protobuf::Arena* arena) const {
  S2CPushAchievement_602* n = new S2CPushAchievement_602;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2CPushAchievement_602::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.S2CPushAchievement_602)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S2CPushAchievement_602, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S2CPushAchievement_602*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(achvlevel_, achvid_);

#undef ZR_HELPER_
#undef ZR_

}

bool S2CPushAchievement_602::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.S2CPushAchievement_602)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 AchvLevel = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &achvlevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AchvExp;
        break;
      }

      // optional uint32 AchvExp = 2;
      case 2: {
        if (tag == 16) {
         parse_AchvExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &achvexp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_AchvId;
        break;
      }

      // optional uint32 AchvId = 3;
      case 3: {
        if (tag == 24) {
         parse_AchvId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &achvid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.S2CPushAchievement_602)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.S2CPushAchievement_602)
  return false;
#undef DO_
}

void S2CPushAchievement_602::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.S2CPushAchievement_602)
  // optional uint32 AchvLevel = 1;
  if (this->achvlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->achvlevel(), output);
  }

  // optional uint32 AchvExp = 2;
  if (this->achvexp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->achvexp(), output);
  }

  // optional uint32 AchvId = 3;
  if (this->achvid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->achvid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.S2CPushAchievement_602)
}

::google::protobuf::uint8* S2CPushAchievement_602::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.S2CPushAchievement_602)
  // optional uint32 AchvLevel = 1;
  if (this->achvlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->achvlevel(), target);
  }

  // optional uint32 AchvExp = 2;
  if (this->achvexp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->achvexp(), target);
  }

  // optional uint32 AchvId = 3;
  if (this->achvid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->achvid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.S2CPushAchievement_602)
  return target;
}

int S2CPushAchievement_602::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.S2CPushAchievement_602)
  int total_size = 0;

  // optional uint32 AchvLevel = 1;
  if (this->achvlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->achvlevel());
  }

  // optional uint32 AchvExp = 2;
  if (this->achvexp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->achvexp());
  }

  // optional uint32 AchvId = 3;
  if (this->achvid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->achvid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2CPushAchievement_602::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.S2CPushAchievement_602)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S2CPushAchievement_602* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S2CPushAchievement_602>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.S2CPushAchievement_602)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.S2CPushAchievement_602)
    MergeFrom(*source);
  }
}

void S2CPushAchievement_602::MergeFrom(const S2CPushAchievement_602& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.S2CPushAchievement_602)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.achvlevel() != 0) {
    set_achvlevel(from.achvlevel());
  }
  if (from.achvexp() != 0) {
    set_achvexp(from.achvexp());
  }
  if (from.achvid() != 0) {
    set_achvid(from.achvid());
  }
}

void S2CPushAchievement_602::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.S2CPushAchievement_602)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CPushAchievement_602::CopyFrom(const S2CPushAchievement_602& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.S2CPushAchievement_602)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CPushAchievement_602::IsInitialized() const {

  return true;
}

void S2CPushAchievement_602::Swap(S2CPushAchievement_602* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2CPushAchievement_602::InternalSwap(S2CPushAchievement_602* other) {
  std::swap(achvlevel_, other->achvlevel_);
  std::swap(achvexp_, other->achvexp_);
  std::swap(achvid_, other->achvid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2CPushAchievement_602::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2CPushAchievement_602_descriptor_;
  metadata.reflection = S2CPushAchievement_602_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2CPushAchievement_602

// optional uint32 AchvLevel = 1;
void S2CPushAchievement_602::clear_achvlevel() {
  achvlevel_ = 0u;
}
 ::google::protobuf::uint32 S2CPushAchievement_602::achvlevel() const {
  // @@protoc_insertion_point(field_get:pb.S2CPushAchievement_602.AchvLevel)
  return achvlevel_;
}
 void S2CPushAchievement_602::set_achvlevel(::google::protobuf::uint32 value) {
  
  achvlevel_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CPushAchievement_602.AchvLevel)
}

// optional uint32 AchvExp = 2;
void S2CPushAchievement_602::clear_achvexp() {
  achvexp_ = 0u;
}
 ::google::protobuf::uint32 S2CPushAchievement_602::achvexp() const {
  // @@protoc_insertion_point(field_get:pb.S2CPushAchievement_602.AchvExp)
  return achvexp_;
}
 void S2CPushAchievement_602::set_achvexp(::google::protobuf::uint32 value) {
  
  achvexp_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CPushAchievement_602.AchvExp)
}

// optional uint32 AchvId = 3;
void S2CPushAchievement_602::clear_achvid() {
  achvid_ = 0u;
}
 ::google::protobuf::uint32 S2CPushAchievement_602::achvid() const {
  // @@protoc_insertion_point(field_get:pb.S2CPushAchievement_602.AchvId)
  return achvid_;
}
 void S2CPushAchievement_602::set_achvid(::google::protobuf::uint32 value) {
  
  achvid_ = value;
  // @@protoc_insertion_point(field_set:pb.S2CPushAchievement_602.AchvId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SGetAchievementAward_603::C2SGetAchievementAward_603()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SGetAchievementAward_603)
}

void C2SGetAchievementAward_603::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SGetAchievementAward_603::C2SGetAchievementAward_603(const C2SGetAchievementAward_603& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SGetAchievementAward_603)
}

void C2SGetAchievementAward_603::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SGetAchievementAward_603::~C2SGetAchievementAward_603() {
  // @@protoc_insertion_point(destructor:pb.C2SGetAchievementAward_603)
  SharedDtor();
}

void C2SGetAchievementAward_603::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SGetAchievementAward_603::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SGetAchievementAward_603::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SGetAchievementAward_603_descriptor_;
}

const C2SGetAchievementAward_603& C2SGetAchievementAward_603::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SGetAchievementAward_603* C2SGetAchievementAward_603::default_instance_ = NULL;

C2SGetAchievementAward_603* C2SGetAchievementAward_603::New(::google::protobuf::Arena* arena) const {
  C2SGetAchievementAward_603* n = new C2SGetAchievementAward_603;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SGetAchievementAward_603::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SGetAchievementAward_603)
}

bool C2SGetAchievementAward_603::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SGetAchievementAward_603)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SGetAchievementAward_603)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SGetAchievementAward_603)
  return false;
#undef DO_
}

void C2SGetAchievementAward_603::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SGetAchievementAward_603)
  // @@protoc_insertion_point(serialize_end:pb.C2SGetAchievementAward_603)
}

::google::protobuf::uint8* C2SGetAchievementAward_603::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SGetAchievementAward_603)
  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SGetAchievementAward_603)
  return target;
}

int C2SGetAchievementAward_603::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SGetAchievementAward_603)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SGetAchievementAward_603::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SGetAchievementAward_603)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SGetAchievementAward_603* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SGetAchievementAward_603>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SGetAchievementAward_603)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SGetAchievementAward_603)
    MergeFrom(*source);
  }
}

void C2SGetAchievementAward_603::MergeFrom(const C2SGetAchievementAward_603& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SGetAchievementAward_603)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void C2SGetAchievementAward_603::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SGetAchievementAward_603)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SGetAchievementAward_603::CopyFrom(const C2SGetAchievementAward_603& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SGetAchievementAward_603)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SGetAchievementAward_603::IsInitialized() const {

  return true;
}

void C2SGetAchievementAward_603::Swap(C2SGetAchievementAward_603* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SGetAchievementAward_603::InternalSwap(C2SGetAchievementAward_603* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SGetAchievementAward_603::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SGetAchievementAward_603_descriptor_;
  metadata.reflection = C2SGetAchievementAward_603_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SGetAchievementAward_603

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2SReportBatData_604::kCondIdFieldNumber;
const int C2SReportBatData_604::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2SReportBatData_604::C2SReportBatData_604()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.C2SReportBatData_604)
}

void C2SReportBatData_604::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

C2SReportBatData_604::C2SReportBatData_604(const C2SReportBatData_604& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.C2SReportBatData_604)
}

void C2SReportBatData_604::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

C2SReportBatData_604::~C2SReportBatData_604() {
  // @@protoc_insertion_point(destructor:pb.C2SReportBatData_604)
  SharedDtor();
}

void C2SReportBatData_604::SharedDtor() {
  if (this != default_instance_) {
  }
}

void C2SReportBatData_604::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2SReportBatData_604::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return C2SReportBatData_604_descriptor_;
}

const C2SReportBatData_604& C2SReportBatData_604::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

C2SReportBatData_604* C2SReportBatData_604::default_instance_ = NULL;

C2SReportBatData_604* C2SReportBatData_604::New(::google::protobuf::Arena* arena) const {
  C2SReportBatData_604* n = new C2SReportBatData_604;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2SReportBatData_604::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.C2SReportBatData_604)
  condid_.Clear();
  value_.Clear();
}

bool C2SReportBatData_604::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.C2SReportBatData_604)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 CondId = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_condid())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_condid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Value;
        break;
      }

      // repeated uint32 Value = 2;
      case 2: {
        if (tag == 18) {
         parse_Value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_value())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_value())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.C2SReportBatData_604)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.C2SReportBatData_604)
  return false;
#undef DO_
}

void C2SReportBatData_604::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.C2SReportBatData_604)
  // repeated uint32 CondId = 1;
  if (this->condid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_condid_cached_byte_size_);
  }
  for (int i = 0; i < this->condid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->condid(i), output);
  }

  // repeated uint32 Value = 2;
  if (this->value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_value_cached_byte_size_);
  }
  for (int i = 0; i < this->value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->value(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.C2SReportBatData_604)
}

::google::protobuf::uint8* C2SReportBatData_604::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.C2SReportBatData_604)
  // repeated uint32 CondId = 1;
  if (this->condid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _condid_cached_byte_size_, target);
  }
  for (int i = 0; i < this->condid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->condid(i), target);
  }

  // repeated uint32 Value = 2;
  if (this->value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _value_cached_byte_size_, target);
  }
  for (int i = 0; i < this->value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->value(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.C2SReportBatData_604)
  return target;
}

int C2SReportBatData_604::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.C2SReportBatData_604)
  int total_size = 0;

  // repeated uint32 CondId = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->condid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->condid(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _condid_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 Value = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->value_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->value(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2SReportBatData_604::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.C2SReportBatData_604)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const C2SReportBatData_604* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const C2SReportBatData_604>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.C2SReportBatData_604)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.C2SReportBatData_604)
    MergeFrom(*source);
  }
}

void C2SReportBatData_604::MergeFrom(const C2SReportBatData_604& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.C2SReportBatData_604)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  condid_.MergeFrom(from.condid_);
  value_.MergeFrom(from.value_);
}

void C2SReportBatData_604::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.C2SReportBatData_604)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SReportBatData_604::CopyFrom(const C2SReportBatData_604& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.C2SReportBatData_604)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SReportBatData_604::IsInitialized() const {

  return true;
}

void C2SReportBatData_604::Swap(C2SReportBatData_604* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2SReportBatData_604::InternalSwap(C2SReportBatData_604* other) {
  condid_.UnsafeArenaSwap(&other->condid_);
  value_.UnsafeArenaSwap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2SReportBatData_604::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = C2SReportBatData_604_descriptor_;
  metadata.reflection = C2SReportBatData_604_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2SReportBatData_604

// repeated uint32 CondId = 1;
int C2SReportBatData_604::condid_size() const {
  return condid_.size();
}
void C2SReportBatData_604::clear_condid() {
  condid_.Clear();
}
 ::google::protobuf::uint32 C2SReportBatData_604::condid(int index) const {
  // @@protoc_insertion_point(field_get:pb.C2SReportBatData_604.CondId)
  return condid_.Get(index);
}
 void C2SReportBatData_604::set_condid(int index, ::google::protobuf::uint32 value) {
  condid_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.C2SReportBatData_604.CondId)
}
 void C2SReportBatData_604::add_condid(::google::protobuf::uint32 value) {
  condid_.Add(value);
  // @@protoc_insertion_point(field_add:pb.C2SReportBatData_604.CondId)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
C2SReportBatData_604::condid() const {
  // @@protoc_insertion_point(field_list:pb.C2SReportBatData_604.CondId)
  return condid_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
C2SReportBatData_604::mutable_condid() {
  // @@protoc_insertion_point(field_mutable_list:pb.C2SReportBatData_604.CondId)
  return &condid_;
}

// repeated uint32 Value = 2;
int C2SReportBatData_604::value_size() const {
  return value_.size();
}
void C2SReportBatData_604::clear_value() {
  value_.Clear();
}
 ::google::protobuf::uint32 C2SReportBatData_604::value(int index) const {
  // @@protoc_insertion_point(field_get:pb.C2SReportBatData_604.Value)
  return value_.Get(index);
}
 void C2SReportBatData_604::set_value(int index, ::google::protobuf::uint32 value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.C2SReportBatData_604.Value)
}
 void C2SReportBatData_604::add_value(::google::protobuf::uint32 value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:pb.C2SReportBatData_604.Value)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
C2SReportBatData_604::value() const {
  // @@protoc_insertion_point(field_list:pb.C2SReportBatData_604.Value)
  return value_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
C2SReportBatData_604::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:pb.C2SReportBatData_604.Value)
  return &value_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
